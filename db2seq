//* GENERATED BY REXX PDS2SEQ
//* CHANGE USERID TO YOUR USERID
//* CHANGE PDS IF DESIRED
//* PUT JOBCARD AT TOP, SUBMIT
//*DELETE  EXEC PGM=IEFBR14
//*DD1     DD DSN=SYS019.LP2.DB2,
//*        DISP=(MOD,DELETE),UNIT=SYSDA,SPACE=(TRK,0)
//*
//LOAD    EXEC PGM=IEBUPDTE,PARM='NEW'
//SYSPRINT DD SYSOUT=*
//SYSUT2  DD DSN=SYS019.LP2.DB2,
//        DISP=(NEW,CATLG,DELETE),
//        DCB=(DSORG=PO,LRECL=80,BLKSIZE=8000,RECFM=FB),
//        UNIT=SYSDA,
//        SPACE=(TRK,(10,05,20),RLSE)
//*
//SYSIN  DD DATA,DLM='!!'

./ ADD NAME=$INDEX
$INDEX
$JOB
AMIDB2SU
CHECKDAT
CRETAB
CRETS
DBRMLIB
DB2STSP
DB2STSR
DEFGDG2S
DELETE
DSNDB01
DSNJU004
DSNTEJCC
DSNTEJCS
DSNTEJMQ
DSNTEJTR
DSNTEJWS
DSNTEJ1
DSNTEJ1$
DSNTEP2
DSNTEP2
DSNTESA
DSNTESC
DSNTESE
DSNTESH
DSNTESP
DSNTESQ
DSNTESR
DSNTESS
DSNTESU
DSNTIAUL
DSNTIAUL
DSNTIJAF
DSNTIJAM
DSNTIJAS
DSNTIJA1
DSNTIJCI
DSNTIJCL
DSNTIJCV
DSNTIJCX
DSNTIJI$
DSNTIJI$
DSNTIJIC
DSNTIJIC
DSNTIJI1
DSNTIJI1
DSNTIJMJ
DSNTIJML
DSNTIJNX
DSNTIJPD
DSNTIJPE
DSNTIJPM
DSNTIJRF
DSNTIJRS
DSNTIJRT
DSNTIJRV
DSNTIJRW
DSNTIJR2
DSNTIJSA
DSNTIJSD
DSNTIJSG
DSNTIJSO
DSNTIJSS
DSNTIJTC
DSNTIJTM
DSNTIJUZ
DSNTIJVR
DSNTIJWS
DSNTIJXA
DSNTIJXB
DSNTIJXC
DSNTIJXZ
IDCAMS
JCMDDB2
JCMDDB2
REBIND
REBIND
REORG
REORGAMI
REORG2
REPTDB2P
REPTDB2P
REPTDB2S
REPTDB2S
RUNLIB
RUNLIB
RUNSTAT
RUNSTAT
SDSBMACS
SDSNEXIT
SDSNLOAD
SDSNLOAD
SDSNSAMP
SDSNSAMP
SENDMAI5
SENDMAI5
SPUFI
SSJCL
SSJCL

./ ADD NAME=$JOB
//IDCAMS    JOB ACCT£,                                                  00010000
//             DB2,                                                     00020000
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040000
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050000
//      SYS019.LP2.DB2,                                                 00060000
//      SYS1.PROCLIB.&SYSNAME,                                          00061000
//      SYS1.SACBCNTL)                                                  00070000

./ ADD NAME=ALTER
ALTER TABLESPACE DBADMIN.SEXPLAIN USING STOGROUP SYSDEFLT;              00010001
ALTER STOGROUP GQDGT001 REMOVE VOLUMES (REC213) ;                       00020001
ALTER STOGROUP GQDGT001 ADD VOLUMES (REC225) ;                          00030001
ALTER TABLE SYSILE1.TBSYST01                                            00040003
    ADD NUMID DECIMAL(5,2) ;                                            00050003

./ ADD NAME=ALTSG
ALTER TABLESPACE DBADMIN.SEXPLAIN USING STOGROUP SGSYST;                00010001
ALTER TABLESPACE DSNCV.DSNCNTL USING STOGROUP SGSYST;                   00020001
ALTER TABLESPACE DSNCV.DSNAUTH USING STOGROUP SGSYST;                   00030001
DROP STOGROUP SYSDEFLT;                                                 00040001
COMMIT;                                                                 00050001
CREATE STOGROUP SYSDEFLT VOLUMES(DEV010) VCAT SYSILE;                   00060001
COMMIT;                                                                 00070001
ALTER TABLESPACE DBADMIN.SEXPLAIN USING STOGROUP SYSDEFLT;              00080001
ALTER TABLESPACE DSNCV.DSNCNTL USING STOGROUP SYSDEFLT;                 00090001
ALTER TABLESPACE DSNCV.DSNAUTH USING STOGROUP SYSDEFLT;                 00100001

./ ADD NAME=ALTSG0
ALTER STOGROUP GQDGT001 REMOVE VOLUMES (REC213) ;
ALTER STOGROUP GQDGT001 ADD VOLUMES (REC225) ;
ALTER STOGROUP GQDGT002 REMOVE VOLUMES (REC213) ;
ALTER STOGROUP GQDGT002 ADD VOLUMES (REC225) ;
ALTER STOGROUP GQDGT003 REMOVE VOLUMES (REC213) ;
ALTER STOGROUP GQDGT003 ADD VOLUMES (REC225) ;
ALTER STOGROUP GQXGT001 REMOVE VOLUMES (REC214) ;
ALTER STOGROUP GQXGT001 ADD VOLUMES (REC226) ;

./ ADD NAME=ALTTB
ALTER TABLE SYSILE1.TBSYST01
    ADD NUMID DECIMAL(5,2) ;

./ ADD NAME=AMIDB2SU
//DSNTEJWS  JOB ACCT£,                                                  00010000
//             DB2,                                                     00020000
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040000
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050000
//      SYS019.LP2.DB2,                                                 00060000
//      SYS1.PROCLIB.&SYSNAME,                                          00061000
//      SYS1.SACBCNTL)                                                  00070000
//********************************************************************/
//*  NAME = DSNTEJWS                                                 */
//*                                                                  */
//*  DESCRIPTIVE NAME = DB2 SAMPLE APPLICATION                       */
//*                                                                  */
//*    LICENSED MATERIALS - PROPERTY OF IBM                          */
//*    5675-DB2                                                      */
//*    (C) COPYRIGHT 2005 IBM CORP.  ALL RIGHTS RESERVED.            */
//*                                                                  */
//*    STATUS = VERSION 9                                            */
//*                                                                  */
//*  FUNCTION = SAMPLE THAT SETS UP THE SAMPLE TABLES FOR USE WITH   */
//*             THE WEB SERVICES PROVIDER SAMPLE WEB APPLICATION     */
//*                                                                  */
//*  PSEUDOCODE =                                                    */
//*    PH01S01  STEP   DROP DEPARTMENT,EMPLOYEE,CITY_TAB TABLES      */
//*    PH01S02  STEP   CREATE DEPARTMENT,EMPLOYEE,CITY_TAB TABLES    */
//*    PH01S03  STEP   POPULATE DEPARTMENT,EMPLOYEE TABLES           */
//*    PH01S04  STEP   POPULATE CITY_TAB TABLES                      */
//*    PH01S05  STEP   GRANT AUTHORITY TO TABLES TO PUBLIC           */
//*    PH01S06  STEP   POPULATE XML EXTENDER TABLE                   */
//*                                                                  */
//* NOTES =                                                          */
//*   PRIOR TO SUBMITTING, EDIT THIS JOB MANUALLY TO MAKE THE        */
//*   FOLLOWING CHANGES:                                             */
//*   1. ADD A VALID JOB CARD                                        */
//*   2. LOCATE AND CHANGE ALL OCCURRENCES OF THE FOLLOWING STRINGS  */
//*      AS INDICATED:                                               */
//*      A.THE SUBSYSTEM NAME '§DSN§' TO THE NAME OF YOUR DB2        */
//*      B.'DSN§§0' TO THE PREFIX OF YOUR TARGET LIBRARY NAME        */
//*      C.'DSNTIA§§' TO THE PLAN NAME FOR DSNTIAD ON YOUR DB2       */
//*      D.CHANGE $PWD TO THE DIRECTORY WHERE THE SUPPLIED SAMPLE WEB*/
//*        APPLICATION WAR FILE(services.war) WAS EXTRACTED.         */
//*        EX : /u/USER/worf/WEB-INF/classes/groups/dxx_sample       */
//*      E.BYPASS STEP 6 (PH01S06) IF XML EXTENDER IS NOT INSTALLED  */
//*        IN THE SUBSYSTEM                                          */
//*                                                                  */
//* CHANGE ACTIVITY =
//*********************************************************************
//*
//JOBLIB  DD  DSN=SYS2.DB2.SDSNLOAD,DISP=SHR
//*
//*
//*        STEP  1: DROP SAMPLE TABLES
//*
//PH01S01 EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
    DSN SYSTEM(DB2S)
    RUN PROGRAM(DSNTIAD)  PLAN(DSNTIAD) PARM('RC0') -
 LIB ('DB2S.RUNLIB.LOAD')                                               00060000
    END
//SYSIN    DD  *
DROP TABLE RORFDEMO.DEPARTMENT;
DROP TABLE RORFDEMO.EMPLOYEE;
DROP TABLE RORFDEMO.CITY_TAB;
COMMIT;
SET MAXCC=0;
//*
//*        STEP  2: CREATE SAMPLE EMPLOYEE AND DEPARTMENT TABLES
//*
//PH01S02 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(8,LT)
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
  DSN SYSTEM(DB2S)
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIAD) -
 LIB ('DB2S.RUNLIB.LOAD')                                               00060000
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSIN    DD *
SET CURRENT SQLID = USER
 CREATE TABLESPACE BMCACTN
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO

 CREATE TABLESPACE BMCACTSS
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO

 CREATE TABLESPACE BMCCACTN
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO

         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO

 CREATE TABLESPACE BMCDSYNC
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO

 CREATE TABLESPACE BMCEXDEF
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO

 CREATE TABLESPACE BMCOAJC
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO

 CREATE TABLESPACE BMCOBJAC
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO

 CREATE TABLESPACE BMCRSEV
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO

 CREATE TABLESPACE BMCRSEX
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO

 CREATE TABLESPACE BMCSERV
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO

 CREATE TABLESPACE BMCSVDD
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
 CREATE TABLESPACE BMCSVDDD
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO

 CREATE TABLESPACE BMCSVSN
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO

  CREATE TABLESPACE BMCSVSNT
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO

  CREATE TABLESPACE BMCTHRES
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO

  CREATE TABLESPACE BMCVENDR
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO


*=======================================================================
-SYNC 008900 END OF CREATE DATABASE AND TABLESPACES WORKLIST
*---------------------------------------------------------------------
*-  RETURN SQLID BACK TO PREVIOUS
*---------------------------------------------------------------------
*
COMMIT;
//
//*
//*        STEP 3: LOAD DATA INTO SAMPLE EMPLOYEE AND DEPARTMENT TABLE
//*
//*
//PH01S03 EXEC DSNUPROC,PARM='§DSN§,DSNTEX',COND=(4,LT)
//SYSUT1   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SORTLIB  DD  DSN=SYS1.SORTLIB,DISP=SHR
//SORTOUT  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//DSNTRACE DD  SYSOUT=*
//SYSRECDP DD  DSN=DSN§§0.SDSNSAMP(DSN8LDP),
//             DISP=SHR
//SYSRECEM DD  DSN=DSN§§0.SDSNSAMP(DSN8LEM),
//             DISP=SHR
//SYSERR   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SYSDISC  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SYSMAP   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SYSIN    DD  *

  LOAD DATA INDDN(SYSRECDP)
       INTO TABLE WORFDEMO.DEPARTMENT
            (DEPTNO   POSITION( 1) CHAR(3),
             DEPTNAME POSITION( 5) VARCHAR,
             MGRNO    POSITION(37) CHAR(6) NULLIF(MGRNO='      '),
             ADMRDEPT POSITION(44) CHAR(3),
             LOCATION POSITION(48) CHAR(16))
       ENFORCE NO
       SORTDEVT SYSDA SORTNUM 4

  LOAD DATA INDDN(SYSRECEM) CONTINUEIF(72:72)='X'
       INTO TABLE WORFDEMO.EMPLOYEE
           (EMPNO     POSITION( 1)  CHAR(6),
            FIRSTNME  POSITION( 8)  VARCHAR,
            MIDINIT   POSITION(21)  CHAR(1),
            LASTNAME  POSITION(23)  VARCHAR,
            WORKDEPT  POSITION(36)  CHAR(3),
            PHONENO   POSITION(40)  CHAR(4),
            HIREDATE  POSITION(45)  DATE EXTERNAL,
            JOB       POSITION(56)  CHAR(8),
            EDLEVEL   POSITION(65)  INTEGER EXTERNAL(2),
            SEX       POSITION(68)  CHAR(1),
            BIRTHDATE POSITION(80)  DATE EXTERNAL,
            SALARY    POSITION(91)  INTEGER EXTERNAL(5),
            BONUS     POSITION(97)  INTEGER EXTERNAL(5),
            COMM      POSITION(103) INTEGER EXTERNAL(5))
      ENFORCE CONSTRAINTS MAPDDN SYSMAP
      SORTDEVT SYSDA SORTNUM 4
//*
//*        STEP  4: CREATE CITY_TAB TABLE
//*
//PH01S04 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
  DSN SYSTEM(§DSN§)
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA§§) -
       LIB('DSN§§0.RUNLIB.LOAD')
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSIN    DD *

INSERT INTO WORFDEMO.CITY_TAB VALUES('01906', 'BOSTON');
INSERT INTO WORFDEMO.CITY_TAB VALUES('10017', 'NEW YORK');
INSERT INTO WORFDEMO.CITY_TAB VALUES('60631', 'CHICAGO');
INSERT INTO WORFDEMO.CITY_TAB VALUES('90210', 'BEVERLY HILLS');
COMMIT;
//*
//*        STEP  5: GRANT AUTHORITY
//*
//PH01S05 EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
    DSN SYSTEM(§DSN§)
    RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) PARM('RC0') -
         LIBRARY('DSN§§0.RUNLIB.LOAD')
    END
//SYSIN    DD  *
GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE WORFDEMO.DEPARTMENT
      TO PUBLIC AT ALL LOCATIONS;
GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE WORFDEMO.EMPLOYEE
      TO PUBLIC AT ALL LOCATIONS;
GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE WORFDEMO.CITY_TAB
      TO PUBLIC AT ALL LOCATIONS;
//*
//*        STEP  6: SETS UP THE SAMPLE DATABASE FOR USE WITH
//*        THE DB2 XML EXTENDER
//*
//PH01S06 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
  DSN SYSTEM(§DSN§)
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA§§) -
       LIB('DSN§§0.RUNLIB.LOAD')
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSIN    DD *
INSERT INTO DB2XML.DTD_REF(DTDID, CONTENT, USAGE_COUNT,
AUTHOR,CREATOR, UPDATOR) VALUES(
'department.dtd',
db2xml.XMLClobFromFile('$PWD/department.dtd'),0,
'user1', 'user1', 'user1');

INSERT INTO DB2XML.DTD_REF(DTDID, CONTENT, USAGE_COUNT,
AUTHOR, CREATOR, UPDATOR) VALUES(
'departmentStd.dtd',
db2xml.XMLClobFromFile('$PWD/departmentStd.dtd'), 0,
'user1', 'user1', 'user1');

INSERT INTO DB2XML.DTD_REF(DTDID, CONTENT, USAGE_COUNT,
AUTHOR, CREATOR, UPDATOR) VALUES(
'departments.dtd',
db2xml.XMLClobFromFile('$PWD/departments.dtd'), 0,
'user1', 'user1', 'user1');
COMMIT;
//*

./ ADD NAME=ARCHLOG
DB2S.ARCHLOG1.A0003611                       MIGRAT2
DB2S.ARCHLOG1.A0003612                       MIGRAT2
DB2S.ARCHLOG1.A0003613                       MIGRAT2
DB2S.ARCHLOG1.A0003614                       MIGRAT2
DB2S.ARCHLOG1.A0003615                       MIGRAT2
DB2S.ARCHLOG1.A0003616                       MIGRAT2
DB2S.ARCHLOG1.A0003617                       MIGRAT2
DB2S.ARCHLOG1.A0003618                       MIGRAT2
DB2S.ARCHLOG1.A0003619                       MIGRAT2
DB2S.ARCHLOG1.A0004505                       WRKS01 PS   FB     4096 28672
DB2S.ARCHLOG1.B0003612                       MIGRAT2
DB2S.ARCHLOG1.B0003613                       MIGRAT2
DB2S.ARCHLOG1.B0003614                       MIGRAT2
DB2S.ARCHLOG1.B0003615                       MIGRAT2
DB2S.ARCHLOG1.B0003616                       MIGRAT2
DB2S.ARCHLOG1.B0003617                       MIGRAT2
DB2S.ARCHLOG1.B0003618                       MIGRAT2
DB2S.ARCHLOG1.B0003619                       MIGRAT2
DB2S.ARCHLOG1.B0004505                       WRKS02 PS   VB     8189 24576
DB2W.ARCHLOG1.A0000313                       VATS06+PS   FB     4096 28672
DB2W.ARCHLOG1.A0000314                       VATS06 PS   FB     4096 28672
DB2W.ARCHLOG1.A0000315                       VATS01 PS   FB     4096 28672
DB2W.ARCHLOG1.A0000316                       VATS06 PS   FB     4096 28672
DB2W.ARCHLOG1.A0000317                       VATS04+PS   FB     4096 28672
DB2W.ARCHLOG1.A0000318                       VATS03+PS   FB     4096 28672
DB2W.ARCHLOG1.A0000319                       VATS06 PS   FB     4096 28672
DB2W.ARCHLOG1.A0000320                       VATS05 PS   FB     4096 28672
DB2W.ARCHLOG1.A0000321                       VATS04+PS   FB     4096 28672
DB2W.ARCHLOG1.B0000313                       VATS01 PS   VB     8189 24576
DB2W.ARCHLOG1.B0000314                       VATS03 PS   VB     8189 24576
DB2W.ARCHLOG1.B0000315                       VATS03 PS   VB     8189 24576
DB2W.ARCHLOG1.B0000316                       VATS05 PS   VB     8189 24576
DB2W.ARCHLOG1.B0000317                       VATS05 PS   VB     8189 24576
DB2W.ARCHLOG1.B0000318                       VATS01 PS   VB     8189 24576
DB2W.ARCHLOG1.B0000319                       VATS01 PS   VB     8189 24576
DB2W.ARCHLOG1.B0000320                       VATS05 PS   VB     8189 24576
DB2W.ARCHLOG1.B0000321                       VATS01 PS   VB     8189 24576

./ ADD NAME=BIND
//SYSILEA  JOB 1000,'COMPIL     ',                                      00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=&SYSUID                            00002012
//DB2BIND  EXEC PGM=IKJEFT01,DYNAMNBR=20                                00003200
//STEPLIB  DD DSN=DB2610.SDSNLOAD,DISP=SHR                              00003312
//SYSTSPRT DD SYSOUT=*                                                  00004000
//SYSUDUMP DD DUMMY                                                     00005000
//DBRMLIB  DD DSN=BMC.DB2V6E.DBRM,DISP=SHR                              00006012
//SYSTSIN  DD *                                                         00007000
DSN SYSTEM(DB2S)                                                        00008012
             BIND PLAN(ACV621EM)   +                                    00009012
             OWNER(SYSILE)               +                              00010012
             QUALIFIER(ACM621E)  +                                      00020012
             RETAIN               +                                     00030012
             ISOLATION(CS)        +                                     00040012
             VALIDATE(BIND)       +                                     00050012
             ACTION(REPLACE)      +                                     00060012
             PKLIST(ACV621_E_MAIN.*  +                                  00070012
                   ,*.ACV621_E_MAIN.* +                                 00080012
                                  )                                     00090012
             BIND PLAN(AEX62EHA)   +                                    00100012
             OWNER(SYSILE)               +                              00110012
             QUALIFIER(ACM621E)  +                                      00120012
             RETAIN               +                                     00130012
             ISOLATION(CS)        +                                     00140012
             VALIDATE(BIND)       +                                     00150012
             ACTION(REPLACE)      +                                     00160012
             PKLIST(ACM621D_E_MAIN.*)                                   00170012
             BIND PLAN(AEX62EHM)   +                                    00180012
             OWNER(SYSILE)               +                              00190012
             QUALIFIER(ACM621E)  +                                      00200012
             RETAIN               +                                     00210012
             ISOLATION(CS)        +                                     00220012
             VALIDATE(BIND)       +                                     00230012
             ACTION(REPLACE)      +                                     00240012
             PKLIST(ACM621D_E_MAIN.*   +                                00250012
                   ,ACT621_E_MAIN.*  +                                  00260012
                   )                                                    00270012

./ ADD NAME=BINDUNIX
//SYSILEX  JOB 1000,'COMPIL     ',                                      00001009
//         CLASS=A,MSGCLASS=T,NOTIFY=SYSILE                             00002014
//DB2BIND  EXEC PGM=IKJEFT01,DYNAMNBR=20                                00003200
//SYSTSPRT DD SYSOUT=*                                                  00003400
//SYSUDUMP DD DUMMY                                                     00003500
//DBRMLIB  DD DSN=DB2310.SDSNSAMP,DISP=SHR                              00003600
//SYSTSIN  DD *                                                         00003700
DSN SYSTEM(DB2D)                                                        00003800
 BIND PACKAGE (EXEMPLE.DSNESPCS          ) VALIDATE(BIND) -             00003913
 MEMBER(DSNESM68) ACTION(REPLACE) ISOLATION(CS)                         00004016
END                                                                     00140000
/*                                                                      00150000

./ ADD NAME=BRSMVTGT
//SYSILEX  JOB (0),'DSNTEP2',MSGCLASS=X,MSGLEVEL=(1,1),                 00010000
//         CLASS=O,NOTIFY=&SYSUID                                       00020000
//*        USER=DVXAZ,PASSWORD=METH                                     00030000
//*-------------------------------------------------------------------- 00040000
//*   TEST DU PB AGIL (PG0J97)                                          00050000
//*-------------------------------------------------------------------- 00060000
//ST005   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M                       00070000
//STEPLIB  DD DSN=DB2C.RUNLIB.LOAD,DISP=SHR                             00080000
//SYSTERM  DD SYSOUT=*                                                  00090000
//SYSTSPRT DD SYSOUT=*                                                  00100000
//SYSUDUMP DD SYSOUT=*                                                  00110000
//SYSPRINT DD SYSOUT=*                                                  00120000
//SYSTSIN  DD *                                                         00130000
DSN SYSTEM(DB2C)                                                        00140000
RUN PROGRAM(DSNTEP2)                                                    00150000
END                                                                     00160000
//SYSIN DD *                                                            00170000
    DELETE FROM SYSILE.PLAN_TABLE ;                                     00180000
    EXPLAIN ALL SET QUERYNO = 1 FOR                                     00181000
      SELECT DCCOM,                                                     00182000
      NUAHX, IDCNT, CDVAL, CDACD, CDOPN, FORTI, CCPTF, CDAMO, NUIDJR,   00183000
     CPBLA, CPBLS, CDTEN, CDETB, CDPAD, DBOPI, PEAML1, DHMON1, SNSOP,   00184000
     SNSPO, DEFET, CDACTB, UTSTD1, VTSTD1, QTSTD1, UTEFI1, VTEFI1,      00185000
     QTEFI1, UTEDR1, VTEDR1, QTEDR1, CDOCO, UBCCA1, VBCCA1, MBCCA1,     00186000
     UNCLI6, VNCLI6, MNCLI6, UNCLIA, VNCLIA, MNCLIA, DANGT, DHSTD,      00187000
     DVESP, CDSON, LMZEC, CDBAN2, CGRIB, NCBEN, CLRIB, NUCRL, NCCTL,    00188000
     UTFIC1, VTFIC1, MTFIC1, REFAP, CDPTO FROM RECT.V2E15GT1            00189000
     WHERE NUAHX =                                                      00190000
     ?  AND IDCNT = ?  AND DCMCO                                        00200000
         IN ( ?, ?,                                                     00210000
         ?, ?,                                                          00220000
         ?, ?,                                                          00230000
         ?, ?,                                                          00240000
         ?, ?,                                                          00250000
         ?, ?) AND ( DEFET = ?                                          00260000
          OR ( DEFET < ? AND                                            00270000
         DCCOM = ? ) OR ( DEFET <                                       00280000
         ? AND DEFET > ?  AND Dccom = ?))                               00290000
           ORDER BY DEFET DESC, CDVAL ;                                 00300000
    SELECT * FROM SYSILE.PLAN_TABLE WHERE QUERYNO = 1;                  00310000

./ ADD NAME=CHECK
//SYSLHUA  JOB 1000,'COMPIL     ',MSGLEVEL=(1,1),                       00010000
//         CLASS=O,MSGCLASS=T,NOTIFY=&SYSUID,COND=(5,LT)                00020000
//*------------------------------------------------------------*        00030000
//*   CHECK INDEXES                                                     00040000
//*------------------------------------------------------------*        00050000
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2C,CHECK',REGION=4M                 00060000
//UTPRINT  DD SYSOUT=*                                                  00070000
//SYSPRINT DD SYSOUT=*                                                  00080000
//SYSUDUMP DD SYSOUT=*                                                  00090000
//SYSUT1   DD UNIT=WORKDA,SPACE=(CYL,(99,99),RLSE)                      00100000
//SORTOUT  DD UNIT=WORKDA,SPACE=(CYL,(99,99),RLSE)                      00110000
//SYSIN    DD  *                                                        00120000
 CHECK INDEX(ALL) TABLESPACE DSNDB01.SYSLGRNX                           00130000
 SORTDEVT WORKDA SORTNUM 30                                             00140000
/*                                                                      00150000
//                                                                      00160000

./ ADD NAME=CHECKDAT
//CHECKDAT  JOB ACCT£,                                                  00010000
//             DB2,                                                     00020000
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040000
// SET DB2=DB2S
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050000
//      SYS019.LP2.DB2,                                                 00060000
//      SYS1.PROCLIB.&SYSNAME,                                          00061000
//      SYS1.SACBCNTL)                                                  00070000
//*DB2Z_12_UGREFBOOK
//*COPYING VIOLATIONS INTO EXCEPTION T
//STEP1 EXEC DSNUPROC,UID=SYS019.&DB2.,
// UTPROC='',
// SYSTEM=DB2S
//SYSUT1 DD DSN=&SYSUID..&DB2..STEP1.SYSUT1,DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(8000,(200,20),,,ROUND)
//SYSERR DD DSN=&SYSUID..&DB2..SYSERR,DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(6000,(20,20),,,ROUND)
//SORTOUT DD DSN=&SYSUID..&DB2..STEP1.SORTOUT,DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(6000,(20,20),,,ROUND)
//SYSIN DD *
CHECK DATA TABLESPACE DSN8D12A.DSN8S12D
           TABLESPACE DSN8D12A.DSN8S12E
FOR EXCEPTION IN DSN8C10.DEPT USE DSN8C10.EDEPT
IN DSN8C10.EMP USE DSN8C10.EEMP
IN DSN8C10.PROJ USE DSN8C10.EPROJ
IN DSN8C10.PROJACT USE DSN8C10.EPROJACT
IN DSN8C10.EMPPROJACT USE DSN8C10.EEPA
DELETE YES
//
CREATING AN EXCEPTION TABLE FOR THE PROJECT ACTIVITY
TABLE
YOU CAN CREATE AN EXCEPTION TABLE FOR THE PROJECT ACTIVITY TABLE BY USIN
//
CHECK DATA ? TABLE-SPACE-SPEC
PART INTEGER

./ ADD NAME=COLDSTAR
*-------------------------------------------------------------*         00010000
*  PROCEDURE DE COLD START SUR DB2                                      00020000
*-------------------------------------------------------------*         00030000
    - PASSER L'UTILITAIRE DSNJU004 POUR AVOIR LE END RBA DE LA LOG EN   00040000
      COURS (LOG NOT REUSABLE ET PAS D'INDICATION DANS LE TIMESTAMP DU  00050000
      END/RBA TIME)                                                     00060000
                                                                        00070000
    - PRENDRE LE END/RBA DE LA LOG ET                                   00080000
      AJOUTER 1 POUR AVOIR UN MULTIPLE DE 4K                            00090000
      EX 00232685CFFF + 1 : START RBA = ENDRBA = 00232685D000           00100000
                                                                        00110000
    - PASSER LE DSNJU003 AVEC LES PARAMETRES SUIVANTS :                 00120000
      (ENDRBA = STARTRBA)                                               00130000
       .  CRESTART CREATE,ENDRBA=232685D000,STARTRBA=232685D000         00140000
    - LORS DU LANCEMENT DU DB2, UN MESSAGE APPARAIT A LA CONSOLE        00150000
          - CONDITIONAL RESTART RECORD INDICATES COLD START,REPLY Y     00160000
            TO CONTINU, N TO CANCEL                                     00170000
                                                                        00180000
*------> EXEMPLE DE DSNJU004                                            00190000
-ACTIVE LOG COPY 1 DATA SETS                                            00200000
   STARTRBA / TIMESTAMP    ENDRBA / TIMESTAMP    DATE   TIME   DATA SET 00210000
  ----------------------  --------------------  ------  -----  ---------00220000
     00231E15D000            002320E5CFFF       93.339  13:52  DSN=DB2I.00230000
   96.011  06:49:20.3      96.011  06:52:41.3         PASSWORD=(NULL)   00240000
     002320E5D000            002323B5CFFF       93.339  13:18  DSN=DB2I.00250000
   96.011  06:52:41.3      96.011  06:55:58.1         PASSWORD=(NULL)   00260000
---> 002323B5D000            00232685CFFF       93.339  13:18  DSN=DB2I.00270000
   96.011  06:55:58.1      ......  ..........         PASSWORD=(NULL)   00280000

./ ADD NAME=COMPTEP2
//SYSILEA  JOB  1,EXPRESS,MSGLEVEL=(1,1),CLASS=I,                       00001000
//         MSGCLASS=T,NOTIFY=&SYSUID,COND=(4,LT)                        00002000
//**********************************************************************00010000
//*  NAME = DSNTEJ1P                                                   *00020000
//*                                                                    *00030000
//*  DESCRIPTIVE NAME = DB2 SAMPLE APPLICATION                         *00040000
//*                     PHASE 1                                        *00050000
//*                     PL/I                                           *00060000
//*                                                                    *00070000
//*    COPYRIGHT = 5685-DB2 (C) COPYRIGHT IBM CORP 1982,               *00080000
//*    1993 (UNPUBLISHED)                                              *00090000
//*    SEE COPYRIGHT INSTRUCTIONS                                      *00100000
//*    LICENSED MATERIALS - PROPERTY OF IBM                            *00110000
//*                                                                    *00120000
//*    STATUS = VERSION 3                                              *00130000
//*                                                                    *00140000
//*  FUNCTION = THIS JCL PERFORMS THE PHASE 1 SETUP FOR SAMPLE         *00150000
//*             APPLICATIONS AT SITES WITH PL/I.                       *00160000
//*                                                                    *00170000
//*         THIS JOB IS RUN AFTER DSNTEJ1.                             *00180000
//*                                                                   */00190000
//* CHANGE ACTIVITY =                                                 */00200000
//**********************************************************************00210000
//PROCLIB   JCLLIB ORDER=DB2610.NEW.SDSNPROC                            00211006
//JOBLIB   DD  DSN=DB2610.SDSNLOAD,DISP=SHR                             00220006
//         DD  DSN=SYSPLA.PLIBASE,DISP=SHR                              00230006
//         DD  DSN=SYSPLA.PLICOMP,DISP=SHR                              00240006
//         DD  DSN=PLI.V2R3M0.SIBMLINK,DISP=SHR                         00241000
//         DD  DSN=PLI.V2R3M0.SIBMBASE,DISP=SHR                         00242000
//*                                                                     00250000
//*        STEP 1 : PREPARE DSNTEP2 FOR EXECUTION                       00260000
//PH01PS01 EXEC DSNHPLI,MEM=DSNTEP2,                                    00270002
//         PARM.PC='HOST(PLI),STDSQL(NO),CONNECT(2)'                    00280000
//PPLI.SYSIN   DD DSN=DB2610.SDSNSAMP(DSNTEP2),                         00290006
//             DISP=SHR                                                 00300000
//PC.DBRMLIB   DD DSN=DB2610.DBRMLIB.DATA(DSNTEP2),                     00310006
//             DISP=SHR                                                 00320000
//PC.SYSLIB    DD DSN=DB2610.SRCLIB.DATA,                               00330006
//             DISP=SHR                                                 00340000
//LKED.SYSLMOD DD DSN=DB2610.RUNLIB.LOAD(DSNTEP2),                      00350006
//             DISP=SHR                                                 00360000
//LKED.SYSIN   DD *                                                     00370000
     INCLUDE SYSLIB(DSNELI)                                             00380000
//*                                                                     00390000
//*        STEP 2 : BIND AND RUN PROGRAM DSNTEP2, TO                    00400000
//*                 PRINT THE TABLES                                    00410000
//PH01PS02 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                    00420000
//DBRMLIB  DD  DSN=DB2610.DBRMLIB.DATA,                                 00430006
//             DISP=SHR                                                 00440000
//SYSTSPRT DD  SYSOUT=*                                                 00450000
//SYSPRINT DD  SYSOUT=*                                                 00460000
//SYSUDUMP DD  SYSOUT=*                                                 00470000
//SYSTSIN  DD  *                                                        00480000
 DSN SYSTEM(DB2S)                                                       00490002
 BIND PACKAGE (DSNTEP2) MEMBER(DSNTEP2) ACT(REP) ISO(CS) +              00500003
    VALIDATE(BIND)                                                      00501000
 BIND PLAN(DSNTEP2) +                                                   00510002
 PKLIST(DSNTEP2.*,*.DSNTEP2.*) ACT(REP) ISO(CS) SQLRULES(DB2)           00520003
 END                                                                    00540000
//                                                                      00550003
 BIND PACKAGE (EXEMPLE.DSNTEP2) MEMBER(DSNTEP2) ACT(ADD) ISO(CS) +      00560003
    VALIDATE(BIND)                                                      00570003

./ ADD NAME=COPYUTIL
//SYSILEA  JOB 1000,'REOUTILX',MSGLEVEL=(1,1),                          JOB09104
//         CLASS=Z,MSGCLASS=T,NOTIFY=&SYSUID,COND=(4,LT)                00002000
//*------------------------------------------------------------*        00009000
//*  DEFINE DES CLUSTERS                                                00009100
//*------------------------------------------------------------*        00009200
//DEFIDX  EXEC PGM=IDCAMS,REGION=512K,COND=(4,LT)                       00009300
//SYSPRINT DD  SYSOUT=*                                                 00009400
//SYSIN    DD  *                                                        00009500
   DEFINE CLUSTER                             -                         00009600
         ( NAME(SYSILE.DSNDBC.DSNDB01.SYSUTILX.I0001.A001) -            00009705
           LINEAR                             -                         00009800
           REUSE                              -                         00009900
           VOLUMES(SYSDMP)                    -                         00010005
           TRACKS(40 7)                       -                         00010104
           SHAREOPTIONS(3 3) )                -                         00010200
      DATA                                    -                         00010300
         ( NAME(SYSILE.DSNDBD.DSNDB01.SYSUTILX.I0001.A001) -            00010405
         )                                                              00010500
//*------------------------------------------------------------*        00014000
//*   DSN1COPY                                                          00014100
//*------------------------------------------------------------*        00014200
//DSN1COPY EXEC PGM=DSN1COPY,COND=(4,LT)
//SYSUT1   DD DSN=DB2S.DSNDBC.DSNDB01.SYSUTILX.I0001.A001,DISP=SHR
//SYSUT2   DD DSN=SYSILE.DSNDBC.DSNDB01.SYSUTILX.I0001.A001,DISP=SHR    00014505
//SYSPRINT DD SYSOUT=*                                                  00014600

./ ADD NAME=COPYUTL
//SYSILEA  JOB 1000,'REOUTILX',MSGLEVEL=(1,1),                          JOB09104
//         CLASS=Z,MSGCLASS=T,NOTIFY=&SYSUID,COND=(4,LT)                00002000
//*------------------------------------------------------------*        00009000
//*  DEFINE DES CLUSTERS                                                00009100
//*------------------------------------------------------------*        00009200
//DEFIDX  EXEC PGM=IDCAMS,REGION=512K,COND=(4,LT)                       00009300
//SYSPRINT DD  SYSOUT=*                                                 00009400
//SYSIN    DD  *                                                        00009500
   DEFINE CLUSTER                             -                         00009600
         ( NAME(SYSILE.DSNDBC.DSNDB01.SYSUTILX.I0001.A001) -            00009705
           LINEAR                             -                         00009800
           REUSE                              -                         00009900
           VOLUMES(SYSDMP)                    -                         00010005
           TRACKS(40 7)                       -                         00010104
           SHAREOPTIONS(3 3) )                -                         00010200
      DATA                                    -                         00010300
         ( NAME(SYSILE.DSNDBD.DSNDB01.SYSUTILX.I0001.A001) -            00010405
         )                                                              00010500
//*------------------------------------------------------------*        00014000
//*   DSN1COPY                                                          00014100
//*------------------------------------------------------------*        00014200
//DSN1COPY EXEC PGM=DSN1COPY,COND=(4,LT)
//SYSUT1   DD DSN=DB2S.DSNDBC.DSNDB01.SYSUTILX.I0001.A001,DISP=SHR
//SYSUT2   DD DSN=SYSILE.DSNDBC.DSNDB01.SYSUTILX.I0001.A001,DISP=SHR    00014505
//SYSPRINT DD SYSOUT=*                                                  00014600

./ ADD NAME=CRETAB
//DSNTEJ1   JOB ACCT£,                                                  00001000
//             DB2,                                                     00002000
//             RESTART=PH01S07,                                         00002100
//*            RESTART=PH01S02,                                         00002200
//             NOTIFY=&SYSUID,                                          00003000
//             MSGCLASS=T                                               00004000
//*                                                                     00004102
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00005000
//      SYS019.LP2.DB2,                                                 00006000
//      SYS1.PROCLIB.&SYSNAME,                                          00007000
//      SYS1.SACBCNTL)                                                  00008000
//********************************************************************* 00010000
//*  NAME = DSNTEJ1                                                     00011000
//*                                                                     00012000
//*  DESCRIPTIVE NAME = DB2 SAMPLE APPLICATION                          00013000
//*                     PHASE 1 (LOCAL SITE ONLY)                       00014000
//*                                                                     00015000
//*    Licensed Materials - Property of IBM                             00016000
//*    5650-DB2                                                         00017000
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.         00018000
//*                                                                     00019000
//*    STATUS = Version 12                                              00020000
//*                                                                     00021000
//*  FUNCTION = THIS JCL PERFORMS THE PHASE 1 SETUP FOR THE SAMPLE      00022000
//*             APPLICATIONS ON A LOCAL DB2 SYSTEM (A SYSTEM WHICH      00023000
//*             WILL CONTAIN THE ACTUAL SAMPLE TABLES).                 00024000
//*                                                                     00025000
//*  NOTICE =                                                           00026000
//*    THIS SAMPLE JOB USES DB2 UTILITIES. SOME UTILITY FUNCTIONS ARE   00027000
//*    ELEMENTS OF SEPARATELY ORDERABLE PRODUCTS.  SUCCESSFUL USE OF    00028000
//*    A PARTICULAR SAMPLE JOB MAY BE DEPENDENT UPON THE OPTIONAL       00029000
//*    PRODUCT BEING LICENSED AND INSTALLED IN YOUR ENVIRONMENT.        00030000
//*                                                                     00031000
//*  CHANGE ACTIVITY =                                                  00032000
//*    10/20/2012 Create ALIASes instead of SYNONYMs     N0102 / 163503 00033000
//*    11/07/2012 ADD SET CURRENT SQLID           DN1651_INST1 / DN1651 00034000
//*    05/17/2013 FIX COPYRIGHT STATEMENT.                49779_077_724 00035000
//*    10/29/2013 Create EMP as PBR not index partitioned       PM98424 00036000
//*    02/24/2014 Increase length of the LRSN column in         PI10794 00037000
//*               MAP_TBL from CHAR(06) to CHAR(10)                     00038000
//*    02/15/2016 Long data set names                           PI42601 00039000
//*    10/27/2016 Update MAP_TBL definition for DB2 12          PI66261 00039100
//*    08/21/2018 Tolerate creation of deprecated TSs   s81673 / t81374 00039200
//*                                                                     00040000
//********************************************************************* 00041000
//*                                                                     00042000
//JOBLIB  DD  DSN=SYS2.DB2.SDSNEXIT,DISP=SHR                            00043000
//        DD  DSN=SYS2.DB2.SDSNLOAD,DISP=SHR                            00043100
//*                                                                     00204000
//*        STEP  2: CREATE SAMPLE TABLES, VIEWS                         00205000
//*                                                                     00206000
//PH01S02 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00207000
//SYSTSPRT DD  SYSOUT=*                                                 00208000
//SYSTSIN  DD  *                                                        00209000
  DSN SYSTEM(DB2S)                                                      00210000
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA12) -                                00211000
 LIB ('DB2S.RUNLIB.LOAD')                                               00211100
//SYSPRINT DD  SYSOUT=*                                                 00213000
//SYSUDUMP DD  SYSOUT=*                                                 00214000
//SYSIN    DD  *                                                        00215000
  SET CURRENT SQLID = 'SYSADM';                                         00216000
  SET CURRENT APPLICATION COMPATIBILITY = 'V11R1';                      00216100
                                                                        00217000
  CREATE TABLE DSN8120.DEPT                                             00218000
                (DEPTNO   CHAR(3)        NOT NULL,                      00219000
                 DEPTNAME VARCHAR(36)    NOT NULL,                      00220000
                 MGRNO    CHAR(6)                ,                      00221000
                 ADMRDEPT CHAR(3)        NOT NULL,                      00222000
                 LOCATION CHAR(16)               ,                      00223000
                 PRIMARY KEY(DEPTNO))                                   00224000
         IN DSN8D12A.DSN8S12D                                           00225000
         CCSID EBCDIC;                                                  00226000
   CREATE TABLE AMIDB2.EVENTS                                           00227001
      ( WORKID      CHAR(20)    NOT NULL  WITH DEFAULT,                 00228001
        TASKID      CHAR(8)     NOT NULL  WITH DEFAULT,                 00229001
        FUNCTION    CHAR(8)     NOT NULL  WITH DEFAULT,                 00230001
        QUALIFIER   VARCHAR(128) NOT NULL WITH DEFAULT,                 00240001
        OBJECT      VARCHAR(128) NOT NULL  WITH DEFAULT,                00250001
        OBJTYPE     CHAR(10)    NOT NULL  WITH DEFAULT,                 00260001
        RETCODE     SMALLINT    NOT NULL  WITH DEFAULT,                 00270001
        TIMESTMP    TIMESTAMP   NOT NULL  WITH DEFAULT,                 00280001
        RUNFLAG     CHAR(1)     NOT NULL  WITH DEFAULT,                 00290001
        ELAPTIME    SMALLINT    NOT NULL  WITH DEFAULT,                 00300001
        CPUTIME     SMALLINT    NOT NULL  WITH DEFAULT,                 00310001
        DSN         VARCHAR(56) NOT NULL  WITH DEFAULT,                 00320001
        PARMS       VARCHAR(512) NOT NULL WITH DEFAULT,                 00330001
        VERSION  CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA 00340001
      ) IN &DDMDBNM..BMCRSEV      WITH RESTRICT ON DROP                 00350001
*                                                                       00360001
   COMMENT ON TABLE AMIDB2.EVENTS IS                                    00370001
       'STATISTICS TABLE FOR DB2 DASD MANAGER EVENTS'                   00380001
*                                                                       00390001
   CREATE TABLE AMIDB2.EXCEPTIONS2                                      00400001
      ( QUALIFIER          VARCHAR(128) NOT NULL,                       00410001
        OBJECT             VARCHAR(128)    NOT NULL,                    00420001
        PARTITION          SMALLINT        NOT NULL,                    00430001
        OBJTYPE            CHAR(002)       NOT NULL,                    00440001
        EXCEPTION          CHAR(008)       NOT NULL,                    00450001
        CURRENT_VALUEF     FLOAT(004)      NOT NULL WITH DEFAULT,       00460001
        COMPARE_VALUEF     FLOAT(004)      NOT NULL WITH DEFAULT,       00470001
        TRIGGER_VALUE      INTEGER         NOT NULL WITH DEFAULT,       00480001
        TIMESTMP           TIMESTAMP       NOT NULL WITH DEFAULT,       00490001
        ACTION_TAKEN       VARCHAR(060)    NOT NULL WITH DEFAULT,       00500001
        JCLDSN             VARCHAR(056)    NOT NULL WITH DEFAULT,       00510001
        ACTIVE             CHAR(1)         NOT NULL WITH DEFAULT 'Y',   00520001
        LAST_UPDATE        TIMESTAMP       NOT NULL WITH DEFAULT,       00530001
        LAST_UPDATER       CHAR(8)         NOT NULL WITH DEFAULT,       00540001
        PRIORITY           SMALLINT        NOT NULL WITH DEFAULT,       00550001
        CORRECTIVE_ACTION  CHAR(20)        NOT NULL WITH DEFAULT,       00560001
        REGISTRATION_ID    INTEGER                              ,       00570001
        BMCTRIG_ID         CHAR(20)        NOT NULL WITH DEFAULT,       00580001
        VERSION  CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA,00590001
        PRIMARY KEY        (QUALIFIER                                   00600001
                           ,OBJECT                                      00610001
                           ,PARTITION                                   00620001
                           ,OBJTYPE                                     00630001
                           ,EXCEPTION                                   00640001
                           ,TIMESTMP)                                   00650001
      ) IN &DDMDBNM..BMCRSEX      WITH RESTRICT ON DROP                 00660001
*                                                                       00670001
   COMMENT ON TABLE AMIDB2.EXCEPTIONS2 IS                               00680001
       'EXCEPTIONS TABLE FOR DB2 DASD MANAGER'                          00690001
*                                                                       00700001
   CREATE TABLE AMIDB2.WL_SYNC                                          00710001
      ( ALTERID             CHAR (8)      NOT NULL WITH DEFAULT,        00720001
        SYNCWKID            CHAR (20)     NOT NULL WITH DEFAULT,        00730001
        SYNCTASK            CHAR (8)      NOT NULL WITH DEFAULT,        00740001
        SYNCENTRY           INTEGER       NOT NULL WITH DEFAULT,        00750001
        SYNCCMD             CHAR (4)      NOT NULL WITH DEFAULT,        00760001
        SYNCSEQ             CHAR (6)      NOT NULL WITH DEFAULT,        00770001
        SYNCOWNR            CHAR (8)      NOT NULL WITH DEFAULT,        00780001
        SYNCAUTH            CHAR (8)      NOT NULL WITH DEFAULT,        00790001
        SYNCDATA            CHAR (59)     NOT NULL WITH DEFAULT,        00800001
        SYNCGLID            CHAR (8)      NOT NULL WITH DEFAULT,        00810001
        SYNCSETS            CHAR (59)     NOT NULL WITH DEFAULT,        00820001
        SYNCTSTP            TIMESTAMP     NOT NULL WITH DEFAULT,        00830001
        VERSION  CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA 00840001
      ) IN &DDMDBNM..BMCDSYNC     WITH RESTRICT ON DROP                 00850001
                                                                        00860001
   COMMENT ON TABLE AMIDB2.WL_SYNC IS                                   00870001
       'EXECUTION SYNC TABLE'                                           00880001
*                                                                       00890001
   CREATE TABLE AMIDB2.DO_WORKIDS                                       00900001
      ( WORKID        CHAR (20)    NOT NULL WITH DEFAULT,               00910001
        TASKID        CHAR (8)     NOT NULL WITH DEFAULT,               00920001
        CREATEID      CHAR (8)     NOT NULL WITH DEFAULT,               00930001
        CREATED       TIMESTAMP    NOT NULL WITH DEFAULT,               00940001
        UPDATEID      CHAR (8)     NOT NULL WITH DEFAULT,               00950001
        UPDATED       TIMESTAMP    NOT NULL WITH DEFAULT,               00960001
        JCLDSN        CHAR (56)    NOT NULL WITH DEFAULT,               00970001
        WLDSN         CHAR (56)    NOT NULL WITH DEFAULT,               00980001
        STATUS        CHAR (1)     NOT NULL WITH DEFAULT,               00990001
        DIAGDSN       CHAR (56)    NOT NULL WITH DEFAULT,               01000001
        POFDS         CHAR (56)    NOT NULL WITH DEFAULT,               01010001
        VERSION  CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA 01020001
      ) IN &DDMDBNM..BMCDOWID     WITH RESTRICT ON DROP                 01030001
*                                                                       01040001
   COMMENT ON TABLE AMIDB2.DO_WORKIDS IS                                01050001
       'INTERNAL UNIT OF WORK IDENTIFIER'                               01060001
*                                                                       01070001
   CREATE TABLE AMIDB2.ACTION                                           01080001
          (ACT_NM           CHAR(20)     NOT NULL,                      01090001
           ACT_BMCREQD      CHAR(1)      NOT NULL WITH DEFAULT 'N',     01100001
           ACT_INT_CD       CHAR(1)      NOT NULL WITH DEFAULT ' ',     01110001
           ACT_OWNER        CHAR(8)      NOT NULL WITH DEFAULT,         01120001
           ACT_WORKID       CHAR(8)      NOT NULL WITH DEFAULT,         01130001
           ACT_FREQ         CHAR(1)      NOT NULL WITH DEFAULT ' ',     01140001
           ACT_DAY          CHAR(2)      NOT NULL WITH DEFAULT,         01150001
           ACT_TIMEOFDAY    CHAR(4)      NOT NULL WITH DEFAULT,         01160001
           ACT_IDGEN        CHAR(8)      NOT NULL WITH DEFAULT,         01170001
           ACT_RCGEN        SMALLINT     NOT NULL WITH DEFAULT,         01180001
           ACT_DATEGEN      TIMESTAMP    ,                              01190001
           ACT_WORK_DSN     VARCHAR(56)  NOT NULL WITH DEFAULT,         01200001
           ACT_JCL_DSN      VARCHAR(56)  NOT NULL WITH DEFAULT,         01210001
           ACT_DIAG_DSN     VARCHAR(56)  NOT NULL WITH DEFAULT,         01220001
           ACT_TITLE        VARCHAR(20)  NOT NULL WITH DEFAULT,         01230001
           ACT_POF_DSN      VARCHAR(56)  NOT NULL WITH DEFAULT,         01240001
           ACT_DESC         VARCHAR(100) NOT NULL WITH DEFAULT,         01250001
           ACT_MNT_UID      CHAR(8)      NOT NULL WITH DEFAULT,         01260001
           ACT_MNT_TSTMP    TIMESTAMP    NOT NULL WITH DEFAULT,         01270001
       VERSION  CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA, 01280001
           ACT_STATUS  CHAR(1) NOT NULL WITH DEFAULT ' ',               01290001
           PRIMARY KEY        (ACT_NM)                                  01300001
      ) IN &DDMDBNM..BMCACTN      WITH RESTRICT ON DROP                 01310001
*                                                                       01320001
   CREATE TABLE AMIDB2.VENDOR                                           01330001
          (VNDR_CD          CHAR(3)      NOT NULL,                      01340001
           VNDR_DESC        VARCHAR(100) NOT NULL WITH DEFAULT,         01350001
           VNDR_MNT_UID     CHAR(8)      NOT NULL WITH DEFAULT,         01360001
           VNDR_MNT_TSTMP   TIMESTAMP    NOT NULL WITH DEFAULT,         01370001
        VERSION  CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA,01380001
           PRIMARY KEY        (VNDR_CD)                                 01390001
      ) IN &DDMDBNM..BMCVENDR     WITH RESTRICT ON DROP                 01400001
*                                                                       01410001
   CREATE TABLE AMIDB2.SERVICE                                          01420001
          (SVC_NM           CHAR(8)      NOT NULL,                      01430001
           SVC_VNDR_CD      CHAR(3)      NOT NULL,                      01440001
           SVC_BMCREQD      CHAR(1)      NOT NULL WITH DEFAULT 'N',     01450001
           SVC_OWNER        CHAR(8)      NOT NULL WITH DEFAULT,         01460001
           SVC_CLOAK_IND    CHAR(1)      NOT NULL WITH DEFAULT 'N',     01470001
           SVC_TYP          CHAR(8)      NOT NULL WITH DEFAULT,         01480001
           SVC_PGM_NM       CHAR(8)      NOT NULL,                      01490001
           SVC_EX_KEY       CHAR(1)      NOT NULL WITH DEFAULT '8',     01500001
           SVC_APF_IND      CHAR(1)      NOT NULL WITH DEFAULT 'N',     01510001
           SVC_PRM_TXT      VARCHAR(100) NOT NULL WITH DEFAULT,         01520001
           SVC_DESC         VARCHAR(100) NOT NULL WITH DEFAULT,         01530001
           SVC_MNT_UID      CHAR(8)      NOT NULL WITH DEFAULT,         01540001
           SVC_MNT_TSTMP    TIMESTAMP    NOT NULL WITH DEFAULT,         01550001
        VERSION  CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA,01560001
           PRIMARY KEY        (SVC_NM)                                  01570001
      ) IN &DDMDBNM..BMCSERV      WITH RESTRICT ON DROP                 01580001
*                                                                       01590001
   CREATE TABLE AMIDB2.EXCEPTION_DFN                                    01600001
          (ED_NAME            CHAR(8)      NOT NULL,                    01610001
           ED_BMCREQD         CHAR(1)      NOT NULL WITH DEFAULT 'N',   01620001
           ED_APPLIESTOTS     CHAR(1)      NOT NULL WITH DEFAULT 'N',   01630001
           ED_APPLIESTOIX     CHAR(1)      NOT NULL WITH DEFAULT 'N',   01640001
           ED_INST_THRHLD     INTEGER      NOT NULL WITH DEFAULT,       01650001
           ED_AGING_INCR      SMALLINT     NOT NULL WITH DEFAULT,       01660001
           ED_INT_CD          SMALLINT     NOT NULL WITH DEFAULT,       01670001
           ED_CATEGORY        CHAR(8)      NOT NULL WITH DEFAULT,       01680001
           ED_REXX_NM         CHAR(8)      NOT NULL WITH DEFAULT,       01690001
           ED_THRHLD_ASC      CHAR(1)      NOT NULL WITH DEFAULT 'Y',   01700001
           ED_DESC            VARCHAR(50)  NOT NULL WITH DEFAULT,       01710001
           ED_VALUE_TYPE      CHAR(1)      NOT NULL WITH DEFAULT 'N',   01720001
           ED_VALUE_LOW       INTEGER      NOT NULL WITH DEFAULT,       01730001
           ED_VALUE_HIGH      INTEGER      NOT NULL WITH DEFAULT,       01740001
           ED_LONG_DESC       VARCHAR(500),                             01750001
           ED_MNT_UID         CHAR(8)      NOT NULL WITH DEFAULT,       01760001
           ED_MNT_TSTMP       TIMESTAMP    NOT NULL WITH DEFAULT,       01770001
       VERSION  CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA, 01780001
           ED_DATA_SRC  SMALLINT NOT NULL WITH DEFAULT,                 01790001
           ED_HINT  VARCHAR(128) NOT NULL WITH DEFAULT,                 01800001
           PRIMARY KEY        (ED_NAME)                                 01810001
      ) IN &DDMDBNM..BMCEXDEF     WITH RESTRICT ON DROP                 01820001
*                                                                       01830001
   CREATE TABLE AMIDB2.ACT_SEQ_SVC                                      01840001
          (ASS_NM           CHAR(20)     NOT NULL,                      01850001
           ASS_SEQ_NBR      SMALLINT     NOT NULL,                      01860001
           ASS_SVC_NM       CHAR(8)      NOT NULL,                      01870001
           ASS_SNTX_NM      CHAR(40),                                   01880001
           ASS_SVC_MAXRC    SMALLINT     NOT NULL WITH DEFAULT 4,       01890001
           ASS_GRP_CD       CHAR(1)      NOT NULL,                      01900001
           ASS_DEPEND_IND   CHAR(1)      NOT NULL WITH DEFAULT 'N',     01910001
           ASS_OBJECT       VARCHAR(257) NOT NULL WITH DEFAULT,         01920001
           ASS_PART         SMALLINT     NOT NULL WITH DEFAULT,         01930001
           ASS_OBJ_TYP      CHAR(2)      NOT NULL WITH DEFAULT,         01940001
           ASS_OBJSET_OWNR  CHAR(8)      ,                              01950001
           ASS_OBJSET_NM    VARCHAR(18)  ,                              01960001
           ASS_DESC         VARCHAR(100) NOT NULL WITH DEFAULT,         01970001
           ASS_MNT_UID      CHAR(8)      NOT NULL WITH DEFAULT,         01980001
           ASS_MNT_TSTMP    TIMESTAMP    NOT NULL WITH DEFAULT,         01990001
        VERSION CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA, 02000001
           ASS_OBJSET_OSNAME VARCHAR(27),                               02010001
           PRIMARY KEY        (ASS_NM                                   02020001
                              ,ASS_SEQ_NBR)                             02030001
      ) IN &DDMDBNM..BMCACTSS     WITH RESTRICT ON DROP                 02040001
*                                                                       02050001
   CREATE TABLE AMIDB2.CORR_ACTS                                        02060001
          (CA_QUAL            VARCHAR(128) NOT NULL FOR SBCS DATA,      02070001
           CA_NAME            VARCHAR(128) NOT NULL FOR SBCS DATA,      02080001
           CA_OBJ_TYP         CHAR(2)      NOT NULL,                    02090001
           CA_XCPT_NM         CHAR(8)      NOT NULL,                    02100001
           CA_ACT_NM          CHAR(20)     NOT NULL,                    02110001
           CA_MNT_UID         CHAR(8)      NOT NULL WITH DEFAULT,       02120001
           CA_MNT_TSTMP       TIMESTAMP    NOT NULL WITH DEFAULT,       02130001
        VERSION CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA, 02140001
           CA_OBJSET_OSNAME  VARCHAR(27),                               02150001
           PRIMARY KEY        (CA_QUAL                                  02160001
                              ,CA_NAME                                  02170001
                              ,CA_OBJ_TYP                               02180001
                              ,CA_XCPT_NM)                              02190001
      ) IN &DDMDBNM..BMCCACTN     WITH RESTRICT ON DROP                 02200001
*                                                                       02210001
   CREATE TABLE AMIDB2.OBJ_ACT                                          02220001
          (OA_OBJ_NM1       VARCHAR(128) NOT NULL FOR SBCS DATA,        02230001
           OA_OBJ_NM2       VARCHAR(128) NOT NULL FOR SBCS DATA,        02240001
           OA_OBJ_PART      SMALLINT     NOT NULL,                      02250001
           OA_OBJ_TYP       CHAR(2)      NOT NULL FOR SBCS DATA,        02260001
           OA_ACT_NM        CHAR(20)     NOT NULL FOR SBCS DATA,        02270001
           OA_PRTY_NBR      SMALLINT     NOT NULL WITH DEFAULT,         02280001
           OA_PRTY_AGE_NBR  SMALLINT     NOT NULL WITH DEFAULT,         02290001
           OA_ROLLUP_IND    CHAR(1)      NOT NULL WITH DEFAULT 'Y',     02300001
           OA_BMCREQD       CHAR(1)      NOT NULL WITH DEFAULT 'N',     02310001
           OA_DESC          VARCHAR(100) NOT NULL WITH DEFAULT,         02320001
           OA_MNT_UID       CHAR(8)      NOT NULL WITH DEFAULT,         02330001
           OA_MNT_TSTMP     TIMESTAMP    NOT NULL WITH DEFAULT,         02340001
         VERSION CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA,02350001
           PRIMARY KEY        (OA_OBJ_NM1                               02360001
                              ,OA_OBJ_NM2                               02370001
                              ,OA_OBJ_PART                              02380001
                              ,OA_OBJ_TYP                               02390001
                              ,OA_ACT_NM)                               02400001
      ) IN &DDMDBNM..BMCOBJAC     WITH RESTRICT ON DROP                 02410001
*                                                                       02420001
   CREATE TABLE AMIDB2.OBJ_ACT_JC                                       02430001
          (OAJC_OBJ_NM1     VARCHAR(128) NOT NULL FOR SBCS DATA,        02440001
           OAJC_OBJ_NM2     VARCHAR(128) NOT NULL FOR SBCS DATA,        02450001
           OAJC_OBJ_PART    SMALLINT     NOT NULL,                      02460001
           OAJC_OBJ_TYP     CHAR(2)      NOT NULL FOR SBCS DATA,        02470001
           OAJC_ACT_NM      CHAR(20)     NOT NULL FOR SBCS DATA,        02480001
           OAJC_SEQ_NBR     SMALLINT     NOT NULL,                      02490001
           OAJC_TXT         VARCHAR(72)  NOT NULL WITH DEFAULT,         02500001
           OAJC_MNT_UID     CHAR(8)      NOT NULL WITH DEFAULT,         02510001
           OAJC_MNT_TSTMP   TIMESTAMP    NOT NULL WITH DEFAULT,         02520001
         VERSION CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA,02530001
           PRIMARY KEY        (OAJC_OBJ_NM1                             02540001
                              ,OAJC_OBJ_NM2                             02550001
                              ,OAJC_OBJ_PART                            02560001
                              ,OAJC_OBJ_TYP                             02570001
                              ,OAJC_ACT_NM                              02580001
                              ,OAJC_SEQ_NBR)                            02590001
      ) IN &DDMDBNM..BMCOAJC      WITH RESTRICT ON DROP                 02600001
*                                                                       02610001
   CREATE TABLE AMIDB2.SVC_DD                                           02620001
          (SDD_SVC_NM       CHAR(8)      NOT NULL,                      02630001
           SDD_DDN          CHAR(8)      NOT NULL,                      02640001
           SDD_DD_TYP       CHAR(8)      NOT NULL WITH DEFAULT,         02650001
           SDD_MNT_UID      CHAR(8)      NOT NULL WITH DEFAULT,         02660001
           SDD_MNT_TSTMP    TIMESTAMP    NOT NULL WITH DEFAULT,         02670001
      VERSION CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA,   02680001
           PRIMARY KEY        (SDD_SVC_NM                               02690001
                              ,SDD_DDN)                                 02700001
      ) IN &DDMDBNM..BMCSVDD      WITH RESTRICT ON DROP                 02710001
*                                                                       02720001
   CREATE TABLE AMIDB2.SVC_DD_DSN                                       02730001
          (SDDD_SVC_NM      CHAR(8)      NOT NULL,                      02740001
           SDDD_DDN         CHAR(8)      NOT NULL,                      02750001
           SDDD_SEQ_NBR     SMALLINT     NOT NULL,                      02760001
           SDDD_DSN         VARCHAR(44)  NOT NULL,                      02770001
           SDDD_MBR         VARCHAR(8)   ,                              02780001
           SDDD_ATTR        VARCHAR(360) NOT NULL WITH DEFAULT,         02790001
           SDDD_ATTR_XRST   VARCHAR(360) NOT NULL WITH DEFAULT,         02800001
           SDDD_DESC        VARCHAR(100) NOT NULL WITH DEFAULT,         02810001
           SDDD_MNT_UID     CHAR(8)      NOT NULL WITH DEFAULT,         02820001
           SDDD_MNT_TSTMP   TIMESTAMP    NOT NULL WITH DEFAULT,         02830001
      VERSION CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA,   02840001
           PRIMARY KEY        (SDDD_SVC_NM                              02850001
                              ,SDDD_DDN                                 02860001
                              ,SDDD_SEQ_NBR)                            02870001
      ) IN &DDMDBNM..BMCSVDDD     WITH RESTRICT ON DROP                 02880001
*                                                                       02890001
   CREATE TABLE AMIDB2.SVC_SNTX                                         02900001
          (SS_SVC_NM        CHAR(8)      NOT NULL,                      02910001
           SS_SNTX_NM       CHAR(40)     NOT NULL,                      02920001
           SS_BMCREQD       CHAR(1)      NOT NULL WITH DEFAULT 'N',     02930001
           SS_ENCODED       CHAR(1)      NOT NULL WITH DEFAULT 'N',     02940001
           SS_DDN           CHAR(8)      NOT NULL,                      02950001
           SS_OWNER         CHAR(8)      NOT NULL WITH DEFAULT,         02960001
           SS_DFLT          CHAR(1)      NOT NULL WITH DEFAULT 'N',     02970001
           SS_DESC          VARCHAR(100) NOT NULL WITH DEFAULT,         02980001
           SS_MNT_UID       CHAR(8)      NOT NULL WITH DEFAULT,         02990001
           SS_MNT_TSTMP     TIMESTAMP    NOT NULL WITH DEFAULT,         03000001
      VERSION CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA,   03010001
           PRIMARY KEY        (SS_SVC_NM                                03020001
                              ,SS_SNTX_NM)                              03030001
      ) IN &DDMDBNM..BMCSVSN      WITH RESTRICT ON DROP                 03040001
*                                                                       03050001
   CREATE TABLE AMIDB2.SVC_SNTXT                                        03060001
          (SST_SVC_NM       CHAR(8)      NOT NULL,                      03070001
           SST_SNTX_NM      CHAR(40)     NOT NULL,                      03080001
           SST_SEQ_NBR      SMALLINT     NOT NULL,                      03090001
           SST_SNTXT        VARCHAR(80)  NOT NULL WITH DEFAULT,         03100001
           SST_MNT_UID      CHAR(8)      NOT NULL WITH DEFAULT,         03110001
           SST_MNT_TSTMP    TIMESTAMP    NOT NULL WITH DEFAULT,         03120001
      VERSION CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA,   03130001
           PRIMARY KEY        (SST_SVC_NM                               03140001
                              ,SST_SNTX_NM                              03150001
                              ,SST_SEQ_NBR)                             03160001
      ) IN &DDMDBNM..BMCSVSNT     WITH RESTRICT ON DROP                 03170001
*                                                                       03180001
   CREATE TABLE AMIDB2.THRESHOLDS                                       03190001
          (TH_QUAL            VARCHAR(128) NOT NULL FOR SBCS DATA,      03200001
           TH_NAME            VARCHAR(128) NOT NULL FOR SBCS DATA,      03210001
           TH_OBJ_TYP         CHAR(2)      NOT NULL,                    03220001
           TH_XCPT_NM         CHAR(8)      NOT NULL,                    03230001
           TH_VALUE           INTEGER      NOT NULL WITH DEFAULT,       03240001
           TH_PRTY            SMALLINT     NOT NULL WITH DEFAULT,       03250001
           TH_ENBLD_CD        CHAR(1)      NOT NULL WITH DEFAULT 'N',   03260001
           TH_REXX_NM         CHAR(8)      NOT NULL WITH DEFAULT,       03270001
           TH_MNT_UID         CHAR(8)      NOT NULL WITH DEFAULT,       03280001
           TH_MNT_TSTMP       TIMESTAMP    NOT NULL WITH DEFAULT,       03290001
      VERSION CHAR(8) NOT NULL WITH DEFAULT '13.01.00' FOR SBCS DATA,   03300001
           TH_OBJSET_OSNAME  VARCHAR(27),                               03310001
           PRIMARY KEY        (TH_QUAL                                  03320001
                              ,TH_NAME                                  03330001
                              ,TH_OBJ_TYP                               03340001
                              ,TH_XCPT_NM                               03350001
                              ,TH_VALUE)                                03360001
      ) IN &DDMDBNM..BMCTHRES     WITH RESTRICT ON DROP                 03370001
*                                                                       03380001
**********************************************************************  03390001
*                A L T E R     T A B L E S                              03400001
**********************************************************************  03410001
   ALTER            TABLE AMIDB2.ACTION                                 03420001
             ALTER COLUMN VERSION                                       03430001
             SET DEFAULT '13.01.00'                                     03440001
                                                                        03450001
   ALTER            TABLE AMIDB2.ACT_SEQ_SVC                            03460001
             ALTER COLUMN VERSION                                       03470001
             SET DEFAULT '13.01.00'                                     03480001
                                                                        03490001
   ALTER            TABLE AMIDB2.CORR_ACTS                              03500001
             ALTER COLUMN VERSION                                       03510001
             SET DEFAULT '13.01.00'                                     03520001
                                                                        03530001
   ALTER            TABLE AMIDB2.DO_WORKIDS                             03540001
             ALTER COLUMN VERSION                                       03550001
             SET DEFAULT '13.01.00'                                     03560001
                                                                        03570001
   ALTER            TABLE AMIDB2.WL_SYNC                                03580001
             ALTER COLUMN VERSION                                       03590001
             SET DEFAULT '13.01.00'                                     03600001
                                                                        03610001
   ALTER            TABLE AMIDB2.EXCEPTION_DFN                          03620001
             ALTER COLUMN VERSION                                       03630001
             SET DEFAULT '13.01.00'                                     03640001
                                                                        03650001
   ALTER            TABLE AMIDB2.OBJ_ACT_JC                             03660001
             ALTER COLUMN VERSION                                       03670001
             SET DEFAULT '13.01.00'                                     03680001
                                                                        03690001
   ALTER            TABLE AMIDB2.EVENTS                                 03700001
             ALTER COLUMN VERSION                                       03710001
             SET DEFAULT '13.01.00'                                     03720001
                                                                        03730001
   ALTER            TABLE AMIDB2.EXCEPTIONS2                            03740001
             ALTER COLUMN VERSION                                       03750001
             SET DEFAULT '13.01.00'                                     03760001
                                                                        03770001
   ALTER            TABLE AMIDB2.SERVICE                                03780001
             ALTER COLUMN VERSION                                       03790001
             SET DEFAULT '13.01.00'                                     03800001
                                                                        03810001
   ALTER            TABLE AMIDB2.SVC_DD                                 03820001
             ALTER COLUMN VERSION                                       03830001
             SET DEFAULT '13.01.00'                                     03840001
                                                                        03850001
   ALTER            TABLE AMIDB2.SVC_DD_DSN                             03860001
             ALTER COLUMN VERSION                                       03870001
             SET DEFAULT '13.01.00'                                     03880001
                                                                        03890001
   ALTER            TABLE AMIDB2.SVC_SNTX                               03900001
             ALTER COLUMN VERSION                                       03910001
             SET DEFAULT '13.01.00'                                     03920001
                                                                        03930001
   ALTER            TABLE AMIDB2.SVC_SNTXT                              03940001
             ALTER COLUMN VERSION                                       03950001
             SET DEFAULT '13.01.00'                                     03960001
                                                                        03970001
   ALTER            TABLE AMIDB2.THRESHOLDS                             03980001
             ALTER COLUMN VERSION                                       03990001
             SET DEFAULT '13.01.00'                                     04000001
                                                                        04010001
   ALTER            TABLE AMIDB2.VENDOR                                 04020001
             ALTER COLUMN VERSION                                       04030001
             SET DEFAULT '13.01.00'                                     04040001
                                                                        04050001
   ALTER            TABLE AMIDB2.OBJ_ACT                                04060001
             ALTER COLUMN VERSION                                       04070001
             SET DEFAULT '13.01.00'                                     04080001
                                                                        04090001
   ALTER            TABLE AMIDB2.EXCEPTIONS2                            04100001
                 ADD CONSTRAINT ACTIVE CHECK (                          04110001
                 ACTIVE  = 'Y' OR ACTIVE  = 'N'                         04120001
                   )                                                    04130001
*                                                                       04140001
   ALTER            TABLE AMIDB2.ACTION                                 04150001
                 ADD CONSTRAINT ACT_INT_CD CHECK (                      04160001
                 ACT_INT_CD  = 'C' OR ACT_INT_CD  = ' '                 04170001
                   )                                                    04180001
*                                                                       04190001
   ALTER            TABLE AMIDB2.ACTION                                 04200001
                 ADD CONSTRAINT ACT_FREQ CHECK (                        04210001
                 ACT_FREQ  = 'D' OR ACT_FREQ  = 'W' OR ACT_FREQ  = 'B'  04220001
                 OR ACT_FREQ  = 'M' OR ACT_FREQ  = 'U' OR ACT_FREQ  =   04230001
                 ' '                                                    04240001
                   )                                                    04250001
*                                                                       04260001
   ALTER            TABLE AMIDB2.ACTION                                 04270001
                 ADD CONSTRAINT ACT_BMCREQD CHECK (                     04280001
                 ACT_BMCREQD  = 'Y' OR ACT_BMCREQD  = 'N'               04290001
                   )                                                    04300001
*                                                                       04310001
   ALTER            TABLE AMIDB2.ACT_SEQ_SVC                            04320001
                 ADD CONSTRAINT ASS_SVC_MAXRC CHECK (                   04330001
                 ASS_SVC_MAXRC  >= 0 OR ASS_SVC_MAXRC <= 4095           04340001
                   )                                                    04350001
*                                                                       04360001
   ALTER            TABLE AMIDB2.ACT_SEQ_SVC                            04370001
                 ADD CONSTRAINT ASS_OBJ_TYP CHECK (                     04380001
                 ASS_OBJ_TYP  = 'TS' OR ASS_OBJ_TYP  = 'DB' OR          04390001
                 ASS_OBJ_TYP  = 'IX' OR ASS_OBJ_TYP  = 'TT' OR          04400001
                 ASS_OBJ_TYP  = 'SG' OR ASS_OBJ_TYP  = 'VL' OR          04410001
                 ASS_OBJ_TYP  = 'IS' OR ASS_OBJ_TYP  = '  '             04420001
                   )                                                    04430001
*                                                                       04440001
   ALTER            TABLE AMIDB2.ACT_SEQ_SVC                            04450001
                 ADD CONSTRAINT ASS_GRP_CD CHECK (                      04460001
                 ASS_GRP_CD  = 'G' OR ASS_GRP_CD  = 'P' OR ASS_GRP_CD  =04470001
                 'S'                                                    04480001
                   )                                                    04490001
*                                                                       04500001
   ALTER            TABLE AMIDB2.ACT_SEQ_SVC                            04510001
                 ADD CONSTRAINT ASS_DEPEND_IND CHECK (                  04520001
                 ASS_DEPEND_IND  = 'Y' OR ASS_DEPEND_IND  = 'N'         04530001
                   )                                                    04540001
*                                                                       04550001
   ALTER            TABLE AMIDB2.EXCEPTION_DFN                          04560001
                 ADD CONSTRAINT ED_VALUE_TYPE CHECK (                   04570001
                 ED_VALUE_TYPE  = 'N' OR ED_VALUE_TYPE  = 'B'           04580001
                   )                                                    04590001
*                                                                       04600001
   ALTER            TABLE AMIDB2.EXCEPTION_DFN                          04610001
                 ADD CONSTRAINT ED_THRHLD_ASC CHECK (                   04620001
                 ED_THRHLD_ASC  = 'Y' OR ED_THRHLD_ASC  = 'N'           04630001
                   )                                                    04640001
*                                                                       04650001
   ALTER            TABLE AMIDB2.EXCEPTION_DFN                          04660001
                 ADD CONSTRAINT ED_BMCREQD CHECK (                      04670001
                 ED_BMCREQD  = 'Y' OR ED_BMCREQD  = 'N'                 04680001
                   )                                                    04690001
*                                                                       04700001
   ALTER            TABLE AMIDB2.EXCEPTION_DFN                          04710001
                 ADD CONSTRAINT ED_APPLIESTOTS CHECK (                  04720001
                 ED_APPLIESTOTS  = 'Y' OR ED_APPLIESTOTS  = 'N'         04730001
                   )                                                    04740001
*                                                                       04750001
   ALTER            TABLE AMIDB2.EXCEPTION_DFN                          04760001
                 ADD CONSTRAINT ED_APPLIESTOIX CHECK (                  04770001
                 ED_APPLIESTOIX  = 'Y' OR ED_APPLIESTOIX  = 'N'         04780001
                   )                                                    04790001
*                                                                       04800001
   ALTER            TABLE AMIDB2.OBJ_ACT                                04810001
                 ADD CONSTRAINT OA_ROLLUP_IND CHECK (                   04820001
                 OA_ROLLUP_IND  = 'Y' OR OA_ROLLUP_IND  = 'N'           04830001
                   )                                                    04840001
*                                                                       04850001
   ALTER            TABLE AMIDB2.OBJ_ACT                                04860001
                 ADD CONSTRAINT OA_PRTY_NBR CHECK (                     04870001
                 OA_PRTY_NBR  >= 0 AND OA_PRTY_NBR <= 255               04880001
                   )                                                    04890001
*                                                                       04900001
-SQL  000730 ALTER  TABLE AMIDB2.OBJ_ACT                                04910001
                 ADD CONSTRAINT OA_PRTY_AGE_NBR CHECK (                 04920001
                 OA_PRTY_AGE_NBR  >= 0 AND OA_PRTY_AGE_NBR <= 10        04930001
                   )                                                    04940001
*                                                                       04950001
   ALTER            TABLE AMIDB2.OBJ_ACT                                04960001
                 ADD CONSTRAINT OA_BMCREQD CHECK (                      04970001
                 OA_BMCREQD  = 'Y' OR OA_BMCREQD  = 'N'                 04980001
                   )                                                    04990001
*                                                                       05000001
   ALTER            TABLE AMIDB2.OBJ_ACT_JC                             05010001
                 ADD CONSTRAINT OAJC_SEQ_NBR CHECK (                    05020001
                 OAJC_SEQ_NBR  >= 1 AND OAJC_SEQ_NBR <= 5               05030001
                   )                                                    05040001
*                                                                       05050001
   ALTER            TABLE AMIDB2.VENDOR                                 05060001
                 ADD CONSTRAINT VNDR_CD0 CHECK (                        05070001
                 VNDR_CD  = 'BMC' OR VNDR_CD  = 'USR' OR VNDR_CD  =     05080001
                 'IBM'                                                  05090001
                   )                                                    05100001
*                                                                       05110001
   ALTER            TABLE AMIDB2.SERVICE                                05120001
                 ADD CONSTRAINT SVC_EX_KEY CHECK (                      05130001
                 SVC_EX_KEY  >= '0' AND SVC_EX_KEY <= '8'               05140001
                   )                                                    05150001
*                                                                       05160001
   ALTER            TABLE AMIDB2.SERVICE                                05170001
                 ADD CONSTRAINT SVC_CLOAK_IND CHECK (                   05180001
                 SVC_CLOAK_IND  = 'Y' OR SVC_CLOAK_IND  = 'N'           05190001
                   )                                                    05200001
*                                                                       05210001
   ALTER            TABLE AMIDB2.SERVICE                                05220001
                 ADD CONSTRAINT SVC_BMCREQD CHECK (                     05230001
                 SVC_BMCREQD  = 'Y' OR SVC_BMCREQD  = 'N'               05240001
                   )                                                    05250001
*                                                                       05260001
   ALTER            TABLE AMIDB2.SERVICE                                05270001
                 ADD CONSTRAINT SVC_APF_IND CHECK (                     05280001
                 SVC_APF_IND  = 'Y' OR SVC_APF_IND  = 'N'               05290001
                   )                                                    05300001
*                                                                       05310001
   ALTER            TABLE AMIDB2.SVC_DD                                 05320001
                 ADD CONSTRAINT SDD_DD_TYP CHECK (                      05330001
                 SDD_DD_TYP  = 'INFILE' OR SDD_DD_TYP  = 'OUTFILE' OR   05340001
                 SDD_DD_TYP  = 'PGMLIB' OR SDD_DD_TYP  = 'REPORT'       05350001
                   )                                                    05360001
*                                                                       05370001
   ALTER            TABLE AMIDB2.SVC_SNTX                               05380001
                 ADD CONSTRAINT SS_ENCODED CHECK (                      05390001
                 SS_ENCODED  = 'Y' OR SS_ENCODED  = 'N'                 05400001
                   )                                                    05410001
*                                                                       05420001
   ALTER            TABLE AMIDB2.SVC_SNTX                               05430001
                 ADD CONSTRAINT SS_DFLT CHECK (                         05440001
                 SS_DFLT  = 'Y' OR SS_DFLT  = 'N'                       05450001
                   )                                                    05460001
*                                                                       05470001
   ALTER            TABLE AMIDB2.SVC_SNTX                               05480001
                 ADD CONSTRAINT SS_BMCREQD CHECK (                      05490001
                 SS_BMCREQD  = 'Y' OR SS_BMCREQD  = 'N'                 05500001
                   )                                                    05510001
*                                                                       05520001
   ALTER            TABLE AMIDB2.THRESHOLDS                             05530001
                 ADD CONSTRAINT TH_ENBLD_CD CHECK (                     05540001
                 TH_ENBLD_CD  = 'Y' OR TH_ENBLD_CD  = 'N'               05550001
                   )                                                    05560001
*                                                                       05570001
**********************************************************************  05580001
*                C O L U M N   C O M M E N T S                          05590001
**********************************************************************  05600001
   COMMENT ON AMIDB2.EVENTS                                             05610001
      ( WORKID     IS 'INTERNAL IDENTIFIER',                            05620001
        TASKID     IS 'INTERNAL IDENTIFIER',                            05630001
        FUNCTION   IS 'UTILITY NAME',                                   05640001
        QUALIFIER  IS 'OBJECT QUALIFIER (DB, CREATOR)',                 05650001
        OBJECT     IS 'OBJECT NAME',                                    05660001
        OBJTYPE    IS 'OBJECT TYPE',                                    05670001
        RETCODE    IS 'RETURN CODE FROM FUNCTION',                      05680001
        TIMESTMP   IS 'TIME STAMP FOR EVENT',                           05690001
        RUNFLAG    IS 'R=RESTART,S=STARTOVER,U=UNDO',                   05700001
        ELAPTIME   IS 'EVENT ELAPSED TIME',                             05710001
        CPUTIME    IS 'EVENT CPU TIME',                                 05720001
        DSN        IS 'DATA SET NAME FOR FUNCTION',                     05730001
        PARMS      IS 'PARMS TO BE PASSED IN'                           05740001
      )                                                                 05750001
*                                                                       05760001
   COMMENT ON AMIDB2.EXCEPTIONS2                                        05770001
     (QUALIFIER     IS 'OBJECT QUALIFIER (DB, OWNER)'               ,   05780001
      OBJECT        IS 'OBJECT NAME'                                ,   05790001
      PARTITION     IS 'OBJECT PARTITION'                           ,   05800001
      OBJTYPE       IS 'OBJECT TYPE'                                  , 05810001
      EXCEPTION     IS 'EXCEPTION TYPE'                               , 05820001
      CURRENT_VALUEF IS 'THE CURRENT VALUE OF THE EXCEPTION'          , 05830001
     COMPARE_VALUEF IS 'THE COMPARED TO VALUE FOR THE TRIGGER, IF ANY', 05840001
      TRIGGER_VALUE IS 'THE TRIGGER VALUE FOR THE EXCEPTION.'         , 05850001
      TIMESTMP      IS 'TIME STAMP FOR EXCEPTION'                     , 05860001
      ACTION_TAKEN  IS 'ACTION TAKEN ON THE EXCEPTION.'               , 05870001
      JCLDSN        IS                                                  05880001
        'DATA SET CONTAINING GENERATED UTILITY JCL FOR THE EXCEPTIONS') 05890001
*                                                                       05900001
   COMMENT ON AMIDB2mDO_WORKIDS                                         05910001
      ( WORKID   IS 'ID NAME',                                          05920001
        TASKID   IS 'TASK ASSOCIATED WITH THIS WORKID',                 05930001
        CREATEID IS 'CREATOR NAME',                                     05940001
        CREATED  IS 'DATE/TIME CREATED',                                05950001
        UPDATEID IS 'UPDATOR NAME',                                     05960001
        UPDATED  IS 'DATE/TIME UPDATED',                                05970001
        JCLDSN   IS 'DATA SET NAME TO BE USED',                         05980001
        WLDSN    IS 'WORK LIST DATA SET NAME',                          05990001
        STATUS   IS 'STATUS OF WORKID',                                 06000001
        DIAGDSN  IS 'DIAGNOSTIC DATA SET NAME'                          06010001
      )                                                                 06020001
*                                                                       06030001

./ ADD NAME=CRETS
//DSNTEJ1   JOB ACCT£,                                                  00001000
//             DB2,                                                     00002000
//*            RESTART=PH01S02,                                         00002200
//             NOTIFY=&SYSUID,                                          00003000
//             MSGCLASS=T                                               00004000
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00005000
//      SYS019.LP2.DB2,                                                 00006000
//      SYS1.PROCLIB.&SYSNAME,                                          00007000
//      SYS1.SACBCNTL)                                                  00008000
//********************************************************************* 00010000
//PH01S01 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00084000
//SYSTSPRT DD SYSOUT=*                                                  00085000
//SYSTSIN  DD *                                                         00086000
  DSN SYSTEM(DB2S)                                                      00087000
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA12) -                                00088000
 LIB ('DB2S.RUNLIB.LOAD')                                               00089000
//SYSPRINT DD SYSOUT=*                                                  00090000
//SYSUDUMP DD SYSOUT=*                                                  00091000
//SYSIN    DD *                                                         00092000
  CREATE TABLESPACE BMCACTN                                             00093101
         IN AMIDB2SU                                                    00093201
         USING STOGROUP AMIOPSSG                                        00093301
         PRIQTY -1                                                      00093401
         SECQTY -1                                                      00093501
         DSSIZE 4G                                                      00093601
         SEGSIZE 64                                                     00093701
         MAXPARTITIONS 5                                                00093801
         BUFFERPOOL BP4                                                 00093901
         LOCKSIZE ANY                                                   00094001
         CLOSE NO                                                       00094101
                                                                        00094201
 CREATE TABLESPACE BMCACTSS                                             00094301
         IN AMIDB2SU                                                    00094401
         USING STOGROUP AMIOPSSG                                        00094501
         PRIQTY -1                                                      00094601
         SECQTY -1                                                      00094701
         DSSIZE 4G                                                      00094801
         SEGSIZE 64                                                     00094901
         MAXPARTITIONS 5                                                00095001
         BUFFERPOOL BP4                                                 00095101
         LOCKSIZE ANY                                                   00095201
         CLOSE NO                                                       00095301
                                                                        00095401
 CREATE TABLESPACE BMCCACTN                                             00095501
         IN AMIDB2SU                                                    00095601
         USING STOGROUP AMIOPSSG                                        00095701
         PRIQTY -1                                                      00095801
         SECQTY -1                                                      00095901
         DSSIZE 4G                                                      00096001
         SEGSIZE 64                                                     00096101
         MAXPARTITIONS 5                                                00096201
         BUFFERPOOL BP4                                                 00096301
         LOCKSIZE ANY                                                   00096401
         CLOSE NO                                                       00096501
                                                                        00096601
         IN AMIDB2SU                                                    00096701
         USING STOGROUP AMIOPSSG                                        00096801
         PRIQTY -1                                                      00096901
         SECQTY -1                                                      00097001
         DSSIZE 4G                                                      00097101
         SEGSIZE 64                                                     00097201
         MAXPARTITIONS 5                                                00097301
         BUFFERPOOL BP4                                                 00097401
         LOCKSIZE ANY                                                   00097501
         CLOSE NO                                                       00097601
                                                                        00097701
 CREATE TABLESPACE BMCDSYNC                                             00097801
         IN AMIDB2SU                                                    00097901
         USING STOGROUP AMIOPSSG                                        00098001
         PRIQTY -1                                                      00098101
         SECQTY -1                                                      00098201
         DSSIZE 4G                                                      00098301
         SEGSIZE 64                                                     00098401
         MAXPARTITIONS 5                                                00098501
         BUFFERPOOL BP4                                                 00098601
         LOCKSIZE ANY                                                   00098701
         CLOSE NO                                                       00098801
                                                                        00098901
 CREATE TABLESPACE BMCEXDEF                                             00099001
         IN AMIDB2SU                                                    00099101
         USING STOGROUP AMIOPSSG                                        00099201
         PRIQTY -1                                                      00099301
         SECQTY -1                                                      00099401
         DSSIZE 4G                                                      00099501
         SEGSIZE 64                                                     00099601
         MAXPARTITIONS 5                                                00099701
         BUFFERPOOL BP4                                                 00099801
         LOCKSIZE ANY                                                   00099901
         CLOSE NO                                                       00100001
                                                                        00100101
 CREATE TABLESPACE BMCOAJC                                              00100201
         IN AMIDB2SU                                                    00100301
         USING STOGROUP AMIOPSSG                                        00100401
         PRIQTY -1                                                      00100501
         SECQTY -1                                                      00100601
         DSSIZE 4G                                                      00100701
         SEGSIZE 64                                                     00100801
         MAXPARTITIONS 5                                                00100901
         BUFFERPOOL BP4                                                 00101001
         LOCKSIZE ANY                                                   00101101
         CLOSE NO                                                       00102001
                                                                        00103001
 CREATE TABLESPACE BMCOBJAC                                             00104001
         IN AMIDB2SU                                                    00105001
         USING STOGROUP AMIOPSSG                                        00106001
         PRIQTY -1                                                      00107001
         SECQTY -1                                                      00108001
         DSSIZE 4G                                                      00109001
         SEGSIZE 64                                                     00109101
         MAXPARTITIONS 5                                                00109201
         BUFFERPOOL BP4                                                 00109301
         LOCKSIZE ANY                                                   00109401
         CLOSE NO                                                       00109501
                                                                        00109601
 CREATE TABLESPACE BMCRSEV                                              00109701
         IN AMIDB2SU                                                    00109801
         USING STOGROUP AMIOPSSG                                        00109901
         PRIQTY -1                                                      00110001
         SECQTY -1                                                      00110101
         DSSIZE 4G                                                      00110201
         SEGSIZE 64                                                     00110301
         MAXPARTITIONS 5                                                00110401
         BUFFERPOOL BP4                                                 00110501
         LOCKSIZE ANY                                                   00110601
         CLOSE NO                                                       00110701
                                                                        00110801
 CREATE TABLESPACE BMCRSEX                                              00110901
         IN AMIDB2SU                                                    00111001
         USING STOGROUP AMIOPSSG                                        00111101
         PRIQTY -1                                                      00111201
         SECQTY -1                                                      00111301
         DSSIZE 4G                                                      00111401
         SEGSIZE 64                                                     00111501
         MAXPARTITIONS 5                                                00111601
         BUFFERPOOL BP4                                                 00111701
         LOCKSIZE ANY                                                   00111801
         CLOSE NO                                                       00111901
                                                                        00112001
 CREATE TABLESPACE BMCSERV                                              00112101
         IN AMIDB2SU                                                    00112201
         USING STOGROUP AMIOPSSG                                        00112301
         PRIQTY -1                                                      00112401
         SECQTY -1                                                      00112501
         DSSIZE 4G                                                      00112601
         SEGSIZE 64                                                     00112701
         MAXPARTITIONS 5                                                00112801
         BUFFERPOOL BP4                                                 00112901
         LOCKSIZE ANY                                                   00113001
         CLOSE NO                                                       00113101
                                                                        00113201
 CREATE TABLESPACE BMCSVDD                                              00113301
         IN AMIDB2SU                                                    00113401
         USING STOGROUP AMIOPSSG                                        00113501
         PRIQTY -1                                                      00113601
         SECQTY -1                                                      00113701
         DSSIZE 4G                                                      00113801
         SEGSIZE 64                                                     00113901
         MAXPARTITIONS 5                                                00114001
         BUFFERPOOL BP4                                                 00114101
         LOCKSIZE ANY                                                   00114201
         CLOSE NO                                                       00114301
 CREATE TABLESPACE BMCSVDDD                                             00114401
         IN AMIDB2SU                                                    00114501
         USING STOGROUP AMIOPSSG                                        00114601
         PRIQTY -1                                                      00114701
         SECQTY -1                                                      00114801
         DSSIZE 4G                                                      00114901
         SEGSIZE 64                                                     00115001
         MAXPARTITIONS 5                                                00115101
         BUFFERPOOL BP4                                                 00115201
         LOCKSIZE ANY                                                   00115301
         CLOSE NO                                                       00115401
                                                                        00115501
 CREATE TABLESPACE BMCSVSN                                              00115601
         IN AMIDB2SU                                                    00115701
         USING STOGROUP AMIOPSSG                                        00115801
         PRIQTY -1                                                      00115901
         SECQTY -1                                                      00116001
         DSSIZE 4G                                                      00116101
         SEGSIZE 64                                                     00116201
         MAXPARTITIONS 5                                                00116301
         BUFFERPOOL BP4                                                 00116401
         LOCKSIZE ANY                                                   00116501
         CLOSE NO                                                       00116601
                                                                        00116701
  CREATE TABLESPACE BMCSVSNT                                            00116801
         IN AMIDB2SU                                                    00116901
         USING STOGROUP AMIOPSSG                                        00117001
         PRIQTY -1                                                      00117101
         SECQTY -1                                                      00117201
         DSSIZE 4G                                                      00117301
         SEGSIZE 64                                                     00117401
         MAXPARTITIONS 5                                                00117501
         BUFFERPOOL BP4                                                 00117601
         LOCKSIZE ANY                                                   00117701
         CLOSE NO                                                       00117801
                                                                        00117901
  CREATE TABLESPACE BMCTHRES                                            00118001
         IN AMIDB2SU                                                    00118101
         USING STOGROUP AMIOPSSG                                        00118201
         PRIQTY -1                                                      00118301
         SECQTY -1                                                      00118401
         DSSIZE 4G                                                      00118501
         SEGSIZE 64                                                     00118601
         MAXPARTITIONS 5                                                00118701
         BUFFERPOOL BP4                                                 00118801
         LOCKSIZE ANY                                                   00118901
         CLOSE NO                                                       00119001
                                                                        00119101
  CREATE TABLESPACE BMCVENDR                                            00119201
         IN AMIDB2SU                                                    00119301
         USING STOGROUP AMIOPSSG                                        00119401
         PRIQTY -1                                                      00119501
         SECQTY -1                                                      00119601
         DSSIZE 4G                                                      00119701
         SEGSIZE 64                                                     00119801
         MAXPARTITIONS 5                                                00119901
         BUFFERPOOL BP4                                                 00120001
         LOCKSIZE ANY                                                   00120101
         CLOSE NO                                                       00120201
                                                                        00120301
                                                                        00120401
*=======================================================================00120501
-SYNC 008900 END OF CREATE DATABASE AND TABLESPACES WORKLIST            00120601
*---------------------------------------------------------------------  00120701
*-  RETURN SQLID BACK TO PREVIOUS                                       00120801
*---------------------------------------------------------------------  00120901
*                                                                       00121001
COMMIT;                                                                 00121101
//                                                                      00121201
  CREATE TABLESPACE DSN8S12D                                            00121301
    IN DSN8D12A                                                         00121401
    USING STOGROUP AMIOPSSG                                             00121501
    ERASE NO                                                            00121601
    LOCKSIZE PAGE LOCKMAX SYSTEM                                        00121701
    BUFFERPOOL BP0                                                      00121801
    CLOSE NO                                                            00121901
    CCSID EBCDIC;                                                       00122001
                                                                        00123001
  COMMIT ;                                                              00124001

./ ADD NAME=DBRMLIB
PROLB.SCT.DBRMLIB                            QAL605
SYST.DB2.DBRMLIB                             MVS102
SYST.DB2PLI8.DBRMLIB                         SYST02
SYST.DB2PLI8.V9.DBRMLIB                      SYST02
SYST.SCT.DBRMLIB                             MVS105
SYS

SYS3.ARMIDE.V9.DBRMLIB                       DLIB11
SYS3.BETA.XINFO.V4R1.INST.DBRMLIB            DISS2B
SYS4.ENDEVOR.SMPLEMER.DBRMLIB                DISS0B
SYS4.ENDEVOR.SMPLPROD.DBRMLIB                DISS0B
SYS4.ENDEVOR.SMPLQA.DBRMLIB                  DISS0B
SYS4.ENDEVOR.SMPLTEST.DBRMLIB                DISS0B
SYS4.IMU.DBRMLIB                             DISS0C
SYST

SYSLHU.JCL.DBRMLIB                           SYST12
SYS015.DBRMLIB                               TSO003

./ ADD NAME=DB2PJU03
//SYSDB2   JOB 1000,'DSNJU003',MSGLEVEL=(1,1),                          00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=&SYSUID                            00002000
//*------------------------------------------------------------*        00002100
//*  CE JCL PERMET DE FAIRE DES RECOVER INDEX SUR LES TABLES            00002200
//*  RESTAUREES                                                         00002300
//*------------------------------------------------------------*        00002400
//DSJU003 EXEC PGM=DSNJU003                                             00002500
//STEPLIB  DD DSN=SYS2.DB2510.SDSNLOAD,DISP=SHR                         00002600
//SYSUT1   DD DSN=DB2P.BSDS01,DISP=SHR                                  00002700
//SYSUT2   DD DSN=DB2P.BSDS02,DISP=SHR                                  00002800
//SYSPRINT DD SYSOUT=*                                                  00002900
//SYSIN DD *                                                            00003000
CRESTART CREATE,ENDRBA=011BF769D000,STARTRBA=011BF769D000               00003100
//                                                                      00003200

./ ADD NAME=DB2PMST
//SYSILEA   JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),                00010000
//         RESTART=PMV510,                                              00020000
//         CLASS=O,NOTIFY=SYSILE,COND=(4,LT)                            00030000
//*-----------------------------------------------------------          00040000
//* RECOPIE DU FICHIER SMF SUR BANDE                                    00050000
//*----------------------------------------------------------           00060000
//STEP0010 EXEC PGM=IFASMFDP                                            00070000
//SYSPRINT DD SYSOUT=X                                                  00080000
//INDD1    DD DISP=SHR,DSN=SAVED.SMF.DB2.BRNR(0)                        00090000
//OUDD1    DD  DSN=SYSILE.SAVED.SMF.DB2,                                00100000
//         DISP=(,CATLG,DELETE),UNIT=CTAPE,                             00110000
//         DCB=(ODMP.MODEL,RECFM=VBS,LRECL=4096,BLKSIZE=28672)          00120000
//SYSIN    DD  *                                                        00130000
 INDD(INDD1,OPTIONS(DUMP))                                              00140000
 OUTDD(OUDD1,TYPE(0:255))                                               00150000
/*                                                                      00160000
//STEP0020 EXEC PGM=IEFBR14,COND=(4,LT)                                 00170000
//*-----------------------------------------------------------          00180000
//* STAT SYSTEME SUR DB2C                                               00190000
//*----------------------------------------------------------           00200000
//PMV510  EXEC PGM=DB2PM                                                00210000
//STEPLIB  DD  DSN=DB2610.DGO.SDGOLOAD,DISP=SHR                         00220000
//INPUTDD  DD  DSN=SYSILE.SAVED.SMF.DB2,DISP=SHR                        00230000
//DDNAME2  DD  SYSOUT=*                                                 00240000
//DPMLOG   DD  SYSOUT=*                                                 00250000
//SYSOUT   DD  SYSOUT=*                                                 00260000
//SORTWK01  DD UNIT=WORKDA,SPACE=(CYL,(100,99))                         00270000
//SORTWK02  DD UNIT=WORKDA,SPACE=(CYL,(100,99))                         00280000
//SORTWK03  DD UNIT=WORKDA,SPACE=(CYL,(100,99))                         00290000
//SORTWK04  DD UNIT=WORKDA,SPACE=(CYL,(100,99))                         00300000
//SORTWK05  DD UNIT=WORKDA,SPACE=(CYL,(100,99))                         00310000
//SYSIN    DD  *                                                        00320000
GLOBAL                                                                  00330000
            INCLUDE (                                                   00340000
                     LOCATION  (                                        00350000
                                RDB2C                                   00360000
                               )                                        00370000
                    )                                                   00380000
ACCOUNTING                                                              00390000
            REPORT                                                      00400000
                     DDNAME(DDNAME1)                                    00410000
                     LAYOUT(SHORT)                                      00420000
                     ORDER(                                             00430000
                          PLANNAME-CORRNAME-CORRNMBR                    00440000
                          )                                             00450000
EXEC                                                                    00460000
/*                                                                      00470000
//                                                                      00480000

./ ADD NAME=DB2STSP
//DB2STSP  PROC                                                         00010000
//*-------------------------------------------------------------------OC00020000
//* SUIVI DB2 STATS ET RTS                                              00030000
//* SUBMIT PAR SOLVE CYCLE 1 HEURE                                      00040000
//* USER.PROCLIB(DB2STSP)                                               00050000
//* CPRO.PDS.ISPF.CLIST(DB2STSR)                                        00060000
//*----------------------------------------------------------------V0.0100070000
//STEP001  EXEC PGM=IKJEFT01,DYNAMNBR=20,PARM=('DB2STSR')               00080000
//SYSTSPRT DD  SYSOUT=X                                                 00090000
//SYSPRINT DD  SYSOUT=*                                                 00100000
//*OUT1    DD  SYSOUT=*                                                 00110000
//SYSEXEC  DD  DISP=SHR,DSN=SPRO.PDS.ISPF.CLIST                         00120000
//         DD  DSN=SYS019.LP2.REXX,DISP=SHR                             00121000
//SYSTSIN  DD  DUMMY                                                    00130000
//*-------------------------------------------------------------------OC00140000

./ ADD NAME=DB2STSR
//DB2STSR   JOB ACCT£,                                                  00001000
//             DB2,                                                     00002000
//             MSGCLASS=T,                                              00003000
//             NOTIFY=&SYSUID,                                          00003100
//             MSGLEVEL=(1,1)                                           00004000
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00004500
//      SYS019.LP2.DB2,                                                 00004600
//      SYS1.PROCLIB.&SYSNAME,                                          00004700
//      SYS1.SACBCNTL)                                                  00004800
//*COMMAND 'D U,DASD,ONLINE,,9999'                                      00004900
//DELETE   EXEC DB2STSP                                                 00005001
//SYSPRINT DD SYSOUT=*                                                  00005100
//SYSTSPRT DD SYSOUT=*                                                  00005200
//*DD      DD DSN=SYS019.ISPF.ISPPROF,DISP=OLD                          00005300
//                                                                      00005400
//ISFOUT  DD DSN=&SYSUID.&SYSNAME..ISFOUT,                              00005500
// DISP=(OLD,DELETE,DELETE),                                            00005600
// SPACE=(TRK,(2,2)),                                                   00005700
// DCB=(LRECL=512,RECFM=FB)                                             00006000

./ ADD NAME=DDF
//SYSILEA  JOB 1000,'DSNJU003   ',MSGLEVEL=(1,1),                       00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE TYPRUN=SCAN                 00002000
//*------------------------------------------------------------*        00002100
//*  CE JCL PERMET DE FAIRE DES RECOVER INDEX SUR LES TABLES            00002200
//*  RESTAUREES                                                         00002300
//*------------------------------------------------------------*        00002400
//DSJU003 EXEC PGM=DSNJU003                                             00002500
//STEPLIB  DD DSN=SYS2.DB2230.DSNLOAD,DISP=SHR                          00002600
//SYSUT1   DD DSN=DB2S.BSDS01,DISP=SHR                                  00002700
//SYSUT2   DD DSN=DB2S.BSDS02,DISP=SHR                                  00002800
//SYSPRINT DD SYSOUT=*                                                  00002900
//SYSIN DD *                                                            00003000
DDF LOCATION=RDB2S,LUNAME=ADB2S                                         00003100
//                                                                      00003200

./ ADD NAME=DEFGDG
//DEFGDG    JOB ACCT£,                                                  00001000
//             MVS,                                                     00002000
//             NOTIFY=&SYSUID,                                          00003000
//             MSGCLASS=T,                                              00003100
//             MSGLEVEL=(1,1)                                           00004000
//STEP1    EXEC PGM=IDCAMS                                              00009100
//SYSPRINT DD SYSOUT=*                                                  00009300
//SYSIN    DD *                                                         00009800
  DEFINE    GENERATIONDATAGROUP                                    +    00009900
            (  NAME(SYS5.LP2.SMF.DB2.JOUR)                         +    00010001
               LIMIT(5)  )                                         +    00010100
            CATALOG(CATALOG.SSYST)                                      00010200
//                                                                      00010301
  DEFINE    GENERATIONDATAGROUP                                    +    00010401
            (  NAME(DB2S.BATCH.STAT.CPU)                           +    00010501
               LIMIT(5)  )                                         +    00010601
            CATALOG(CATALOG.SSYST)                                      00010701
  DEFINE    GENERATIONDATAGROUP                                    +    00010801
            (  NAME(DB2S.BATCH.STAT.GETP)                          +    00010901
               LIMIT(5)  )                                         +    00011001
            CATALOG(CATALOG.SSYST)                                      00011101
  DEFINE    GENERATIONDATAGROUP                                    +    00011201
            (  NAME(DB2S.BATCH.STAT)                               +    00011301
               LIMIT(5)  )                                         +    00011401
            CATALOG(CATALOG.SSYST)                                      00011501
  DEFINE    GENERATIONDATAGROUP                                    +    00011601
            (  NAME(DB2S.SBUFFER.STAT)                             +    00011701
               LIMIT(5)  )                                         +    00011801
            CATALOG(CATALOG.SSYST)                                      00011901
  DEFINE    GENERATIONDATAGROUP                                    +    00012001
            (  NAME(DB2S.SYSTEME.STAT)                             +    00012101
               LIMIT(5)  )                                         +    00012201
            CATALOG(CATALOG.SSYST)                                      00012301
  DEFINE    GENERATIONDATAGROUP                                    +    00012401
            (  NAME(DB2S.SYSTEME.STATSUM)                          +    00012501
               LIMIT(5)  )                                         +    00012601
            CATALOG(CATALOG.SSYST)                                      00012701
  DEFINE    GENERATIONDATAGROUP                                    +    00012801
            (  NAME(DB2S.TRAN.STAT.CPU)                            +    00012901
               LIMIT(5)  )                                         +    00013001
            CATALOG(CATALOG.SSYST)                                      00013101
  DEFINE    GENERATIONDATAGROUP                                    +    00013201
            (  NAME(DB2S.TRAN.STAT.GETP)                           +    00013301
               LIMIT(5)  )                                         +    00013401
            CATALOG(CATALOG.SSYST)                                      00013501
//                                                                      00014000
000200//BTACTSMB DD  DSN=                   (+1),DISP=(,CATLG),         00016000
000300//BTACTSMG DD  DSN=                    (+1),DISP=(,CATLG),        00020000
000100//BTACTSMS DD  DSN=               (+1),DISP=(,CATLG),             00030000
000800//             DSN=                 (+1),                         00040000
000600//BTSTATR1 DD  DSN=                 (+1),DISP=(,CATLG),           00050000
000700//             DSN=                    (+1),                      00060000
000400//BTACTSMC DD  DSN=                  (+1),DISP=(,CATLG),          00070000
000500//BTACTSGC DD  DSN=                   (+1),DISP=(,CATLG),         00080000

./ ADD NAME=DEFGDG2S
//DEFGDG2S  JOB ACCT£,
//             DB2,
//             NOTIFY=&SYSUID,
//             MSGLEVEL=(1,1)
//*DELETE  EXEC PGM=IEFBR14
//*SYSPRINT DD DSN=&SYSUID..&SYSNAME..LISTCAT,
//* DISP=(MOD,DELETE,DELETE),
//* SPACE=(TRK,(2,2)),
//* DCB=(LRECL=512,RECFM=FB)
//STEP1    EXEC PGM=IDCAMS
//*LISTCAT DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//*SYSPRINT DD DSN=&SYSUID..&SYSNAME..LISTCAT,
//* DISP=(NEW,CATLG,DELETE),
//* SPACE=(CYL,(2,2)),
//* DCB=(LRECL=512,RECFM=FB)
//SYSIN    DD *
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSUTILX')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.DBD01')                      +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SCT02')                      +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SPT01')                      +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSDBDXA')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSSPUXA')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSSPUXB')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSFAU')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSCOL')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSTSP')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSTPT')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSTAB')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSIXS')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSIXT')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSIXR')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSIPT')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSREL')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSFOR')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSSYN')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSFLD')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSTAU')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSKEY')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSDBA')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSDBU')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSGPAUT')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSSTG')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSVOL')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPLN')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPLA')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSDBR')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPLD')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSSTM')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPKL')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPLY')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPKG')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPKS')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPKX')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPVR')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPKY')                   +
               LIMIT(5)  )                                    +
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPKD')                   +
               LIMIT(5)  )                                    +
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPKA')                   +
               LIMIT(5)  )                                    +
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSUSER')                    +
               LIMIT(5)  )                                    +
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSCKS')                   +
               LIMIT(5)  )                                    +
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSCHX')                   +
               LIMIT(5)  )                                    +
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSCKD')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSSRG')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSVEW')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSVWD')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSVWT')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSVTR')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSSTATS')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSDDF')                     +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSAUX')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSCON')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSDAT')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSDEP')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSENV')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSKYC')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPRM')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSRAU')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSROU')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSPLUXA')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSPLUXB')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSSCM')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSTBC')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSTRG')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSTRT')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSSEQ')                     +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSSEQ2')                    +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSHIST')                    +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSGRTNS')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSJAUXA')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSJAUXB')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSJAVA')                    +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSALTER')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSOBX')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSASC')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSEBCDC')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSUNI')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSXML')                     +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSXTM')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSXTS')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTARG')                    +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSROLES')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSCONTX')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSTSS')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSISS')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSADT')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSCTL')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSCTR')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSCTD')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPEN')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPDT')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPDO')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSTPF')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPTX')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSATW')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPRH')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPHX')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSATS')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSATX')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSQRA')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSPKC')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSQRY')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSQRP')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSQRO')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSVAR')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSVAT')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSVAD')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSVAU')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSQRE')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSQRS')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSIXC')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSSFB')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSDQY')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSDQT')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSDQS')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSDQE')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSDQH')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSDQO')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSDQD')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSICO')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSSES')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSSNL')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSSNX')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSSXL')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSSXL')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSLVH')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSLGRNX')                   +
               LIMIT(5)  )
  DEFINE    GENERATIONDATAGROUP                               +
          (  NAME('BB2S.IMAGCOPY.SYSTSCPY')                   +
               LIMIT(5)  )
//
  DEFINE    GENERATIONDATAGROUP                               +
            (  NAME('ENTRYNAME')                              +
               LIMIT(5)  )                                    +
            CATALOG('CATNAME/PASSWORD')                       +

./ ADD NAME=DELETE
//DELTAB4  EXEC PGM=IKJEFT01,DYNAMNBR=20                                00010000
//SYSTERM  DD SYSOUT=*                                                  00020000
//SYSTSPRT DD SYSOUT=*                                                  00030000
//SYSUDUMP DD SYSOUT=*                                                  00040000
//SYSPRINT DD SYSOUT=*                                                  00050000
//SYSTSIN  DD *,SYMBOLS=JCLONLY                                         00060000
DSN SYSTEM(DB2&LENV.)                                                   00070000
RUN PROGRAM(DSNTEP2) LIB('DB2&LENV..RUNLIB.LOAD')                       00080000
END                                                                     00090000
//SYSIN    DD  *,SYMBOLS=JCLONLY                                        00100000
DELETE FROM &SCH3..PLAN_TABLE                                           00110000
WHERE PROGNAME IN (''                                                   00120000
//         DD DISP=SHR,DSN=&&TEMP0                                      00130000
//         DD *                                                         00140000
)                                                                       00150000

./ ADD NAME=DIAGNOSE
//SYSILEA  JOB 1000,'DIAG DB2T  ',MSGLEVEL=(1,1),                       00010000
//         REGION=8M,                                                   00020000
//         CLASS=Z,MSGCLASS=T,NOTIFY=SYSILE,COND=(5,LT)                 00030000
//*------------------------------------------------------------*        00040000
//*  CE JCL PERMET DE FAIRE UN DIAGNOSE                                 00050000
//*------------------------------------------------------------*        00060000
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2T,DIAGNOSE'                        00070000
//UTPRINT  DD SYSOUT=*                                                  00080000
//SYSPRINT DD SYSOUT=*                                                  00090000
//SYSUDUMP DD SYSOUT=*                                                  00100000
//SYSUT1   DD UNIT=3390,SPACE=(CYL,(8,3),RLSE)                          00110000
//SYSIN    DD  *                                                        00120000
 DIAGNOSE                                                               00130000
 DISPLAY MEPL                                                           00140000
/*                                                                      00150000
//                                                                      00160000

./ ADD NAME=DISPLAY
//SYSILEA  JOB 1000,'DISPLAY DB ',                                      00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE                             00002000
//DB2BIND  EXEC PGM=IKJEFT01,DYNAMNBR=20                                00003000
//SYSTSPRT DD SYSOUT=*                                                  00004000
//SYSUDUMP DD DUMMY                                                     00005000
//SYSTSIN  DD *                                                         00007000
 DSN SYSTEM(DB2P)                                                       00008001
 -DISPLAY DATABASE(BPPG0001) SPACENAM(*) USE                            00009001
/*                                                                      00010000

./ ADD NAME=DSNDB01
//RUNSTAT   JOB ACCT£,                                                  00010000
//             DB2,                                                     00020000
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040000
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050000
//      SYS019.LP2.DB2,                                                 00060000
//      SYS1.PROCLIB.&SYSNAME,                                          00061000
//      SYS1.SACBCNTL)                                                  00070000
//STEP1 EXEC DSNUPROC,UID='SYS019',TIME=1440,
//*STEP1 EXEC DSNUPROC,UID=SYS019.RUNSTAT,TIME=1440,
// UTPROC='',
// SYSTEM=DB2S
//UTPRINT DD SYSOUT=*
//SYSIN DD *
RUNSTATS TABLESPACE DSNDB06.SYSTSFAU      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSCOL      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTSP      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTPT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTAB      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSIXS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSIXT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSIXR      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSIPT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSREL      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSFOR      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSYN      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSFLD      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTAU      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSKEY      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDBA      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDBU      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSGPAUT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSTG      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVOL      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPLN      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPLA      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDBR      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPLD      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSTM      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPKL      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPLY      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPKG      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPKS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPKX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPVR      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPKY      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPKD      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPKA      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSUSER       UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSCKS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSCHX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSCKD      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSRG      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVEW      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVWD      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVWT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVTR      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSSTATS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSDDF        UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSAUX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSCON      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDAT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDEP      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSENV      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSKYC      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPRM      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSRAU      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSROU      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSPLUXA      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSPLUXB      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSCM      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTBC      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTRG      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTRT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSSEQ        UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSSEQ2       UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSHIST       UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSGRTNS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSJAUXA      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSJAUXB      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSJAVA       UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSALTER      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSOBX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSASC      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSEBCDC      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSUNI      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSXML        UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSXTM      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSXTS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTARG       UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSROLES      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSCONTX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTSS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSISS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSADT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSCTL      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSCTR      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSCTD      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPEN      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPDT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPDO      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTPF      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPTX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSATW      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPRH      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPHX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSATS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSATX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSQRA      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPKC      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSQRY      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSQRP      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSQRO      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVAR      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVAT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVAD      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVAU      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSQRE      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSQRS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSIXC      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSFB      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDQY      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDQT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDQS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDQE      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDQH      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDQO      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDQD      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSICO      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSES      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSNL      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSNX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSXL      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSTA      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSLVH      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSISH      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTSH      UPDATE ALL
//
RUNSTATS TABLESPACE DSNDB01.DBD01         UPDATE ALL
RUNSTATS TABLESPACE DSNDB01.SCT02         UPDATE ALL
RUNSTATS TABLESPACE DSNDB01.SPT01         UPDATE ALL
RUNSTATS TABLESPACE DSNDB01.SYSDBDXA      UPDATE ALL
RUNSTATS TABLESPACE DSNDB01.SYSSPUXA      UPDATE ALL
RUNSTATS TABLESPACE DSNDB01.SYSSPUXB      UPDATE ALL

./ ADD NAME=DSNDB07
//SYSILEA JOB  1,LAPEYRE,MSGLEVEL=(1,1),CLASS=O,                        00028700
//             MSGCLASS=T,NOTIFY=SYSILE,TIME=1439,COND=(4,LT)           00028800
//* *************************************************************** */  00010000
//*    CREATE DATABASE DSNDB07                                      */  00013000
//* *************************************************************** */  00180000
//JOBLIB  DD  DISP=SHR,                                                 00190000
//            DSN=SYS2.DB2230.DSNLOAD                                   00200000
//* *************************************************************** */  00010000
//*    STOP + DROP DATABASE DSNDB07                                 */  00013000
//* *************************************************************** */  00180000
//DSNTIAS EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00440000
//SYSTSPRT DD  SYSOUT=*                                                 00450000
//SYSPRINT DD  SYSOUT=*                                                 00460000
//SYSUDUMP DD  SYSOUT=*                                                 00470000
//SYSTSIN  DD  *                                                        00480000
  DSN SYSTEM(DB2V)                                                      00490000
  -STOP DATABASE(DSNDB07)                                               00500000
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIAD) PARM('RC0')   -                   00530000
       LIB('DB2V.RUNLIB.LOAD')                                          00540000
  END                                                                   00550000
//SYSIN    DD  *                                                        00565000
   DROP DATABASE DSNDB07 ;                                              00570000
//*                                                                     00580000
//* *************************************************************** */  00010000
//*    CREATE DATABASE DSNDB07                                      */  00013000
//* *************************************************************** */  00180000
//DSNTICR EXEC PGM=IKJEFT01,DYNAMNBR=20                                 00590000
//SYSTSPRT DD  SYSOUT=*                                                 00610000
//SYSPRINT DD  SYSOUT=*                                                 00620000
//SYSUDUMP DD  SYSOUT=*                                                 00630000
//SYSTSIN  DD  *                                                        00640000
  DSN SYSTEM(DB2V)                                                      00650000
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIAD) PARM('RC0')   -                   00660000
       LIB('DB2V.RUNLIB.LOAD')                                          00670000
  END                                                                   00680000
//SYSIN    DD  *                                                        00690000
   CREATE DATABASE DSNDB07 ;                                            00700000
//*                                                                     00710000
//* ***********************************************                     00730000
//*  DEFINE TEMPORARY TABLESPACES                 *                     00740000
//*     THESE TABLE SPACES ARE USED FOR TEMPORARY *                     00750000
//*     OR INTERMEDIATE TABLES BY DB2, IN SORTING *                     00760000
//*     FOR ONE EXAMPLE.                          *                     00770000
//* ***********************************************                     00780000
//IDCAMS  EXEC PGM=IDCAMS                                               00590000
//SYSTSPRT DD  SYSOUT=*                                                 00610000
//SYSPRINT DD  SYSOUT=*                                                 00620000
//SYSUDUMP DD  SYSOUT=*                                                 00630000
//SYSIN DD *                                                            01050000
    DEFINE CLUSTER -                                                    01050001
       ( NAME(DB2V.DSNDBC.DSNDB07.DSN4K01.I0001.A001) -                 01050002
            LINEAR     -                                                01050003
            REUSE -                                                     01050004
            VOLUMES(MVS102) -                                           01050005
            CYLINDER(64 5) -                                            01050006
            SHAREOPTIONS(3 3) ) -                                       01050007
       DATA -                                                           01050008
       ( NAME(DB2V.DSNDBD.DSNDB07.DSN4K01.I0001.A001) -                 01050009
                          )                                             01050010
                                                                        01050012
    DEFINE CLUSTER -                                                    01050013
       ( NAME(DB2V.DSNDBC.DSNDB07.DSN32K01.I0001.A001) -                01050014
            LINEAR     -                                                01050015
            REUSE -                                                     01050016
            VOLUMES(SYST01) -                                           01050017
            TRACKS(5 2) -                                               01050018
            SHAREOPTIONS(3 3) ) -                                       01050019
       DATA -                                                           01050020
       ( NAME(DB2V.DSNDBD.DSNDB07.DSN32K01.I0001.A001) -                01050021
                          )                                             01050022
//* ***********************************************                     00730000
//*  CREATE DES TABLESPACES DE DSNDB07            *                     00740000
//* ***********************************************                     00780000
//DSNTIST EXEC PGM=IKJEFT01,DYNAMNBR=20                                 01250000
//SYSTSPRT DD  SYSOUT=*                                                 01270000
//SYSPRINT DD  SYSOUT=*                                                 01280000
//SYSUDUMP DD  SYSOUT=*                                                 01290000
//SYSTSIN  DD  *                                                        01300000
  DSN SYSTEM(DB2V)                                                      01310000
  -STOP DATABASE(DSNDB07)                                               01320000
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIAD) -                                 01330000
       LIB('DB2V.RUNLIB.LOAD')                                          01340000
  -START DATABASE(DSNDB07)                                              01350000
  END                                                                   01360000
//SYSIN    DD  *                                                        01490000
 CREATE TABLESPACE DSN4K01 IN DSNDB07                                   01490001
        BUFFERPOOL BP0                                                  01490002
        CLOSE NO                                                        01490003
        USING VCAT DB2V;                                                01490004
 CREATE TABLESPACE DSN32K01 IN DSNDB07                                  01490005
        BUFFERPOOL BP32K                                                01490006
        CLOSE NO                                                        01490007
        USING VCAT DB2V;                                                01490008
//
/*
//*                                                                     01491000

./ ADD NAME=DSNJU003
//SYSDB2   JOB 1000,'DSNJU003',MSGLEVEL=(1,1),                          00001015
//         CLASS=O,MSGCLASS=T,NOTIFY=&SYSUID                            00002015
//*------------------------------------------------------------*        00002123
//*  CE JCL PERMET DE METTRE A JOUR LES INFOS DU BSDS. UNE              00002223
//*  SAUVEGARDE DFDSS DES BSDS DOIT ETRE FAITE IMPERATIVEMENT           00002323
//*  AVANT DE LANCER CE JCL. FAIRE LA SAUVEGARDE UNE FOIS DB2           00002423
//*  ARRETE (JOB SAVEBSDS)                                              00002523
//*  CE JCL SE LANCE DB2 ARRETE                                         00002623
//*     REMPLACER DB2X PAR LE NOM DU DB2 (DB2O, DB2P ...)               00002723
//*------------------------------------------------------------*        00002823
//DSJU003 EXEC PGM=DSNJU003                                             00002914
//SYSUT1   DD DSN=DB2S.BSDS01,DISP=SHR                                  00003024
//SYSUT2   DD DSN=DB2S.BSDS02,DISP=SHR                                  00003124
//SYSPRINT DD SYSOUT=*                                                  00003200
//SYSIN DD *                                                            00003400
V NEWLOG                                                                00003528
V DELETE                                                                00003628
V CRESTART                                                              00003728
V NEWCAT                                                                00003828
V DDF                                                                   00003928
V CHECKPT                                                               00004028
V HIGHRBA                                                               00004128
V DELMBR                                                                00004228
V RSTMBR                                                                00004328
DDF PORT=5000,RESPORT=5001                                              00004427
//                                                                      00004513
DDF PORT=4445,RESPORT=4446                                              00004627
DDF LOCATION=RDB2X,LUNAME=ADB2X                                         00004724
CRESTART CREATE,ENDRBA=011BF769D000,STARTRBA=011BF769D000               00004824
//                                                                      00004915
NEWLOG DSNAME=DB2X.LOGCOPY1.DS01,                                       00005023
COPY1,STARTRBA=0008D624C000,ENDRBA=0008D713FFFF                         00005110
NEWLOG DSNAME=DB2X.LOGCOPY2.DS01,                                       00005223
COPY2,STARTRBA=0008D624C000,ENDRBA=0008D713FFFF                         00005310
//                                                                      00005409
NEWCAT VSAMCAT=DB2X                                                     00005523
DELETE DSNAME=DSN220IA.LOGCOPY1.DS01                                    00005610
DELETE DSNAME=DSN220IA.LOGCOPY2.DS01                                    00005710
/*                                                                      00005801
//                                                                      00005901
NEWLOG DSNAME=DB2X.LOGCOPY1.DS03,STARTIME=YYYYDDDHHMMSST,               00007423
ENDTIME=YYYYDDDHHMMSST,COPY1,STARTRBA=XXXXXXXX,ENDRBA=XXXXXXXX          00007502

./ ADD NAME=DSNJU004
//DSNJU004  JOB ACCT£,                                                  00001000
//             DB2,                                                     00002000
//             NOTIFY=&SYSUID,                                          00003000
//             MSGCLASS=T                                               00004000
//*PRINT LOG MAP                                                        00004100
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00005000
//      SYS019.LP2.DB2,                                                 00006000
//      SYS1.PROCLIB.&SYSNAME,                                          00007000
//      SYS1.SACBCNTL)                                                  00008000
//PLM EXEC PGM=DSNJU004                                                 00010000
//GROUP DD DSN=SYS5.DB2S.BSDS01,DISP=SHR                                00020000
//SYSPRINT DD SYSOUT=*                                                  00030000
//SYSIN DD *                                                            00040000
MEMBER *                                                                00050000

./ ADD NAME=DSNTEJCC
//DSNTEJCC  JOB ACCT£,                                                  00000100
//             DB2,                                                     00000200
//             NOTIFY=&SYSUID,                                          00000300
//             MSGCLASS=T                                               00000400
//*IDIRFRHQ.IDIRFR.LP2.D230426.T152336.DSNTEJCC RESOURCE NOT PROTECTED  00000500
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00000700
//      SYS019.LP2.DB2,                                                 00000800
//      SYS1.PROCLIB.&SYSNAME,                                          00000900
//      SYS1.SACBCNTL)                                                  00001000
//*                                                                     00001100
//*  Job name = DSNTEJCC                                                00001200
//*                                                                     00001300
//*    LICENSED MATERIALS - PROPERTY OF IBM                             00001400
//*    5615-DB2                                                         00001500
//*    (C) COPYRIGHT 2006, 2013 IBM CORP.  ALL RIGHTS RESERVED.         00001600
//*                                                                     00001700
//*  Status = VERSION 11                                                00001800
//*                                                                     00001900
//*  Function =                                                         00002000
//*    This JCL shows how to execute DSN1SMFP, a tool for processing    00002100
//*    DB2 trace data in SMF format into reports that are useful        00002200
//*    for evaluating the DB2 environment for Common Criteria.          00002300
//*                                                                     00002400
//*  Pseudocode =                                                       00002500
//*    TEJCCS01 Step     Delete existing DSN1SMFP report data sets      00002600
//*    TEJCCS01 Step     Execute DSN1SMFP                               00002700
//*                                                                     00002800
//*  Dependencies =                                                     00002900
//*   - The job step that executes DSN1SMFP needs to specify both       00003000
//*     the SDSNEXIT and SDSNLOAD libraries unless these are available  00003100
//*     from the link list.                                             00003200
//*   - The SDSNEXIT library needs to contain the DSNHDECP module       00003300
//*     used by the DB2 subsystem that generated the SMF records to be  00003400
//*     processed.                                                      00003500
//*                                                                     00003600
//*  Notes =                                                            00003700
//*  - The following manual tailoring is required:                      00003800
//*    1. Add a valid job card                                          00003900
//*    2. Locate and change all occurrences of the following strings    00004000
//*       as indicated:                                                 00004100
//*       A. 'DSN§§0.SDSN' to the 'prefix.SDSN' of DB2's target         00004200
//*          libraries.                                                 00004300
//*       B. 'DSN§§0.DSNTEJCC' to the 'prefix.DSNTEJCC' for data sets   00004400
//*          created by this job                                        00004500
//*       C. 'DSN§§0.§DSN§.SMFDATA' to the name of the input data set   00004600
//*          containing the SMF records to be processed                 00004700
//*    3. SPACE allocations for output data sets may need to be         00004800
//*       adjusted depending on the input data set from SMF.            00004900
//*                                                                     00005000
//*  Change Activity =                                                  00005100
//*      PK90013 - Update for DB2 V9                              àV9*  00005200
//*      15674_dsn1smfp Update for DB2 V11                        àVB*  00005300
//********************************************************************* 00005400
//*                                                                     00005500
//*   Step  1: Delete existing DSN1SMFP report data sets                00005600
//*                                                                     00005700
//TEJCCS01 EXEC PGM=IEFBR14                                             00005800
//IFCID003 DD  DSN=&SYSUID..DSNTEJCC.IFCID003,                          00005900
//             DISP=(MOD,DELETE),                                       00006000
//             UNIT=SYSDA,SPACE=(0,0)                                   00006100
//IFCID004 DD  DSN=&SYSUID..DSNTEJCC.IFCID004,                          00006200
//             DISP=(MOD,DELETE),                                       00006300
//             UNIT=SYSDA,SPACE=(0,0)                                   00006400
//IFCID005 DD  DSN=&SYSUID..DSNTEJCC.IFCID005,                          00006500
//             DISP=(MOD,DELETE),                                       00006600
//             UNIT=SYSDA,SPACE=(0,0)                                   00006700
//IFCID023 DD  DSN=&SYSUID..DSNTEJCC.IFCID023,                          00006800
//             DISP=(MOD,DELETE),                                       00006900
//             UNIT=SYSDA,SPACE=(0,0)                                   00007000
//IFCID024 DD  DSN=&SYSUID..DSNTEJCC.IFCID024,                          00007100
//             DISP=(MOD,DELETE),                                       00007200
//             UNIT=SYSDA,SPACE=(0,0)                                   00007300
//IFCID025 DD  DSN=&SYSUID..DSNTEJCC.IFCID025,                          00007400
//             DISP=(MOD,DELETE),                                       00007500
//             UNIT=SYSDA,SPACE=(0,0)                                   00007600
//IFCID083 DD  DSN=&SYSUID..DSNTEJCC.IFCID083,                          00007700
//             DISP=(MOD,DELETE),                                       00007800
//             UNIT=SYSDA,SPACE=(0,0)                                   00007900
//IFCID106 DD  DSN=&SYSUID..DSNTEJCC.IFCID106,                          00008000
//             DISP=(MOD,DELETE),                                       00008100
//             UNIT=SYSDA,SPACE=(0,0)                                   00008200
//IFCID140 DD  DSN=&SYSUID..DSNTEJCC.IFCID140,                          00008300
//             DISP=(MOD,DELETE),                                       00008400
//             UNIT=SYSDA,SPACE=(0,0)                                   00008500
//IFCID141 DD  DSN=&SYSUID..DSNTEJCC.IFCID141,                          00008600
//             DISP=(MOD,DELETE),                                       00008700
//             UNIT=SYSDA,SPACE=(0,0)                                   00008800
//IFCID142 DD  DSN=&SYSUID..DSNTEJCC.IFCID142,                          00008900
//             DISP=(MOD,DELETE),                                       00009000
//             UNIT=SYSDA,SPACE=(0,0)                                   00009100
//IFCID143 DD  DSN=&SYSUID..DSNTEJCC.IFCID143,                          00009200
//             DISP=(MOD,DELETE),                                       00009300
//             UNIT=SYSDA,SPACE=(0,0)                                   00009400
//IFCID144 DD  DSN=&SYSUID..DSNTEJCC.IFCID144,                          00009500
//             DISP=(MOD,DELETE),                                       00009600
//             UNIT=SYSDA,SPACE=(0,0)                                   00009700
//IFCID145 DD  DSN=&SYSUID..DSNTEJCC.IFCID145,                          00009800
//             DISP=(MOD,DELETE),                                       00009900
//             UNIT=SYSDA,SPACE=(0,0)                                   00010000
//IFCID269 DD  DSN=&SYSUID..DSNTEJCC.IFCID269,                          00010100
//             DISP=(MOD,DELETE),                                       00010200
//             UNIT=SYSDA,SPACE=(0,0)                                   00010300
//IFCID270 DD  DSN=&SYSUID..DSNTEJCC.IFCID270,                          00010400
//             DISP=(MOD,DELETE),                                       00010500
//             UNIT=SYSDA,SPACE=(0,0)                                   00010600
//IFCID350 DD  DSN=&SYSUID..DSNTEJCC.IFCID350,                          00010700
//             DISP=(MOD,DELETE),                                       00010800
//             UNIT=SYSDA,SPACE=(0,0)                                   00010900
//IFCID361 DD  DSN=&SYSUID..DSNTEJCC.IFCID361,                          00011000
//             DISP=(MOD,DELETE),                                       00011100
//             UNIT=SYSDA,SPACE=(0,0)                                   00011200
//IFCID362 DD  DSN=&SYSUID..DSNTEJCC.IFCID362,                          00011300
//             DISP=(MOD,DELETE),                                       00011400
//             UNIT=SYSDA,SPACE=(0,0)                                   00011500
//*                                                                     00011600
//*   Step  2: Execute DSN1SMFP                                         00011700
//*                                                                     00011800
//TEJCCS02 EXEC PGM=DSN1SMFP,COND=(4,LT),REGION=64M                     00011900
//STEPLIB  DD  DISP=SHR,DSN=DB2S.SDSNEXIT                               00012000
//         DD  DISP=SHR,DSN=SYS2.DB2.SDSNLOAD                           00012100
//SMFINDD  DD  DISP=SHR,DSN=SSYS.DUMPSMF                                00012200
//SYSPRINT DD  SYSOUT=*                                                 00012300
//IFCID003 DD  DSN=&SYSUID..DSNTEJCC.IFCID003,                          00012400
//             DISP=(,CATLG),                                           00012500
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00012600
//             DCB=(RECFM=FB,LRECL=132)                                 00012700
//IFCID004 DD  DSN=&SYSUID..DSNTEJCC.IFCID004,                          00012800
//             DISP=(,CATLG),                                           00012900
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00013000
//             DCB=(RECFM=FB,LRECL=132)                                 00013100
//IFCID005 DD  DSN=&SYSUID..DSNTEJCC.IFCID005,                          00013200
//             DISP=(,CATLG),                                           00013300
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00013400
//             DCB=(RECFM=FB,LRECL=132)                                 00013500
//IFCID023 DD  DSN=&SYSUID..DSNTEJCC.IFCID023,                          00013600
//             DISP=(,CATLG),                                           00013700
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00013800
//             DCB=(RECFM=FB,LRECL=132)                                 00013900
//IFCID024 DD  DSN=&SYSUID..DSNTEJCC.IFCID024,                          00014000
//             DISP=(,CATLG),                                           00014100
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00014200
//             DCB=(RECFM=FB,LRECL=132)                                 00014300
//IFCID025 DD  DSN=&SYSUID..DSNTEJCC.IFCID025,                          00014400
//             DISP=(,CATLG),                                           00014500
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00014600
//             DCB=(RECFM=FB,LRECL=132)                                 00014700
//IFCID083 DD  DSN=&SYSUID..DSNTEJCC.IFCID083,                          00014800
//             DISP=(,CATLG),                                           00014900
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00015000
//             DCB=(RECFM=FB,LRECL=132)                                 00015100
//IFCID106 DD  DSN=&SYSUID..DSNTEJCC.IFCID106,                          00015200
//             DISP=(,CATLG),                                           00015300
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00015400
//             DCB=(RECFM=FB,LRECL=132)                                 00015500
//IFCID140 DD  DSN=&SYSUID..DSNTEJCC.IFCID140,                          00015600
//             DISP=(,CATLG),                                           00015700
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00015800
//             DCB=(RECFM=FB,LRECL=132)                                 00015900
//IFCID141 DD  DSN=&SYSUID..DSNTEJCC.IFCID141,                          00016000
//             DISP=(,CATLG),                                           00016100
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00016200
//             DCB=(RECFM=FB,LRECL=132)                                 00016300
//IFCID142 DD  DSN=&SYSUID..DSNTEJCC.IFCID142,                          00016400
//             DISP=(,CATLG),                                           00016500
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00016600
//             DCB=(RECFM=FB,LRECL=132)                                 00016700
//IFCID143 DD  DSN=&SYSUID..DSNTEJCC.IFCID143,                          00016800
//             DISP=(,CATLG),                                           00016900
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00017000
//             DCB=(RECFM=FB,LRECL=132)                                 00017100
//IFCID144 DD  DSN=&SYSUID..DSNTEJCC.IFCID144,                          00017200
//             DISP=(,CATLG),                                           00017300
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00017400
//             DCB=(RECFM=FB,LRECL=132)                                 00017500
//IFCID145 DD  DSN=&SYSUID..DSNTEJCC.IFCID145,                          00017600
//             DISP=(,CATLG),                                           00017700
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00017800
//             DCB=(RECFM=FB,LRECL=132)                                 00017900
//IFCID269 DD  DSN=&SYSUID..DSNTEJCC.IFCID269,                          00018000
//             DISP=(,CATLG),                                           00018100
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00018200
//             DCB=(RECFM=FB,LRECL=132)                                 00018300
//IFCID270 DD  DSN=&SYSUID..DSNTEJCC.IFCID270,                          00018400
//             DISP=(,CATLG),                                           00018500
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00018600
//             DCB=(RECFM=FB,LRECL=132)                                 00018700
//IFCID350 DD  DSN=&SYSUID..DSNTEJCC.IFCID350,                          00018800
//             DISP=(,CATLG),                                           00018900
// VOL=SER=SYST20,                                                      00019000
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00019100
//             DCB=(RECFM=FB,LRECL=132)                                 00019200
//IFCID361 DD  DSN=&SYSUID..DSNTEJCC.IFCID361,                          00019300
//             DISP=(,CATLG),                                           00019400
// VOL=SER=SYST21,                                                      00019500
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00019600
//             DCB=(RECFM=FB,LRECL=132)                                 00019700
//IFCID362 DD  DSN=&SYSUID..DSNTEJCC.IFCID362,                          00019800
//             DISP=(,CATLG),                                           00019900
// VOL=SER=SYST22,                                                      00020000
//             UNIT=SYSDA,SPACE=(CYL,(20,2),RLSE),                      00020100
//             DCB=(RECFM=FB,LRECL=132)                                 00021000
//*                                                                     00030000

./ ADD NAME=DSNTEJCS
//DSNTEJCS  JOB ACCT£,                                                  00001000
//             DB2,                                                     00002000
//             NOTIFY=&SYSUID,                                          00003000
//             MSGCLASS=T                                               00004000
//*THE COMBINATION OF PLAN DSN8CST, AUTH ID SYS019, AND SUBSYSTEM DB2S  00004100
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00005000
//      SYS019.LP2.DB2,                                                 00006000
//      SYS1.PROCLIB.&SYSNAME,                                          00007000
//      SYS1.SACBCNTL)                                                  00008000
//********************************************************************* 00010000
//*  NAME = DSNTEJCS                                                    00020000
//*                                                                     00030000
//*  DESCRIPTIVE NAME = DB2 SAMPLE APPLICATION - COMMON SAMPLE TABLES   00040000
//*                                                                     00050000
//*    Licensed Materials - Property of IBM                             00060000
//*    5635-DB2                                                         00070000
//*    (C) Copyright 2003, 2006 IBM CORP.                               00080000
//*    Status = Version 9                                               00090000
//*                                                                     00110000
//*  FUNCTION = USE THIS JCL TO CREATE AND POPULATE THE DB2 UDB COMMON  00120000
//*             SAMPLE TABLES WITHIN A USER-SPECIFIED SCHEMA.           00130000
//*                                                                     00140000
//*  NOTES = IF THE TABLES ALREADY EXIST WITHIN THE SCHEMA, THEY        00150000
//*          WILL BE DROPPED AND RECREATED                              00160000
//*                                                                     00170000
//*  DEPENDENCIES =                                                     00180000
//*  (1) YOUR PRIMARY AUTHORIZATION ID MUST BE AUTHORIZED TO USE THE    00190000
//*      SPECIFIED SCHEMA                                               00200000
//*  (2) THE SPECIFIED SCHEMA REQUIRES THE FOLLOWING AUTHORITIES:       00210000
//*      - CREATETAB, CREATETS ON DATABASE DSNDB04                      00220000
//*      - USE OF BUFFERPOOL BP0                                        00230000
//*      - USE OF STOGROUP SYSDEFLT                                     00240000
//*      - USE OF TABLESPACE DSNDB04.SYSDEFLT                           00250000
//*      - CREATEALIAS                                                  00260000
//*      - DROP ON DATABASE DSNDB04                                     00270000
//*  (3) PRIOR TO RUNNING THIS JOB, CUSTOMIZE IT FOR YOUR SYSTEM:       00280000
//*      (A) ADD A VALID JOB CARD                                       00290000
//*      (B) LOCATE AND CHANGE ALL OCCURRENCES OF THE FOLLOWING STRINGS 00300000
//*          AS INDICATED:                                              00310000
//*          - '§CEE§' TO THE PREFIX OF YOUR TARGET LIBRARY FOR         00320000
//*            IBM LANGUAGE ENVIRONMENT                                 00330000
//*          - 'DSN§§0' TO THE PREFIX OF YOUR TARGET LIBRARY FOR DB2    00340000
//*          - THE SUBSYSTEM NAME '§DSN§' TO THE NAME OF YOUR DB2       00350000
//*          - §SCHEMA§ TO THE SCHEMA WITHIN WHICH YOU WISH TO CREATE   00360000
//*            A COPY OF THE DB2 COMMON SAMPLE TABLES                   00370000
//*                                                                     00380000
//* CHANGE ACTIVITY =                                                   00390000
//********************************************************************* 00400000
//*                                                                     00410000
//JOBLIB  DD  DSN=CEE.SCEERUN,DISP=SHR                                  00420000
//        DD  DSN=SYS2.DB2.SDSNLOAD,DISP=SHR                            00430000
//*                                                                     00440000
//*        STEP 1 : CREATE AND POPULATE THE COMMON SAMPLE TABLES        00450000
//*                                                                     00460000
//PH0CSS01 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                    00470000
//SYSTSPRT  DD  SYSOUT=*                                                00480000
//SYSPRINT  DD  SYSOUT=*                                                00490000
//SYSUDUMP  DD  SYSOUT=*                                                00500000
//SYSTSIN   DD  *                                                       00510000
 DSN SYSTEM(DB2S)                                                       00520000
 RUN  PROGRAM(DSN8CST) PLAN(DSN8CST) PARMS('/§SCHEMA§')                 00530000
 END                                                                    00540000
//*                                                                     00550000

./ ADD NAME=DSNTEJMQ
//*********************************************************************
//*  NAME = DSNTEJMQ
//*
//*  DESCRIPTIVE NAME = VERIFY DB2 MQSERIES FUNCTIONS
//*
//*    Licensed Materials - Property of IBM
//*    5635-DB2
//*    (C) COPYRIGHT 1982, 2006 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 11
//*  FUNCTION = THIS JCL VERIFY THE DB2 MQSERIES FUNCTIONS
//*
//*  Pseudocode =
//*    DSNTECU  STEP     CREATE THE LOCAL QUEUE
//*    DSNTEJS  STEP     TEST THE DB2 MQSERIES FUNCTIONS
//*
//*  Notes =
//*    Prior to running this job, customize it for your system:
//*    (1) Add a valid job card
//*    (2) Locate and change all occurrences of the following strings
//*        as indicated:
//*        (A) '§DSN§' to the subsystem name of your DB2
//*        (B) 'DSNTEP§§' to the plan name for DSNTEP2 on your DB2
//*        (C) 'DSN§§0' to the prefix of the target library for DB2 V9
//*        (D) 'THLQUAL' to the high level qualifier of the MQSeries
//*             target library data sets.
//*        (E) '§SCHEMA§' to DB2MQ for MQI based new implementation
//*            of DB2 MQ user-defined functions. Change value of
//*            'SYNCPOINT' column in SYSIBM.MQPOLICY_TABLE to control
//*            one-phase/two-phase commit environment.
//*
//*        (F) 'QUEUEMANAGER' to the name of the queue manager
//*
//* CHANGE ACTIVITY =
//*********************************************************************
//*
//JOBLIB  DD  DSN=DSN§§0.SDSNEXIT,DISP=SHR
//        DD  DSN=DSN§§0.SDSNLOAD,DISP=SHR
//        DD  DSN=DSN§§0.RUNLIB.LOAD,DISP=SHR
//*
//*        STEP  1: CREATE THE LOCAL QUEUE 'DB2MQ_DEFAULT_Q'
//*
//DSNTECU   EXEC PGM=CSQUTIL,PARM='QUEUEMANAGER'
//STEPLIB   DD   DSN=THLQUAL.SCSQANLE,DISP=SHR
//         DD   DSN=THLQUAL.SCSQAUTH,DISP=SHR
//SYSPRINT  DD   SYSOUT=*
//SYSIN     DD *
  COMMAND     DDNAME(CREATEQ)
/*
//CREATEQ DD *
     DEFINE QLOCAL('DB2MQ_DEFAULT_Q') REPLACE +
            DESCR('INPUT-OUTPUT')   +
            PUT(ENABLED)     +
            DEFPRTY(0)       +
            DEFPSIST(NO)     +
            GET(ENABLED)
/*
//*
//DSNTEJS  EXEC PGM=IKJEFT01,COND=(4,LT),DYNAMNBR=20
//SYSTSPRT DD   SYSOUT=*
//SYSPRINT DD   SYSOUT=*
//SYSTERM  DD   SYSOUT=*
//CEEDUMP  DD   SYSOUT=*
//SYSUDUMP DD   SYSOUT=*
//SYSOUT   DD   SYSOUT=*
//SYSTSIN  DD   *
 DSN SYSTEM(§DSN§)
 RUN   PROGRAM(DSNTEP2) PLAN(DSNTEP§§) -
       LIB('DSN§§0.RUNLIB.LOAD') PARMS('/ALIGN(MID)')
 END
//SYSIN DD  *
 SELECT §SCHEMA§.MQSEND('TESTING MSG 1') FROM SYSIBM.SYSDUMMY1;
 SELECT §SCHEMA§.MQSEND('DB2.DEFAULT.SERVICE',  'TESTING MSG 2')
                         FROM SYSIBM.SYSDUMMY1;
 SELECT §SCHEMA§.MQSEND('DB2.DEFAULT.SERVICE',  'DB2.DEFAULT.POLICY',
                        'TESTING MSG 3')
                         FROM SYSIBM.SYSDUMMY1;
 SELECT §SCHEMA§.MQSEND('DB2.DEFAULT.SERVICE', 'DB2.DEFAULT.POLICY',
                         'MSG WITH CORREL ID', 'CORRELID 1')
                         FROM SYSIBM.SYSDUMMY1;
 COMMIT;
 SELECT §SCHEMA§.MQREAD() FROM SYSIBM.SYSDUMMY1;
 SELECT §SCHEMA§.MQREAD('DB2.DEFAULT.SERVICE') FROM SYSIBM.SYSDUMMY1;
 SELECT §SCHEMA§.MQREAD('DB2.DEFAULT.SERVICE','DB2.DEFAULT.POLICY')
                        FROM SYSIBM.SYSDUMMY1;
 SELECT §SCHEMA§.MQRECEIVE() FROM SYSIBM.SYSDUMMY1;
 SELECT §SCHEMA§.MQRECEIVE('DB2.DEFAULT.SERVICE') FROM SYSIBM.SYSDUMMY1;
 SELECT §SCHEMA§.MQRECEIVE('DB2.DEFAULT.SERVICE','DB2.DEFAULT.POLICY')
                        FROM SYSIBM.SYSDUMMY1;
 SELECT §SCHEMA§.MQRECEIVE('DB2.DEFAULT.SERVICE','DB2.DEFAULT.POLICY',
                      'CORRELID 1')  FROM SYSIBM.SYSDUMMY1;
 COMMIT;
 SELECT §SCHEMA§.MQSEND('TESTING MSG 4') FROM SYSIBM.SYSDUMMY1;
 SELECT §SCHEMA§.MQSEND('DB2.DEFAULT.SERVICE', 'TESTING MSG 5')
                         FROM SYSIBM.SYSDUMMY1;
 SELECT §SCHEMA§.MQSEND('DB2.DEFAULT.SERVICE', 'DB2.DEFAULT.POLICY',
                        'TESTING MSG 6')
                         FROM SYSIBM.SYSDUMMY1;
 SELECT §SCHEMA§.MQSEND('DB2.DEFAULT.SERVICE', 'DB2.DEFAULT.POLICY',
                         'MSG WITH CORREL ID 2', 'CORRELID 2')
                         FROM SYSIBM.SYSDUMMY1;
 COMMIT;
 SELECT T.* FROM TABLE (§SCHEMA§.MQREADALL()) T;
 SELECT T.* FROM TABLE (§SCHEMA§.MQREADALL('DB2.DEFAULT.SERVICE')) T;
 SELECT T.* FROM TABLE (§SCHEMA§.MQREADALL('DB2.DEFAULT.SERVICE',
                        'DB2.DEFAULT.POLICY')) T;
 SELECT T.* FROM TABLE (§SCHEMA§.MQREADALL(2)) T;
 SELECT T.* FROM TABLE (§SCHEMA§.MQREADALL('DB2.DEFAULT.SERVICE', 2)) T;
 SELECT T.* FROM TABLE (§SCHEMA§.MQREADALL('DB2.DEFAULT.SERVICE',
                        'DB2.DEFAULT.POLICY', 2 )) T;
 SELECT T.* FROM TABLE (§SCHEMA§.MQRECEIVEALL( 'DB2.DEFAULT.SERVICE',
                       'DB2.DEFAULT.POLICY', 'CORRELID 2', 3)) T;
 SELECT T.* FROM TABLE (§SCHEMA§.MQRECEIVEALL(8)) T;
 SELECT T.* FROM TABLE (§SCHEMA§.MQRECEIVEALL()) T;
 SELECT §SCHEMA§.MQSEND(CLOB('DATA EXAMPLE-1' )) FROM SYSIBM.SYSDUMMY1;
 COMMIT;
 SELECT §SCHEMA§.MQREADCLOB() FROM SYSIBM.SYSDUMMY1;
 SELECT §SCHEMA§.MQREADCLOB('DB2.DEFAULT.SERVICE')
                         FROM SYSIBM.SYSDUMMY1;
 SELECT §SCHEMA§.MQREADCLOB('DB2.DEFAULT.SERVICE',
                       'DB2.DEFAULT.POLICY') FROM SYSIBM.SYSDUMMY1;
 SELECT T.MSG  FROM TABLE (§SCHEMA§.MQREADALLCLOB()) T;
 SELECT T.MSG FROM TABLE
                    (§SCHEMA§.MQREADALLCLOB('DB2.DEFAULT.SERVICE')) T;
 SELECT T.MSG FROM TABLE (§SCHEMA§.MQREADALLCLOB('DB2.DEFAULT.SERVICE',
                    'DB2.DEFAULT.POLICY')) T;
 SELECT T.MSG FROM TABLE (§SCHEMA§.MQREADALLCLOB(2)) T;
 SELECT T.MSG FROM TABLE (§SCHEMA§.MQREADALLCLOB
                    ('DB2.DEFAULT.SERVICE', 2)) T;
 SELECT T.MSG FROM TABLE
                 (§SCHEMA§.MQREADALLCLOB('DB2.DEFAULT.SERVICE',
                  'DB2.DEFAULT.POLICY',  2 )) T;
 SELECT T.MSG  FROM TABLE (§SCHEMA§.MQRECEIVEALLCLOB()) T;
 COMMIT;
 SELECT §SCHEMA§.MQSEND(CLOB('DATA EXAMPLE-2')) FROM SYSIBM.SYSDUMMY1;
 COMMIT;
 SELECT §SCHEMA§.MQSEND(CLOB('DATA EXAMPLE-3')) FROM SYSIBM.SYSDUMMY1;
 COMMIT;
 SELECT §SCHEMA§.MQSEND(CLOB('DATA EXAMPLE-4')) FROM SYSIBM.SYSDUMMY1;
 COMMIT;
 SELECT §SCHEMA§.MQSEND('DB2.DEFAULT.SERVICE','DB2.DEFAULT.POLICY',
                         CLOB('MSG WITH CORREL ID-3'), 'CORRELID 3')
                         FROM SYSIBM.SYSDUMMY1;
 COMMIT;
 SELECT T.MSG  FROM TABLE (§SCHEMA§.MQRECEIVEALLCLOB(
          'DB2.DEFAULT.SERVICE', 'DB2.DEFAULT.POLICY','CORRELID 3')) T;
 SELECT T.MSG  FROM TABLE (§SCHEMA§.MQRECEIVEALLCLOB()) T;
//*

./ ADD NAME=DSNTEJTR
//*********************************************************************
//*  Name = DSNTEJTR
//*
//*  Descriptive Name = DB2 Sample application - Native SQL debugging
//*
//*    Licensed Materials - Property of IBM
//*    5650-DB2
//*    (C) COPYRIGHT 2018 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 12
//*
//*  Function =
//*    This job creates eight sample native SQL procedures that can be
//*    used to assist in debugging of other native SQL routines using
//*    tracing type code.  These sample SQL procedures use a declared
//*    global temporary table (DGTT) to share data.  They are:
//*      * DSN8.CREATE_DGTT - Create DGTT for session
//*      * DSN8.DISABLE      - Disable the message buffer
//*      * DSN8.ENABLE       - Enable the message buffer
//*      * DSN8.GET_LINE     - Get a line from the message buffer
//*      * DSN8.GET_LINES    - Get multiple lines from the message
//*                            buffer
//*      * DSN8.NEW_LINE     - Put an end-of-line character in the
//*                            message buffer.
//*      * DSN8.PUT          - The PUT procedure puts a string in
//*                             the message buffer.
//*      * DSN8.PUT_LINE     - Put a complete line in the message
//*                            buffer
//*
//*    This job also creates:
//*      * Various sample global variables
//*      * A sample user-defined array data type, DSN8.GRPHICARR, as
//*        the type to be used for arrays that receive output from
//*        the DSN8.GET_LINES procedure.
//*
//*  Notes =
//*    * This job uses the DSNTEP2 dynamic SQL processor application
//*      to create and grant access on the SQL objects described above.
//*    * SQL embedded in this job is encoded in CCSID 37.  To ensure
//*      correct interpretation, this job binds its own package and
//*      plan for DSNTEP2 using ENCODING(37).  The package and plan
//*      are freed by the last job step.
//*    * Before running this job, make the following changes to tailor
//*      it for use on your DB2:
//*        1. Add a valid job card.
//*        2. Locate and change all occurrences of the following
//*           strings as indicated:
//*           A. '§DSN§' to the name of the DB2 subsystem
//*           B. 'DSN§§0' to the prefix of the DB2 target libraries
//*           C. 'DSNTIA§§' to the plan name for DSNTIAD
//*           D. '§SYSADM§' to the authorization id to be used to
//*              process dynamic SQL
//*           E. '§WLMENV§' to the name of the WLM environment to
//*              be used by DB2 when debugging the stored procedures.
//*        3. This job binds and frees a package for DSNTEP2
//*           from the Db2-supplied DBRM (DSNàEP2L).
//*           If you have built your own DSNTEP2 module,
//*           update this job to bind and free a package for
//*           DSNTEP2 from your own DSNTEP2 DBRM instead.
//*
//*
//*  Pseudocode =
//*    DSNTRS01 Step     Bind a DSNTEP2 pkg and plan with ENCODING 37
//*    DSNTRS02 Step     Drop objects created by prior runs of this job
//*    DSNTRS03 Step     Create global variables for DSN8 procedures
//*    DSNTRS04 Step     Create the user-defined array data type,
//*                      DSN8.GRPHICARR
//*    DSNTRS05 Step     Create procedure DSN8.CREATE_DGTT
//*    DSNTRS06 Step     Create procedure DSN8.DISABLE
//*    DSNTRS07 Step     Create procedure DSN8.ENABLE
//*    DSNTRS08 Step     Create procedure DSN8.GET_LINE
//*    DSNTRS09 Step     Create procedure DSN8.GET_LINES
//*    DSNTRS10 Step     Create procedure DSN8.NEW_LINE
//*    DSNTRS11 Step     Create procedure DSN8.PUT
//*    DSNTRS12 Step     Create procedure DSN8.PUT_LINE
//*    DSNTRS13 Step     Grant access to objects create by this job
//*    DSNTRS14 Step     Free the DSNTEP2 package and plan bound by
//*                      this job
//*
//*  Change Activity =
//*    11/25/2014 Created                         n21833 s21834 dn1854
//*    01/26/2015 Add WLM ENVIRONMENT clause      n21833 s21834 dn1854
//*    03/10/2015 Tracing of UDFs modeled like    n21833 s21834 dn1854
//*               LUW's                           n21833 s21834 dn1854
//*    12/03/2015 Add DSN8 objects                n21833 s21834 dn1854
//*    02/12/2018 Remove non-DGTT UDFs            n21833 s21834 dn1854
//*    09/05/2019 Specify the Db2-supplied DBRM for DSNTEP2    PH12364
//*               (DSNàEP2L) in the BIND PACKAGE statement
//*               for DSNTEP2
//*    03/13/2020 DSN8.PUT: Add a space after each comma       PH23407
//*                         that is intended as a parameter
//*                         separator in the SQL
//*
//*********************************************************************
//JOBLIB   DD  DISP=SHR,DSN=DSN§§0.SDSNLOAD
//         DD  DISP=SHR,DSN=CEE.SCEERUN
//*
//*
//*        Step  1: Bind a DSNTEP2 package and plan with ENCODING 37
//*
//DSNTRS01 EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//DBRMLIB   DD DSN=DSN§§0.SDSNSAMP,
//             DISP=SHR
//SYSTSIN   DD *
  DSN SYSTEM(§DSN§)
  BIND PACKAGE (DSNTEP37) MEMBER(DSNàEP2L) +
       CURRENTDATA(NO) ACT(REP) ISO(CS) ENCODING(37)
  BIND PLAN(DSNTEP37)  PKLIST(DSNTEP37.*) +
       ACTION(REPLACE) +
       CURRENTDATA(NO) ISO(CS) ENCODING(37) SQLRULES(DB2)
  END
/*
//*
//*
//*        Step  2: Drop objects created by prior runs of this job
//*
//DSNTRS02 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSTSIN   DD *
  DSN SYSTEM(§DSN§)
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA§§) +
       LIB('DSN§§0.RUNLIB.LOAD') +
       PARMS('RC0')
  END
/*
//SYSIN     DD *
  SET CURRENT SQLID = '§SYSADM§';
  DROP PROCEDURE DSN8.DISABLE      RESTRICT;
  DROP PROCEDURE DSN8.ENABLE       RESTRICT;
  DROP PROCEDURE DSN8.CREATE_DGTT  RESTRICT;
  DROP PROCEDURE DSN8.GET_LINES    RESTRICT;
  DROP PROCEDURE DSN8.GET_LINE     RESTRICT;
  DROP PROCEDURE DSN8.NEW_LINE     RESTRICT;
  DROP PROCEDURE DSN8.PUT          RESTRICT;
  DROP PROCEDURE DSN8.PUT_LINE     RESTRICT;
  DROP VARIABLE  DSN8.DBMS_ROW_COUNT_S;
  DROP VARIABLE  DSN8.DBMS_ROW_COUNT_E;
  DROP VARIABLE  DSN8.DBMS_LINE_BUFFER;
  DROP VARIABLE  DSN8.DBMS_ENABLE;
  DROP VARIABLE  DSN8.DBMS_LINE_BUFFER_SIZE;
  DROP VARIABLE  DSN8.DBMS_LINE_BUFFER_REQUEST_SIZE;
  DROP TYPE      DSN8.GRPHICARR;
  DROP VARIABLE  DSN8.END_LINE;
/*
//*
//*        Step  3: Create global variables for DSN8 procedures
//*
//DSNTRS03 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSTSIN   DD *
  DSN SYSTEM(§DSN§)
  RUN  PROGRAM(DSNTEP2) PLAN(DSNTEP37) +
       LIB('DSN§§0.RUNLIB.LOAD') +
       PARMS('/ALIGN(MID)')
  END
/*
//SYSIN     DD *
  SET CURRENT SQLID = '§SYSADM§';
  CREATE VARIABLE DSN8.DBMS_ROW_COUNT_S INT DEFAULT 0;
  CREATE VARIABLE DSN8.DBMS_ROW_COUNT_E INT DEFAULT 0;
  CREATE VARIABLE DSN8.DBMS_LINE_BUFFER VARGRAPHIC(16334) DEFAULT '';
  CREATE VARIABLE DSN8.DBMS_ENABLE CHAR(1) DEFAULT 'N';
  CREATE VARIABLE DSN8.DBMS_LINE_BUFFER_SIZE INT DEFAULT 16334;
  CREATE VARIABLE DSN8.DBMS_LINE_BUFFER_REQUEST_SIZE INT DEFAULT 0;
  CREATE VARIABLE DSN8.END_LINE GRAPHIC(1) DEFAULT UX'000A';
/*
//*
//*        Step  4: Create user-defined array data type, DSN8.GRPHICARR
//*
//DSNTRS04 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSTSIN   DD *
  DSN SYSTEM(§DSN§)
  RUN  PROGRAM(DSNTEP2) PLAN(DSNTEP37) +
       LIB('DSN§§0.RUNLIB.LOAD') +
       PARMS('/ALIGN(MID)')
  END
/*
//SYSIN     DD *
  SET CURRENT SQLID = '§SYSADM§';

  CREATE TYPE DSN8.GRPHICARR
      AS VARGRAPHIC(16334) CCSID UNICODE ARRAY??(??);
/*
//*
//*        Step  5: Create procedure DSN8.CREATE_DGTT
//*
//DSNTRS05 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSTSIN   DD *
  DSN SYSTEM(§DSN§)
  RUN  PROGRAM(DSNTEP2) PLAN(DSNTEP37) +
       LIB('DSN§§0.RUNLIB.LOAD') +
       PARMS('/SQLTERM(£),SQLFORMAT(SQLPL)')
  END
/*
//SYSIN     DD *
  SET CURRENT SQLID = '§SYSADM§'£

  ---------------------------------------------------------------------
  -- Name = DSN8.CREATE_DGTT
  --
  -- Descriptive Name = DB2 Sample application
  --                    Native SQL debugging
  --                    Create a DGTT for the session
  --
  --   Licensed Materials - Property of IBM
  --   5615-DB2
  --   (C) COPYRIGHT 1982, 2014 IBM Corp.  All Rights Reserved.
  --
  --   STATUS = Version 11
  --
  -- Function =
  --   The CREATE_DGTT procedure creates a Declared Global Temporary
  --   Table for use by other SQL procedures in this set.
  --
  --   Parameters: None
  --
  -- Notes =
  --
  -- Change Activity =
  --   12/03/2015 Created                         n21833 s21834 dn1854
  ---------------------------------------------------------------------
  CREATE PROCEDURE DSN8.CREATE_DGTT
  MODIFIES SQL DATA
  WLM ENVIRONMENT FOR DEBUG MODE §WLMENV§
  BEGIN
    --*****************************************************************
    -- create DGTT for this session + the unique index
    --
    -- One advantage of using DGTT is that more information
    --  can be cached, if the DGTT is created with more columns
    --*****************************************************************

    DECLARE GLOBAL TEMPORARY TABLE SESSION.DBMS_BUFFER
      ( row_count int NOT NULL
      , buffer VARGRAPHIC(16334)
      )
      CCSID UNICODE
      NOT LOGGED
      ON COMMIT PRESERVE ROWS ;

      CREATE UNIQUE INDEX IX1 ON SESSION.DBMS_BUFFER(row_count);
      SET DSN8.DBMS_ROW_COUNT_S = 0;
      SET DSN8.DBMS_ROW_COUNT_E = 0;
      SET DSN8.DBMS_LINE_BUFFER = '';
  END£
/*
//*
//*        Step  6: Create procedure DSN8.DISABLE
//*
//DSNTRS06 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSTSIN   DD *
  DSN SYSTEM(§DSN§)
  RUN  PROGRAM(DSNTEP2) PLAN(DSNTEP37) +
       LIB('DSN§§0.RUNLIB.LOAD') +
       PARMS('/SQLTERM(£),SQLFORMAT(SQLPL)')
  END
/*
//SYSIN     DD *
  SET CURRENT SQLID = '§SYSADM§'£

  ---------------------------------------------------------------------
  -- Name = DSN8.DISABLE
  --
  -- Descriptive Name = DB2 Sample application
  --                    Native SQL debugging
  --                    Disable the message buffer
  --
  --   Licensed Materials - Property of IBM
  --   5615-DB2
  --   (C) COPYRIGHT 1982, 2014 IBM Corp.  All Rights Reserved.
  --
  --   STATUS = Version 11
  --
  -- Function =
  --   The DISABLE procedure disables the message buffer.  After this
  --   procedure runs, any messages that are in the message buffer are
  --   discarded.  Calls to the PUT, PUT_LINE, or NEW_LINE are ignored,
  --   and no error is returned to the sender.
  --
  --   Parameters: None
  --
  -- Notes =
  --
  -- Change Activity =
  --   12/03/2015 Created                         n21833 s21834 dn1854
  ---------------------------------------------------------------------
  CREATE PROCEDURE DSN8.DISABLE( )
  MODIFIES SQL DATA
  WLM ENVIRONMENT FOR DEBUG MODE §WLMENV§
  BEGIN
    DECLARE SQLCODE INTEGER;
    DECLARE RETCODE INT;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET RETCODE = SQLCODE;
    IF DSN8.DBMS_ENABLE = 'N' THEN RETURN; END IF;
    SET DSN8.DBMS_ENABLE = 'N';
    SET DSN8.DBMS_LINE_BUFFER = '';
    TRUNCATE SESSION.DBMS_BUFFER;
    SET DSN8.DBMS_ROW_COUNT_S = 0;
    SET DSN8.DBMS_ROW_COUNT_E = 0;
  END£
/*
//*
//*        Step  7: Create procedure DSN8.ENABLE
//*
//DSNTRS07 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSTSIN   DD *
  DSN SYSTEM(§DSN§)
  RUN  PROGRAM(DSNTEP2) PLAN(DSNTEP37) +
       LIB('DSN§§0.RUNLIB.LOAD') +
       PARMS('/SQLTERM(£),SQLFORMAT(SQLPL)')
  END
/*
//SYSIN     DD *
  SET CURRENT SQLID = '§SYSADM§'£

  ---------------------------------------------------------------------
  -- Name = DSN8.ENABLE
  --
  -- Descriptive Name = DB2 Sample application
  --                    Native SQL debugging
  --                    Enable the message buffer
  --
  --   Licensed Materials - Property of IBM
  --   5615-DB2
  --   (C) COPYRIGHT 1982, 2014 IBM Corp.  All Rights Reserved.
  --
  --   STATUS = Version 11
  --
  -- Function =
  --   The ENABLE procedure enables the message buffer. During a
  --   single session, applications can put messages in the message
  --   buffer and get messages from the message buffer.
  --
  --   Parameters:
  --     buffer_size
  --       An input argument of type INTEGER that is currently ignored.
  --
  -- Notes =
  --
  -- Change Activity =
  --   12/03/2015 Created                         n21833 s21834 dn1854
  ---------------------------------------------------------------------
  CREATE PROCEDURE DSN8.ENABLE( IN buffer_size INT )
  LANGUAGE SQL
  DETERMINISTIC
  MODIFIES SQL DATA
  WLM ENVIRONMENT FOR DEBUG MODE §WLMENV§
  SP1:BEGIN
    DECLARE SQLCODE INTEGER;
    DECLARE RETCODE INTEGER DEFAULT 0;
    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET RETCODE = SQLCODE;
    IF DSN8.DBMS_ENABLE = 'Y' THEN RETURN; END IF;
    TRUNCATE SESSION.DBMS_BUFFER;
    IF (RETCODE = -204) THEN
      --***************************************************
      --    DGTT can not be created in SQL function
      --    Call the SQL proc instead
      --***************************************************
      CALL DSN8.CREATE_DGTT;
    END IF;
    SET DSN8.DBMS_LINE_BUFFER = '';
    SET DSN8.DBMS_ENABLE = 'Y';
  END SP1£
/*
//*
//*        Step  8: Create procedure DSN8.GET_LINE
//*
//DSNTRS08 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSTSIN   DD *
  DSN SYSTEM(§DSN§)
  RUN  PROGRAM(DSNTEP2) PLAN(DSNTEP37) +
       LIB('DSN§§0.RUNLIB.LOAD') +
       PARMS('/SQLTERM(£),SQLFORMAT(SQLPL)')
  END
/*
//SYSIN     DD *
  SET CURRENT SQLID = '§SYSADM§'£

  ---------------------------------------------------------------------
  -- Name = DSN8.GET_LINE
  --
  -- Descriptive Name = DB2 Sample application
  --                    Native SQL debugging
  --                    Returns a single line of text from the message
  --                      buffer
  --
  --   Licensed Materials - Property of IBM
  --   5615-DB2
  --   (C) COPYRIGHT 1982, 2014 IBM Corp.  All Rights Reserved.
  --
  --   STATUS = Version 11
  --
  -- Function =
  --   The GET_LINE procedure returns a single line of text from the
  --   message buffer up to an end -of-line character which is not
  --   copied to the output buffer.
  --
  --   Tip: To add an end-of-line character sequence to the message
  --   buffer, use the PUT_LINE procedure, or, after a series of calls
  --   to the PUT procedure, use the NEW_LINE procedure.
  --
  --   Parameters:
  --     line
  --       An output argument of type VARGRAPHIC(16334) that returns
  --       a line of text from the message buffer.
  --     status
  --       An output argument of type INTEGER that indicates whether
  --       a line was returned from the message buffer:
  --         0 indicates that a line was returned
  --        1 indicates that there was no line to return
  --
  -- Notes =
  --
  -- Change Activity =
  --   12/03/2015 Created                         n21833 s21834 dn1854
  ---------------------------------------------------------------------
  CREATE PROCEDURE DSN8.GET_LINE
    ( OUT line VARGRAPHIC(16334) ccsid unicode, OUT status INT )
  READS SQL DATA
  WLM ENVIRONMENT FOR DEBUG MODE §WLMENV§
  BEGIN
    DECLARE SQLCODE INTEGER;
    DECLARE RETCODE INT;
    DECLARE i INT;
    IF DSN8.DBMS_ENABLE = 'N' THEN RETURN; END IF;
    SET status = 0;
    IF DSN8.DBMS_ROW_COUNT_E <= DSN8.DBMS_ROW_COUNT_S THEN
      SET status = 1;
    ELSE
      SET DSN8.DBMS_ROW_COUNT_S = DSN8.DBMS_ROW_COUNT_S + 1;
      SELECT buffer INTO   line
        from SESSION.DBMS_BUFFER
        WHERE row_count = DSN8.DBMS_ROW_COUNT_S;
    END IF;
  END£
/*
//*
//*        Step  9: Create procedure DSN8.GET_LINES
//*
//DSNTRS09 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSTSIN   DD *
  DSN SYSTEM(§DSN§)
  RUN  PROGRAM(DSNTEP2) PLAN(DSNTEP37) +
       LIB('DSN§§0.RUNLIB.LOAD') +
       PARMS('/SQLTERM(£),SQLFORMAT(SQLPL)')
  END
/*
//SYSIN     DD *
  SET CURRENT SQLID = '§SYSADM§'£

  ---------------------------------------------------------------------
  -- Name = DSN8.GET_LINES
  --
  -- Descriptive Name = DB2 Sample application
  --                    Native SQL debugging
  --                    Returns one or more lines of text from the
  --                      message buffer
  --
  --   Licensed Materials - Property of IBM
  --   5615-DB2
  --   (C) COPYRIGHT 1982, 2014 IBM Corp.  All Rights Reserved.
  --
  --   STATUS = Version 11
  --
  -- Function =
  --   The GET_LINES procedure gets one or more lines of text from the
  --   message buffer and stores the text in an array. Each line of
  --   text in the message buffer up to an end-of-line character, is
  --   stored in an element of the target array. The end-of-line
  --   characters are not stored in the target.
  --
  --   Parameters:
  --     lines
  --       An output argument of type DSN8.GRPHICARR that returns
  --       the lines of text from the message buffer. The type
  --       DSN8.GRPHICARR is an array data type that is defined as
  --       VARGRAPHIC(16334) ARRAY??(2147483647??).
  --     numlines
  --       An input and output argument of type INTEGER. When used
  --       as input, specifies the number of lines to retrieve from
  --       the message buffer. When used as output, indicates the
  --       actual number of lines that were retrieved from the
  --       message buffer. If the output value of numlines is less
  --       than the input value, then there are no more lines
  --       remaining in the message buffer.
  --
  -- Notes =
  --
  -- Change Activity =
  --   12/03/2015 Created                         n21833 s21834 dn1854
  ---------------------------------------------------------------------
  CREATE PROCEDURE DSN8.GET_LINES( OUT lines DSN8.GRPHICARR,
    INOUT numlines INT )
  READS SQL DATA
  WLM ENVIRONMENT FOR DEBUG MODE §WLMENV§
  BEGIN
    DECLARE RETCODE INT;
    DECLARE NOT_FOUND CONDITION FOR SQLSTATE '02000';
    DECLARE SQLCODE INTEGER;

    DECLARE CONTINUE HANDLER FOR SQLEXCEPTION SET numlines = 0;

    IF DSN8.DBMS_ENABLE = 'N' OR
     numlines is NULL OR
     numlines <= 0 THEN
      SET numlines = 0;
      RETURN;
    END IF;

    IF DSN8.DBMS_ROW_COUNT_E <= DSN8.DBMS_ROW_COUNT_S THEN
      SET numlines = 0;
      RETURN;
    END IF;

    SET lines = (SELECT ARRAY_AGG(buffer)
                   FROM SESSION.DBMS_BUFFER
                   WHERE ROW_COUNT > DSN8.DBMS_ROW_COUNT_S
                   AND ROW_COUNT <= DSN8.DBMS_ROW_COUNT_S + numlines);
    SET numlines = CARDINALITY(lines);
    SET DSN8.DBMS_ROW_COUNT_S = DSN8.DBMS_ROW_COUNT_S + numlines;

  END£
/*
//*
//*        Step 10: Create procedure DSN8.NEW_LINE
//*
//DSNTRS10 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSTSIN   DD *
  DSN SYSTEM(§DSN§)
  RUN  PROGRAM(DSNTEP2) PLAN(DSNTEP37) +
       LIB('DSN§§0.RUNLIB.LOAD') +
       PARMS('/SQLTERM(£),SQLFORMAT(SQLPL)')
  END
/*
//SYSIN     DD *
  SET CURRENT SQLID = '§SYSADM§'£

  ---------------------------------------------------------------------
  -- Name = DSN8.NEW_LINE
  --
  -- Descriptive Name = DB2 Sample application
  --                    Native SQL debugging
  --                    Puts an end-of-line character sequence in the
  --                      message buffer
  --
  --   Licensed Materials - Property of IBM
  --   5615-DB2
  --   (C) COPYRIGHT 1982, 2014 IBM Corp.  All Rights Reserved.
  --
  --   STATUS = Version 11
  --
  -- Function =
  --   The NEW_LINE procedure puts an end-of-line character sequence
  --   in message buffer.
  --
  --   Parameters: None
  --
  -- Notes =
  --
  -- Change Activity =
  --   12/03/2015 Created                         n21833 s21834 dn1854
  ---------------------------------------------------------------------
  CREATE PROCEDURE DSN8.NEW_LINE(   )
  MODIFIES SQL DATA
  WLM ENVIRONMENT FOR DEBUG MODE §WLMENV§
  BEGIN
    IF DSN8.DBMS_ENABLE = 'N' THEN RETURN;   END IF;
    IF DSN8.DBMS_LINE_BUFFER_SIZE -
      LENGTH(DSN8.DBMS_LINE_BUFFER) >= 1
    THEN
      SET DSN8.DBMS_LINE_BUFFER = DSN8.DBMS_LINE_BUFFER;
               -- !! DSN8.END_LINE;
      SET DSN8.DBMS_ROW_COUNT_E = DSN8.DBMS_ROW_COUNT_E + 1;
      INSERT INTO SESSION.DBMS_BUFFER VALUES
        (DSN8.DBMS_ROW_COUNT_E , DSN8.DBMS_LINE_BUFFER );
      SET DSN8.DBMS_LINE_BUFFER = '';
    ELSE
      SIGNAL SQLSTATE '5UA0P'  ;
    END IF;
  END£
/*
//*
//*        Step 11: Create procedure DSN8.PUT
//*
//DSNTRS11 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSTSIN   DD *
  DSN SYSTEM(§DSN§)
  RUN  PROGRAM(DSNTEP2) PLAN(DSNTEP37) +
       LIB('DSN§§0.RUNLIB.LOAD') +
       PARMS('/SQLTERM(£),SQLFORMAT(SQLPL)')
  END
/*
//SYSIN     DD *
  SET CURRENT SQLID = '§SYSADM§'£

  ---------------------------------------------------------------------
  -- Name = DSN8.PUT
  --
  -- Descriptive Name = DB2 Sample application
  --                    Native SQL debugging
  --                    Puts a string in the message buffer
  --
  --   Licensed Materials - Property of IBM
  --   5615-DB2
  --   (C) COPYRIGHT 1982, 2014 IBM Corp.  All Rights Reserved.
  --
  --   STATUS = Version 11
  --
  -- Function =
  --   The PUT procedure puts a string in the message buffer. No
  --   end-of-line character sequence is written at the end of the
  --   string.
  --
  --   Parameters:
  --     item
  --       An input argument of type VARGRAPHIC(16334) that specifies
  --       the text to write to the message buffer.
  --
  -- Notes =
  --
  -- Change Activity =
  --   12/03/2015 Created                         n21833 s21834 dn1854
  ---------------------------------------------------------------------
  CREATE PROCEDURE DSN8.PUT ( IN item VARGRAPHIC(16334) ccsid unicode)
  MODIFIES SQL DATA
  WLM ENVIRONMENT FOR DEBUG MODE §WLMENV§
  BEGIN
    DECLARE i, k INT;
    IF DSN8.DBMS_ENABLE = 'N' THEN RETURN; END IF;
    SET i = LENGTH(item);
    -- Do nothing if item is blank or null
    IF i > 0 THEN
      IF DSN8.DBMS_LINE_BUFFER_SIZE -
        LENGTH(DSN8.DBMS_LINE_BUFFER) >=i
      THEN
        SET k = INSTR(item, DSN8.END_LINE, 1);
        TOKN_LOOP:
        WHILE k > 0 DO
          IF k = 1 THEN
            SET DSN8.DBMS_ROW_COUNT_E = DSN8.DBMS_ROW_COUNT_E + 1;
            INSERT INTO SESSION.DBMS_BUFFER VALUES
                   (DSN8.DBMS_ROW_COUNT_E , DSN8.DBMS_LINE_BUFFER );
            SET DSN8.DBMS_LINE_BUFFER = '';
            IF i = 1 THEN RETURN; END IF;
            SET item = SUBSTR(item, 2);
            SET i = i - 1;
            SET k = INSTR(item, DSN8.END_LINE, 1);
            ITERATE TOKN_LOOP;
          END IF;
          SET DSN8.DBMS_LINE_BUFFER = DSN8.DBMS_LINE_BUFFER
             !! SUBSTR(item, 1, k-1);
          SET DSN8.DBMS_ROW_COUNT_E = DSN8.DBMS_ROW_COUNT_E + 1;

          INSERT INTO SESSION.DBMS_BUFFER VALUES
                 (DSN8.DBMS_ROW_COUNT_E , DSN8.DBMS_LINE_BUFFER );
          SET DSN8.DBMS_LINE_BUFFER = '';
          SET item = SUBSTR(item, k+1);
          SET i = LENGTH(item);
          SET k = INSTR(item, DSN8.END_LINE, 1);
        END WHILE;
        SET DSN8.DBMS_LINE_BUFFER=DSN8.DBMS_LINE_BUFFER!!item;
      ELSE
      SIGNAL SQLSTATE '5UA0P' ;
      END IF;
    END IF;
  END£
/*
//*
//*        Step 12: Create procedure DSN8.PUT_LINE
//*
//DSNTRS12 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSTSIN   DD *
  DSN SYSTEM(§DSN§)
  RUN  PROGRAM(DSNTEP2) PLAN(DSNTEP37) +
       LIB('DSN§§0.RUNLIB.LOAD') +
       PARMS('/SQLTERM(£),SQLFORMAT(SQLPL)')
  END
/*
//SYSIN     DD *
  SET CURRENT SQLID = '§SYSADM§'£

  ---------------------------------------------------------------------
  -- Name = DSN8.PUT_LINE
  --
  -- Descriptive Name = DB2 Sample application
  --                    Native SQL debugging
  --                    Puts a single line in the message buffer
  --
  --   Licensed Materials - Property of IBM
  --   5615-DB2
  --   (C) COPYRIGHT 1982, 2014 IBM Corp.  All Rights Reserved.
  --
  --   STATUS = Version 11
  --
  -- Function =
  --   The PUT procedure puts a single line that includes an end-of-
  --   line character sequence in the message buffer.
  --
  --   Parameters:
  --     item
  --       An input argument of type VARGRAPHIC(16334) that specifies
  --       the text to write to the message buffer.
  --
  -- Notes =
  --
  -- Change Activity =
  --   12/03/2015 Created                         n21833 s21834 dn1854
  ---------------------------------------------------------------------
  CREATE PROCEDURE DSN8.PUT_LINE(
    IN item VARGRAPHIC(16334)  ccsid unicode)
  MODIFIES SQL DATA
  WLM ENVIRONMENT FOR DEBUG MODE §WLMENV§
  BEGIN
    DECLARE i INT;
    IF DSN8.DBMS_ENABLE = 'N' THEN RETURN; END IF;
    SET i = LENGTH(item);
    IF DSN8.DBMS_LINE_BUFFER_SIZE -
      LENGTH(DSN8.DBMS_LINE_BUFFER) >=i + 1
    THEN
      SET DSN8.DBMS_LINE_BUFFER = DSN8.DBMS_LINE_BUFFER
       !! item; --  !! DSN8.END_LINE ;
      SET DSN8.DBMS_ROW_COUNT_E = DSN8.DBMS_ROW_COUNT_E + 1;
      INSERT INTO SESSION.DBMS_BUFFER VALUES
             (DSN8.DBMS_ROW_COUNT_E , DSN8.DBMS_LINE_BUFFER );
      SET DSN8.DBMS_LINE_BUFFER = '';
    ELSE
      SIGNAL SQLSTATE '5UA0P'  ;
    END IF;
  END£
/*
//*
//*        Step 13: Grant access to objects create by this job
//*
//DSNTRS13 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSTSIN   DD *
  DSN SYSTEM(§DSN§)
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA§§) +
       LIB('DSN§§0.RUNLIB.LOAD')
  END
/*
//SYSIN     DD *
  SET CURRENT SQLID = '§SYSADM§';
  GRANT READ ON VARIABLE DSN8.DBMS_ENABLE TO PUBLIC;
  GRANT USAGE ON TYPE DSN8.GRPHICARR TO PUBLIC;
  GRANT EXECUTE ON PROCEDURE DSN8.CREATE_DGTT TO PUBLIC;
  GRANT EXECUTE ON PROCEDURE DSN8.DISABLE TO PUBLIC;
  GRANT EXECUTE ON PROCEDURE DSN8.ENABLE TO PUBLIC;
  GRANT EXECUTE ON PROCEDURE DSN8.PUT TO PUBLIC;
  GRANT EXECUTE ON PROCEDURE DSN8.PUT_LINE TO PUBLIC;
  GRANT EXECUTE ON PROCEDURE DSN8.NEW_LINE TO PUBLIC;
  GRANT EXECUTE ON PROCEDURE DSN8.GET_LINES TO PUBLIC;
  GRANT EXECUTE ON PROCEDURE DSN8.GET_LINE TO PUBLIC;
/*
//*
//*        Step 14: Free the DSNTEP2 package and plan bound by this job
//*
//DSNTRS14 EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSTSPRT  DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSTSIN   DD *
  DSN SYSTEM(§DSN§)
  FREE PACKAGE (DSNTEP37.DSNàEP2L.(*))
  FREE PLAN(DSNTEP37)
  END
/*
//*

./ ADD NAME=DSNTEJWS
//DSNTEJWS  JOB ACCT£,                                                  00010000
//             DB2,                                                     00020000
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040000
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050000
//      SYS019.LP2.DB2,                                                 00060000
//      SYS1.PROCLIB.&SYSNAME,                                          00061000
//      SYS1.SACBCNTL)                                                  00070000
//********************************************************************/
//*  NAME = DSNTEJWS                                                 */
//*                                                                  */
//*  DESCRIPTIVE NAME = DB2 SAMPLE APPLICATION                       */
//*                                                                  */
//*    LICENSED MATERIALS - PROPERTY OF IBM                          */
//*    5675-DB2                                                      */
//*    (C) COPYRIGHT 2005 IBM CORP.  ALL RIGHTS RESERVED.            */
//*                                                                  */
//*    STATUS = VERSION 9                                            */
//*                                                                  */
//*  FUNCTION = SAMPLE THAT SETS UP THE SAMPLE TABLES FOR USE WITH   */
//*             THE WEB SERVICES PROVIDER SAMPLE WEB APPLICATION     */
//*                                                                  */
//*  PSEUDOCODE =                                                    */
//*    PH01S01  STEP   DROP DEPARTMENT,EMPLOYEE,CITY_TAB TABLES      */
//*    PH01S02  STEP   CREATE DEPARTMENT,EMPLOYEE,CITY_TAB TABLES    */
//*    PH01S03  STEP   POPULATE DEPARTMENT,EMPLOYEE TABLES           */
//*    PH01S04  STEP   POPULATE CITY_TAB TABLES                      */
//*    PH01S05  STEP   GRANT AUTHORITY TO TABLES TO PUBLIC           */
//*    PH01S06  STEP   POPULATE XML EXTENDER TABLE                   */
//*                                                                  */
//* NOTES =                                                          */
//*   PRIOR TO SUBMITTING, EDIT THIS JOB MANUALLY TO MAKE THE        */
//*   FOLLOWING CHANGES:                                             */
//*   1. ADD A VALID JOB CARD                                        */
//*   2. LOCATE AND CHANGE ALL OCCURRENCES OF THE FOLLOWING STRINGS  */
//*      AS INDICATED:                                               */
//*      A.THE SUBSYSTEM NAME '§DSN§' TO THE NAME OF YOUR DB2        */
//*      B.'DSN§§0' TO THE PREFIX OF YOUR TARGET LIBRARY NAME        */
//*      C.'DSNTIA§§' TO THE PLAN NAME FOR DSNTIAD ON YOUR DB2       */
//*      D.CHANGE $PWD TO THE DIRECTORY WHERE THE SUPPLIED SAMPLE WEB*/
//*        APPLICATION WAR FILE(services.war) WAS EXTRACTED.         */
//*        EX : /u/USER/worf/WEB-INF/classes/groups/dxx_sample       */
//*      E.BYPASS STEP 6 (PH01S06) IF XML EXTENDER IS NOT INSTALLED  */
//*        IN THE SUBSYSTEM                                          */
//*                                                                  */
//* CHANGE ACTIVITY =
//*********************************************************************
//*
//JOBLIB  DD  DSN=SYS2.DB2.SDSNLOAD,DISP=SHR
//*
//*
//*        STEP  1: DROP SAMPLE TABLES
//*
//PH01S01 EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
    DSN SYSTEM(DB2S)
    RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA12) PARM('RC0') -
         LIBRARY('DB2S.RUNLIB.LOAD')
    END
//SYSIN    DD  *
DROP TABLE WORFDEMO.DEPARTMENT;
DROP TABLE WORFDEMO.EMPLOYEE;
DROP TABLE WORFDEMO.CITY_TAB;
COMMIT;
SET MAXCC=0;
//*
//*        STEP  2: CREATE SAMPLE EMPLOYEE AND DEPARTMENT TABLES
//*
//PH01S02 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(8,LT)
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
  DSN SYSTEM(DB2S)
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA12) -
         LIBRARY('DB2S.RUNLIB.LOAD')
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSIN    DD *
CREATE TABLE WORFDEMO.DEPARTMENT
              (DEPTNO   CHAR(3)        NOT NULL,
               DEPTNAME VARCHAR(36)    NOT NULL,
               MGRNO    CHAR(6)                ,
               ADMRDEPT CHAR(3)        NOT NULL,
               LOCATION CHAR(16)               ,
               PRIMARY KEY(DEPTNO))
       CCSID EBCDIC;
CREATE UNIQUE INDEX WORFDEMO.DEPARTMENTX ON
                WORFDEMO.DEPARTMENT(DEPTNO);
COMMIT;
CREATE TABLE WORFDEMO.EMPLOYEE
              (EMPNO     CHAR(6)        NOT NULL,
               FIRSTNME  VARCHAR(12)    NOT NULL,
               MIDINIT   CHAR(1)        NOT NULL,
               LASTNAME  VARCHAR(15)    NOT NULL,
               WORKDEPT  CHAR(3)                ,
               PHONENO   CHAR(4) CONSTRAINT NUMBER CHECK
                (PHONENO >= '0000' AND PHONENO <= '9999'),
               HIREDATE  DATE                   ,
               JOB       CHAR(8)                ,
               EDLEVEL   SMALLINT               ,
               SEX       CHAR(1)                ,
               BIRTHDATE DATE                   ,
               SALARY    DECIMAL(9, 2)          ,
               BONUS     DECIMAL(9, 2)          ,
               COMM      DECIMAL(9, 2)          ,
               PRIMARY KEY(EMPNO),
               FOREIGN KEY RED (WORKDEPT) REFERENCES
               WORFDEMO.DEPARTMENT(DEPTNO)
                 ON DELETE SET NULL)
       CCSID EBCDIC;
CREATE UNIQUE INDEX WORFDEMO.EMPLOYEEX ON
                WORFDEMO.EMPLOYEE(EMPNO);
COMMIT;
CREATE TABLE WORFDEMO.CITY_TAB
              (ZIPCODE CHAR(5) NOT NULL,
               CITY VARCHAR(16))
       CCSID EBCDIC;
COMMIT;
//*
//*        STEP 3: LOAD DATA INTO SAMPLE EMPLOYEE AND DEPARTMENT TABLE
//*
//*
//PH01S03 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)
//SYSUT1   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SORTLIB  DD  DSN=SYS1.SORTLIB,DISP=SHR
//SORTOUT  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//DSNTRACE DD  SYSOUT=*
//SYSRECDP DD  DSN=SYS4.DB2.SDSNSAMP(DSN8LDP),
//             DISP=SHR
//SYSRECEM DD  DSN=SYS4.DB2.SDSNSAMP(DSN8LEM),
//             DISP=SHR
//SYSERR   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SYSDISC  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SYSMAP   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SYSIN    DD  *

  LOAD DATA INDDN(SYSRECDP)
       INTO TABLE WORFDEMO.DEPARTMENT
            (DEPTNO   POSITION( 1) CHAR(3),
             DEPTNAME POSITION( 5) VARCHAR,
             MGRNO    POSITION(37) CHAR(6) NULLIF(MGRNO='      '),
             ADMRDEPT POSITION(44) CHAR(3),
             LOCATION POSITION(48) CHAR(16))
       ENFORCE NO
       SORTDEVT SYSDA SORTNUM 4

  LOAD DATA INDDN(SYSRECEM) CONTINUEIF(72:72)='X'
       INTO TABLE WORFDEMO.EMPLOYEE
           (EMPNO     POSITION( 1)  CHAR(6),
            FIRSTNME  POSITION( 8)  VARCHAR,
            MIDINIT   POSITION(21)  CHAR(1),
            LASTNAME  POSITION(23)  VARCHAR,
            WORKDEPT  POSITION(36)  CHAR(3),
            PHONENO   POSITION(40)  CHAR(4),
            HIREDATE  POSITION(45)  DATE EXTERNAL,
            JOB       POSITION(56)  CHAR(8),
            EDLEVEL   POSITION(65)  INTEGER EXTERNAL(2),
            SEX       POSITION(68)  CHAR(1),
            BIRTHDATE POSITION(80)  DATE EXTERNAL,
            SALARY    POSITION(91)  INTEGER EXTERNAL(5),
            BONUS     POSITION(97)  INTEGER EXTERNAL(5),
            COMM      POSITION(103) INTEGER EXTERNAL(5))
      ENFORCE CONSTRAINTS MAPDDN SYSMAP
      SORTDEVT SYSDA SORTNUM 4
//*
//*        STEP  4: CREATE CITY_TAB TABLE
//*
//PH01S04 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
  DSN SYSTEM(DB2S)
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA12) -
         LIBRARY('DB2S.RUNLIB.LOAD')
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSIN    DD *

INSERT INTO WORFDEMO.CITY_TAB VALUES('01906', 'BOSTON');
INSERT INTO WORFDEMO.CITY_TAB VALUES('10017', 'NEW YORK');
INSERT INTO WORFDEMO.CITY_TAB VALUES('60631', 'CHICAGO');
INSERT INTO WORFDEMO.CITY_TAB VALUES('90210', 'BEVERLY HILLS');
COMMIT;
//*
//*        STEP  5: GRANT AUTHORITY
//*
//PH01S05 EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
    DSN SYSTEM(DB2S)
    RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA12) PARM('RC0') -
         LIBRARY('DB2S.RUNLIB.LOAD')
    END
//SYSIN    DD  *
GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE WORFDEMO.DEPARTMENT
      TO PUBLIC AT ALL LOCATIONS;
GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE WORFDEMO.EMPLOYEE
      TO PUBLIC AT ALL LOCATIONS;
GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE WORFDEMO.CITY_TAB
      TO PUBLIC AT ALL LOCATIONS;
//*
//*        STEP  6: SETS UP THE SAMPLE DATABASE FOR USE WITH
//*        THE DB2 XML EXTENDER
//*
//PH01S06 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
  DSN SYSTEM(DB2S)
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA12) -
         LIBRARY('DB2S.RUNLIB.LOAD')
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSIN    DD *
INSERT INTO DB2XML.DTD_REF(DTDID, CONTENT, USAGE_COUNT,
AUTHOR,CREATOR, UPDATOR) VALUES(
'department.dtd',
db2xml.XMLClobFromFile('$PWD/department.dtd'),0,
'user1', 'user1', 'user1');

INSERT INTO DB2XML.DTD_REF(DTDID, CONTENT, USAGE_COUNT,
AUTHOR, CREATOR, UPDATOR) VALUES(
'departmentStd.dtd',
db2xml.XMLClobFromFile('$PWD/departmentStd.dtd'), 0,
'user1', 'user1', 'user1');

INSERT INTO DB2XML.DTD_REF(DTDID, CONTENT, USAGE_COUNT,
AUTHOR, CREATOR, UPDATOR) VALUES(
'departments.dtd',
db2xml.XMLClobFromFile('$PWD/departments.dtd'), 0,
'user1', 'user1', 'user1');
COMMIT;
//*

./ ADD NAME=DSNTEJ1
//DSNTEJ1   JOB ACCT£,                                                  00001002
//             DB2,                                                     00002002
//             RESTART=PH01S07,                                         00002102
//*            RESTART=PH01S02,                                         00002202
//             NOTIFY=&SYSUID,                                          00003002
//             MSGCLASS=T                                               00004002
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00005002
//      SYS019.LP2.DB2,                                                 00006002
//      SYS1.PROCLIB.&SYSNAME,                                          00007002
//      SYS1.SACBCNTL)                                                  00008002
//********************************************************************* 00010000
//*  NAME = DSNTEJ1                                                     00011000
//*                                                                     00012000
//*  DESCRIPTIVE NAME = DB2 SAMPLE APPLICATION                          00013000
//*                     PHASE 1 (LOCAL SITE ONLY)                       00014000
//*                                                                     00015000
//*    Licensed Materials - Property of IBM                             00016000
//*    5650-DB2                                                         00017000
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.         00018000
//*                                                                     00019000
//*    STATUS = Version 12                                              00020000
//*                                                                     00021000
//*  FUNCTION = THIS JCL PERFORMS THE PHASE 1 SETUP FOR THE SAMPLE      00022000
//*             APPLICATIONS ON A LOCAL DB2 SYSTEM (A SYSTEM WHICH      00023000
//*             WILL CONTAIN THE ACTUAL SAMPLE TABLES).                 00024000
//*                                                                     00025000
//*  NOTICE =                                                           00026000
//*    THIS SAMPLE JOB USES DB2 UTILITIES. SOME UTILITY FUNCTIONS ARE   00027000
//*    ELEMENTS OF SEPARATELY ORDERABLE PRODUCTS.  SUCCESSFUL USE OF    00028000
//*    A PARTICULAR SAMPLE JOB MAY BE DEPENDENT UPON THE OPTIONAL       00029000
//*    PRODUCT BEING LICENSED AND INSTALLED IN YOUR ENVIRONMENT.        00030000
//*                                                                     00031000
//*  CHANGE ACTIVITY =                                                  00032000
//*    10/20/2012 Create ALIASes instead of SYNONYMs     N0102 / 163503 00033000
//*    11/07/2012 ADD SET CURRENT SQLID           DN1651_INST1 / DN1651 00034000
//*    05/17/2013 FIX COPYRIGHT STATEMENT.                49779_077_724 00035000
//*    10/29/2013 Create EMP as PBR not index partitioned       PM98424 00036000
//*    02/24/2014 Increase length of the LRSN column in         PI10794 00037000
//*               MAP_TBL from CHAR(06) to CHAR(10)                     00038000
//*    02/15/2016 Long data set names                           PI42601 00039000
//*    10/27/2016 Update MAP_TBL definition for DB2 12          PI66261 00039100
//*    08/21/2018 Tolerate creation of deprecated TSs   s81673 / t81374 00039200
//*                                                                     00040000
//********************************************************************* 00041000
//*                                                                     00042000
//JOBLIB  DD  DSN=SYS2.DB2.SDSNEXIT,DISP=SHR                            00043001
//        DD  DSN=SYS2.DB2.SDSNLOAD,DISP=SHR                            00043101
//*                                                                     00044000
//********************************************************************* 00045000
//*       ASMCL PROC  - ASSEMBLE AND LINKEDIT AN ASM PROGRAM            00046000
//*                                                                     00047000
//ASMCL   PROC WSPC=500,MEM=TEMPNAME                                    00048000
//*                                                                     00049000
//*            ASSEMBLE                                                 00050000
//*                                                                     00051000
//ASM     EXEC PGM=ASMA90,PARM='OBJECT,NODECK'                          00052000
//SYSIN    DD DISP=SHR,                                                 00053000
//         DSN=SYS4.DB2.SDSNSAMP(&MEM)                                  00054002
//SYSLIB   DD DSN=SYS1.MACLIB,DISP=SHR                                  00055000
//         DD DSN=SYS4.DB2.SDSNMACS,DISP=SHR                            00056002
//         DD DSN=SYS4.DB2.SDSNSAMP,DISP=SHR                            00057002
//SYSLIN   DD DSN=&&LOADSET,DISP=(MOD,PASS),                            00058000
//            UNIT=SYSDA,SPACE=(800,(&WSPC,&WSPC)),                     00059000
//            DCB=(BLKSIZE=800)                                         00060000
//SYSPRINT DD SYSOUT=*                                                  00061000
//SYSUDUMP DD SYSOUT=*                                                  00062000
//SYSUT1   DD UNIT=SYSDA,SPACE=(800,(&WSPC,&WSPC),,,ROUND)              00063000
//SYSUT2   DD UNIT=SYSDA,SPACE=(800,(&WSPC,&WSPC),,,ROUND)              00064000
//SYSUT3   DD UNIT=SYSDA,SPACE=(800,(&WSPC,&WSPC),,,ROUND)              00065000
//*                                                                     00066000
//*            LINKEDIT IF THE ASSEMBLER                                00067000
//*            RETURN CODE IS 4 OR LESS                                 00068000
//*                                                                     00069000
//LKED    EXEC PGM=IEWL,PARM='LIST,XREF,NCAL,RENT,AMODE=31,RMODE=ANY',  00070000
//            COND=(4,LT,ASM)                                           00071000
//SYSLIN   DD DSN=&&LOADSET,DISP=(OLD,DELETE)                           00072000
//SYSLMOD  DD DISP=SHR,                                                 00073000
//         DSN=SYS2.DB2.SDSNEXIT(&MEM)                                  00074001
//SYSPRINT DD SYSOUT=*                                                  00075000
//SYSUDUMP DD SYSOUT=*                                                  00076000
//SYSUT1   DD UNIT=SYSDA,SPACE=(1024,(50,50))                           00077000
//*                                                                     00078000
//ASMCL   PEND                                                          00079000
//********************************************************************* 00080000
//*                                                                     00081000
//*        STEP  1: CREATE SAMPLE STORAGE GROUPS, TABLESPACES           00082000
//*                                                                     00083000
//PH01S01 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00084000
//SYSTSPRT DD SYSOUT=*                                                  00085000
//SYSTSIN  DD *                                                         00086000
  DSN SYSTEM(DB2S)                                                      00087002
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA12) -                                00088002
 LIB ('DB2S.RUNLIB.LOAD')                                               00089002
//SYSPRINT DD SYSOUT=*                                                  00090000
//SYSUDUMP DD SYSOUT=*                                                  00091000
//SYSIN    DD *                                                         00092000
  SET CURRENT APPLICATION COMPATIBILITY = 'V11R1';                      00093101
                                                                        00094000
  CREATE STOGROUP AMIOPSSG                                              00095001
    VOLUMES (DSNV01)                                                    00096000
    VCAT  DB2S;                                                         00097001
                                                                        00098000
  CREATE DATABASE DSN8D12A                                              00099002
    STOGROUP AMIOPSSG                                                   00100001
    BUFFERPOOL BP0                                                      00101000
    CCSID EBCDIC;                                                       00102000
                                                                        00103000
  CREATE DATABASE DSN8D12P                                              00104002
    STOGROUP AMIOPSSG                                                   00105001
    BUFFERPOOL BP0                                                      00106000
    CCSID EBCDIC;                                                       00107000
                                                                        00108000
  CREATE DATABASE DSN8D12X                                              00109002
    STOGROUP AMIOPSSG                                                   00110001
    BUFFERPOOL BP0                                                      00111000
    CCSID EBCDIC;                                                       00112000
                                                                        00113000
  CREATE TABLESPACE DSN8S12D                                            00114002
    IN DSN8D12A                                                         00115002
    USING STOGROUP AMIOPSSG                                             00116001
    ERASE NO                                                            00117000
    LOCKSIZE PAGE LOCKMAX SYSTEM                                        00118000
    BUFFERPOOL BP0                                                      00119000
    CLOSE NO                                                            00120000
    CCSID EBCDIC;                                                       00121000
                                                                        00122000
  COMMIT ;                                                              00123000
                                                                        00124000
  CREATE TABLESPACE DSN8S12E                                            00125002
    IN DSN8D12A                                                         00126002
    USING STOGROUP AMIOPSSG                                             00127001
    ERASE NO                                                            00128000
    NUMPARTS 4                                                          00129000
       (PART 1 USING STOGROUP AMIOPSSG                                  00130001
       ,PART 3 USING STOGROUP AMIOPSSG                                  00131001
       )                                                                00132000
    SEGSIZE 0                                                           00133000
    LOCKSIZE PAGE LOCKMAX SYSTEM                                        00134000
    BUFFERPOOL BP0                                                      00135000
    CLOSE NO                                                            00136000
    COMPRESS YES                                                        00137000
    CCSID EBCDIC;                                                       00138000
                                                                        00139000
  COMMIT ;                                                              00140000
                                                                        00141000
  CREATE TABLESPACE DSN8S12C                                            00142002
    IN DSN8D12P                                                         00143002
    USING STOGROUP AMIOPSSG                                             00144001
    SEGSIZE 4                                                           00145000
    LOCKSIZE TABLE                                                      00146000
    BUFFERPOOL BP0                                                      00147000
    CLOSE NO                                                            00148000
    CCSID EBCDIC;                                                       00149000
                                                                        00150000
  COMMIT ;                                                              00151000
                                                                        00152000
  CREATE TABLESPACE DSN8S12Q                                            00153002
    IN DSN8D12P                                                         00154002
    USING STOGROUP AMIOPSSG                                             00155001
    SEGSIZE 4                                                           00156000
    LOCKSIZE PAGE                                                       00157000
    BUFFERPOOL BP0                                                      00158000
    CLOSE NO                                                            00159000
    CCSID EBCDIC;                                                       00160000
                                                                        00161000
  COMMIT ;                                                              00162000
                                                                        00163000
  CREATE TABLESPACE DSN8S12R                                            00164002
    IN DSN8D12A                                                         00165002
    USING STOGROUP AMIOPSSG                                             00166001
    ERASE NO                                                            00167000
    LOCKSIZE PAGE LOCKMAX SYSTEM                                        00168000
    BUFFERPOOL BP0                                                      00169000
    CLOSE NO                                                            00170000
    CCSID EBCDIC;                                                       00171000
                                                                        00172000
  CREATE TABLESPACE DSN8S12P                                            00173002
    IN DSN8D12A                                                         00174002
    USING STOGROUP AMIOPSSG                                             00175001
    SEGSIZE 4                                                           00176000
    LOCKSIZE ROW                                                        00177000
    BUFFERPOOL BP0                                                      00178000
    CLOSE NO                                                            00179000
    CCSID EBCDIC;                                                       00180000
                                                                        00181000
  COMMIT ;                                                              00182000
                                                                        00183000
  CREATE TABLESPACE DSN8S12S                                            00184002
    IN DSN8D12A                                                         00185002
    USING STOGROUP AMIOPSSG                                             00186001
    ERASE NO                                                            00187000
    LOCKSIZE PAGE LOCKMAX SYSTEM                                        00188000
    BUFFERPOOL BP0                                                      00189000
    CLOSE NO                                                            00190000
    CCSID EBCDIC;                                                       00191000
                                                                        00192000
  CREATE TABLESPACE DSN8S12X                                            00193002
    IN DSN8D12X                                                         00194002
    USING STOGROUP AMIOPSSG                                             00195001
    ERASE NO                                                            00196000
    LOCKSIZE PAGE LOCKMAX SYSTEM                                        00197000
    BUFFERPOOL BP0                                                      00198000
    CLOSE NO                                                            00199000
    CCSID EBCDIC;                                                       00200000
                                                                        00201000
  COMMIT;                                                               00202000
                                                                        00203000
//*                                                                     00204000
//*        STEP  2: CREATE SAMPLE TABLES, VIEWS                         00205000
//*                                                                     00206000
//PH01S02 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00207000
//SYSTSPRT DD  SYSOUT=*                                                 00208000
//SYSTSIN  DD  *                                                        00209000
  DSN SYSTEM(DB2S)                                                      00210002
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA12) -                                00211002
 LIB ('DB2S.RUNLIB.LOAD')                                               00211102
//SYSPRINT DD  SYSOUT=*                                                 00213000
//SYSUDUMP DD  SYSOUT=*                                                 00214000
//SYSIN    DD  *                                                        00215000
  SET CURRENT SQLID = 'SYSADM';                                         00216000
  SET CURRENT APPLICATION COMPATIBILITY = 'V11R1';                      00216100
                                                                        00217000
  CREATE TABLE DSN8120.DEPT                                             00218002
                (DEPTNO   CHAR(3)        NOT NULL,                      00219000
                 DEPTNAME VARCHAR(36)    NOT NULL,                      00220000
                 MGRNO    CHAR(6)                ,                      00221000
                 ADMRDEPT CHAR(3)        NOT NULL,                      00222000
                 LOCATION CHAR(16)               ,                      00223000
                 PRIMARY KEY(DEPTNO))                                   00224000
         IN DSN8D12A.DSN8S12D                                           00225002
         CCSID EBCDIC;                                                  00226000
                                                                        00227000
  CREATE UNIQUE INDEX DSN8120.XDEPT1                                    00228002
                   ON DSN8120.DEPT                                      00229002
                       (DEPTNO   ASC)                                   00230000
                   USING STOGROUP AMIOPSSG                              00231001
                   ERASE NO                                             00232000
                   BUFFERPOOL BP0                                       00233000
                   CLOSE NO;                                            00234000
                                                                        00235000
  CREATE INDEX DSN8120.XDEPT2                                           00236002
                   ON DSN8120.DEPT                                      00237002
                       (MGRNO   ASC)                                    00238000
                   USING STOGROUP AMIOPSSG                              00239001
                   ERASE NO                                             00240000
                   BUFFERPOOL BP0                                       00241000
                   CLOSE NO;                                            00242000
                                                                        00243000
  CREATE INDEX DSN8120.XDEPT3                                           00244002
                   ON DSN8120.DEPT                                      00245002
                       (ADMRDEPT ASC)                                   00246000
                   USING STOGROUP AMIOPSSG                              00247001
                   ERASE NO                                             00248000
                   BUFFERPOOL BP0                                       00249000
                   CLOSE NO;                                            00250000
                                                                        00251000
  CREATE VIEW DSN8120.VDEPT                                             00252002
     AS SELECT ALL      DEPTNO  ,                                       00253000
                        DEPTNAME,                                       00254000
                        MGRNO   ,                                       00255000
                        ADMRDEPT                                        00256000
     FROM DSN8120.DEPT;                                                 00257002
                                                                        00258000
  CREATE VIEW DSN8120.VHDEPT                                            00259002
     AS SELECT ALL      DEPTNO  ,                                       00260000
                        DEPTNAME,                                       00261000
                        MGRNO   ,                                       00262000
                        ADMRDEPT,                                       00263000
                        LOCATION                                        00264000
     FROM DSN8120.DEPT;                                                 00265002
                                                                        00266000
  COMMIT ;                                                              00267000
                                                                        00268000
  CREATE TABLE DSN8120.EMP                                              00269002
                (EMPNO     CHAR(6)        NOT NULL,                     00270000
                 FIRSTNME  VARCHAR(12)    NOT NULL,                     00271000
                 MIDINIT   CHAR(1)        NOT NULL,                     00272000
                 LASTNAME  VARCHAR(15)    NOT NULL,                     00273000
                 WORKDEPT  CHAR(3)                ,                     00274000
                 PHONENO   CHAR(4) CONSTRAINT NUMBER CHECK              00275000
                  (PHONENO >= '0000' AND PHONENO <= '9999'),            00276000
                 HIREDATE  DATE                   ,                     00277000
                 JOB       CHAR(8)                ,                     00278000
                 EDLEVEL   SMALLINT               ,                     00279000
                 SEX       CHAR(1)                ,                     00280000
                 BIRTHDATE DATE                   ,                     00281000
                 SALARY    DECIMAL(9, 2)          ,                     00282000
                 BONUS     DECIMAL(9, 2)          ,                     00283000
                 COMM      DECIMAL(9, 2)          ,                     00284000
                 PRIMARY KEY(EMPNO),                                    00285000
                 FOREIGN KEY RED (WORKDEPT) REFERENCES DSN8120.DEPT     00286002
                   ON DELETE SET NULL)                                  00287000
         PARTITION BY RANGE (EMPNO)                                     00288000
                (PARTITION 1 ENDING AT('099999'),                       00289000
                 PARTITION 2 ENDING AT('199999'),                       00290000
                 PARTITION 3 ENDING AT('299999'),                       00291000
                 PARTITION 4 ENDING AT('999999'))                       00292000
         EDITPROC  DSN8EAE1                                             00293000
         IN DSN8D12A.DSN8S12E                                           00294002
         CCSID EBCDIC;                                                  00295000
                                                                        00296000
  CREATE UNIQUE INDEX DSN8120.XEMP1                                     00297002
                   ON DSN8120.EMP                                       00298002
                       (EMPNO    ASC)                                   00299000
                   USING STOGROUP AMIOPSSG                              00300001
                   ERASE NO                                             00301000
                   BUFFERPOOL BP0                                       00302000
                   CLOSE NO;                                            00303000
                                                                        00304000
  CREATE INDEX DSN8120.XEMP2                                            00305002
                   ON DSN8120.EMP                                       00306002
                       (WORKDEPT ASC)                                   00307000
                   USING STOGROUP AMIOPSSG                              00308001
                   ERASE NO                                             00309000
                   BUFFERPOOL BP0                                       00310000
                   CLOSE NO;                                            00311000
                                                                        00312000
  CREATE VIEW DSN8120.VEMP                                              00313002
     AS SELECT ALL      EMPNO   ,                                       00314000
                        FIRSTNME,                                       00315000
                        MIDINIT ,                                       00316000
                        LASTNAME,                                       00317000
                        WORKDEPT                                        00318000
     FROM DSN8120.EMP;                                                  00319002
                                                                        00320000
  COMMIT ;                                                              00321000
                                                                        00322000
  CREATE TABLE DSN8120.PROJ                                             00323002
                (PROJNO   CHAR(6) PRIMARY KEY NOT NULL,                 00324000
                 PROJNAME VARCHAR(24)    NOT NULL WITH DEFAULT          00325000
                   'PROJECT NAME UNDEFINED',                            00326000
                 DEPTNO   CHAR(3)        NOT NULL REFERENCES            00327000
                   DSN8120.DEPT ON DELETE RESTRICT,                     00328002
                 RESPEMP  CHAR(6)        NOT NULL REFERENCES            00329000
                   DSN8120.EMP ON DELETE RESTRICT,                      00330002
                 PRSTAFF  DECIMAL(5, 2)          ,                      00331000
                 PRSTDATE DATE                   ,                      00332000
                 PRENDATE DATE                   ,                      00333000
                 MAJPROJ  CHAR(6))                                      00334000
         IN DSN8D12A.DSN8S12P                                           00335002
         CCSID EBCDIC;                                                  00336000
                                                                        00337000
  ALTER  TABLESPACE DSN8D12A.DSN8S12P   CLOSE NO;                       00338002
                                                                        00339000
  ALTER  TABLESPACE DSN8D12A.DSN8S12E                                   00340002
         PART 3 COMPRESS NO;                                            00341000
                                                                        00342000
  CREATE UNIQUE INDEX DSN8120.XPROJ1                                    00343002
                   ON DSN8120.PROJ                                      00344002
                       (PROJNO   ASC)                                   00345000
                   USING STOGROUP AMIOPSSG                              00346001
                   ERASE NO                                             00347000
                   BUFFERPOOL BP0                                       00348000
                   CLOSE NO;                                            00349000
                                                                        00350000
  CREATE INDEX DSN8120.XPROJ2                                           00351002
                   ON DSN8120.PROJ                                      00352002
                       (RESPEMP  ASC)                                   00353000
                   USING STOGROUP AMIOPSSG                              00354001
                   ERASE NO                                             00355000
                   BUFFERPOOL BP0                                       00356000
                   CLOSE NO;                                            00357000
                                                                        00358000
  CREATE VIEW DSN8120.VPROJ                                             00359002
     AS SELECT ALL                                                      00360000
               PROJNO, PROJNAME, DEPTNO, RESPEMP, PRSTAFF,              00361000
               PRSTDATE, PRENDATE, MAJPROJ                              00362000
     FROM DSN8120.PROJ ;                                                00363002
                                                                        00364000
  COMMIT ;                                                              00365000
                                                                        00366000
  CREATE TABLE DSN8120.ACT                                              00367002
                (ACTNO    SMALLINT       NOT NULL,                      00368000
                 ACTKWD   CHAR(6)        NOT NULL,                      00369000
                 ACTDESC  VARCHAR(20)    NOT NULL,                      00370000
                 PRIMARY KEY(ACTNO))                                    00371000
         IN DSN8D12A.DSN8S12P                                           00372002
         CCSID EBCDIC;                                                  00373000
                                                                        00374000
  ALTER  TABLESPACE DSN8D12A.DSN8S12P   CLOSE NO;                       00375002
                                                                        00376000
  CREATE UNIQUE INDEX DSN8120.XACT1                                     00377002
                   ON DSN8120.ACT                                       00378002
                       (ACTNO    ASC)                                   00379000
                   USING STOGROUP AMIOPSSG                              00380001
                   ERASE NO                                             00381000
                   BUFFERPOOL BP0                                       00382000
                   CLOSE NO;                                            00383000
                                                                        00384000
  CREATE UNIQUE INDEX DSN8120.XACT2                                     00385002
                   ON DSN8120.ACT                                       00386002
                       (ACTKWD   ASC)                                   00387000
                   USING STOGROUP AMIOPSSG                              00388001
                   ERASE NO                                             00389000
                   BUFFERPOOL BP0                                       00390000
                   CLOSE NO;                                            00391000
                                                                        00392000
  CREATE VIEW DSN8120.VACT                                              00393002
        AS SELECT ALL      ACTNO   ,                                    00394000
                        ACTKWD  ,                                       00395000
                        ACTDESC                                         00396000
             FROM DSN8120.ACT ;                                         00397002
                                                                        00398000
  COMMIT ;                                                              00399000
                                                                        00400000
  CREATE TABLE DSN8120.PROJACT                                          00401002
                (PROJNO   CHAR(6)        NOT NULL,                      00402000
                 ACTNO    SMALLINT       NOT NULL,                      00403000
                 ACSTAFF  DECIMAL(5, 2)          ,                      00404000
                 ACSTDATE DATE           NOT NULL,                      00405000
                 ACENDATE DATE                   ,                      00406000
                 PRIMARY KEY(PROJNO,ACTNO,ACSTDATE),                    00407000
                 FOREIGN KEY RPAP (PROJNO) REFERENCES DSN8120.PROJ      00408002
                   ON DELETE RESTRICT,                                  00409000
                 FOREIGN KEY RPAA (ACTNO) REFERENCES DSN8120.ACT        00410002
                   ON DELETE RESTRICT)                                  00411000
         IN DSN8D12A.DSN8S12P                                           00412002
         CCSID EBCDIC;                                                  00413000
                                                                        00414000
  ALTER  TABLESPACE DSN8D12A.DSN8S12P   CLOSE NO;                       00415002
                                                                        00416000
  CREATE UNIQUE INDEX DSN8120.XPROJAC1                                  00417002
                   ON DSN8120.PROJACT                                   00418002
                       (PROJNO   ASC,                                   00419000
                        ACTNO    ASC,                                   00420000
                        ACSTDATE ASC)                                   00421000
                   USING STOGROUP AMIOPSSG                              00422001
                   ERASE NO                                             00423000
                   BUFFERPOOL BP0                                       00424000
                   CLOSE NO;                                            00425000
                                                                        00426000
  CREATE VIEW DSN8120.VPROJACT                                          00427002
        AS SELECT ALL                                                   00428000
              PROJNO,ACTNO, ACSTAFF, ACSTDATE, ACENDATE                 00429000
              FROM DSN8120.PROJACT ;                                    00430002
                                                                        00431000
  COMMIT ;                                                              00432000
                                                                        00433000
  CREATE TABLE DSN8120.EMPPROJACT                                       00434002
                (EMPNO    CHAR(6)        NOT NULL,                      00435000
                 PROJNO   CHAR(6)        NOT NULL,                      00436000
                 ACTNO    SMALLINT       NOT NULL,                      00437000
                 EMPTIME  DECIMAL(5, 2)          ,                      00438000
                 EMSTDATE DATE                   ,                      00439000
                 EMENDATE DATE                   ,                      00440000
                 FOREIGN KEY REPAPA (PROJNO, ACTNO, EMSTDATE)           00441000
                   REFERENCES DSN8120.PROJACT                           00442002
                   ON DELETE RESTRICT,                                  00443000
                 FOREIGN KEY REPAE (EMPNO) REFERENCES DSN8120.EMP       00444002
                   ON DELETE RESTRICT)                                  00445000
         IN DSN8D12A.DSN8S12P                                           00446002
         CCSID EBCDIC;                                                  00447000
                                                                        00448000
  ALTER  TABLESPACE DSN8D12A.DSN8S12P   CLOSE NO;                       00449002
                                                                        00450000
  CREATE UNIQUE INDEX DSN8120.XEMPPROJACT1                              00451002
                   ON DSN8120.EMPPROJACT                                00452002
                       (PROJNO   ASC,                                   00453000
                        ACTNO    ASC,                                   00454000
                        EMSTDATE ASC,                                   00455000
                        EMPNO    ASC)                                   00456000
                   USING STOGROUP AMIOPSSG                              00457001
                   ERASE NO                                             00458000
                   BUFFERPOOL BP0                                       00459000
                   CLOSE NO;                                            00460000
                                                                        00461000
  CREATE INDEX DSN8120.XEMPPROJACT2                                     00462002
                   ON DSN8120.EMPPROJACT                                00463002
                       (EMPNO    ASC)                                   00464000
                   USING STOGROUP AMIOPSSG                              00465001
                   ERASE NO                                             00466000
                   BUFFERPOOL BP0                                       00467000
                   CLOSE NO;                                            00468000
                                                                        00469000
  CREATE VIEW DSN8120.VEMPPROJACT                                       00470002
        AS SELECT ALL                                                   00471000
            EMPNO, PROJNO, ACTNO, EMPTIME, EMSTDATE, EMENDATE           00472000
            FROM DSN8120.EMPPROJACT ;                                   00473002
                                                                        00474000
  COMMIT ;                                                              00475000
                                                                        00476000
  CREATE TABLE DSN8120.PARTS                                            00477002
                (ITEMNUM   CHAR(6)        NOT NULL,                     00478000
                 DESCRIPT  VARCHAR(30)    NOT NULL,                     00479000
                 COLOR     VARCHAR(8)             ,                     00480000
                 SUPPLIER  VARCHAR(15)    NOT NULL)                     00481000
         IN DSN8D12A.DSN8S12S                                           00482002
         CCSID EBCDIC;                                                  00483000
                                                                        00484000
  CREATE INDEX DSN8120.XPARTS                                           00485002
                   ON DSN8120.PARTS                                     00486002
                       (ITEMNUM  ASC)                                   00487000
                   USING STOGROUP AMIOPSSG                              00488001
                   ERASE NO                                             00489000
                   BUFFERPOOL BP0                                       00490000
                   CLOSE NO;                                            00491000
                                                                        00492000
  COMMIT ;                                                              00493000
                                                                        00494000
  CREATE TABLE DSN8120.TCONA                                            00495002
                (CONVID   CHAR(16)       NOT NULL,                      00496000
                 LASTSCR  CHAR(8)        NOT NULL,                      00497000
                 LASTPOS  CHAR(254)      NOT NULL,                      00498000
                 LASTPOSC CHAR(254)      NOT NULL,                      00499000
                 LASTMSG  VARCHAR(1609)  NOT NULL)                      00500000
         IN DSN8D12P.DSN8S12C                                           00501002
         CCSID EBCDIC;                                                  00502000
                                                                        00503000
  CREATE UNIQUE INDEX DSN8120.XCONA1                                    00504002
                   ON DSN8120.TCONA                                     00505002
                       (CONVID   ASC)                                   00506000
                   USING STOGROUP AMIOPSSG                              00507001
                   ERASE NO                                             00508000
                   BUFFERPOOL BP0                                       00509000
                   CLOSE NO;                                            00510000
                                                                        00511000
  CREATE VIEW DSN8120.VCONA                                             00512002
     AS SELECT ALL                                                      00513000
                 CONVID, LASTSCR, LASTPOS, LASTPOSC, LASTMSG            00514000
     FROM DSN8120.TCONA ;                                               00515002
                                                                        00516000
  COMMIT ;                                                              00517000
                                                                        00518000
  CREATE TABLE DSN8120.TOPTVAL                                          00519002
                (MAJSYS   CHAR(1)        NOT NULL,                      00520000
                 ACTION   CHAR(1)        NOT NULL,                      00521000
                 OBJFLD   CHAR(2)        NOT NULL,                      00522000
                 SRCHCRIT CHAR(2)        NOT NULL,                      00523000
                 SCRTYPE  CHAR(1)        NOT NULL,                      00524000
                 HEADTXT  CHAR(50)       NOT NULL,                      00525000
                 SELTXT   CHAR(50)       NOT NULL,                      00526000
                 INFOTXT  CHAR(79)       NOT NULL,                      00527000
                 HELPTXT  CHAR(79)       NOT NULL,                      00528000
                 PFKTXT   CHAR(79)       NOT NULL,                      00529000
                 DSPINDEX CHAR(2)        NOT NULL)                      00530000
         IN DSN8D12P.DSN8S12C                                           00531002
         CCSID EBCDIC;                                                  00532000
                                                                        00533000
  CREATE UNIQUE INDEX DSN8120.XOPTVAL1                                  00534002
                   ON DSN8120.TOPTVAL                                   00535002
                       (MAJSYS   ASC,                                   00536000
                        ACTION   ASC,                                   00537000
                        OBJFLD   ASC,                                   00538000
                        SRCHCRIT ASC,                                   00539000
                        SCRTYPE  ASC)                                   00540000
                   USING STOGROUP AMIOPSSG                              00541001
                   ERASE NO                                             00542000
                   BUFFERPOOL BP0                                       00543000
                   CLOSE NO;                                            00544000
                                                                        00545000
  CREATE VIEW DSN8120.VOPTVAL                                           00546002
     AS SELECT ALL                                                      00547000
          MAJSYS, ACTION, OBJFLD, SRCHCRIT, SCRTYPE, HEADTXT,           00548000
          SELTXT, INFOTXT, HELPTXT, PFKTXT, DSPINDEX                    00549000
     FROM DSN8120.TOPTVAL ;                                             00550002
                                                                        00551000
  COMMIT ;                                                              00552000
                                                                        00553000
  CREATE TABLE DSN8120.TDSPTXT                                          00554002
                (DSPINDEX CHAR(2)        NOT NULL,                      00555000
                 LINENO   CHAR(2)        NOT NULL,                      00556000
                 DSPLINE  CHAR(79)       NOT NULL)                      00557000
         IN DSN8D12P.DSN8S12C                                           00558002
         CCSID EBCDIC;                                                  00559000
                                                                        00560000
  CREATE UNIQUE INDEX DSN8120.XDSPTXT1                                  00561002
                   ON DSN8120.TDSPTXT                                   00562002
                       (DSPINDEX ASC,                                   00563000
                        LINENO   ASC)                                   00564000
                   USING STOGROUP AMIOPSSG                              00565001
                   ERASE NO                                             00566000
                   BUFFERPOOL BP0                                       00567000
                   CLOSE NO;                                            00568000
                                                                        00569000
  CREATE VIEW DSN8120.VDSPTXT                                           00570002
     AS SELECT ALL                                                      00571000
                 DSPINDEX, LINENO, DSPLINE                              00572000
     FROM DSN8120.TDSPTXT ;                                             00573002
                                                                        00574000
  COMMIT;                                                               00575000
                                                                        00576000
  ALTER TABLE DSN8120.DEPT                                              00577002
     FOREIGN KEY RDD (ADMRDEPT) REFERENCES DSN8120.DEPT                 00578002
       ON DELETE CASCADE;                                               00579000
  ALTER TABLE DSN8120.DEPT                                              00580002
     FOREIGN KEY RDE (MGRNO) REFERENCES DSN8120.EMP                     00581002
       ON DELETE SET NULL;                                              00582000
  ALTER TABLE DSN8120.PROJ                                              00583002
     FOREIGN KEY RPP (MAJPROJ) REFERENCES DSN8120.PROJ                  00584002
       ON DELETE CASCADE;                                               00585000
                                                                        00586000
  COMMIT;                                                               00587000
                                                                        00588000
  CREATE TABLE DSN8120.EDEPT    LIKE DSN8120.DEPT                       00589002
         IN DSN8D12A.DSN8S12R ;                                         00590002
  CREATE TABLE DSN8120.EEMP     LIKE DSN8120.EMP                        00591002
         IN DSN8D12A.DSN8S12R ;                                         00592002
  CREATE TABLE DSN8120.EPROJ    LIKE DSN8120.PROJ                       00593002
         IN DSN8D12A.DSN8S12R ;                                         00594002
  CREATE TABLE DSN8120.EACT     LIKE DSN8120.ACT                        00595002
         IN DSN8D12A.DSN8S12R ;                                         00596002
  CREATE TABLE DSN8120.EPROJACT LIKE DSN8120.PROJACT                    00597002
         IN DSN8D12A.DSN8S12R ;                                         00598002
  CREATE TABLE DSN8120.EEPA     LIKE DSN8120.EMPPROJACT                 00599002
         IN DSN8D12A.DSN8S12R ;                                         00600002
                                                                        00601000
  COMMIT;                                                               00602000
                                                                        00603000
  ALTER TABLE DSN8120.EDEPT                                             00604002
        ADD RID      CHAR(4);                                           00605000
  ALTER TABLE DSN8120.EDEPT                                             00606002
        ADD TSTAMP   TIMESTAMP;                                         00607000
  ALTER TABLE DSN8120.EEMP                                              00608002
        ADD RID      CHAR(4);                                           00609000
  ALTER TABLE DSN8120.EEMP                                              00610002
        ADD TSTAMP   TIMESTAMP;                                         00611000
  ALTER TABLE DSN8120.EPROJ                                             00612002
        ADD RID      CHAR(4);                                           00613000
  ALTER TABLE DSN8120.EPROJ                                             00614002
        ADD TSTAMP   TIMESTAMP;                                         00615000
  ALTER TABLE DSN8120.EACT                                              00616002
        ADD RID      CHAR(4);                                           00617000
  ALTER TABLE DSN8120.EACT                                              00618002
        ADD TSTAMP   TIMESTAMP;                                         00619000
  ALTER TABLE DSN8120.EPROJACT                                          00620002
        ADD RID      CHAR(4);                                           00621000
  ALTER TABLE DSN8120.EPROJACT                                          00622002
        ADD TSTAMP   TIMESTAMP;                                         00623000
  ALTER TABLE DSN8120.EEPA                                              00624002
        ADD RID      CHAR(4);                                           00625000
  ALTER TABLE DSN8120.EEPA                                              00626002
        ADD TSTAMP   TIMESTAMP;                                         00627000
                                                                        00628000
  COMMIT;                                                               00629000
                                                                        00630000
  CREATE SEQUENCE DSN8120.POID                                          00631002
    AS BIGINT                                                           00632000
    START WITH 1000                                                     00633000
    INCREMENT BY 1;                                                     00634000
                                                                        00635000
  CREATE SEQUENCE DSN8120.CID                                           00636002
    AS BIGINT                                                           00637000
    START WITH 1000                                                     00638000
    INCREMENT BY 1;                                                     00639000
                                                                        00640000
  CREATE TABLE DSN8120.PRODUCT                                          00641002
    ( PID              VARCHAR(10)   NOT NULL PRIMARY KEY               00642000
     ,NAME             VARCHAR(128)                                     00643000
     ,PRICE            DECIMAL(30, 2)                                   00644000
     ,PROMOPRICE       DECIMAL(30, 2)                                   00645000
     ,PROMOSTART       DATE                                             00646000
     ,PROMOEND         DATE                                             00647000
     ,DESCRIPTION      XML )                                            00648000
    IN DSN8D12X.DSN8S12X                                                00649002
    CCSID EBCDIC;                                                       00650000
                                                                        00651000
  CREATE UNIQUE INDEX DSN8120.PROD_NAME_PIDX                            00652002
    ON DSN8120.PRODUCT(PID)                                             00653002
    USING STOGROUP AMIOPSSG;                                            00654001
                                                                        00655000
  CREATE INDEX DSN8120.PROD_NAME_XMLIDX                                 00656002
    ON DSN8120.PRODUCT(DESCRIPTION)                                     00657002
    GENERATE KEY USING XMLPATTERN '/PRODUCT/DESCRIPTION/NAME'           00658002
      AS SQL VARCHAR(128)                                               00659000
    USING STOGROUP AMIOPSSG;                                            00660001
                                                                        00661000
  CREATE INDEX DSN8120.PROD_DETAIL_XMLIDX                               00662002
    ON DSN8120.PRODUCT(DESCRIPTION)                                     00663002
    GENERATE KEY USING XMLPATTERN '/PRODUCT/DESCRIPTION/DETAIL'         00664002
      AS SQL VARCHAR(128)                                               00665000
    USING STOGROUP AMIOPSSG;                                            00666001
                                                                        00667000
  CREATE TABLE DSN8120.INVENTORY                                        00668002
    ( PID              VARCHAR(10)  NOT NULL PRIMARY KEY,               00669000
      QUANTITY         INTEGER,                                         00670000
      LOCATION         VARCHAR(128) )                                   00671000
    IN DSN8D12X.DSN8S12X                                                00672002
    CCSID EBCDIC;                                                       00673000
                                                                        00674000
  CREATE UNIQUE INDEX DSN8120.INVENTORY_PIDX                            00675002
    ON DSN8120.INVENTORY(PID)                                           00676002
    USING STOGROUP AMIOPSSG;                                            00677001
                                                                        00678000
  CREATE TABLE DSN8120.CUSTOMER                                         00679002
    ( CID              BIGINT       NOT NULL PRIMARY KEY,               00680000
      INFO             XML,                                             00681000
      HISTORY          XML )                                            00682000
    IN DSN8D12X.DSN8S12X                                                00683002
    CCSID EBCDIC;                                                       00684000
                                                                        00685000
  CREATE UNIQUE INDEX DSN8120.CUSTOMER_CIDX                             00686002
    ON DSN8120.CUSTOMER(CID)                                            00687002
    USING STOGROUP AMIOPSSG;                                            00688001
                                                                        00689000
  CREATE TABLE DSN8120.PURCHASEORDER                                    00690002
    ( POID             BIGINT       NOT NULL PRIMARY KEY,               00691000
      STATUS           VARCHAR(10)  NOT NULL WITH DEFAULT 'NEW',        00692002
      PORDER           XML )                                            00693000
    IN DSN8D12X.DSN8S12X                                                00694002
    CCSID EBCDIC;                                                       00695000
                                                                        00696000
  CREATE UNIQUE INDEX DSN8120.PURCHASEORDER_POIDX                       00697002
    ON DSN8120.PURCHASEORDER(POID)                                      00698002
    USING STOGROUP AMIOPSSG;                                            00699001
                                                                        00700000
  CREATE TABLE DSN8120.CATALOG                                          00701002
    ( NAME             VARCHAR(128) NOT NULL PRIMARY KEY,               00702000
      CATLOG           XML )                                            00703000
    IN DSN8D12X.DSN8S12X                                                00704002
    CCSID EBCDIC;                                                       00705000
                                                                        00706000
  CREATE UNIQUE INDEX DSN8120.CATALOG_NAMEX                             00707002
    ON DSN8120.CATALOG(NAME)                                            00708002
    USING STOGROUP AMIOPSSG;                                            00709001
                                                                        00710000
  CREATE TABLE DSN8120.SUPPLIERS                                        00711002
    ( SID              VARCHAR(10) NOT NULL PRIMARY KEY,                00712000
      ADDR             XML )                                            00713000
    IN DSN8D12X.DSN8S12X                                                00714002
    CCSID EBCDIC;                                                       00715000
                                                                        00716000
  CREATE UNIQUE INDEX DSN8120.SUPPLIERS_SIDX                            00717002
    ON DSN8120.SUPPLIERS(SID)                                           00718002
    USING STOGROUP AMIOPSSG;                                            00719001
                                                                        00720000
  CREATE TABLE DSN8120.PRODUCTSUPPLIER                                  00721002
    ( PID              VARCHAR(10) NOT NULL,                            00722000
      SID              VARCHAR(10) NOT NULL,                            00723000
      PRIMARY KEY(PID,SID) )                                            00724000
    IN DSN8D12X.DSN8S12X                                                00725002
    CCSID EBCDIC;                                                       00726000
                                                                        00727000
  CREATE UNIQUE INDEX DSN8120.PRODUCTSUPPLIER_PID_SIDX                  00728002
    ON DSN8120.PRODUCTSUPPLIER(PID,SID)                                 00729002
    USING STOGROUP AMIOPSSG;                                            00730001
                                                                        00731000
//*                                                                     00732000
//*        STEP  3: CREATE SAMPLE MAPPING TABLE FOR ONLINE REORG        00733000
//*                                                                     00734000
//********************************************************************* 00735000
//*   THE FOLLOWING IS AN EXAMPLE DEFINITION OF THE MAPPING TABLE     * 00736000
//*   THAT IS REQUIRED TO RUN AN ONLINE REORGANIZATION WITH SHRLEVEL  * 00737000
//*   CHANGE.                                                         * 00738000
//*                                                                   * 00739000
//*   A MAPPING TABLE MUST BE CREATED IN A SEGMENTED TABLE SPACE.     * 00740000
//*   THAT TABLESPACE SHOULD CONTAIN ONLY MAPPING TABLES.  IT MUST    * 00741000
//*   NOT BE THE TABLE SPACE THAT IS TO BE REORGANIZED.               * 00742000
//*                                                                   * 00743000
//*   IF YOU WANT CONCURRENT EXECUTIONS OF REORG (ON SEVERAL TABLE    * 00744000
//*   SPACES AND/OR ON SEVERAL PARTITIONS OF A TABLE SPACE) THE       * 00745000
//*   EXECUTIONS SHOULD USE DIFFERENT MAPPING TABLES.                 * 00746000
//********************************************************************* 00747000
//PH01S03 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00748000
//SYSTSPRT DD SYSOUT=*                                                  00749000
//SYSTSIN  DD *                                                         00750000
  DSN SYSTEM(DB2S)                                                      00751002
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA12) -                                00752002
 LIB ('DB2S.RUNLIB.LOAD')                                               00752102
//SYSPRINT DD SYSOUT=*                                                  00754000
//SYSUDUMP DD SYSOUT=*                                                  00755000
//SYSIN    DD *                                                         00756000
  SET CURRENT SQLID = 'SYSADM';                                         00757000
  SET CURRENT APPLICATION COMPATIBILITY = 'V11R1';                      00757100
                                                                        00758000
  CREATE TABLE DSN8120.MAP_TBL                                          00759002
        (TYPE         CHAR( 01 ) NOT NULL,                              00760000
         SOURCE_RID   CHAR( 07 ) NOT NULL,                              00761000
         TARGET_XRID  CHAR( 11 ) NOT NULL,                              00762000
         LRSN         CHAR( 10 ) NOT NULL)                              00763000
     IN DSN8D12P.DSN8S12Q                                               00764002
     CCSID EBCDIC;                                                      00765000
                                                                        00766000
  CREATE UNIQUE INDEX DSN8120.XMAP_TBL                                  00767002
     ON DSN8120.MAP_TBL                                                 00768002
        (SOURCE_RID ASC,                                                00769000
         TYPE,                                                          00770000
         TARGET_XRID,                                                   00771000
         LRSN)                                                          00772000
     USING STOGROUP AMIOPSSG                                            00773001
     ERASE NO                                                           00774000
     BUFFERPOOL BP0                                                     00775000
     CLOSE NO;                                                          00776000
//*                                                                     00777000
//*        STEP  4: CREATE SAMPLE VIEWS                                 00778000
//*                                                                     00779000
//PH01S04 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00780000
//SYSTSPRT DD  SYSOUT=*                                                 00781000
//SYSTSIN  DD  *                                                        00782000
  DSN SYSTEM(DB2S)                                                      00783002
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA12) -                                00784002
 LIB ('DB2S.RUNLIB.LOAD')                                               00784102
//SYSPRINT DD  SYSOUT=*                                                 00786000
//SYSUDUMP DD  SYSOUT=*                                                 00787000
//SYSIN    DD  *                                                        00788000
  SET CURRENT SQLID = 'SYSADM';                                         00789000
                                                                        00790000
  CREATE VIEW DSN8120.VDEPMG1                                           00791002
        (DEPTNO, DEPTNAME, MGRNO, FIRSTNME, MIDINIT, LASTNAME, ADMRDEPT)00792000
      AS SELECT ALL                                                     00793000
         DEPTNO, DEPTNAME, EMPNO, FIRSTNME, MIDINIT, LASTNAME, ADMRDEPT 00794000
          FROM DSN8120.DEPT LEFT OUTER JOIN DSN8120.EMP                 00795002
          ON MGRNO = EMPNO ;                                            00796000
                                                                        00797000
  CREATE VIEW DSN8120.VEMPDPT1                                          00798002
        (DEPTNO, DEPTNAME, EMPNO, FRSTINIT, MIDINIT,                    00799000
         LASTNAME, WORKDEPT)                                            00800000
      AS SELECT ALL                                                     00801000
         DEPTNO, DEPTNAME, EMPNO, SUBSTR(FIRSTNME, 1, 1), MIDINIT,      00802000
         LASTNAME, WORKDEPT                                             00803000
          FROM DSN8120.DEPT RIGHT OUTER JOIN DSN8120.EMP                00804002
          ON WORKDEPT = DEPTNO ;                                        00805000
                                                                        00806000
  CREATE VIEW DSN8120.VASTRDE1                                          00807002
      (DEPT1NO,DEPT1NAM,EMP1NO,EMP1FN,EMP1MI,EMP1LN,TYPE2,              00808000
       DEPT2NO,DEPT2NAM,EMP2NO,EMP2FN,EMP2MI,EMP2LN)                    00809000
      AS SELECT ALL                                                     00810000
          D1.DEPTNO,D1.DEPTNAME,D1.MGRNO,D1.FIRSTNME,D1.MIDINIT,        00811000
          D1.LASTNAME, '1',                                             00812000
          D2.DEPTNO,D2.DEPTNAME,D2.MGRNO,D2.FIRSTNME,D2.MIDINIT,        00813000
          D2.LASTNAME                                                   00814000
          FROM DSN8120.VDEPMG1 D1, DSN8120.VDEPMG1 D2                   00815002
          WHERE D1.DEPTNO = D2.ADMRDEPT ;                               00816000
                                                                        00817000
  CREATE VIEW DSN8120.VASTRDE2                                          00818002
      (DEPT1NO,DEPT1NAM,EMP1NO,EMP1FN,EMP1MI,EMP1LN,TYPE2,              00819000
       DEPT2NO,DEPT2NAM,EMP2NO,EMP2FN,EMP2MI,EMP2LN)                    00820000
      AS SELECT ALL                                                     00821000
           D1.DEPTNO,D1.DEPTNAME,D1.MGRNO,D1.FIRSTNME,D1.MIDINIT,       00822000
           D1.LASTNAME,'2',                                             00823000
           D1.DEPTNO,D1.DEPTNAME,E2.EMPNO,E2.FIRSTNME,E2.MIDINIT,       00824000
           E2.LASTNAME                                                  00825000
           FROM DSN8120.VDEPMG1 D1, DSN8120.EMP E2                      00826002
           WHERE D1.DEPTNO = E2.WORKDEPT;                               00827000
                                                                        00828000
  CREATE VIEW DSN8120.VPROJRE1                                          00829002
    (PROJNO,PROJNAME,PROJDEP,RESPEMP,FIRSTNME,MIDINIT,LASTNAME,MAJPROJ) 00830000
     AS SELECT ALL                                                      00831000
        PROJNO,PROJNAME,DEPTNO,EMPNO,FIRSTNME,MIDINIT,LASTNAME,MAJPROJ  00832000
       FROM DSN8120.PROJ, DSN8120.EMP                                   00833002
       WHERE RESPEMP = EMPNO ;                                          00834000
                                                                        00835000
  CREATE VIEW DSN8120.VPSTRDE1                                          00836002
    (PROJ1NO,PROJ1NAME,RESP1NO,RESP1FN,RESP1MI,RESP1LN,                 00837000
     PROJ2NO,PROJ2NAME,RESP2NO,RESP2FN,RESP2MI,RESP2LN)                 00838000
     AS SELECT ALL                                                      00839000
          P1.PROJNO,P1.PROJNAME,P1.RESPEMP,P1.FIRSTNME,P1.MIDINIT,      00840000
          P1.LASTNAME,                                                  00841000
          P2.PROJNO,P2.PROJNAME,P2.RESPEMP,P2.FIRSTNME,P2.MIDINIT,      00842000
          P2.LASTNAME                                                   00843000
       FROM DSN8120.VPROJRE1 P1,                                        00844002
         DSN8120.VPROJRE1 P2                                            00845002
       WHERE P1.PROJNO = P2.MAJPROJ ;                                   00846000
                                                                        00847000
  CREATE VIEW DSN8120.VPSTRDE2                                          00848002
    (PROJ1NO,PROJ1NAME,RESP1NO,RESP1FN,RESP1MI,RESP1LN,                 00849000
     PROJ2NO,PROJ2NAME,RESP2NO,RESP2FN,RESP2MI,RESP2LN)                 00850000
     AS SELECT ALL                                                      00851000
          P1.PROJNO,P1.PROJNAME,P1.RESPEMP,P1.FIRSTNME,P1.MIDINIT,      00852000
          P1.LASTNAME,                                                  00853000
          P1.PROJNO,P1.PROJNAME,P1.RESPEMP,P1.FIRSTNME,P1.MIDINIT,      00854000
          P1.LASTNAME                                                   00855000
       FROM DSN8120.VPROJRE1 P1                                         00856002
         WHERE NOT EXISTS                                               00857000
           (SELECT * FROM DSN8120.VPROJRE1 P2                           00858002
             WHERE P1.PROJNO = P2.MAJPROJ) ;                            00859000
                                                                        00860000
  CREATE VIEW DSN8120.VFORPLA                                           00861002
    (PROJNO,PROJNAME,RESPEMP,PROJDEP,FRSTINIT,MIDINIT,LASTNAME)         00862000
     AS SELECT ALL                                                      00863000
        F1.PROJNO,PROJNAME,RESPEMP,PROJDEP, SUBSTR(FIRSTNME, 1, 1),     00864000
        MIDINIT, LASTNAME                                               00865000
       FROM DSN8120.VPROJRE1 F1 LEFT OUTER JOIN DSN8120.EMPPROJACT F2   00866002
       ON F1.PROJNO = F2.PROJNO;                                        00867000
                                                                        00868000
  CREATE VIEW DSN8120.VSTAFAC1                                          00869002
    (PROJNO, ACTNO, ACTDESC, EMPNO, FIRSTNME, MIDINIT, LASTNAME,        00870000
     EMPTIME,STDATE,ENDATE, TYPE)                                       00871000
     AS SELECT ALL                                                      00872000
           PA.PROJNO, PA.ACTNO, AC.ACTDESC,' ', ' ', ' ', ' ',          00873000
           PA.ACSTAFF, PA.ACSTDATE,                                     00874000
           PA.ACENDATE,'1'                                              00875000
       FROM DSN8120.PROJACT PA, DSN8120.ACT AC                          00876002
       WHERE PA.ACTNO = AC.ACTNO ;                                      00877000
                                                                        00878000
  CREATE VIEW DSN8120.VSTAFAC2                                          00879002
    (PROJNO, ACTNO, ACTDESC, EMPNO, FIRSTNME, MIDINIT, LASTNAME,        00880000
     EMPTIME,STDATE, ENDATE, TYPE)                                      00881000
     AS SELECT ALL                                                      00882000
           EP.PROJNO, EP.ACTNO, AC.ACTDESC, EP.EMPNO,EM.FIRSTNME,       00883000
           EM.MIDINIT, EM.LASTNAME, EP.EMPTIME, EP.EMSTDATE,            00884000
           EP.EMENDATE,'2'                                              00885000
       FROM DSN8120.EMPPROJACT EP, DSN8120.ACT AC, DSN8120.EMP EM       00886002
       WHERE EP.ACTNO = AC.ACTNO  AND EP.EMPNO = EM.EMPNO ;             00887000
                                                                        00888000
  CREATE VIEW DSN8120.VPHONE                                            00889002
                (LASTNAME,                                              00890000
                 FIRSTNAME,                                             00891000
                 MIDDLEINITIAL,                                         00892000
                 PHONENUMBER,                                           00893000
                 EMPLOYEENUMBER,                                        00894000
                 DEPTNUMBER,                                            00895000
                 DEPTNAME)                                              00896000
     AS SELECT ALL      LASTNAME,                                       00897000
                        FIRSTNME,                                       00898000
                        MIDINIT ,                                       00899000
                        VALUE(PHONENO,'    '),                          00900000
                        EMPNO,                                          00901000
                        DEPTNO,                                         00902000
                        DEPTNAME                                        00903000
     FROM DSN8120.EMP, DSN8120.DEPT                                     00904002
     WHERE WORKDEPT = DEPTNO;                                           00905000
                                                                        00906000
  CREATE VIEW DSN8120.VEMPLP                                            00907002
                (EMPLOYEENUMBER,                                        00908000
                 PHONENUMBER)                                           00909000
     AS SELECT ALL      EMPNO   ,                                       00910000
                        PHONENO                                         00911000
     FROM DSN8120.EMP ;                                                 00912002
//*                                                                     00913000
//*        STEP  5: DROP ALIASES                                        00914000
//*                                                                     00915000
//PH01S05 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00916000
//SYSTSPRT DD  SYSOUT=*                                                 00917000
//SYSTSIN  DD  *                                                        00918000
  DSN SYSTEM(DB2S)                                                      00919002
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA12) PARM('RC0') -                    00920002
 LIB ('DB2S.RUNLIB.LOAD')                                               00920102
//SYSPRINT DD  SYSOUT=*                                                 00922000
//SYSUDUMP DD  SYSOUT=*                                                 00923000
//SYSIN    DD  *                                                        00924000
  SET CURRENT SQLID = 'SYSADM';                                         00925000
  DROP   ALIAS ACT         ;                                            00926000
  DROP   ALIAS TCONA       ;                                            00927000
  DROP   ALIAS DEPT        ;                                            00928000
  DROP   ALIAS TDSPTXT     ;                                            00929000
  DROP   ALIAS EMP         ;                                            00930000
  DROP   ALIAS EMPPROJACT  ;                                            00931000
  DROP   ALIAS TOPTVAL     ;                                            00932000
  DROP   ALIAS PROJACT     ;                                            00933000
  DROP   ALIAS PROJ        ;                                            00934000
  DROP   ALIAS VPHONE      ;                                            00935000
  DROP   ALIAS VACT        ;                                            00936000
  DROP   ALIAS VCONA       ;                                            00937000
  DROP   ALIAS VDEPT       ;                                            00938000
  DROP   ALIAS VHDEPT      ;                                            00939000
  DROP   ALIAS VDSPTXT     ;                                            00940000
  DROP   ALIAS VEMP        ;                                            00941000
  DROP   ALIAS VEMPPROJACT ;                                            00942000
  DROP   ALIAS VOPTVAL     ;                                            00943000
  DROP   ALIAS VPROJACT    ;                                            00944000
  DROP   ALIAS VPROJ       ;                                            00945000
  DROP   ALIAS VEMPLP      ;                                            00946000
  DROP   ALIAS VDEPMG1     ;                                            00947000
  DROP   ALIAS VEMPDPT1    ;                                            00948000
  DROP   ALIAS VASTRDE1    ;                                            00949000
  DROP   ALIAS VASTRDE2    ;                                            00950000
  DROP   ALIAS VPROJRE1    ;                                            00951000
  DROP   ALIAS VPSTRDE1    ;                                            00952000
  DROP   ALIAS VPSTRDE2    ;                                            00953000
  DROP   ALIAS VFORPLA     ;                                            00954000
  DROP   ALIAS VSTAFAC1    ;                                            00955000
  DROP   ALIAS VSTAFAC2    ;                                            00956000
  DROP   ALIAS PRODUCT     ;                                            00957000
  DROP   ALIAS INVENTORY   ;                                            00958000
  DROP   ALIAS CUSTOMER    ;                                            00959000
  DROP   ALIAS PURCHASEORDER;                                           00960000
  DROP   ALIAS CATALOG     ;                                            00961000
  DROP   ALIAS SUPPLIERS   ;                                            00962000
  DROP   ALIAS PRODUCTSUPPLIER;                                         00963000
//*                                                                     00964000
//*        STEP  6: GRANT AUTHORITY, CREATE ALIASES                     00965000
//*                                                                     00966000
//PH01S06 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00967000
//SYSTSPRT DD  SYSOUT=*                                                 00968000
//SYSTSIN  DD  *                                                        00969000
  DSN SYSTEM(DB2S)                                                      00970002
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA12) -                                00971002
 LIB ('DB2S.RUNLIB.LOAD')                                               00971202
//SYSPRINT DD  SYSOUT=*                                                 00973000
//SYSUDUMP DD  SYSOUT=*                                                 00974000
//SYSIN    DD  *                                                        00975000
  SET CURRENT SQLID = 'SYSADM';                                         00976000
  CREATE ALIAS ACT           FOR DSN8120.ACT ;                          00977002
  CREATE ALIAS TCONA         FOR DSN8120.TCONA ;                        00978002
  CREATE ALIAS DEPT          FOR DSN8120.DEPT ;                         00979002
  CREATE ALIAS TDSPTXT       FOR DSN8120.TDSPTXT ;                      00980002
  CREATE ALIAS EMP           FOR DSN8120.EMP ;                          00981002
  CREATE ALIAS EMPPROJACT    FOR DSN8120.EMPPROJACT ;                   00982002
  CREATE ALIAS TOPTVAL       FOR DSN8120.TOPTVAL ;                      00983002
  CREATE ALIAS PROJACT       FOR DSN8120.PROJACT ;                      00984002
  CREATE ALIAS PROJ          FOR DSN8120.PROJ ;                         00985002
  CREATE ALIAS VPHONE        FOR DSN8120.VPHONE ;                       00986002
  CREATE ALIAS VACT          FOR DSN8120.VACT ;                         00987002
  CREATE ALIAS VCONA         FOR DSN8120.VCONA ;                        00988002
  CREATE ALIAS VDEPT         FOR DSN8120.VDEPT ;                        00989002
  CREATE ALIAS VHDEPT        FOR DSN8120.VHDEPT ;                       00990002
  CREATE ALIAS VDSPTXT       FOR DSN8120.VDSPTXT ;                      00991002
  CREATE ALIAS VEMP          FOR DSN8120.VEMP ;                         00992002
  CREATE ALIAS VEMPPROJACT   FOR DSN8120.VEMPPROJACT ;                  00993002
  CREATE ALIAS VOPTVAL       FOR DSN8120.VOPTVAL ;                      00994002
  CREATE ALIAS VPROJACT      FOR DSN8120.VPROJACT ;                     00995002
  CREATE ALIAS VPROJ         FOR DSN8120.VPROJ ;                        00996002
  CREATE ALIAS VEMPLP        FOR DSN8120.VEMPLP ;                       00997002
  CREATE ALIAS VDEPMG1       FOR DSN8120.VDEPMG1 ;                      00998002
  CREATE ALIAS VEMPDPT1      FOR DSN8120.VEMPDPT1 ;                     00999002
  CREATE ALIAS VASTRDE1      FOR DSN8120.VASTRDE1;                      01000002
  CREATE ALIAS VASTRDE2      FOR DSN8120.VASTRDE2;                      01001002
  CREATE ALIAS VPROJRE1      FOR DSN8120.VPROJRE1;                      01002002
  CREATE ALIAS VPSTRDE1      FOR DSN8120.VPSTRDE1;                      01003002
  CREATE ALIAS VPSTRDE2      FOR DSN8120.VPSTRDE2;                      01004002
  CREATE ALIAS VFORPLA       FOR DSN8120.VFORPLA;                       01005002
  CREATE ALIAS VSTAFAC1      FOR DSN8120.VSTAFAC1;                      01006002
  CREATE ALIAS VSTAFAC2      FOR DSN8120.VSTAFAC2;                      01007002
  CREATE ALIAS PRODUCT       FOR DSN8120.PRODUCT;                       01008002
  CREATE ALIAS INVENTORY     FOR DSN8120.INVENTORY;                     01009002
  CREATE ALIAS CUSTOMER      FOR DSN8120.CUSTOMER;                      01010002
  CREATE ALIAS PURCHASEORDER FOR DSN8120.PURCHASEORDER;                 01011002
  CREATE ALIAS CATALOG       FOR DSN8120.CATALOG;                       01012002
  CREATE ALIAS SUPPLIERS     FOR DSN8120.SUPPLIERS;                     01013002
  CREATE ALIAS PRODUCTSUPPLIER FOR DSN8120.PRODUCTSUPPLIER;             01014002
                                                                        01015000
  GRANT USE OF STOGROUP AMIOPSSG                                        01016001
        TO PUBLIC;                                                      01017000
  GRANT DBADM ON DATABASE DSN8D12A                                      01018002
        TO PUBLIC;                                                      01019000
  GRANT DBADM ON DATABASE DSN8D12P                                      01020002
        TO PUBLIC;                                                      01021000
  GRANT USE OF TABLESPACE DSN8D12A.DSN8S12D                             01022002
        TO PUBLIC;                                                      01023000
  GRANT USE OF TABLESPACE DSN8D12A.DSN8S12E                             01024002
        TO PUBLIC;                                                      01025000
  GRANT USE OF TABLESPACE DSN8D12A.DSN8S12P                             01026002
        TO PUBLIC;                                                      01027000
  GRANT USE OF TABLESPACE DSN8D12A.DSN8S12S                             01028002
        TO PUBLIC;                                                      01029000
  GRANT USE OF TABLESPACE DSN8D12P.DSN8S12C                             01030002
        TO PUBLIC;                                                      01031000
  GRANT USE OF TABLESPACE DSN8D12P.DSN8S12Q                             01032002
        TO PUBLIC;                                                      01033000
  GRANT USE OF TABLESPACE DSN8D12X.DSN8S12X                             01034002
        TO PUBLIC;                                                      01035000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.ACT             01036002
        TO PUBLIC;                                                      01037000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.TCONA           01038002
        TO PUBLIC;                                                      01039000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.DEPT            01040002
        TO PUBLIC;                                                      01041000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.TDSPTXT         01042002
        TO PUBLIC;                                                      01043000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.EMP             01044002
        TO PUBLIC;                                                      01045000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.EMPPROJACT      01046002
        TO PUBLIC;                                                      01047000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.TOPTVAL         01048002
        TO PUBLIC;                                                      01049000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.PARTS           01050002
        TO PUBLIC;                                                      01051000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.PROJACT         01052002
        TO PUBLIC;                                                      01053000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.PROJ            01054002
        TO PUBLIC;                                                      01055000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.MAP_TBL         01056002
        TO PUBLIC;                                                      01057000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VPHONE          01058002
        TO PUBLIC;                                                      01059000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VACT            01060002
        TO PUBLIC;                                                      01061000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VCONA           01062002
        TO PUBLIC;                                                      01063000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VDEPT           01064002
        TO PUBLIC;                                                      01065000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VHDEPT          01066002
        TO PUBLIC;                                                      01067000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VDSPTXT         01068002
        TO PUBLIC;                                                      01069000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VEMP            01070002
        TO PUBLIC;                                                      01071000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VEMPPROJACT     01072002
        TO PUBLIC;                                                      01073000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VOPTVAL         01074002
        TO PUBLIC;                                                      01075000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VPROJACT        01076002
        TO PUBLIC;                                                      01077000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VPROJ           01078002
        TO PUBLIC;                                                      01079000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VEMPLP          01080002
        TO PUBLIC;                                                      01081000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VDEPMG1         01082002
        TO PUBLIC;                                                      01083000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VEMPDPT1        01084002
        TO PUBLIC;                                                      01085000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VASTRDE1        01086002
        TO PUBLIC;                                                      01087000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VASTRDE2        01088002
        TO PUBLIC;                                                      01089000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VPROJRE1        01090002
        TO PUBLIC;                                                      01091000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VPSTRDE1        01092002
        TO PUBLIC;                                                      01093000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VPSTRDE2        01094002
        TO PUBLIC;                                                      01095000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VFORPLA         01096002
        TO PUBLIC;                                                      01097000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VSTAFAC1        01098002
        TO PUBLIC;                                                      01099000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.VSTAFAC2        01100002
        TO PUBLIC;                                                      01101000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.PRODUCT         01102002
        TO PUBLIC;                                                      01103000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.INVENTORY       01104002
        TO PUBLIC;                                                      01105000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.CUSTOMER        01106002
        TO PUBLIC;                                                      01107000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.PURCHASEORDER   01108002
        TO PUBLIC;                                                      01109000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.CATALOG         01110002
        TO PUBLIC;                                                      01111000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.SUPPLIERS       01112002
        TO PUBLIC;                                                      01113000
  GRANT DELETE, INSERT, SELECT, UPDATE ON TABLE DSN8120.PRODUCTSUPPLIER 01114002
        TO PUBLIC;                                                      01115000
//*                                                                     01116000
//*                                                                     01117000
//*                                                                     01118000
//*        STEP  7: ASSEMBLE AND LINKEDIT EDIT EXIT                     01119000
//*                                                                     01120000
//PH01S07 EXEC ASMCL,MEM=DSN8EAE1,COND=(4,LT),                          01121000
//         PARM.LKED='LIST,XREF,NCAL,RENT,AMODE=31,RMODE=ANY'           01122000
//*                                                                     01123000
//*        STEP  8: ASSEMBLE AND LINKEDIT EDIT EXIT                     01124000
//*                                                                     01125000
//PH01S08 EXEC ASMCL,MEM=DSN8HUFF,COND=(4,LT),                          01126000
//         PARM.LKED='LIST,XREF,NCAL,RENT,AMODE=31,RMODE=ANY'           01127000
//*                                                                     01128000
//*        STEP  9: ASSEMBLE AND LINKEDIT FIELD PROCEDURE               01129000
//*                                                                     01130000
//PH01S09 EXEC ASMCL,MEM=DSN8FPRC,COND=(4,LT),                          01131000
//         PARM.ASM='RENT,OBJECT,NODECK,SYSPARM(FLDPROC)',              01132000
//         PARM.LKED='LIST,XREF,NCAL,RENT,AMODE=31,RMODE=ANY'           01133000
//*                                                                     01134000
//*        STEP 10: PRECOMPILE, ASSEMBLE AND LINKEDIT THE               01135000
//*                 CALL ATTACH ASSEMBLER INTERFACE                     01136000
//*                                                                     01137000
//PH01S10 EXEC DSNHASM,MEM=DSN8CA,                                      01138000
//         COND=(4,LT),                                                 01139000
//         PARM.PC='HOST(ASM),STDSQL(NO)',                              01140000
//         PARM.ASM='RENT,OBJECT,NODECK',                               01141000
//         PARM.LKED='RENT,XREF,AMODE=31,RMODE=ANY'                     01142000
//PC.DBRMLIB   DD DISP=SHR,                                             01143000
//         DSN=SYS2.DB2.DBRMLIB.DATA(DSN8CA)                            01144001
//PC.SYSLIB    DD DSN=SYS4.DB2.SDSNSAMP,                                01145002
//             DISP=SHR                                                 01146000
//PC.SYSIN     DD DISP=SHR,                                             01147000
//         DSN=SYS4.DB2.SDSNSAMP(DSN8CA)                                01148002
//ASM.SYSLIB   DD                                                       01149000
//             DD DSN=SYS4.DB2.SDSNSAMP,                                01150002
//             DISP=SHR                                                 01151000
//LKED.SYSLMOD DD DISP=SHR,                                             01152000
//         DSN=DB2S.RUNLIB.LOAD(DSN8CA)                                 01153002
//LKED.SYSIN   DD *                                                     01154000
  INCLUDE SYSLIB(DSNALI)                                                01155000
//*                                                                     01156000
//*        STEP 11: CREATE SAMPLE UTILITY LIST                          01157000
//*                                                                     01158000
//PH01S11 EXEC PGM=IEBGENER,COND=(4,LT)                                 01159000
//SYSIN    DD  DUMMY                                                    01160000
//SYSPRINT DD  SYSOUT=*                                                 01161000
//SYSUT1   DD  *                                                        01162000
                                                                        01163000
  LISTDEF DSN8LDEF                                                      01164000
          INCLUDE TABLESPACES DATABASE DSN8D12A                         01165002
          EXCLUDE TABLESPACE           DSN8D12A.DSN8S12R                01166002
          EXCLUDE TABLESPACE           DSN8D12A.DSN8S12S                01167002
                                                                        01168000
//SYSUT2   DD  DSN=&SYSUID..DSN8.LISTDEF,                               01169002
//             DISP=(,CATLG,DELETE),                                    01170000
//             UNIT=SYSDA,                                              01171000
//             SPACE=(TRK,1),                                           01172000
//             DCB=(RECFM=FB,LRECL=80)                                  01173000
//*                                                                     01174000
//*        STEP 12: LOAD DATA INTO SAMPLE PROGRAM TABLES                01175000
//*                                                                     01176000
//PH01S12 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01177002
//SORTLIB  DD  DSN=SYS1.SORTLIB,DISP=SHR                                01178000
//SORTOUT  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01179000
//DSNTRACE DD  SYSOUT=*                                                 01180000
//SYSRECDT DD  DISP=SHR,                                                01181000
//         DSN=SYS4.DB2.SDSNSAMP(DSN8LDT)                               01182002
//SYSRECOV DD  DISP=SHR,                                                01183000
//         DSN=SYS4.DB2.SDSNSAMP(DSN8LOV)                               01184002
//SYSUT1   DD  UNIT=SYSDA,SPACE=(4000,(50,50),,,ROUND)                  01185000
//SYSIN    DD  *                                                        01186000
                                                                        01187000
  LOAD DATA INDDN(SYSRECOV) CONTINUEIF(72:72)='X'                       01188000
       INTO TABLE DSN8120.TOPTVAL                                       01189002
            (MAJSYS   POSITION(  2) CHAR(1),                            01190000
             ACTION   POSITION(  4) CHAR(1),                            01191000
             OBJFLD   POSITION(  6) CHAR(2),                            01192000
             SRCHCRIT POSITION(  9) CHAR(2),                            01193000
             SCRTYPE  POSITION( 12) CHAR(1),                            01194000
             HEADTXT  POSITION( 80) CHAR(50),                           01195000
             SELTXT   POSITION(159) CHAR(50),                           01196000
             INFOTXT  POSITION(238) CHAR(71),                           01197000
             HELPTXT  POSITION(317) CHAR(71),                           01198000
             PFKTXT   POSITION(396) CHAR(71),                           01199000
             DSPINDEX POSITION(475) CHAR(2))                            01200000
       SORTDEVT SYSDA SORTNUM 4                                         01201000
                                                                        01202000
  LOAD DATA INDDN(SYSRECDT) CONTINUEIF(72:72)='X' RESUME(YES)           01203000
       INTO TABLE DSN8120.TDSPTXT                                       01204002
            (DSPINDEX POSITION( 2) CHAR(2),                             01205000
             LINENO   POSITION( 6) CHAR(2),                             01206000
             DSPLINE  POSITION(80) CHAR(71))                            01207000
       SORTDEVT SYSDA SORTNUM 4                                         01208000
                                                                        01209000
//*                                                                     01210000
//*        STEP 13: LOAD DATA INTO SAMPLE APPLICATION TABLES            01211000
//*                                                                     01212000
//PH01S13 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01213002
//SYSUT1   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01214000
//SORTLIB  DD  DSN=SYS1.SORTLIB,DISP=SHR                                01215000
//SORTOUT  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01216000
//DSNTRACE DD  SYSOUT=*                                                 01217000
//SYSRECAC DD  DISP=SHR,                                                01218000
//         DSN=SYS4.DB2.SDSNSAMP(DSN8LAC)                               01219002
//SYSRECDP DD  DISP=SHR,                                                01220000
//         DSN=SYS4.DB2.SDSNSAMP(DSN8LDP)                               01221002
//SYSRECEM DD  DISP=SHR,                                                01222000
//         DSN=SYS4.DB2.SDSNSAMP(DSN8LEM)                               01223002
//SYSRECEP DD  DISP=SHR,                                                01224000
//         DSN=SYS4.DB2.SDSNSAMP(DSN8LEP)                               01225002
//SYSRECPA DD  DISP=SHR,                                                01226000
//         DSN=SYS4.DB2.SDSNSAMP(DSN8LPA)                               01227002
//SYSRECPJ DD  DISP=SHR,                                                01228000
//         DSN=SYS4.DB2.SDSNSAMP(DSN8LPJ)                               01229002
//SYSRECXP DD  DISP=SHR,                                                01230000
//         DSN=SYS2.DB2.SDSNIVPD(DSN8LXPR)                              01231001
//SYSERR   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01232000
//SYSDISC  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01233000
//SYSMAP   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01234000
//SYSIN    DD  *                                                        01235000
                                                                        01236000
  LOAD DATA INDDN(SYSRECDP)                                             01237000
       INTO TABLE DSN8120.DEPT                                          01238002
            (DEPTNO   POSITION( 1) CHAR(3),                             01239000
             DEPTNAME POSITION( 5) VARCHAR,                             01240000
             MGRNO    POSITION(37) CHAR(6) NULLIF(MGRNO='      '),      01241000
             ADMRDEPT POSITION(44) CHAR(3),                             01242000
             LOCATION POSITION(48) CHAR(16))                            01243000
       ENFORCE NO                                                       01244000
       SORTDEVT SYSDA SORTNUM 4                                         01245000
                                                                        01246000
  LOAD DATA INDDN(SYSRECEM) CONTINUEIF(72:72)='X'                       01247000
       INTO TABLE DSN8120.EMP                                           01248002
           (EMPNO     POSITION( 1)  CHAR(6),                            01249000
            FIRSTNME  POSITION( 8)  VARCHAR,                            01250000
            MIDINIT   POSITION(21)  CHAR(1),                            01251000
            LASTNAME  POSITION(23)  VARCHAR,                            01252000
            WORKDEPT  POSITION(36)  CHAR(3),                            01253000
            PHONENO   POSITION(40)  CHAR(4),                            01254000
            HIREDATE  POSITION(45)  DATE EXTERNAL,                      01255000
            JOB       POSITION(56)  CHAR(8),                            01256000
            EDLEVEL   POSITION(65)  INTEGER EXTERNAL(2),                01257000
            SEX       POSITION(68)  CHAR(1),                            01258000
            BIRTHDATE POSITION(80)  DATE EXTERNAL,                      01259000
            SALARY    POSITION(91)  INTEGER EXTERNAL(5),                01260000
            BONUS     POSITION(97)  INTEGER EXTERNAL(5),                01261000
            COMM      POSITION(103) INTEGER EXTERNAL(5))                01262000
      ENFORCE CONSTRAINTS MAPDDN SYSMAP                                 01263000
      SORTDEVT SYSDA SORTNUM 4                                          01264000
                                                                        01265000
  LOAD DATA INDDN(SYSRECPJ) RESUME YES CONTINUEIF(72:72)='X'            01266000
       INTO TABLE DSN8120.PROJ                                          01267002
           (PROJNO   POSITION( 1) CHAR(6),                              01268000
            PROJNAME POSITION( 8) VARCHAR,                              01269000
            DEPTNO   POSITION(33) CHAR(3),                              01270000
            RESPEMP  POSITION(37) CHAR(6),                              01271000
            PRSTAFF  POSITION(44) DECIMAL EXTERNAL(5),                  01272000
            PRSTDATE POSITION(50) DATE EXTERNAL,                        01273000
            PRENDATE POSITION(61) DATE EXTERNAL,                        01274000
            MAJPROJ  POSITION(80) CHAR(6) NULLIF(MAJPROJ='      '))     01275000
      ENFORCE NO                                                        01276000
      SORTDEVT SYSDA SORTNUM 4                                          01277000
                                                                        01278000
  LOAD DATA INDDN(SYSRECAC) RESUME YES                                  01279000
       INTO TABLE DSN8120.ACT                                           01280002
           (ACTNO    POSITION( 1) INTEGER EXTERNAL(3),                  01281000
            ACTKWD   POSITION( 5) CHAR(6),                              01282000
            ACTDESC  POSITION(13) VARCHAR)                              01283000
      ENFORCE NO                                                        01284000
      SORTDEVT SYSDA SORTNUM 4                                          01285000
                                                                        01286000
  LOAD DATA INDDN(SYSRECPA) RESUME YES                                  01287000
       INTO TABLE DSN8120.PROJACT                                       01288002
           (PROJNO   POSITION( 1) CHAR(6),                              01289000
            ACTNO    POSITION( 8) INTEGER EXTERNAL(3),                  01290000
            ACSTAFF  POSITION(12) DECIMAL EXTERNAL(5),                  01291000
            ACSTDATE POSITION(18) DATE EXTERNAL,                        01292000
            ACENDATE POSITION(29) DATE EXTERNAL)                        01293000
      ENFORCE NO                                                        01294000
      SORTDEVT SYSDA SORTNUM 4                                          01295000
                                                                        01296000
  LOAD DATA INDDN(SYSRECEP) RESUME YES                                  01297000
       INTO TABLE DSN8120.EMPPROJACT                                    01298002
           (EMPNO    POSITION( 1) CHAR(6),                              01299000
            PROJNO   POSITION( 8) CHAR(6),                              01300000
            ACTNO    POSITION(16) INTEGER EXTERNAL(3),                  01301000
            EMPTIME  POSITION(20) DECIMAL EXTERNAL(5),                  01302000
            EMSTDATE POSITION(26) DATE EXTERNAL,                        01303000
            EMENDATE POSITION(37) DATE EXTERNAL)                        01304000
      ENFORCE NO                                                        01305000
      SORTDEVT SYSDA SORTNUM 4                                          01306000
                                                                        01307000
  LOAD DATA INDDN(SYSRECXP) RESUME YES                                  01308000
       INTO TABLE DSN8120.PRODUCT                                       01309002
           (PID         POSITION(1)   CHAR(10),                         01310000
           ,NAME        POSITION(11)  VARCHAR           NULLIF(140)='?' 01311000
           ,PRICE       POSITION(141) DECIMAL           NULLIF(157)='?' 01312000
           ,PROMOPRICE  POSITION(158) DECIMAL           NULLIF(174)='?' 01313000
           ,PROMOSTART  POSITION(175) DATE EXTERNAL(10) NULLIF(185)='?' 01314000
           ,PROMOEND    POSITION(186) DATE EXTERNAL(10) NULLIF(196)='?' 01315000
           ,DESCRIPTION POSITION(197) XML)                              01316000
       SORTDEVT SYSDA SORTNUM 4                                         01317000
//*                                                                     01318000
//*        STEP 14: CHECK DATA FOR REFERENTIAL INTEGRITY                01319000
//*                                                                     01320000
//PH01S14 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01321002
//SYSUT1   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01322000
//SORTLIB  DD  DSN=SYS1.SORTLIB,DISP=SHR                                01323000
//SORTOUT  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01324000
//DSNTRACE DD  SYSOUT=*                                                 01325000
//SYSERR   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01326000
//SYSIN    DD  *                                                        01327000
                                                                        01328000
  CHECK DATA TABLESPACE DSN8D12A.DSN8S12D                               01329002
             TABLESPACE DSN8D12A.DSN8S12E                               01330002
             TABLESPACE DSN8D12A.DSN8S12P                               01331002
       SCOPE ALL                                                        01332000
       DELETE YES                                                       01333000
       FOR EXCEPTION IN DSN8120.DEPT       USE DSN8120.EDEPT            01334002
                     IN DSN8120.EMP        USE DSN8120.EEMP             01335002
                     IN DSN8120.PROJ       USE DSN8120.EPROJ            01336002
                     IN DSN8120.ACT        USE DSN8120.EACT             01337002
                     IN DSN8120.PROJACT    USE DSN8120.EPROJACT         01338002
                     IN DSN8120.EMPPROJACT USE DSN8120.EEPA             01339002
       EXCEPTIONS 50                                                    01340000
       SORTDEVT SYSDA SORTNUM 4                                         01341000
                                                                        01342000
//*                                                                     01343000
//*        STEP 15: ESTABLISH A QUIESCE POINT                           01344000
//*           NOTE: CONDITION CODE 4 INDICATES AN IMAGE COPY            01345000
//*                 CANNOT BE TAKEN                                     01346000
//*                                                                     01347000
//PH01S15 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01348002
//SYSLISTD DD  DISP=SHR,DSN=&SYSUID..DSN8.LISTDEF                       01349002
//SYSUT1   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01350000
//SYSIN    DD  *                                                        01351000
                                                                        01352000
  QUIESCE LIST DSN8LDEF                                                 01353000
                                                                        01354000
//*                                                                     01355000
//*        STEP 16: TAKE IMAGE COPY OF SAMPLE TABLES                    01356000
//*                                                                     01357000
//PH01S16 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01358002
//SYSLISTD DD  DISP=SHR,DSN=&SYSUID..DSN8.LISTDEF                       01359002
//         DD  *                                                        01360000
  INCLUDE TABLESPACE DSN8D12P.DSN8S12C                                  01361002
//DSNTRACE DD  SYSOUT=*                                                 01362000
//SYSIN    DD  *                                                        01363000
                                                                        01364000
  TEMPLATE DSN8TPLT                                                     01365000
           DSN(&SYSUID..SYSCOPY.&DB..&TS.)                              01366002
           DISP (NEW,CATLG,DELETE)                                      01367000
           UNIT SYSDA                                                   01368000
           PCTPRIME 100 MAXPRIME 5 NBRSECND 10                          01369000
      COPY LIST DSN8LDEF                                                01370000
           COPYDDN(DSN8TPLT)                                            01371000
                                                                        01372000
//*                                                                     01373000
//*        STEP 17: ESTABLISH A QUIESCE POINT USING ONLY IMAGE COPIES   01374000
//*                                                                     01375000
//PH01S17 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01376002
//SYSLISTD DD  DISP=SHR,DSN=&SYSUID..DSN8.LISTDEF                       01377002
//SYSUT1   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01378000
//SYSIN    DD  *                                                        01379000
                                                                        01380000
  QUIESCE LIST DSN8LDEF                                                 01381000
                                                                        01382000
//*                                                                     01383000
//*        STEP 18: REORGANIZE TABLESPACES, PRODUCE STATISTICS          01384000
//*                                                                     01385000
//PH01S18 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01386002
//SYSLISTD DD  DISP=SHR,DSN=&SYSUID..DSN8.LISTDEF                       01387002
//SORTLIB  DD  DSN=SYS1.SORTLIB,DISP=SHR                                01388000
//SORTOUT  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01389000
//DSNTRACE DD  SYSOUT=*                                                 01390000
//SYSUT1   DD  UNIT=SYSDA,SPACE=(4000,(50,50),,,ROUND)                  01391000
//SYSREC   DD  UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)                01392000
//SYSIN    DD  *                                                        01393000
                                                                        01394000
  REORG TABLESPACE DSN8D12A.DSN8S12D                                    01395002
        SORTDEVT SYSDA SORTNUM 4                                        01396000
                                                                        01397000
 RUNSTATS TABLESPACE LIST DSN8LDEF                                      01398000
         INDEX(ALL)                                                     01399000
                                                                        01400000
//*                                                                     01401000
//*        STEP 19: RUN ONLINE REORG OF TBLSPACE USING SHRLEVEL CHANGE  01402000
//*                                                                     01403000
//PH01S19 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01404002
//SORTLIB  DD  DSN=SYS1.SORTLIB,DISP=SHR                                01405000
//SORTOUT  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01406000
//DSNTRACE DD  SYSOUT=*                                                 01407000
//SYSUT1   DD  UNIT=SYSDA,SPACE=(4000,(50,50),,,ROUND)                  01408000
//SYSREC   DD  UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)                01409000
//COPYDDN  DD  DSN=&SYSUID..COPYDDN.DSN8D12P.DSN8S12C,                  01410002
//             DISP=(NEW,CATLG),                                        01411000
//             UNIT=SYSDA,                                              01412000
//             SPACE=(TRK,(10,1),RLSE),                                 01413000
//             DCB=BLKSIZE=8000                                         01414000
//SYSIN    DD  *                                                        01415000
                                                                        01416000
 REORG TABLESPACE DSN8D12P.DSN8S12C                                     01417002
    COPYDDN(COPYDDN)                                                    01418000
    SHRLEVEL CHANGE                                                     01419000
    DEADLINE NONE                                                       01420000
    MAPPINGTABLE DSN8120.MAP_TBL                                        01421002
    MAXRO 240 LONGLOG DRAIN DELAY 900                                   01422000
    SORTDEVT SYSDA SORTNUM 4                                            01423000
                                                                        01424000
  RUNSTATS TABLESPACE DSN8D12P.DSN8S12C                                 01425002
          INDEX(ALL)                                                    01426000
                                                                        01427000
//*                                                                     01428000
//*        STEP 20: LOAD DATA INTO PART 3 OF DSN8D12A.DSN8S12E          01429002
//*                                                                     01430000
//PH01S20 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01431002
//SYSUT1   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01432000
//SORTLIB  DD  DSN=SYS1.SORTLIB,DISP=SHR                                01433000
//SORTOUT  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01434000
//DSNTRACE DD  SYSOUT=*                                                 01435000
//SYSRECE3 DD  DISP=SHR,                                                01436000
//         DSN=SYS4.DB2.SDSNSAMP(DSN8LE3)                               01437002
//SYSERR   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01438000
//SYSDISC  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01439000
//SYSMAP   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01440000
//SYSIN    DD  *                                                        01441000
                                                                        01442000
  LOAD DATA INDDN(SYSRECE3) CONTINUEIF(72:72)='X'                       01443000
       RESUME YES                                                       01444000
       INTO TABLE DSN8120.EMP                                           01445002
            PART 3                                                      01446000
            REPLACE                                                     01447000
           (EMPNO     POSITION( 1)  CHAR(6),                            01448000
            FIRSTNME  POSITION( 8)  VARCHAR,                            01449000
            MIDINIT   POSITION(21)  CHAR(1),                            01450000
            LASTNAME  POSITION(23)  VARCHAR,                            01451000
            WORKDEPT  POSITION(36)  CHAR(3),                            01452000
            PHONENO   POSITION(40)  CHAR(4),                            01453000
            HIREDATE  POSITION(45)  DATE EXTERNAL,                      01454000
            JOB       POSITION(56)  CHAR(8),                            01455000
            EDLEVEL   POSITION(65)  INTEGER EXTERNAL(2),                01456000
            SEX       POSITION(68)  CHAR(1),                            01457000
            BIRTHDATE POSITION(80)  DATE EXTERNAL,                      01458000
            SALARY    POSITION(91)  INTEGER EXTERNAL(5),                01459000
            BONUS     POSITION(97)  INTEGER EXTERNAL(5),                01460000
            COMM      POSITION(103) INTEGER EXTERNAL(5))                01461000
      ENFORCE CONSTRAINTS MAPDDN SYSMAP                                 01462000
      SORTDEVT SYSDA SORTNUM 4                                          01463000
                                                                        01464000
//*                                                                     01465000
//*        STEP 21: SET CURRENT RULES THEN ALTER TABLE                  01466000
//*                                                                     01467000
//PH01S21 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     01468000
//SYSTSPRT DD  SYSOUT=*                                                 01469000
//SYSTSIN  DD  *                                                        01470000
  DSN SYSTEM(DB2S)                                                      01471002
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA12) -                                01472002
 LIB ('DB2S.RUNLIB.LOAD')                                               01472102
//SYSPRINT DD  SYSOUT=*                                                 01474000
//SYSUDUMP DD  SYSOUT=*                                                 01475000
//SYSIN    DD  *                                                        01476000
  SET CURRENT SQLID = 'SYSADM';                                         01477000
  SET CURRENT RULES = 'DB2';                                            01478000
  COMMIT;                                                               01479000
  ALTER TABLE EMP ADD CONSTRAINT PERSON                                 01480000
    CHECK (SEX = 'M' OR SEX = 'F');                                     01481000
  COMMIT;                                                               01482000
                                                                        01483000
//*                                                                     01484000
//*        STEP 22: CHECK DATA IN PART 3 OF DSN8D12A.DSN8S12E           01485002
//*                 FOR REFERENTIAL INTEGRITY                           01486000
//*                                                                     01487000
//PH01S22 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01488002
//SYSUT1   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01489000
//SORTLIB  DD  DSN=SYS1.SORTLIB,DISP=SHR                                01490000
//SORTOUT  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01491000
//DSNTRACE DD  SYSOUT=*                                                 01492000
//SYSERR   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01493000
//SYSDISC  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01494000
//SYSIN    DD  *                                                        01495000
                                                                        01496000
  CHECK DATA TABLESPACE DSN8D12A.DSN8S12D                               01497002
             TABLESPACE DSN8D12A.DSN8S12E                               01498002
             TABLESPACE DSN8D12A.DSN8S12P                               01499002
       SCOPE ALL                                                        01500000
       DELETE YES                                                       01501000
       FOR EXCEPTION IN DSN8120.DEPT       USE DSN8120.EDEPT            01502002
                     IN DSN8120.EMP        USE DSN8120.EEMP             01503002
                     IN DSN8120.PROJ       USE DSN8120.EPROJ            01504002
                     IN DSN8120.ACT        USE DSN8120.EACT             01505002
                     IN DSN8120.PROJACT    USE DSN8120.EPROJACT         01506002
                     IN DSN8120.EMPPROJACT USE DSN8120.EEPA             01507002
       EXCEPTIONS 50                                                    01508000
       SORTDEVT SYSDA SORTNUM 4                                         01509000
                                                                        01510000
//*                                                                     01511000
//*        STEP 23: ATTEMPT INSERT INTO THE EMP TABLE                   01512000
//*                                                                     01513000
//PH01S23 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     01514000
//SYSTSPRT DD  SYSOUT=*                                                 01515000
//SYSTSIN  DD  *                                                        01516000
  DSN SYSTEM(DB2S)                                                      01517002
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA12) PARM('RC0') -                    01518002
 LIB ('DB2S.RUNLIB.LOAD')                                               01518102
//SYSPRINT DD  SYSOUT=*                                                 01520000
//SYSUDUMP DD  SYSOUT=*                                                 01521000
//SYSIN    DD  *                                                        01522000
  SET CURRENT SQLID = 'SYSADM';                                         01523000
                                                                        01524000
  INSERT INTO EMP                                                       01525000
    VALUES ('000011', 'CHRISTINE', 'I', 'HAAS', 'A00', 'A1A1',          01526000
            '1965-01-01', 'PRES', 18, 'F', '1933-08-14',                01527000
            52750, 1000, 4220);                                         01528000
  COMMIT;                                                               01529000
                                                                        01530000
  INSERT INTO EMP                                                       01531000
    VALUES ('200011', 'DIANE', 'J', 'HEMMINGER', 'A00', '3978',         01532000
            '1965-01-01', 'SALESREP', 18, 'U', '1933-08-14',            01533000
            46500, 1000, 4220);                                         01534000
  COMMIT;                                                               01535000
                                                                        01536000
//*                                                                     01537000
//*        STEP 24: ESTABLISH A QUIESCE POINT FOR PART 3                01538000
//*                 OF DSN8D12A.DSN8S12E                                01539002
//*           NOTE: CONDITION CODE 4 INDICATES AN IMAGE COPY            01540000
//*                 CANNOT BE TAKEN                                     01541000
//*                                                                     01542000
//PH01S24 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01543002
//SYSUT1   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01544000
//SYSIN    DD  *                                                        01545000
                                                                        01546000
  QUIESCE TABLESPACE DSN8D12A.DSN8S12E                                  01547002
          PART 3                                                        01548000
                                                                        01549000
//*                                                                     01550000
//*        STEP 25: TAKE IMAGE COPY OF PART 3 OF DSN8D12A.DSN8S12E      01551002
//*                                                                     01552000
//PH01S25 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01553002
//DSNTRACE DD  SYSOUT=*                                                 01554000
//SYSCOPY  DD  DSN=&SYSUID..DSN8D12A.DSN8S12E.PART3,                    01555002
//             DISP=(NEW,CATLG),                                        01556000
//             UNIT=SYSDA,                                              01557000
//             SPACE=(4000,(20,20))                                     01558000
//SYSIN    DD  *                                                        01559000
                                                                        01560000
  COPY TABLESPACE DSN8D12A.DSN8S12E                                     01561002
       DSNUM 3 COPYDDN SYSCOPY                                          01562000
                                                                        01563000
//*                                                                     01564000
//*        STEP 26: ESTABLISH A QUIESCE POINT FOR PART 3                01565000
//*                 OF DSN8D12A.DSN8S12E USING ONLY IMAGE COPY          01566002
//*           NOTE: CONDITION CODE 4 INDICATES AN IMAGE COPY            01567000
//*                 CANNOT BE TAKEN                                     01568000
//*                                                                     01569000
//PH01S26 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01570002
//SYSUT1   DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01571000
//SYSIN    DD  *                                                        01572000
                                                                        01573000
  QUIESCE TABLESPACE DSN8D12A.DSN8S12E                                  01574002
          PART 3                                                        01575000
                                                                        01576000
//*                                                                     01577000
//*        STEP 27: PRODUCE STATISTICS FOR PART 3 OF                    01578000
//*                 OF DSN8D12A.DSN8S12E                                01579002
//*                                                                     01580000
//PH01S27 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01581002
//SORTLIB  DD  DSN=SYS1.SORTLIB,DISP=SHR                                01582000
//SORTOUT  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01583000
//DSNTRACE DD  SYSOUT=*                                                 01584000
//SYSUT1   DD  UNIT=SYSDA,SPACE=(4000,(50,50),,,ROUND)                  01585000
//SYSREC   DD  UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)                01586000
//SYSIN    DD  *                                                        01587000
                                                                        01588000
  RUNSTATS TABLESPACE DSN8D12A.DSN8S12E                                 01589002
          PART 3                                                        01590000
          INDEX(ALL)                                                    01591000
                                                                        01592000
//*                                                                     01593000
//*        STEP 28: UNLOAD PARTITIONS 1,3, AND 4                        01594000
//*                 OF DSN8D12A.DSN8S12E                                01595002
//*                                                                     01596000
//PH01S28 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01597002
//SYSPRINT DD  SYSOUT=*                                                 01598000
//SYSIN    DD  *                                                        01599000
                                                                        01600000
   LISTDEF DSN8LDUL                                                     01601000
           INCLUDE TABLESPACE DSN8D12A.DSN8S12E PARTLEVEL               01602002
           EXCLUDE TABLESPACE DSN8D12A.DSN8S12E PARTLEVEL(2)            01603002
  TEMPLATE DSN8TPPU                                                     01604000
           DSN(&SYSUID..&DB..&TS..SYSPUNCH)                             01605002
           DISP(NEW,CATLG,DELETE)                                       01606000
           UNIT SYSDA                                                   01607000
           PCTPRIME 100 MAXPRIME 1 NBRSECND 1                           01608000
  TEMPLATE DSN8TPSY                                                     01609000
           DSN(&SYSUID..&DB..&TS..P&PART.)                              01610002
           DISP(NEW,CATLG,DELETE)                                       01611000
           UNIT SYSDA                                                   01612000
           PCTPRIME 100 MAXPRIME 5 NBRSECND 10                          01613000
    UNLOAD LIST DSN8LDUL                                                01614000
           PUNCHDDN(DSN8TPPU)                                           01615000
           UNLDDN(DSN8TPSY)                                             01616000
           EBCDIC                                                       01617000
           NOPAD                                                        01618000
                                                                        01619000
//*                                                                     01620000
//*        STEP 29: REDUCE THE PARTITIONING KEY ON PARTITION 4 OF       01621000
//*                 TABLESPACE DSN8S12E                                 01622002
//*                                                                     01623000
//PH01S29 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     01624000
//SYSTSPRT DD  SYSOUT=*                                                 01625000
//SYSTSIN  DD  *                                                        01626000
  DSN SYSTEM(DB2S)                                                      01627002
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA12) -                                01628002
 LIB ('DB2S.RUNLIB.LOAD')                                               01628102
//SYSPRINT DD  SYSOUT=*                                                 01630000
//SYSUDUMP DD  SYSOUT=*                                                 01631000
//SYSIN    DD  *                                                        01632000
  SET CURRENT SQLID = 'SYSADM';                                         01633000
                                                                        01634000
   ALTER TABLE DSN8120.EMP ALTER PART 4 VALUES('499999');               01635002
                                                                        01636000
//*                                                                     01637000
//*        STEP 30: REORGANIZE TABLESPACE DSN8D12A.DSN8S12E             01638002
//*                                                                     01639000
//PH01S30 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01640002
//SYSLISTD DD  DISP=SHR,DSN=&SYSUID..DSN8.LISTDEF                       01641002
//SORTLIB  DD  DSN=SYS1.SORTLIB,DISP=SHR                                01642000
//SORTOUT  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01643000
//DSNTRACE DD  SYSOUT=*                                                 01644000
//SYSUT1   DD  UNIT=SYSDA,SPACE=(4000,(50,50),,,ROUND)                  01645000
//SYSREC   DD  UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)                01646000
//SYSIN    DD  *                                                        01647000
                                                                        01648000
  TEMPLATE DSN8TPPU                                                     01649000
           DSN(&SYSUID..&DB..&TS..REORGPUN)                             01650002
           DISP(NEW,CATLG,DELETE)                                       01651000
           UNIT SYSDA                                                   01652000
           PCTPRIME 100 MAXPRIME 1 NBRSECND 1                           01653000
  TEMPLATE DSN8TPCY                                                     01654000
           DSN(&SYSUID..&DB..&TS..REORGCPY)                             01655002
           DISP(NEW,CATLG,DELETE)                                       01656000
           UNIT SYSDA                                                   01657000
           PCTPRIME 100 MAXPRIME 1 NBRSECND 1                           01658000
  TEMPLATE DSN8TPDS                                                     01659000
           DSN(&SYSUID..&DB..&TS..REORGDSC)                             01660002
           DISP(NEW,CATLG,DELETE)                                       01661000
           UNIT SYSDA                                                   01662000
           PCTPRIME 100 MAXPRIME 1 NBRSECND 1                           01663000
     REORG TABLESPACE DSN8D12A.DSN8S12E                                 01664002
           SHRLEVEL REFERENCE                                           01665000
           PART 1:4                                                     01666000
           PUNCHDDN(DSN8TPPU)                                           01667000
           COPYDDN(DSN8TPCY)                                            01668000
           DISCARDDN(DSN8TPDS)                                          01669000
           SORTDEVT SYSDA SORTNUM 4                                     01670000
                                                                        01671000
//*                                                                     01672000
//*        STEP 31: ADD A FIFTH PARTITION TO                            01673000
//*                 TABLESPACE DSN8S12E                                 01674002
//*                                                                     01675000
//PH01S31 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     01676000
//SYSTSPRT DD  SYSOUT=*                                                 01677000
//SYSTSIN  DD  *                                                        01678000
  DSN SYSTEM(DSN)                                                       01679000
  -STOP DB(DSN8D12A) SPACENAM(*)                                        01680002
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA12) -                                01681002
 LIB ('DB2S.RUNLIB.LOAD')                                               01681102
  -START DB(DSN8D12A) SPACENAM(*)                                       01683002
//SYSPRINT DD  SYSOUT=*                                                 01684000
//SYSUDUMP DD  SYSOUT=*                                                 01685000
//SYSIN    DD  *                                                        01686000
   SET CURRENT SQLID = 'SYSADM';                                        01687000
                                                                        01688000
   ALTER TABLE DSN8120.EMP ADD PARTITION ENDING AT('999999');           01689002
                                                                        01690000
//*                                                                     01691000
//*        STEP 32: EXTEND THE LENGTH OF A FIXED CHAR                   01692000
//*                 COLUMN IN THE PARTS TABLE. ALSO                     01693000
//*                 CONVERT A SMALL INTEGER FIELD TO                    01694000
//*                 A DECIMAL TYPE FIELD OF EEMP TABLE.                 01695000
//*                                                                     01696000
//PH01S32 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     01697000
//SYSTSPRT DD  SYSOUT=*                                                 01698000
//SYSTSIN  DD  *                                                        01699000
  DSN SYSTEM(DSN)                                                       01700000
  RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA12) -                                01701002
 LIB ('DB2S.RUNLIB.LOAD')                                               01701102
//SYSPRINT DD  SYSOUT=*                                                 01703000
//SYSUDUMP DD  SYSOUT=*                                                 01704000
//SYSIN    DD  *                                                        01705000
   SET CURRENT SQLID = 'SYSADM';                                        01706000
                                                                        01707000
   ALTER TABLE DSN8120.PARTS ALTER COLUMN ITEMNUM                       01708002
         SET DATA TYPE VARCHAR(10);                                     01709000
                                                                        01710000
   ALTER TABLE DSN8120.EEMP ALTER COLUMN EDLEVEL                        01711002
         SET DATA TYPE DECIMAL(5, 0);                                   01712000
                                                                        01713000
//*                                                                     01714000
//*        STEP 33: REORGANIZE TABLESPACE DSN8D12A.DSN8S12R AND         01715002
//*                 DSN8D12A.DSN8S12S TO RESET REORG-PENDING STATUS     01716002
//*                                                                     01717000
//PH01S33 EXEC DSNUPROC,PARM='DB2S,DSNTEX',COND=(4,LT)                  01718002
//SORTLIB  DD  DSN=SYS1.SORTLIB,DISP=SHR                                01719000
//SORTOUT  DD  UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)                  01720000
//DSNTRACE DD  SYSOUT=*                                                 01721000
//SYSUT1   DD  UNIT=SYSDA,SPACE=(4000,(50,50),,,ROUND)                  01722000
//SYSREC   DD  UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)                01723000
//SYSIN    DD  *                                                        01724000
                                                                        01725000
  REORG TABLESPACE DSN8D12A.DSN8S12R                                    01726002
        SORTDEVT SYSDA  SORTNUM 4                                       01727000
                                                                        01728000
  REORG TABLESPACE DSN8D12A.DSN8S12S                                    01729002
        SORTDEVT SYSDA  SORTNUM 4                                       01730000
                                                                        01731000
//*                                                                     01732000

./ ADD NAME=DSNTEJ1$
//*********************************************************************
//* JOB NAME = DSNTDJ1
//*
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM
//*
//*    LICENSED MATERIALS - PROPERTY OF IBM
//*    5650-DB2
//*    (C) COPYRIGHT 1982, 2019 IBM CORP.  ALL RIGHTS RESERVED.
//*
//*    STATUS = VERSION 12
//*
//* FUNCTION = DELETE DATA SETS CREATED BY DB2 IVP AND INSTALL JOBS
//*
//* PSEUDOCODE =
//*   DELIVPDS STEP   DELETE DATA SETS CREATED BY DB2 IVP JOBS
//*
//*   DELINSDS STEP   DELETE DATA SETS CREATED BY DB2 INSTALL JOBS
//*
//* NOTES =
//*   THIS JOB IS EXECUTED DURING DEPROVISIONING ONLY TO DELETE
//*   DATA SETS CREATED DURING PROVISIONING
//*
//* CHANGE ACTIVITY =
//*   11/14/2018 INTRODUCTION                                   E75766
//*********************************************************************
//*--------------------------------------------------------------------
//* DELETE DATA SETS CREATED BY DB2 IVP JOBS
//*--------------------------------------------------------------------
//DELIVPDS EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
  DELETE '$éINSDSPREè.DSN8.LISTDEF'
  DELETE '$éINSDSPREè.DSN8UNLD.SYSPUNCH'
  DELETE '$éINSDSPREè.DSN8UNLD.SYSREC00'
  DELETE '$éINSDSPREè.DSN8UNLD.SYSREC01'
  DELETE '$éINSDSPREè.DSN8D12A.DSN8S12E.P00001'
  DELETE '$éINSDSPREè.DSN8D12A.DSN8S12E.P00003'
  DELETE '$éINSDSPREè.DSN8D12A.DSN8S12E.P00004'
  DELETE '$éINSDSPREè.DSN8D12A.DSN8S12E.REORGDSC'
  DELETE '$éINSDSPREè.DSN8D12A.DSN8S12E.REORGPUN'
  DELETE '$éINSDSPREè.DSN8D12A.DSN8S12E.SYSPUNCH'
  DELETE '$éINSICPREè.DSN8D12A.DSN8S12E.REORGCPY'
  DELETE '$éINSICPREè.DSN8D12A.DSN8S12E.PART3'
  DELETE '$éINSICPREè.SYSCOPY.DSN8D12A.DSN8S12D'
  DELETE '$éINSICPREè.SYSCOPY.DSN8D12A.DSN8S12E'
  DELETE '$éINSICPREè.SYSCOPY.DSN8D12A.DSN8S12P'
  DELETE '$éINSICPREè.SYSCOPY.DSN8D12P.DSN8S12C'
  DELETE '$éINSICPREè.COPYDDN.DSN8D12P.DSN8S12C'
//*--------------------------------------------------------------------
//* DELETE DATA SETS CREATED BY DB2 INSTALL JOBS
//*--------------------------------------------------------------------
//DELINSDS EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(2,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
  DELETE '$éPPROCLIBè'
  DELETE '$éDBRMLIBè'
  DELETE '$éRUNLIBè'
  DELETE '$éOUTCLè'
  DELETE '$éSRCLIBè'

./ ADD NAME=DSNTEP2
//DSNTEP2   JOB ACCT£,                                                  00001000
//             DB2,                                                     00002000
//             NOTIFY=&SYSUID,                                          00003000
//             MSGCLASS=T                                               00004000
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00005000
//      SYS019.LP2.DB2,                                                 00006000
//      SYS1.PROCLIB.&SYSNAME,                                          00007000
//      SYS1.SACBCNTL)                                                  00008000
//RUNTEP2 EXEC PGM=IKJEFT01,DYNAMNBR=20                                 00010000
//SYSTSPRT DD SYSOUT=*                                                  00020000
//SYSTSIN DD *                                                          00030000
 DSN SYSTEM(DB2S)                                                       00040000
 RUN PROGRAM(DSNTEP2)                -                                  00050000
 LIB ('DB2S.RUNLIB.LOAD')                                               00060000
//SYSPRINT DD SYSOUT=                                                   00070000
//SYSUDUMP DD SYSOUT=*                                                  00080000
//SYSIN DD *                                                            00090000
 SELECT * FROM SYSIBM.SYSTABLESPACE                                     00100000
/*                                                                      00110000
 RUN PROGRAM(DSNTEP2) PLAN(DSNTEP81) -                                  00120000

./ ADD NAME=DSNTEP31
//SYSILEX  JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=O,NOTIFY=SYSILE
//*--------------------------------------------------------------------
//*   EXECUTION D'ORDRE DB2 EN BATCH
//*--------------------------------------------------------------------
//ST005   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2D.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2D)
RUN PROGRAM(DSNTEP31) PLAN(DSNTEP31)
END
//SYSIN DD *
  CONNECT TO EXEMPLE ;
  SELECT * FROM INST1.ACT_EMP ;
/*

./ ADD NAME=DSNTESS
-- /*******************************************************************/
-- /*                                                                 */
-- /*  LICENSED MATERIALS - PROPERTY OF IBM                           */
-- /*  5625-DB2                                                       */
-- /*  (C) COPYRIGHT 2003, IBM CORP.  ALL RIGHTS RESERVED.            */
-- /*                                                                 */
-- /*  STATUS = VERSION 8                                             */
-- /*                                                                 */
-- /*******************************************************************/
--
-- Use the following SQL data definition statements to create
-- the statistics database, table space, tables and indexes.
--
-- The names and declared attributes of the objects must not be changed.
-- However, other attributes can be changed.  For example,
-- COMPRESS YES can be specified.
--
-- The amount of primary and secondary space to allocate can be
-- calculated by using the formulas in the "Administration Guide".
--
-- The approximate number of rows in the two statistics tables
-- can be determined by the following SQL statement.  The sample DDL
-- used 20,000 objects as an estimate to determine the amount of
-- space to request.
--
-- SELECT C1 + C2 FROM
--        (SELECT COUNT(*) AS C1 FROM SYSIBM.SYSTABLEPART) AS T1,
--        (SELECT COUNT(*) AS C2 FROM SYSIBM.SYSINDEXPART) AS T2;
--
   CREATE DATABASE DSNRTSDB CCSID EBCDIC;
   CREATE TABLESPACE DSNRTSTS IN DSNRTSDB
      CCSID EBCDIC
      CLOSE NO
      LOCKMAX 0
      LOCKSIZE ROW
      SEGSIZE 32
      USING STOGROUP SYSDEFLT
            PRIQTY 1600
            SECQTY 160;

   CREATE TABLE SYSIBM.TABLESPACESTATS
      (DBNAME             CHAR( 8)  NOT NULL,
       NAME               CHAR( 8)  NOT NULL,
       PARTITION          SMALLINT  NOT NULL,
       DBID               SMALLINT  NOT NULL,
       PSID               SMALLINT  NOT NULL,
       UPDATESTATSTIME    TIMESTAMP NOT NULL WITH DEFAULT,
       TOTALROWS          FLOAT             ,
       NACTIVE            INTEGER           ,
       SPACE              INTEGER           ,
       EXTENTS            SMALLINT          ,
       LOADRLASTTIME      TIMESTAMP         ,
       REORGLASTTIME      TIMESTAMP         ,
       REORGINSERTS       INTEGER           ,
       REORGDELETES       INTEGER           ,
       REORGUPDATES       INTEGER           ,
       REORGUNCLUSTINS    INTEGER           ,
       REORGDISORGLOB     INTEGER           ,
       REORGMASSDELETE    INTEGER           ,
       REORGNEARINDREF    INTEGER           ,
       REORGFARINDREF     INTEGER           ,
       STATSLASTTIME      TIMESTAMP         ,
       STATSINSERTS       INTEGER           ,
       STATSDELETES       INTEGER           ,
       STATSUPDATES       INTEGER           ,
       STATSMASSDELETE    INTEGER           ,
       COPYLASTTIME       TIMESTAMP         ,
       COPYUPDATEDPAGES   INTEGER           ,
       COPYCHANGES        INTEGER           ,
       COPYUPDATELRSN     CHAR(6)   FOR BIT DATA,
       COPYUPDATETIME     TIMESTAMP         )
      IN DSNRTSDB.DSNRTSTS CCSID EBCDIC;

   CREATE UNIQUE INDEX SYSIBM.TABLESPACESTATS_IX
      ON SYSIBM.TABLESPACESTATS
         (DBID, PSID, PARTITION)
      CLUSTER CLOSE NO;

   CREATE TABLE SYSIBM.INDEXSPACESTATS
      (DBNAME             CHAR( 8)  NOT NULL,
       INDEXSPACE         CHAR( 8)  NOT NULL,
       PARTITION          SMALLINT  NOT NULL,
       DBID               SMALLINT  NOT NULL,
       ISOBID             SMALLINT  NOT NULL,
       PSID               SMALLINT  NOT NULL,
       UPDATESTATSTIME    TIMESTAMP NOT NULL WITH DEFAULT,
       TOTALENTRIES       FLOAT             ,
       NLEVELS            SMALLINT          ,
       NACTIVE            INTEGER           ,
       SPACE              INTEGER           ,
       EXTENTS            SMALLINT          ,
       LOADRLASTTIME      TIMESTAMP         ,
       REBUILDLASTTIME    TIMESTAMP         ,
       REORGLASTTIME      TIMESTAMP         ,
       REORGINSERTS       INTEGER           ,
       REORGDELETES       INTEGER           ,
       REORGAPPENDINSERT  INTEGER           ,
       REORGPSEUDODELETES INTEGER           ,
       REORGMASSDELETE    INTEGER           ,
       REORGLEAFNEAR      INTEGER           ,
       REORGLEAFFAR       INTEGER           ,
       REORGNUMLEVELS     INTEGER           ,
       STATSLASTTIME      TIMESTAMP         ,
       STATSINSERTS       INTEGER           ,
       STATSDELETES       INTEGER           ,
       STATSMASSDELETE    INTEGER           ,
       COPYLASTTIME       TIMESTAMP         ,
       COPYUPDATEDPAGES   INTEGER           ,
       COPYCHANGES        INTEGER           ,
       COPYUPDATELRSN     CHAR(6)   FOR BIT DATA,
       COPYUPDATETIME     TIMESTAMP         )
      IN DSNRTSDB.DSNRTSTS CCSID EBCDIC;

   CREATE UNIQUE INDEX SYSIBM.INDEXSPACESTATS_IX
      ON SYSIBM.INDEXSPACESTATS
         (DBID, ISOBID, PARTITION)
      CLUSTER CLOSE NO;

./ ADD NAME=DSNTESU
----------------------------------------------------------------------- 00001000
--  NAME = DSNTESU                                                      00002000
--                                                                      00003000
--  DESCRIPTIVE NAME = SAMPLE EXPLAIN TABLES                            00004000
--                                                                      00005000
--     LICENSED MATERIALS - PROPERTY OF IBM                             00006000
--     5615-DB2                                                         00007000
--     (C) COPYRIGHT 1982, 2013 IBM CORP.  ALL RIGHTS RESERVED.         00008000
--                                                                      00009000
--     STATUS = VERSION 11                                              00009100
--                                                                      00009200
--  FUNCTION = Test cases for DB2 Sample User Defined Functions (UDFs)  00009300
--             Processed by DB2 Sample job DSNTEJ2U                     00020000
--                                                                      00020100
--  NOTES:                                                              00021000
--                                                                      00026000
--  CHANGE LOG:                                                         00027000
--    11/07/2012 Add prolog                       dn1651_inst1 / dn1651 00029000
--    05/17/2013 FIX COPYRIGHT STATEMENT                  49779_077_724 00029100
--                                                                      00029200
-- *******************************************************************  00040000
-- Use ALTDATE to get the current date as 'DD MONTH YY' (day of the     00050000
-- month with leading zero retention, name of the month, and year       00060000
-- without century).                                                    00070000
-- *******************************************************************  00080000
   SELECT  DSN8.ALTDATE( 'DD MONTH YY' )                                00090000
     FROM  SYSIBM.SYSDUMMY1;                                            00100000
                                                                        00110000
-- Release DB2 resources                                                00120000
   ROLLBACK;                                                            00130000
                                                                        00140000
-- *******************************************************************  00150000
-- Use ALTDATE to get the current date as 'D.M.YYYY' (day of the month  00160000
-- with leading zero suppression, month of the year with leading zero   00170000
-- suppression, and year with century).                                 00180000
-- *******************************************************************  00190000
   SELECT  DSN8.ALTDATE( 'D.M.YYYY' )                                   00200000
     FROM  SYSIBM.SYSDUMMY1;                                            00210000
                                                                        00220000
-- Release DB2 resources                                                00230000
   ROLLBACK;                                                            00240000
                                                                        00250000
-- *******************************************************************  00260000
-- Use ALTDATE to get the current date as 'YYYY-XX-DD' (year with       00270000
-- century, month of the year as a roman numeral, day of the month      00280000
-- with zero retention).                                                00290000
-- *******************************************************************  00300000
   SELECT  DSN8.ALTDATE( 'YYYY-XX-DD' )                                 00310000
     FROM  SYSIBM.SYSDUMMY1;                                            00320000
                                                                        00330000
-- Release DB2 resources                                                00340000
   ROLLBACK;                                                            00350000
                                                                        00360000
-- *******************************************************************  00370000
-- Use ALTDATE to convert a date from 'DD MONTH YYYY' to 'YYYY/MM/DD'   00380000
-- *******************************************************************  00390000
   SELECT  DSN8.ALTDATE( '11 November 1918',                            00400000
                         'DD MONTH YYYY',                               00410000
                         'YYYY/MM/DD' )                                 00420000
     FROM  SYSIBM.SYSDUMMY1;                                            00430000
                                                                        00440000
-- Release DB2 resources                                                00450000
   ROLLBACK;                                                            00460000
                                                                        00470000
-- *******************************************************************  00480000
-- Use ALTDATE to convert from ISODATE format to 'D.M.YY' format        00490000
-- *******************************************************************  00500000
   SELECT  FIRSTNME !! ' '                                              00510000
       !!  LASTNAME !! ' was hired on '                                 00520000
       !!  DSN8.ALTDATE( CHAR(HIREDATE,ISO),                            00530000
                        'YYYY-MM-DD',                                   00540000
                        'D.M.YY' )                                      00550000
     FROM  EMP                                                          00560000
    WHERE  EMPNO  = '000130';                                           00570000
                                                                        00580000
-- Release DB2 resources                                                00590000
   ROLLBACK;                                                            00600000
                                                                        00610000
-- *******************************************************************  00620000
-- Use ALTTIME to get the current time in 12-hour clock format, with-   00630000
-- out seconds                                                          00640000
-- *******************************************************************  00650000
   SELECT  DSN8.ALTTIME( 'H:MM AM/PM' )                                 00660000
     FROM  SYSIBM.SYSDUMMY1;                                            00670000
                                                                        00680000
-- Release DB2 resources                                                00690000
   ROLLBACK;                                                            00700000
                                                                        00710000
-- *******************************************************************  00720000
-- Use ALTTIME to get the current time in 24-hour clock format, with-   00730000
-- out seconds                                                          00740000
-- *******************************************************************  00750000
   SELECT  DSN8.ALTTIME( 'HH.MM' )                                      00760000
     FROM  SYSIBM.SYSDUMMY1;                                            00770000
                                                                        00780000
-- Release DB2 resources                                                00790000
   ROLLBACK;                                                            00800000
                                                                        00810000
-- *******************************************************************  00820000
-- Use ALTTIME to get the current time in 24-hour clock format, with    00830000
-- seconds                                                              00840000
-- *******************************************************************  00850000
   SELECT  DSN8.ALTTIME( 'HH:MM:SS' )                                   00860000
     FROM  SYSIBM.SYSDUMMY1;                                            00870000
                                                                        00880000
-- Release DB2 resources                                                00890000
   ROLLBACK;                                                            00900000
                                                                        00910000
-- *******************************************************************  00920000
-- Use ALTTIME to convert from 24-hour clock format with seconds to     00930000
-- 12-hour clock format, without seconds                                00940000
-- *******************************************************************  00950000
   SELECT  DSN8.ALTTIME( '00:00:00','HH:MM:SS','HH:MM AM/PM' )          00960000
     FROM  SYSIBM.SYSDUMMY1;                                            00970000
                                                                        00980000
-- Release DB2 resources                                                00990000
   ROLLBACK;                                                            01000000
                                                                        01010000
-- *******************************************************************  01020000
-- Use ALTTIME to convert from 24-hour clock format with seconds to     01030000
-- 12-hour clock format, without seconds and with supression of any     01040000
-- leading zero on the hour                                             01050000
-- *******************************************************************  01060000
   SELECT  DSN8.ALTTIME( '06.42.37','HH.MM.SS','H:MM AM/PM' )           01070000
     FROM  SYSIBM.SYSDUMMY1;                                            01080000
                                                                        01090000
-- Release DB2 resources                                                01100000
   ROLLBACK;                                                            01110000
                                                                        01120000
-- *******************************************************************  01130000
-- Use ALTTIME to convert from ISOTIME to 12-hour clock format, with-   01140000
-- out seconds and with retention of any leading zero on the hour.      01150000
-- *******************************************************************  01160000
   SELECT  DSN8.ALTTIME( CHAR(CURRENT TIME,ISO),                        01172900
                         'HH.MM.SS','HH:MM AM/PM' )                     01175900
     FROM  SYSIBM.SYSDUMMY1;                                            01180000
                                                                        01190000
-- Release DB2 resources                                                01200000
   ROLLBACK;                                                            01210000
                                                                        01220000
-- *******************************************************************  01230000
-- Use CURRENCY to express an amount in US dollars with bank-style      01240000
-- credit/debit indicators.                                             01250000
-- *******************************************************************  01260000
   SELECT  DSN8.CURRENCY( -1234.56,'$','CR/DB' )                        01270000
     FROM  SYSIBM.SYSDUMMY1;                                            01280000
                                                                        01290000
-- Release DB2 resources                                                01300000
   ROLLBACK;                                                            01310000
                                                                        01320000
-- *******************************************************************  01330000
-- Use CURRENCY to express an amount in Deutsche Marks with accounting  01340000
-- style credit/debit indicators.                                       01350000
-- *******************************************************************  01360000
   SELECT  DSN8.CURRENCY( -1234.56,'DM','(/)' )                         01370000
     FROM  SYSIBM.SYSDUMMY1;                                            01380000
                                                                        01390000
-- Release DB2 resources                                                01400000
   ROLLBACK;                                                            01410000
                                                                        01420000
-- *******************************************************************  01430000
-- Use CURRENCY to express an amount in Canadian dollars with           01440000
-- arithmetic-style credit/debit indicators.                            01450000
-- *******************************************************************  01460000
   SELECT  DSN8.CURRENCY( -1234.56,'CD','+/-' )                         01470000
     FROM  SYSIBM.SYSDUMMY1;                                            01480000
                                                                        01490000
-- Release DB2 resources                                                01500000
   ROLLBACK;                                                            01510000
                                                                        01520000
-- *******************************************************************  01530000
-- Use DAYNAME to get the current day of the week                       01540000
-- *******************************************************************  01550000
   SELECT  DSN8.DAYNAME( CHAR(CURRENT DATE,ISO) )                       01560000
     FROM  SYSIBM.SYSDUMMY1;                                            01570000
                                                                        01580000
-- Release DB2 resources                                                01590000
   ROLLBACK;                                                            01600000
                                                                        01610000
-- *******************************************************************  01620000
-- Use DAYNAME to get the day of the week of the millenial leap year    01630000
-- *******************************************************************  01640000
   SELECT  DSN8.DAYNAME( '2000-02-29' )                                 01650000
     FROM  SYSIBM.SYSDUMMY1;                                            01660000
                                                                        01670000
-- Release DB2 resources                                                01680000
   ROLLBACK;                                                            01690000
                                                                        01700000
-- *******************************************************************  01710000
-- Use DAYNAME to get the day of the week on which Delores Quintana     01720000
-- was hired                                                            01730000
-- *******************************************************************  01740000
   SELECT  FIRSTNME !! ' '                                              01750000
       !!  LASTNAME !! ' was hired on '                                 01760000
       !!  DSN8.DAYNAME( CHAR(HIREDATE,ISO) ) !! ', '                   01770000
       !!  CHAR( HIREDATE )                                             01780000
     FROM  EMP                                                          01790000
    WHERE  EMPNO  = '000130';                                           01800000
                                                                        01810000
-- Release DB2 resources                                                01820000
   ROLLBACK;                                                            01830000
                                                                        01840000
-- *******************************************************************  01850000
-- Use MONTHNAME get the name of the current month                      01860000
-- *******************************************************************  01870000
   SELECT  DSN8.MONTHNAME( CHAR(CURRENT DATE,ISO) )                     01880000
     FROM  SYSIBM.SYSDUMMY1;                                            01885000
                                                                        01890000
-- Release DB2 resources                                                01900000
   ROLLBACK;                                                            01910000
                                                                        01920000
-- *******************************************************************  01930000
-- Use MONTHNAME to get the name of the month in which Delores Quin-    01940000
-- tana was hired                                                       01950000
-- *******************************************************************  01960000
   SELECT  FIRSTNME !! ' '                                              01970000
       !!  LASTNAME !! ' was hired in the month of '                    01980000
       !!  DSN8.MONTHNAME( CHAR(HIREDATE,ISO) )                         01990000
     FROM  EMP                                                          02000000
    WHERE  EMPNO  = '000130';                                           02010000
                                                                        02020000
-- Release DB2 resources                                                02030000
   ROLLBACK;                                                            02040000
                                                                        02050000
-- ******************************************************************** 02060000
-- Uncomment the following to drop test objects, which are required to  02070000
-- demonstrate the TABLE_NAME, TABLE_SCHEMA, and TABLE_LOCATION UDFs.   02080000
-- ******************************************************************** 02090000
-- EXEC SQL DROP VIEW   DSN8.VIEW_OF_SYSTABLES;                         02100000
-- EXEC SQL DROP ALIAS  DSN8.ALIAS_OF_VIEW;                             02110000
-- EXEC SQL DROP ALIAS  DSN8.ALIAS_OF_SYSTABLES;                        02120000
-- EXEC SQL DROP ALIAS  DSN8.ALIAS_RS_SYSTABLES;                        02130000
-- EXEC SQL COMMIT;                                                     02140000
                                                                        02150000
-- ******************************************************************** 02160000
-- Create a view of SYSIBM.SYSTABLES                                    02170000
-- ******************************************************************** 02180000
   CREATE VIEW  DSN8.VIEW_OF_SYSTABLES                                  02190000
            AS  SELECT  *                                               02200000
          FROM  SYSIBM.SYSTABLES;                                       02210000
-- ******************************************************************** 02220000
-- Create an ALIAS of the VIEW of SYSIBM.SYSTABLES                      02230000
-- ******************************************************************** 02240000
   CREATE ALIAS  DSN8.ALIAS_OF_VIEW                                     02250000
            FOR  DSN8.VIEW_OF_SYSTABLES;                                02260000
-- ******************************************************************** 02270000
-- Create an ALIAS of SYSIBM.SYSTABLES                                  02280000
-- ******************************************************************** 02290000
   CREATE ALIAS  DSN8.ALIAS_OF_SYSTABLES                                02300000
            FOR  SYSIBM.SYSTABLES;                                      02310000
-- ******************************************************************** 02320000
-- Create an ALIAS of SYSIBM.SYSTABLES at a "remote" server             02330000
-- ******************************************************************** 02340000
   CREATE ALIAS  DSN8.ALIAS_RS_SYSTABLES                                02350000
            FOR  REMOTE_SITE.SYSIBM.SYSTABLES;                          02360000
                                                                        02370000
   COMMIT;                                                              02380000
                                                                        02390000
-- ******************************************************************** 02400000
-- Set the current SQLID to the sample schema                           02410000
-- ******************************************************************** 02420000
   SET CURRENT SQLID = 'DSN8';                                          02430000
                                                                        02440000
-- ******************************************************************** 02450000
-- Use TABLE_NAME to get the name of the base object for ALIAS_OF_VIEW  02460000
-- (which is VIEW_OF_SYSTABLES)                                         02470000
-- ******************************************************************** 02480000
   SELECT  DSN8.TABLE_NAME( 'ALIAS_OF_VIEW' )                           02490000
     FROM  SYSIBM.SYSDUMMY1;                                            02500000
                                                                        02510000
-- Release DB2 resources                                                02520000
   ROLLBACK;                                                            02530000
                                                                        02540000
-- ******************************************************************** 02550000
-- Use TABLE_SCHEMA to get the name of the base schema for ALIAS_OF_    02560000
-- SYSTABLES (which is SYSIBM)                                          02570000
-- ******************************************************************** 02580000
   SELECT  DSN8.TABLE_SCHEMA( 'ALIAS_OF_SYSTABLES' )                    02590000
     FROM  SYSIBM.SYSDUMMY1;                                            02600000
                                                                        02610000
-- Release DB2 resources                                                02620000
   ROLLBACK;                                                            02630000
                                                                        02640000
-- ******************************************************************** 02650000
-- Use TABLE_LOCATION to get the name of the location where the base    02660000
-- object for ALIAS_RS_SYSTABLES resides (REMOTE_SITE)                  02670000
-- ******************************************************************** 02680000
   SELECT  DSN8.TABLE_LOCATION( 'ALIAS_RS_SYSTABLES' )                  02690000
     FROM  SYSIBM.SYSDUMMY1;                                            02700000
                                                                        02710000
-- Release DB2 resources                                                02720000
   ROLLBACK;                                                            02730000
                                                                        02740000
-- ******************************************************************** 02750000
-- Drop the test objects that were used to demonstrate the TABLE_NAME,  02760000
-- TABLE_SCHEMA, and TABLE_LOCATION UDFs.                               02770000
-- ******************************************************************** 02780000
   DROP VIEW   DSN8.VIEW_OF_SYSTABLES;                                  02790000
   DROP ALIAS  DSN8.ALIAS_OF_VIEW;                                      02800000
   DROP ALIAS  DSN8.ALIAS_OF_SYSTABLES;                                 02810000
   DROP ALIAS  DSN8.ALIAS_RS_SYSTABLES;                                 02820000
   COMMIT;                                                              02830000

./ ADD NAME=DSNTIAUL
/UNLOAD  EXEC PGM=IKJEFT01,DYNAMNBR=20                                  00010000
//SYSTSPRT DD  SYSOUT=*                                                 00020000
//SYSTSIN  DD  *                                                        00030000
 DSN SYSTEM(DSN)                                                        00040000
 RUN  PROGRAM(DSNTIAUL) PLAN(DSNTIBB1) PARMS('SQL,250') -               00050000
       LIB('DSN1110.RUNLIB.LOAD')                                       00060000
//SYSPRINT DD SYSOUT=*                                                  00070000
//SYSUDUMP DD SYSOUT=*                                                  00080000
//SYSREC00 DD DSN=DSN8UNLD.SYSREC00,                                    00090000
//            UNIT=SYSDA,SPACE=(32760,(1000,500)),DISP=(,CATLG),        00100000
//            VOL=SER=SCR03                                             00110000
//SYSREC01 DD DSN=DSN8UNLD.SYSREC01,                                    00120000
//            UNIT=SYSDA,SPACE=(32760,(1000,500)),DISP=(,CATLG),        00130000
//            VOL=SER=SCR03                                             00140000
//SYSPUNCH DD DSN=DSN8UNLD.SYSPUNCH,                                    00150000
//            UNIT=SYSDA,SPACE=(800,(15,15)),DISP=(,CATLG),             00160000
//            VOL=SER=SCR03,RECFM=FB,LRECL=120,BLKSIZE=1200             00170000
//SYSIN    DD *                                                         00180000
//SYSIN    DD *                                                         00190000
LOCK TABLE DSN8B10.EMP IN SHARE MODE;                                   00200000
LOCK TABLE DSN8B10.PROJ IN SHARE MODE;                                  00210000
SELECT * FROM DSN8B10.PROJ;                                             00220000
SELECT * FROM DSN8B10.EMP                                               00230000
  WHERE WORKDEPT LIKE 'D%'                                              00240000
  ORDER BY EMPNO;                                                       00250000

./ ADD NAME=DSNTIJAF
//********************************************************************* 00010000
//*                                                                     00020000
//* JOB NAME = DSNTIJAF                                                 00030000
//*                                                                     00040000
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM                          00050000
//*                                                                     00060000
//*    Licensed Materials - Property of IBM                             00070000
//*    5650-DB2                                                         00080000
//*    (C) COPYRIGHT 2016 IBM Corp.  All Rights Reserved.               00090000
//*                                                                     00100000
//*    STATUS = Version 12                                              00110000
//*                                                                     00120000
//* FUNCTION = ACTIVATE A DB2 FUNCTION LEVEL                            00130000
//*                                                                     00140000
//* PSEUDOCODE =                                                        00150000
//*   DSNTAFL  STEP      ACTIVATE A FUNCTION LEVEL                      00160000
//*                                                                     00170000
//* CHANGE ACTIVITY =                                                   00180000
//*   08/20/2016 Add ACTIVATE mode for function levels   s29276 PI70406 00190000
//*                                                                     00200000
//********************************************************************* 00210000
//JOBLIB  DD  DISP=SHR,                                                 00220000
//            DSN=DSN§§0.SDSNLOAD                                       00230000
//*                                                                     00240000
//DSNTAFL EXEC PGM=IKJEFT01,DYNAMNBR=20                                 00250000
//SYSTSPRT DD  SYSOUT=*                                                 00260000
//SYSPRINT DD  SYSOUT=*                                                 00270000
//SYSUDUMP DD  SYSOUT=*                                                 00280000
//SYSTSIN  DD  *                                                        00290000
  DSN SYSTEM(DSN)                                                       00300000
  -ACTIVATE FUNCTION LEVEL(V12R1M500)                                   00310000
  END                                                                   00320000
/*                                                                      00330000

./ ADD NAME=DSNTIJAM
//*********************************************************************
//*  NAME = DSNTIJAM
//*
//*  DESCRIPTIVE NAME = Db2 INSTALL JOB
//*
//*    Licensed Materials - Property of IBM
//*    5615-DB2
//*    (C) COPYRIGHT 2013, 2018 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 12
//*
//*  FUNCTION = RUN THIS JOB TO EXECUTE DB2 REXX EXEC DSNTATA, WHICH
//*             CAN BE USED TO MIGRATE DB2 QUERY ACCELERATION TABLES
//*             CURRENTLY RESIDING IN TABLE SPACE SYSACCEL TO THEIR
//*             OWN UTS
//*
//*  PSEUDOCODE =
//*    DSNTATA  STEP     EXECUTE DSNTATA
//*
//*     NOTES = THIS JOB REQUIRES DB2 REXX LANGUAGE SUPPORT
//*
//*             THE DSNTATA EXEC USES THE FOLLOWING SQL STATEMENTS
//*             TO MIGRATE EXISTING DB2 QUERY ACCELERATION TABLES
//*             RESIDING IN TABLE SPACE SYSACCEL TO THEIR OWN UTS
//*             o LOCK TABLE to lock existing query acceleration tables
//*               - SYSACCELERATORS, SYSACCELERATEDTABLES,
//*                 SYSACCELERATEDPACKAGES, SYSACCELERATEDTABLESAUTH
//*             o ALTER TABLE DROP RESTRICT ON DROP to allow
//*               the existing table space SYSACCEL to be dropped
//*               eventually
//*               - SYSACCELERATORS, SYSACCELERATEDTABLES,
//*                 SYSACCELERATEDPACKAGES, SYSACCELERATEDTABLESAUTH
//*             o CREATE TABLESPACE to create a UTS for each existing
//*               query acceleration table currently residing in
//*               table space SYSACCEL
//*               - SYSTSACC, SYSTSACT, SYSTSACP, SYSTSATA
//*             o CREATE TABLE, CREATE INDEX to create query
//*               acceleration tables in their own UTS
//*               --------------------------------------------------
//*               !  UTS     !           Table           ! Index   !
//*               -------------------------------------------------!
//*               ! SYSTSACC ! SYSACCELERATOR1           ! DSNACC1 !
//*               ! SYSTSACT ! SYSACCELERATEDTABLE1      ! DSNACT1 !
//*               ! SYSTSACP ! SYSACCELERATEDPACKAGE1    ! DSNACP1 !
//*               !          !                           ! DSNACP2 !
//*               ! SYSTSATA ! SYSACCELERATEDTABLESAUTH1 ! DSNATA1 !
//*               --------------------------------------------------
//*             o INSERT INTO ... SELECT * FROM to populate the new
//*               query acceleration tables
//*               ----------------------------------------------------
//*               !         Into            !           From         !
//*               ---------------------------------------------------!
//*               !SYSACCELERATOR1          !SYSACCELERATORS         !
//*               !SYSACCELERATEDTABLE1     !SYSACCELERATEDTABLES    !
//*               !SYSACCELERATEDPACKAGE1   !SYSACCELERATEDPACKAGES  !
//*               !SYSACCELERATEDTABLESAUTH1!SYSACCELERATEDTABLESAUTH!
//*               ----------------------------------------------------
//*             o DROP TABLESPACE to drop the old table space
//*               - SYSACCEL
//*             o RENAME TABLE, RENAME INDEX to rename the new query
//*               acceleration tables and their indexes
//*               ----------------------------------------------------
//*               !         Source          !           New          !
//*               ---------------------------------------------------!
//*               !SYSACCELERATOR1          !SYSACCELERATORS         !
//*               !DSNACC1                  !DSNACC01                !
//*               !SYSACCELERATEDTABLE1     !SYSACCELERATEDTABLES    !
//*               !DSNACT1                  !DSNACT01                !
//*               !SYSACCELERATEDPACKAGE1   !SYSACCELERATEDPACKAGES  !
//*               !DSNACP1                  !DSNACP01                !
//*               !DSNACP2                  !DSNACP02                !
//*               !SYSACCELERATEDTABLESAUTH1!SYSACCELERATEDTABLESAUTH!
//*               !DSNATA1                  !DSNATA01                !
//*               ----------------------------------------------------
//*             o ALTER TABLE ADD RESTRICT ON DROP to disallow the new
//*               query acceleration tables to be dropped
//*               - SYSACCELERATORS, SYSACCELERATEDTABLES,
//*                 SYSACCELERATEDPACKAGES, SYSACCELERATEDTABLESAUTH
//*               NOTE: This SQL is executed only if the input
//*                     parameter 7 RESTRICT_ON_DROP is Y
//*
//*             IMPORTANT:
//*             BEFORE YOU RUN DSNTIJAM, YOU MUST COMPLETE THE
//*             PRE-MIGRATION STEPS THAT ARE DOCUMENTED IN THE
//*             FOLLOWING TOPIC:
//*                 https://www.ibm.com/support/knowledgecenter/
//*                 SSEPEK_12.0.0/inst/src/tpc/
//*                 db2z_migratetblsforaccelerator.html
//*             ADDITIONALLY, AFTER YOU RUN DSNTIJAM, YOU MUST
//*             COMPLETE THE POST-MIGRATION STEPS THAT ARE ALSO
//*             DOCUMENTED IN THAT TOPIC.
//*
//*             THE FOLLOWING MANUAL TAILORING IS REQUIRED:
//*             1. ADD A VALID JOB CARD.
//*             2. LOCATE AND CHANGE ALL OCCURRENCES OF THE FOLLOWING
//*                STRINGS AS INDICATED:
//*                A. '§DSN§' TO THE NAME OF THE DB2 SUBSYSTEM YOU ARE
//*                   PREPARING TO MIGRATE.
//*                B. 'DSN§§0' TO THE PREFIX OF THE SDSNLOAD AND
//*                   SDSNCLST TARGET LIBRARY NAME FOR THE DB2
//*                   SUBSYSTEM WHOSE DB2 QUERY ACCELERATION TABLES
//*                   YOU ARE PREPARING TO MIGRATE.
//*                C. CHANGE §SYSADM§ TO THE AUTHORIZATION ID TO BE
//*                   USED TO RUN DSNTATA
//*                D. CHANGE §TSBPOOL§ TO THE BUFFER POOL SETTINGS IN
//*                   THE CREATE TABLESPACE STATEMENTS
//*                E. CHANGE §IXBPOOL§ TO THE BUFFER POOL SETTINGS IN
//*                   THE CREATE INDEX STATEMENTS
//*                F. CHANGE §TSSTOGRP§ TO THE STOGROUP SETTINGS IN THE
//*                   CREATE TABLESPACE STATEMENTS
//*                G. CHANGE §IXSTOGRP§ TO THE STOGROUP SETTINGS IN THE
//*                   CREATE INDEX STATEMENTS
//*                H. CHANGE §RESTRICT_ON_DROP§ TO Y OR N TO SPECIFY
//*                   WHETHER RESTRICT ON DROP APPLIES TO THE
//*                   NEW QUERY ACCELERATION TABLES
//*                I. CHANGE §PREVIEW§ TO Y OR N TO SPECIFY
//*                   WHETHER TO PREVIEW THE SQL STATEMENTS ONLY
//*                   WITHOUT MAKING ANY CHANGES
//*
//* CHANGE ACTIVITY =
//*   05/03/2018 Db2 analytics accelerator table UTS migration  PI96859
//**********************************************************************
//*
//JOBLIB  DD  DSN=DSN§§0.SDSNLOAD,DISP=SHR
//*
//*
//* DSNTATA: MIGRATE DB2 QUERY ACCELERATION TABLES TO THEIR OWN UTS
//*   PARMS: 1. LOCAL DB2 SSID
//*          2. AUTHORIZATION ID TO PERFORM THE WORK
//*          3. BUFFER POOL SETTINGS IN THE CREATE TABLESPACE
//*             STATEMENTS
//*          4. BUFFER POOL SETTINGS IN THE CREATE INDEX STATEMENTS
//*          5. STORAGE GROUP SETTINGS IN THE CREATE TABLESPACE
//*             STATEMENTS
//*          6. STORAGE GROUP SETTINGS IN THE CREATE INDEX STATEMENTS
//*          7. SPECIFY WHETHER RESTRICT ON DROP APPLIES
//*          8. SPECIFY WHETHER TO PREVIEW THE SQL STATEMENTS ONLY
//DSNTATA EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSEXEC  DD  DISP=SHR,DSN=DSN§§0.SDSNCLST
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
 DSNTATA +
 §DSN§ §SYSADM§ §TSBPOOL§ §IXBPOOL§ §TSSTOGRP§ §IXSTOGRP§ +
 §RESTRICT_ON_DROP§ §PREVIEW§
//*

./ ADD NAME=DSNTIJAS
//*********************************************************************
//* JOB NAME = DSNTIJAS
//*
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM
//*
//*    Licensed Materials - Property of IBM
//*    5650-DB2
//*    (C) COPYRIGHT 2013, 2018 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 12
//*
//* FUNCTION = CREATE ACCELERATOR DATABASE
//*
//* PSEUDOCODE =
//*   DSNTICU  STEP     Optional: DROP the accelerator database
//*   DSNTIAC  STEP     Create the accelerator database
//*   DSNTIAI  STEP     Optional: Initialize the accelerator database
//*   DSNTICR  Step     Optional: RESTRICT ON DROP
//*
//* DEPENDENCIES =
//*
//* NOTES =
//*    PRIOR TO RUNNING THIS JOB, customize it for your system:
//*    (1) (A) Review the buffer pool settings in the CREATE TABLESPACE
//*            and CREATE INDEX statements processed by this job.
//*            Update the values as necessary.
//*        (B) Review the storage group settings in the CREATE
//*            TABLESPACE and CREATE INDEX statements processed by this
//*            job. Update the values as necessary.
//*    (2) Add a valid job card.
//*    (3) Change all occurrences of the following strings:
//*        (A) Change the subsystem name '§DSN§' to the SSID of your
//*            DB2.
//*        (B) Change 'DSN§§0' to the prefix of the target library
//*            for DB2.
//*        (C) Change 'DSNTIA§§' to the plan name for DSNTIAD on your
//*            DB2.
//*    (4) Refer to your accelerator product documentation for
//*        information on how to initialize the accelerator database.
//*        Job step DSNTIAI contains guidance and sample statements
//*        for initializing the accelerator database.  However, you
//*        might not need to run that job step if your accelerator
//*        product does the initialization. Do not run job step
//*        DSNTIAI if you use the IBM DB2 Analytics Accelerator
//*        for z/OS.
//*    (5) If the tables in the accelerator database need to be
//*        dropped, verify that the following subsystem parameters
//*        are set properly prior to dropping the tables so that
//*        acceleration is no longer considered for an SQL statement.
//*         (1) ACCEL set to NO or not specified
//*         (2) GET_ACCEL_ARCHIVE set to NO or not specified
//*         (3) QUERY_ACCELERATION set to NONE or not specified
//*
//* CHANGE LOG =
//*   09/01/11 Add to V10                               PM50435 / n0109
//*   05/24/12                                  n4629r5_inst3 / n4629r5
//*            Add ARCHIVE to SYSACCELERATEDTABLES
//*   07/06/12                                  n4629r6_inst1 / n4629r6
//*            Change DSNACCEL.SYSACCEL to LOCKSIZE ROW
//*   08/02/12 Add to V11                162353 / n109r6_inst1 / n109r6
//*   01/31/14 pm95610_inst               merge_c_rally1 pm95610 s20260
//*            Add SYSACCEL.SYSACCELERATEDPACKAGES
//*   06/18/14 Add optional restrict on drop    PI27766/f175218/f175223
//*   09/08/15 Add new column ACCELERATORSRL to table  s21401 / PI49422
//*            SYSACCELERATORS and ALTER ADD COL stmt           s24899
//*   06/15/17 Add new column REMOTELOCATION to table           PI82739
//*              SYSACCELERATEDTABLES
//*            Add new table, SYSACCEL.SYSACCELERATEDTABLESAUTH PI82739
//*   09/06/17 Add new column ACCELERATOR_TYPE to table          s63349
//*            SYSACCELERATORS.
//*            Add new column ACCELERATOR to table
//*            SYSACCELERATEDPACKAGES
//*   05/03/18 Create each SYSACCEL table in a dedicated UTS    PI96859
//*   07/10/19 Add new column ACCELERATION_WAITFORDATA to
//*            table SYSACCELERATEDPACKAGES     e85303 s53809 / PH14116
//*   09/30/20 E4698 Add column SYSACCELERATEDTABLES.FEATURE    PH30574
//*
//*********************************************************************
//JOBLIB  DD  DISP=SHR,
//            DSN=DSN§§0.SDSNLOAD
//*
//*  //****************************************************************
//*  //* Optional: Drop the accelerator database
//*  //****************************************************************
//*  //DSNTICU EXEC PGM=IKJEFT01,DYNAMNBR=20
//*  //SYSTSPRT DD  SYSOUT=*
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSTSIN  DD  *
//*    DSN SYSTEM(§DSN§)
//*    RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) PARM('RC0') -
//*         LIBRARY('DSN§§0.RUNLIB.LOAD')
//*    END
//*  //SYSIN    DD  *
//*    DROP DATABASE DSNACCEL;
//*  /*
//*
//*********************************************************************
//* Create the accelerator databases
//*********************************************************************
//DSNTIAC EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
  DSN SYSTEM(§DSN§)
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) -
       LIBRARY('DSN§§0.RUNLIB.LOAD')
  END
//SYSIN    DD  *
  CREATE DATABASE DSNACCEL
         CCSID UNICODE;

  CREATE TABLESPACE SYSTSACC IN DSNACCEL
         DSSIZE 64G
         SEGSIZE 32
         MAXPARTITIONS 1
         LOCKSIZE ROW
         USING STOGROUP SYSDEFLT
         FREEPAGE 0 PCTFREE 10
         BUFFERPOOL BP0
         CLOSE NO
         CCSID UNICODE;

  CREATE TABLESPACE SYSTSACT IN DSNACCEL
         DSSIZE 64G
         SEGSIZE 32
         MAXPARTITIONS 1
         LOCKSIZE ROW
         USING STOGROUP SYSDEFLT
         FREEPAGE 0 PCTFREE 10
         BUFFERPOOL BP0
         CLOSE NO
         CCSID UNICODE;

  CREATE TABLESPACE SYSTSACP IN DSNACCEL
         DSSIZE 64G
         SEGSIZE 32
         MAXPARTITIONS 1
         LOCKSIZE ROW
         USING STOGROUP SYSDEFLT
         FREEPAGE 0 PCTFREE 10
         BUFFERPOOL BP0
         CLOSE NO
         CCSID UNICODE;

  CREATE TABLESPACE SYSTSATA IN DSNACCEL
         DSSIZE 64G
         SEGSIZE 32
         MAXPARTITIONS 1
         LOCKSIZE ROW
         USING STOGROUP SYSDEFLT
         FREEPAGE 0 PCTFREE 10
         BUFFERPOOL BP0
         CLOSE NO
         CCSID UNICODE;

  CREATE TABLE "SYSACCEL"."SYSACCELERATORS"
         ( "ACCELERATORNAME"    VARCHAR(128) NOT NULL
         , "LOCATION"           VARCHAR(128)
         , "ACCELERATORSRL"     CHAR(64) FOR BIT DATA DEFAULT NULL
         , "ACCELERATOR_TYPE"   SMALLINT NOT NULL WITH DEFAULT  1
         )
         IN DSNACCEL.SYSTSACC
         CCSID UNICODE;

  CREATE UNIQUE INDEX "SYSACCEL"."DSNACC01"
         ON "SYSACCEL"."SYSACCELERATORS"
         ( "ACCELERATORNAME" ASC )
         USING STOGROUP SYSDEFLT
         FREEPAGE 0 PCTFREE 10
         CLUSTER BUFFERPOOL BP0
         CLOSE NO;

  CREATE TABLE "SYSACCEL"."SYSACCELERATEDTABLES"
         ( "NAME"            VARCHAR(128)  NOT NULL
         , "CREATOR"         VARCHAR(128)  NOT NULL
         , "ACCELERATORNAME" VARCHAR(128)  NOT NULL
         , "REMOTENAME"      VARCHAR(128)  NOT NULL
         , "REMOTECREATOR"   VARCHAR(128)  NOT NULL
         , "ENABLE"          CHAR(1)       NOT NULL
         , "CREATEDBY"       VARCHAR(128)  NOT NULL
         , "CREATEDTS"       TIMESTAMP     NOT NULL WITH DEFAULT
         , "ALTEREDTS"       TIMESTAMP     NOT NULL WITH DEFAULT
         , "REFRESH_TIME"    TIMESTAMP     NOT NULL WITH DEFAULT
         , "SUPPORTLEVEL"    SMALLINT      NOT NULL WITH DEFAULT
         , "ARCHIVE"         CHAR(1)       NOT NULL WITH DEFAULT
         , "REMOTELOCATION"  VARCHAR(128)  NOT NULL WITH DEFAULT
         , "FEATURE"         INTEGER       NOT NULL WITH DEFAULT
         )
         IN DSNACCEL.SYSTSACT
         CCSID UNICODE;

  CREATE UNIQUE INDEX "SYSACCEL"."DSNACT01"
         ON "SYSACCEL"."SYSACCELERATEDTABLES"
         ( "CREATOR"          ASC
         , "NAME"             ASC
         , "ACCELERATORNAME"  ASC
         )
         USING STOGROUP SYSDEFLT
         FREEPAGE 0 PCTFREE 10
         CLUSTER BUFFERPOOL BP0
         CLOSE NO;

  CREATE TABLE "SYSACCEL"."SYSACCELERATEDPACKAGES"
         ( "LOCATION"        VARCHAR(128)  NOT NULL WITH DEFAULT
         , "COLLID"          VARCHAR(128)  NOT NULL WITH DEFAULT
         , "NAME"            VARCHAR(128)  NOT NULL WITH DEFAULT
         , "CONTOKEN"        CHAR(8)       FOR BIT DATA
                                           NOT NULL WITH DEFAULT
         , "VERSION"         VARCHAR(122)  NOT NULL WITH DEFAULT
         , "OWNER"           VARCHAR(128)  NOT NULL WITH DEFAULT
         , "CREATOR"         VARCHAR(128)  NOT NULL WITH DEFAULT
         , "TIMESTAMP"       TIMESTAMP     NOT NULL WITH DEFAULT
         , "BINDTIME"        TIMESTAMP     NOT NULL WITH DEFAULT
         , "RELBOUND"        CHAR(1)       NOT NULL WITH DEFAULT
         , "TYPE"            CHAR(1)       NOT NULL WITH DEFAULT
         , "COPYID"          INTEGER       NOT NULL WITH DEFAULT
         , "QUERYACCELERATION" CHAR(1)     NOT NULL WITH DEFAULT
         , "GETACCELARCHIVE" CHAR(1)       NOT NULL WITH DEFAULT
         , "ACCELERATOR"     VARCHAR(128)  NOT NULL WITH DEFAULT
         , "ACCELERATION_WAITFORDATA" DECIMAL(5,1)
                                           NOT NULL WITH DEFAULT -1.0
         ,  PRIMARY KEY
              ( "LOCATION"
              , "COLLID"
              , "NAME"
              , "CONTOKEN"
              )
         )
         IN DSNACCEL.SYSTSACP
         CCSID UNICODE;

  CREATE UNIQUE INDEX "SYSACCEL"."DSNACP01"
         ON "SYSACCEL"."SYSACCELERATEDPACKAGES"
         ( "LOCATION"        ASC
         , "COLLID"          ASC
         , "NAME"            ASC
         , "VERSION"         ASC
         )
         NOT CLUSTER
         NOT PADDED
         USING STOGROUP SYSDEFLT
         ERASE NO
         FREEPAGE 0 PCTFREE 10
         GBPCACHE CHANGED
         DEFINE YES
         COMPRESS NO
         BUFFERPOOL BP0
         CLOSE NO;

  CREATE UNIQUE INDEX "SYSACCEL"."DSNACP02"
         ON "SYSACCEL"."SYSACCELERATEDPACKAGES"
         ( "LOCATION"        ASC
         , "COLLID"          ASC
         , "NAME"            ASC
         , "CONTOKEN"        ASC
         )
         NOT CLUSTER
         NOT PADDED
         USING STOGROUP SYSDEFLT
         ERASE NO
         FREEPAGE 0 PCTFREE 10
         GBPCACHE CHANGED
         DEFINE YES
         COMPRESS NO
         BUFFERPOOL BP0
         CLOSE NO;

  CREATE TABLE "SYSACCEL"."SYSACCELERATEDTABLESAUTH"
         ( "ACCELERATORNAME" VARCHAR(128)  NOT NULL
         , "GRANTOR"         VARCHAR(128)  NOT NULL
         , "GRANTEE"         VARCHAR(128)  NOT NULL
         , "GRANTEETYPE"     CHAR(1)       NOT NULL
         , "TCREATOR"        VARCHAR(128)  NOT NULL
         , "TNAME"           VARCHAR(128)  NOT NULL
         , "SELECTAUTH"      CHAR(1)       NOT NULL
         , "GRANTEDTS"       TIMESTAMP     NOT NULL WITH DEFAULT
         ,  PRIMARY KEY
              ( "TCREATOR"
              , "TNAME"
              , "ACCELERATORNAME"
              , "GRANTEE"
              )
         )
         IN DSNACCEL.SYSTSATA
         CCSID UNICODE;

  CREATE UNIQUE INDEX "SYSACCEL"."DSNATA01"
         ON "SYSACCEL"."SYSACCELERATEDTABLESAUTH"
         ( "TCREATOR"         ASC
         , "TNAME"            ASC
         , "ACCELERATORNAME"  ASC
         , "GRANTEE"          ASC
         )
         USING STOGROUP SYSDEFLT
         FREEPAGE 0 PCTFREE 10
         CLUSTER BUFFERPOOL BP0
         CLOSE NO;
/*
//*
//*********************************************************************
//* Initialize the accelerator database
//*********************************************************************
//* Before reviewing or modifying this job step, refer to your
//* accelerator product documentation for information on how to
//* initialize the accelerator database. If your accelerator product
//* does not provide a means of initializing the accelerator database,
//* modify and use the following statements to do the initialization.
//*
//* To use this job step to initialize the accelerator database,
//* locate and replace each of the following tokens in the VALUES
//* clauses of the INSERT statements with the appropriate values for
//* your accelerator setup:
//*
//*   * accelerator-name:
//*       Replace this token with the unique name for the accelerator
//*       server.  This is the name by which the accelerator server
//*       is known to local DB2 SQL accelerated query tables.
//*
//*   * accelerator-location:
//*       Each row in the SYSACCEL.SYSACCELERATORS table must have at
//*       least one corresponding row in the SYSIBM.LOCATIONS
//*       table with a matching location value. Replace the
//*       accelerator-location token with a name that associates the
//*       corresponding rows.
//*
//*********************************************************************
//*  //DSNTIAI EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//*  //SYSTSPRT DD  SYSOUT=*
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSTSIN  DD  *
//*    DSN SYSTEM(§DSN§)
//*    RUN PROGRAM(DSNTIAD) PLAN(DSNTIA§§) -
//*    LIB('DSN§§0.RUNLIB.LOAD')
//*    END
//*  //SYSIN    DD  *
//*    INSERT INTO SYSACCEL.SYSACCELERATORS
//*           ( ACCELERATORNAME
//*           , LOCATION
//*           )
//*          VALUES
//*           ( 'accelerator-name'
//*           , 'accelerator-location'
//*           );
//*  /*
//*
//*********************************************************************
//* Optional: Add RESTRICT ON DROP
//* To prevent the tables in the accelerator database from being
//* dropped by accident, run the ALTER TABLE statements in DSNTICR.
//* If these tables need to be dropped after adding the RESTRICT ON
//* DROP, follow these steps:
//* Prior to dropping the tables in the accelerator database,
//* verify that the following subsystem parameters are set properly so
//* that acceleration is no longer considered for an SQL statement.
//* (1) ACCEL set to NO or not specified
//* (2) GET_ACCEL_ARCHIVE set to NO or not specified
//* (3) QUERY_ACCELERATION set to NONE or not specified
//* Remove the RESTRICT ON DROP using the following ALTER TABLE
//* statements:
//*   ALTER TABLE SYSACCEL.SYSACCELERATORS DROP RESTRICT ON DROP;
//*   ALTER TABLE SYSACCEL.SYSACCELERATEDTABLES DROP RESTRICT ON DROP;
//*   ALTER TABLE SYSACCEL.SYSACCELERATEDPACKAGES DROP RESTRICT ON DROP;
//*   ALTER TABLE SYSACCEL.SYSACCELERATEDTABLESAUTH
//*     DROP RESTRICT ON DROP;
//* Now drop the DSNACCEL database containing all SYSACCEL objects:
//*   DROP DATABASE DSNACCEL;
//* WARNING:
//* REPAIR DBD DROP DATABASE should not be used to drop these tables.
//*********************************************************************
//*  //DSNTICR EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//*  //SYSTSPRT DD  SYSOUT=*
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSTSIN  DD  *
//*    DSN SYSTEM(§DSN§)
//*    RUN PROGRAM(DSNTIAD) PLAN(DSNTIA§§) -
//*    LIB('DSN§§0.RUNLIB.LOAD')
//*    END
//*  //SYSIN    DD  *
//*    ALTER TABLE SYSACCEL.SYSACCELERATORS ADD RESTRICT ON DROP;
//*    ALTER TABLE SYSACCEL.SYSACCELERATEDTABLES ADD RESTRICT ON DROP;
//*    ALTER TABLE SYSACCEL.SYSACCELERATEDPACKAGES ADD RESTRICT ON DROP;
//*    ALTER TABLE SYSACCEL.SYSACCELERATEDTABLESAUTH
//*      ADD RESTRICT ON DROP;
//*  /*
//*

./ ADD NAME=DSNTIJA1
//********************************************************************* 00010000
//*                                                                     00020000
//* JOB NAME = DSNTIJA1                                                 00030000
//*                                                                     00040000
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM                          00050000
//*                                                                     00060000
//*    Licensed Materials - Property of IBM                             00070000
//*    5650-DB2                                                         00080000
//*    (C) COPYRIGHT 2016 IBM Corp.  All Rights Reserved.               00090000
//*                                                                     00100000
//*    STATUS = Version 12                                              00110000
//*                                                                     00120000
//* FUNCTION = ACTIVATE DB2 FUNCTION LEVEL M501                         00130000
//*                                                                     00140000
//* PSEUDOCODE =                                                        00150000
//*   DSNTAFL  STEP      ACTIVATE A FUNCTION LEVEL                      00160000
//*                                                                     00170000
//* CHANGE ACTIVITY =                                                   00180000
//*   11/02/2017 Add ACTIVATE FL M502 support                    s68825 00190003
//*                                                                     00200000
//********************************************************************* 00210000
//JOBLIB  DD  DISP=SHR,                                                 00220000
//            DSN=DSN§§0.SDSNLOAD                                       00230000
//*                                                                     00240000
//DSNTAFL EXEC PGM=IKJEFT01,DYNAMNBR=20                                 00250000
//SYSTSPRT DD  SYSOUT=*                                                 00260000
//SYSPRINT DD  SYSOUT=*                                                 00270000
//SYSUDUMP DD  SYSOUT=*                                                 00280000
//SYSTSIN  DD  *                                                        00290000
  DSN SYSTEM(DSN)                                                       00300000
  -ACTIVATE FUNCTION LEVEL(V12R1M501)                                   00310000
  END                                                                   00320000
/*                                                                      00330000

./ ADD NAME=DSNTIJCI
//********************************************************************* 00010000
//* Job name = DSNTIJCI                                                 00011000
//*                                                                     00012000
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM                          00013000
//*                                                                     00014000
//*    Licensed Materials - Property of IBM                             00015000
//*    5650-DB2                                                         00016000
//*    (C) COPYRIGHT 2013, 2016 IBM Corp.  All Rights Reserved.         00017000
//*                                                                     00018000
//*    STATUS = Version 12                                              00019000
//*                                                                     00020000
//* Function = Check indexes for DB2 Catalog and directory tables       00021000
//*            affected by migration processing.                        00022000
//*                                                                     00023000
//* Pseudocode =                                                        00024000
//*   DSNRS1   STEP      Update RUNSTATS for DB2 Catalog (DSNDB06)      00025000
//*                            table spaces checked by this job         00026000
//*   DSNCI1   STEP      Check indexes for the DB2 Catalog (DSNDB06)    00027000
//*   DSNCI2   STEP      Check indexes for the DB2 skeleton package     00028000
//*                            directory table spaces                   00029000
//*   DSNCI3   STEP      Check indexes for the DB2 database descriptor  00030000
//*                            directory table spaces                   00031000
//*   DSNCI4   STEP      Check indexes for the DB2 system utilities     00032000
//*                            directory table space                    00033000
//*   DSNCI5   STEP      Check indexes for the DB2 log range directory  00034000
//*                            table space                              00035000
//* Notes =                                                             00036000
//*   PRIOR TO RUNNING THIS JOB, customize it for your system:          00037000
//*   (1) Review and optionally update the SORTDEVT and SORTNUM         00038000
//*       settings                                                      00039000
//*   (2) Add a valid job card                                          00040000
//*   (3) Locate and change all occurrences of the following strings    00041000
//*       as indicated:                                                 00042000
//*       (A) The subsystem name '§DSN§' to the name of your DB2        00043000
//*       (B) 'DSN§§0' to the prefix of the target library for DB2      00044000
//*   (4) If DB2 Real Time Statistics (RTS) is disabled when you        00045000
//*       run this job, CHECK INDEX processing can fail with SYSTEM     00046000
//*       COMPLETION CODE=04E  REASON CODE=00E40005 due to sort         00047000
//*       failure reported by message                                   00048000
//*         DSNU044I DSNUGSRP - ERROR FROM SORT COMPONENT               00049000
//*         RC=16, UTILITY STOPPED                                      00050000
//*       in conjunction with message                                   00051000
//*         DSNU3343I DSNUKINM - REAL-TIME STATISTICS INFORMATION       00052000
//*         MISSING FOR TABLESPACE DSNDB06.SYSxxxxx                     00053000
//*       Note that RTS is disabled when DB2 is started with            00054000
//*       ACCESS(MAINT).                                                00055000
//*                                                                     00056000
//*       RECOMMENDATION: Before running this job when RTS is           00057000
//*       disabled, uncomment and run job step DSNRS1 to perform        00058000
//*       RUNSTATS processing on DB2 catalog table spaces having        00059000
//*       indexes that are CHECKed by this job.  Note that any          00060000
//*       manual updates to statistics for these objects will be        00061000
//*       replaced.                                                     00062000
//*                                                                     00063000
//* Change activity =                                                   00064000
//*    08/18/2014 Single-phase migration            s21938_inst1 s21938 00065000
//*    01/18/2016 Final updates for DB2 12                       180728 00066000
//*   02/15/2016 Long data set names                            PI42601 00067000
//*   07/01/2016 Support for CD catalog updates                  184402 00068000
//*              Add SYSTSLVH + DSNLVX01 + DSNLVX02                     00069000
//*                                                                     00070000
//********************************************************************* 00071000
//JOBLIB   DD DSN=DSN§§0.SDSNEXIT,DISP=SHR                              00072000
//         DD DSN=DSN§§0.SDSNLOAD,DISP=SHR                              00073000
//*                                                                     00074000
//*  Optional: Uncomment and run the following job step if you          00075000
//*  run this job when DB2 Real Time Statistics is disabled             00076000
//*                                                                     00077000
//*  //*  Update RUNSTATS for the DB2 Catalog (DSNDB06) table spaces    00078000
//*  //*  checked by this job                                           00079000
//*  //*                                                                00080000
//*  //DSNRS1  EXEC PGM=DSNUTILB,REGION=0M,                             00081000
//*  //             PARM='§DSN§,DSNRS1'                                 00082000
//*  //SYSPRINT DD  SYSOUT=*                                            00083000
//*  //UTPRINT  DD  SYSOUT=*                                            00084000
//*  //SYSIN    DD  *                                                   00085000
//*    LISTDEF DSN_LDEF                                                 00086000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSCOL                      00087000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSDQD                      00088000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSDQE                      00089000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSDQH                      00090000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSDQO                      00091000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSDQS                      00092000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSDQT                      00093000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSDQY                      00094000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSICO                      00095000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSQRY                      00096000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSSES                      00097000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSSNL                      00098000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSSNX                      00099000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSSTA                      00100000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSLVH                      00101000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSSXL                      00102000
//*            INCLUDE TABLESPACE DSNDB06.SYSTSVAR                      00103000
//*    RUNSTATS TABLESPACE LIST DSN_LDEF                                00104000
//*            TABLE(ALL)                                               00105000
//*            INDEX(ALL)                                               00106000
//*  /*                                                                 00107000
//*                                                                     00108000
//*  Check indexes for the DB2 Catalog (DSNDB06)                        00109000
//*                                                                     00110000
//DSNCI1  EXEC PGM=DSNUTILB,REGION=0M,COND=(4,LT),                      00111000
//             PARM='§DSN§,DSNCI1'                                      00112000
//SYSPRINT DD  SYSOUT=*                                                 00113000
//UTPRINT  DD  SYSOUT=*                                                 00114000
//SYSIN    DD  *                                                        00115000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSCOL                         00116000
       SORTDEVT SYSDA SORTNUM 5                                         00117000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDQD                         00118000
       SORTDEVT SYSDA SORTNUM 5                                         00119000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDQE                         00120000
       SORTDEVT SYSDA SORTNUM 5                                         00121000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDQH                         00122000
       SORTDEVT SYSDA SORTNUM 5                                         00123000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDQO                         00124000
       SORTDEVT SYSDA SORTNUM 5                                         00125000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDQS                         00126000
       SORTDEVT SYSDA SORTNUM 5                                         00127000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDQT                         00128000
       SORTDEVT SYSDA SORTNUM 5                                         00129000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDQY                         00130000
       SORTDEVT SYSDA SORTNUM 5                                         00131000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSICO                         00132000
       SORTDEVT SYSDA SORTNUM 5                                         00133000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSQRY                         00134000
       SORTDEVT SYSDA SORTNUM 5                                         00135000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSSES                         00136000
       SORTDEVT SYSDA SORTNUM 5                                         00137000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSSNL                         00138000
       SORTDEVT SYSDA SORTNUM 5                                         00139000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSSNX                         00140000
       SORTDEVT SYSDA SORTNUM 5                                         00141000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSSTA                         00142000
       SORTDEVT SYSDA SORTNUM 5                                         00143000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSLVH                         00144000
       SORTDEVT SYSDA SORTNUM 5                                         00145000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSSXL                         00146000
       SORTDEVT SYSDA SORTNUM 5                                         00147000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSVAR                         00148000
       SORTDEVT SYSDA SORTNUM 5                                         00149000
//*                                                                     00150000
//*  Check indexes for the DB2 skeleton package directory table spaces  00151000
//*                                                                     00152000
//DSNCI2  EXEC PGM=DSNUTILB,REGION=0M,COND=(4,LT),                      00153000
//             PARM='§DSN§,DSNCI2'                                      00154000
//SYSPRINT DD  SYSOUT=*                                                 00155000
//UTPRINT  DD  SYSOUT=*                                                 00156000
//SYSIN    DD  *                                                        00157000
 CHECK INDEX(ALL) TABLESPACE   DSNDB01.SPT01                            00158000
       SORTDEVT SYSDA SORTNUM 5                                         00159000
 CHECK INDEX(ALL) TABLESPACE   DSNDB01.SYSSPUXA                         00160000
       SORTDEVT SYSDA SORTNUM 5                                         00161000
 CHECK INDEX(ALL) TABLESPACE   DSNDB01.SYSSPUXB                         00162000
       SORTDEVT SYSDA SORTNUM 5                                         00163000
//*                                                                     00164000
//*  Check indexes for DB2 database descriptor directory table spaces   00165000
//*                                                                     00166000
//DSNCI3  EXEC PGM=DSNUTILB,REGION=0M,COND=(4,LT),                      00167000
//             PARM='§DSN§,DSNCI3'                                      00168000
//SYSPRINT DD  SYSOUT=*                                                 00169000
//UTPRINT  DD  SYSOUT=*                                                 00170000
//SYSIN    DD  *                                                        00171000
 CHECK INDEX(ALL) TABLESPACE   DSNDB01.DBD01                            00172000
       SORTDEVT SYSDA SORTNUM 5                                         00173000
 CHECK INDEX(ALL) TABLESPACE   DSNDB01.SYSDBDXA                         00174000
       SORTDEVT SYSDA SORTNUM 5                                         00175000
//*                                                                     00176000
//*  Check indexes for the DB2 system utilities directory table space   00177000
//*                                                                     00178000
//DSNCI4  EXEC PGM=DSNUTILB,REGION=0M,COND=(4,LT),                      00179000
//             PARM='§DSN§,DSNCI4'                                      00180000
//SYSPRINT DD  SYSOUT=*                                                 00181000
//UTPRINT  DD  SYSOUT=*                                                 00182000
//SYSIN    DD  *                                                        00183000
 CHECK INDEX(ALL) TABLESPACE   DSNDB01.SYSUTILX                         00184000
       SORTDEVT SYSDA SORTNUM 5                                         00185000
//*                                                                     00186000
//*  Check indexes for the DB2 log range directory table space          00187000
//*                                                                     00188000
//DSNCI5  EXEC PGM=DSNUTILB,REGION=0M,COND=(4,LT),                      00189000
//             PARM='§DSN§,DSNCI5'                                      00190000
//SYSPRINT DD  SYSOUT=*                                                 00191000
//UTPRINT  DD  SYSOUT=*                                                 00192000
//SYSIN    DD  *                                                        00193000
 CHECK INDEX(ALL) TABLESPACE   DSNDB01.SYSLGRNX                         00194000
       SORTDEVT SYSDA SORTNUM 5                                         00195000
//*                                                                     00196000

./ ADD NAME=DSNTIJCL
//*********************************************************************/00010000
//* JOB NAME = DSNTIJCL                                               */00020000
//*                                                                   */00030000
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM                        */00040000
//*                                                                   */00050000
//*    Licensed Materials - Property of IBM                           */00060000
//*    5635-DB2                                                       */00070000
//*    (C) COPYRIGHT 1982, 2006 IBM Corp.  All Rights Reserved.       */00080000
//*                                                                   */00090000
//*    STATUS = Version 10                                            */00100000
//*                                                                   */00110000
//* FUNCTION = SAMPLE CLI BIND                                        */00120000
//*                                                                   */00130000
//* PSEUDOCODE =                                                      */00140000
//*   BINDCLI  STEP  BIND CLI DEFAULT PACKAGES AND PLAN               */00150000
//*                                                                   */00160000
//* DEPENDENCIES =                                                    */00170000
//*  CLI MUST BE INSTALLED                                            */00180000
//*                                                                   */00190000
//*  MEMBER DSNCLIQR CAN ONLY BE BOUND SUCCESSFULLY TO DRDA SERVERS   */00200000
//*  THAT SUPPORT QUERY RESULT SET SQL (I.E. DESCRIBE PROCEDURE).     */00210000
//*  CURRENTLY THAT IS DB2 FOR z/OS V9.                               */00220000
//*                                                                   */00230000
//* NOTES =                                                           */00240000
//* BEFORE RUNNING THIS JOB:                                          */00250000
//* - CHANGE ALL OCCURRENCES OF DSN§§0 TO THE PREFIX OF YOUR DB2 V10  */00260000
//*   for z/OS SDSNLOAD AND SDSNDBRM DATA SETS                        */00270000
//* - CHANGE THE SYSTEM(DSN) STATEMENT TO MATCH YOUR DB2 V10 for z/OS */00280000
//*   SSID                                                            */
//*                                                                   */00290000
//* CLI CAN BE BOUND TO REMOTE SERVERS BY INCLUDING THE LOCATION NAME.*/00300000
//*                                                                   */00310000
//* FOR REMOTE SERVERS OTHER THAN DB2 FOR OS/390 AND Z/OS, ALSO ADD   */00320000
//* THE APPROPRIATE BIND PACKAGE MEMBER STATEMENTS, LISTED BELOW,     */00330000
//* BASED ON THE SERVER TYPE:                                         */00340000
//*    BIND PACKAGE (<COMMON SERVER V1 LOCATION NAME>.DSNAOCLI)  -    */00350000
//*     MEMBER(DSNCLIV1)                                              */00360000
//*    BIND PACKAGE (<AS400 LOCATION NAME>.DSNAOCLI)             -    */00390000
//*     MEMBER(DSNCLIAS)                                              */00400000
//* ALSO INCLUDE ANY ADDED PACKAGE NAMES TO THE PKLIST KEYWORD OF     */00430000
//* BIND PLAN STATEMENT FOLLOWING THE BIND PACKAGE STATEMENTS.        */00440000
//*                                                                   */
//*                                                                   */
//* USERS ARE REQUIRED TO BIND DSNCLINF INTO A PACKAGE ON DB2 Z/OS    */
//* SUBSYSTEMS RUNNING WITH V8 NEW FUNCTION MODE OR ABOVE.            */
//* THIS APPLIES TO THE  LOCAL DB2 FOR Z/OS SUBSYSTEM AS WELL AS ALL  */
//* REMOTE DB2 FOR Z/OS SUBSYSTEMS:                                   */
//*    BIND PACKAGE (<DB2 FOR z/OS LOCATION NAME>.DSNAOCLI)      -    */
//*     MEMBER(DSNCLINF) CURRENTDATA(YES) ENCODING(EBCDIC)            */
//* ALSO INCLUDE ANY ADDED PACKAGE NAMES TO THE PKLIST KEYWORD OF     */
//* BIND PLAN STATEMENT FOLLOWING THE BIND PACKAGE STATEMENTS.        */
//*                                                                   */00450000
//*                                                                   */00460000
//* AFTER THE APPLICATION OF PTF UQ87850, THE BINDING OF DSNCLIMS     */00470000
//* TO A MIXED=NO SUBSYSTEM WILL RESULT IN SQLCODE=-189:              */00480000
//*    DSNX200I  = BIND SQL ERROR                                     */00490000
//*               USING SYSADM AUTHORITY                              */00500000
//*               PLAN=(NOT APPLICABLE)                               */00510000
//*               DBRM=DSNCLIMS                                       */00520000
//*               STATEMENT=747                                       */00530000
//*               SQLCODE=-189                                        */00540000
//*               SQLSTATE=22522                                      */00550000
//*               TOKENS=65534                                        */00560000
//*               CSECT NAME=DSNXOOS2                                 */00570000
//*               RDS CODE=-840                                       */00580000
//* BIND WITH SQLERROR(CONTINUE) TO BYPASS THIS ERROR.  HOWEVER       */00590000
//* IGNORING THIS ERROR MEANS YOU WILL NOT BE ABLE TO FETCH FROM AN   */00600000
//* ASCII DBCLOB COLUMN USING THE SQLGETDATA() API OR THROUGH LOB     */00610000
//* LOCATORS UNTIL YOU DEFINE YOUR SUBSYSTEM MIXED=YES WITH VALID     */00620000
//* MIXED AND GRAPHIC ASCII CCSIDS, FOLLOWED BY A REBIND OF DSNCLIMS. */00630000
//*                                                                   */00640000
//* IMPORTANT PERFORMANCE RECOMMENDATION:                             */00640400
//*                                                                   */00640800
//*     THE BIND OPTION CURRENTDATA DEFAULTS TO THE VALUE NO FOR      */00641200
//*     DB2 FOR Z/OS VERSION 10.  IF YOU BIND THE CLI PACKAGES WITH   */00641600
//*     CURRENTDATA(YES), PLEASE BE AWARE THAT THIS REQUIRES DB2 TO   */00642000
//*     ACQUIRE PAGE OR ROW LOCKS TO ENSURE DATA CURRENCY FOR         */00642400
//*     READ-ONLY AND AMBIGUOUS CURSORS WHEN THE ISOLATION LEVEL CS   */00642800
//*     IS IN EFFECT, AS WELL AS INHIBITING BLOCK FETCHING FOR        */00643200
//*     DISTRIBUTED, AMBIGUOUS CURSORS.                               */00643600
//*                                                                   */00644000
//*     USING CURRENTDATA(NO) WILL REDUCE LOCK CONTENTION AND CPU     */00644400
//*     UTILIZATION, THEREBY INCREASING APPLICATION CONCURRENCY AND   */00644800
//*     IMPROVE PERFORMANCE.  IT ALSO ALLOWS BLOCK FETCHING FOR       */00645200
//*     DISTRIBUTED, AMBIGUOUS CURSORS.                               */00645600
//*                                                                   */00646000
//*     TO USE CURRENTDATA(NO) WITH THE ODBC DB2 Z/OS DRIVER, USE THE */00646400
//*     ISOLATION LEVEL CS AND DO NOT SPECIFY CURRENTDATA(YES) ON THE */00646800
//*     BIND PACKAGE COMMANDS FOR DBRMS DSNCLICS AND DSNCLINF.  THE   */00647200
//*     ISOLATION LEVEL FOR THE ODBC DRIVER IS SET BY EITHER THE      */00647600
//*     TXNISOLATION INITIALIZATION KEYWORD OR THE ATTRIBUTE          */00648000
//*     SQL_ATTR_TXN_ISOLATION ON THE CONNECTION OR STATEMENT LEVEL.  */00648400
//*                                                                   */00648800
//*                                                                   */00649200
//*********************************************************************/00650000
//JOBLIB   DD  DISP=SHR,                                                00660000
//             DSN=DSN§§0.SDSNLOAD                                      00670000
//BINDCLI  EXEC PGM=IKJEFT01,DYNAMNBR=20                                00680000
//DBRMLIB  DD DISP=SHR,                                                 00690000
//             DSN=DSN§§0.SDSNDBRM                                      00700000
//SYSTSPRT DD  SYSOUT=*                                                 00710000
//SYSPRINT DD  SYSOUT=*                                                 00720000
//SYSUDUMP DD  SYSOUT=*                                                 00730000
//SYSTSIN  DD  *                                                        00740000
DSN SYSTEM(DSN)                                                         00750000
                                                                        00760000
 BIND PACKAGE (DSNAOCLI) MEMBER(DSNCLIC1) -                             00870000
    ENCODING(EBCDIC)                                                    00860000
 BIND PACKAGE (DSNAOCLI) MEMBER(DSNCLIC2) -                             00880000
    ENCODING(EBCDIC)                                                    00860000
 BIND PACKAGE (DSNAOCLI) MEMBER(DSNCLIF4) -                             00890000
    ENCODING(EBCDIC)                                                    00860000
 BIND PACKAGE (DSNAOCLI) MEMBER(DSNCLIMS) -                             00900000
    ENCODING(EBCDIC)                                                    00860000
 BIND PACKAGE (DSNAOCLI) MEMBER(DSNCLIQR) -                             00910000
    ENCODING(EBCDIC)                                                    00860000
 BIND PACKAGE (DSNAOCLI) MEMBER(DSNCLICR) -
    ENCODING(EBCDIC)
 BIND PACKAGE (DSNAOCLI) MEMBER(DSNCLINF) -
    ENCODING(EBCDIC)                                                    00860000
                                                                        00920000
 BIND PLAN(DSNACLI)                   -                                 00930000
  PKLIST(DSNAOCLI.DSNCLIC1            -                                 00940000
         DSNAOCLI.DSNCLIC2            -                                 01000000
         DSNAOCLI.DSNCLIF4            -                                 01010000
         DSNAOCLI.DSNCLIMS            -                                 01020000
         DSNAOCLI.DSNCLIQR            -                                 01030000
         DSNAOCLI.DSNCLICR            -
         DSNAOCLI.DSNCLINF            )
                                                                        01040000
END                                                                     01050000
/*                                                                      01060000

./ ADD NAME=DSNTIJCV
//*********************************************************************
//*
//* JOB NAME = DSNTIJCV
//*
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM
//*
//*    Licensed Materials - Property of IBM
//*    5650-DB2
//*    (C) COPYRIGHT 2013, 2016 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 12
//*
//* FUNCTION = CONVERT DB2 CATALOG AND DIRECTORY OBJECTS TO EXTENDED
//*            RBA/LRSN FORMAT.
//*
//* PSEUDOCODE =
//*   JCVTRM00 STEP   TERMINATE PENDING UTILITIES FOR THIS JOB
//*
//*   JCVCVT01 STEP   CONVERT SYSUTILX DIRECTORY TABLE SPACE
//*
//*   JCVCPY01 STEP   IMAGE COPY THE CONVERTED SYSUTILX TABLE SPACE
//*
//*   JCVCPY02 STEP   IMAGE COPY THE SYSLGRNX TABLE SPACE
//*
//*   JCVCVT02 STEP   CONVERT THE FORMAT OF THE SYSLGRNX TABLE SPACE
//*
//*   JCVCPY03 STEP   COPY OTHER DIRECTORY TABLE SPACES TO BE CONVERTED
//*
//*   JCVCVT03 STEP   CONVERT THE OTHER DIRECTORY TABLE SPACES
//*
//*   JCVCPY04 STEP   COPY THE DIRECTORY LOB TABLE SPACES
//*
//*   JCVCVT04 STEP   CONVERT THE DIRECTORY LOB TABLE SPACES
//*
//*   JCVCPY05 STEP   COPY THE SYSTSCPY CATALOG TABLE SPACE
//*
//*   JCVCVT05 STEP   CONVERT THE SYSTSCPY CATALOG TABLE SPACE
//*
//*   JCVCPY06 STEP   COPY OTHER CATALOG TABLE SPACES TO BE CONVERTED
//*                   (PART 1)
//*
//*   JCVCVT06 STEP   CONVERT OTHER CATALOG TABLE SPACES (PART 1)
//*
//*   JCVCPY07 STEP   COPY RELATED CATALOG LOB TABLE SPACES (PART 1)
//*
//*   JCVCVT07 STEP   CONVERT RELATED CATALOG LOB TABLE SPACES (PART 1)
//*
//*   JCVCPY08 STEP   COPY OTHER CATALOG TABLE SPACES TO BE CONVERTED
//*                   (PART 2)
//*
//*   JCVCVT08 STEP   CONVERT OTHER CATALOG TABLE SPACES (PART 2)
//*
//*   JCVCPY09 STEP   COPY RELATED CATALOG LOB TABLE SPACES (PART 2)
//*
//*   JCVCVT09 STEP   CONVERT RELATED CATALOG LOB TABLE SPACES (PART 2)
//*
//*   JCVCPY10 STEP   COPY OTHER CATALOG TABLE SPACES TO BE CONVERTED
//*                   (PART 3)
//*
//*   JCVCVT10 STEP   CONVERT OTHER CATALOG TABLE SPACES (PART 3)
//*
//*   JCVCPY11 STEP   COPY RELATED CATALOG LOB TABLE SPACES (PART 3)
//*
//*   JCVCVT11 STEP   CONVERT RELATED CATALOG LOB TABLE SPACES (PART 3)
//*
//*   JCVCPY12 STEP   COPY OTHER CATALOG TABLE SPACES TO BE CONVERTED
//*                   (PART 4)
//*
//*   JCVCVT12 STEP   CONVERT OTHER CATALOG TABLE SPACES (PART 4)
//*
//*   JCVCPY13 STEP   COPY RELATED CATALOG LOB TABLE SPACES (PART 4)
//*
//*   JCVCVT13 STEP   CONVERT RELATED CATALOG LOB TABLE SPACES (PART 4)
//*
//*   JCVCPY14 STEP   COPY OTHER CATALOG TABLE SPACES TO BE CONVERTED
//*                   (PART 5)
//*
//*   JCVCVT14 STEP   CONVERT OTHER CATALOG TABLE SPACES (PART 5)
//*
//*   JCVCPY15 STEP   COPY RELATED CATALOG LOB TABLE SPACES (PART 5)
//*
//*   JCVCVT15 STEP   CONVERT RELATED CATALOG LOB TABLE SPACES (PART 5)
//*
//* NOTES =
//*
//*   TO AVOID POSSIBLE LOSS OF NEW UTILITY RECORDS IN SYSUTILX,
//*   QUIESCE ALL UTILITIES ACTIVITY UNTIL JOB STEP JCVCVT01 HAS
//*   COMPLETED.
//*
//*   TO CONVERT DB2 CATALOG AND DIRECTORY OBJECTS
//*   TO BASIC RBA/LRSN FORMAT:
//*   - CHANGE ALL OCCURRENCES OF 'BASIC YES' TO 'BASIC NO'
//*   - CHANGE ALL OCCURRENCES OF 'RBALRSN_CONVERSION EXTENDED'
//*     TO 'RBALRSN_CONVERSION BASIC'
//*   - CHANGE "CATMAINT UPDATE UTILX EXTENDED" TO
//*            "CATMAINT UPDATE UTILX BASIC"
//*
//*   PRIOR TO RUNNING THIS JOB, CUSTOMIZE IT FOR YOUR SYSTEM:
//*   1. REVIEW AND OPTIONALLY UPDATE DEVICE AND SPACE SETTINGS
//*   2. ADD A VALID JOB CARD.
//*   3. LOCATE AND CHANGE ALL OCCURRENCES OF THE FOLLOWING
//*      STRINGS AS INDICATED:
//*      A. '§DSN§' TO THE NAME OF THE DB2 SUBSYSTEM
//*      B. 'DSN§§0' TO THE PREFIX OF THE DB2 TARGET LIBRARIES
//*
//* CHANGE LOG:
//*   01/07/16 Update TEMPLATE name spec                  182361 s15572
//*   02/15/16 Long data set names                              PI42601
//*   09/05/19 Update SYSCOPY TEMPLATE name spec                PH12364
//*   12/14/20 Added Db2 12 table spaces                        PH31798
//*
//*********************************************************************
//*
//JOBLIB   DD DISP=SHR,DSN=DSN§§0.SDSNEXIT
//         DD DISP=SHR,DSN=DSN§§0.SDSNLOAD
//*
//*********************************************************************
//* JCVPROC: INLINE PROC FOR COPY AND REORG WORK
//*********************************************************************
//JCVPROC  PROC UID=''
//JCVPROC  EXEC PGM=DSNUTILB,COND=(4,LT),
//             REGION=0M,
//             PARM='§DSN§,&UID'
//SYSPRINT DD  SYSOUT=*
//UTPRINT  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSABEND DD  SYSOUT=*
//SYSIN    DD  DUMMY
//SYSREC   DD  UNIT=SYSDA,SPACE=(CYL,(20,20),RLSE)
//SYSUT1   DD  UNIT=SYSDA,SPACE=(CYL,(9,90),RLSE)
//JCVPROC  PEND
//*
//*
//*********************************************************************
//* JCVTRM00: TERMINATE PENDING UTILITIES FOR THIS JOB
//*********************************************************************
//JCVTRM00 EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSOUT    DD SYSOUT=*
//SYSPRINT  DD SYSOUT=*
//SYSTSPRT  DD SYSOUT=*
//SYSUDUMP  DD SYSOUT=*
//SYSTSIN   DD *
DSN SYSTEM(§DSN§)
-DIS UTILITY(*)
-TERM UTILITY(DSNTIJCV.*)
END
//*
//*
//*********************************************************************
//* JCVCVT01: CONVERT SYSUTILX DIRECTORY TABLE SPACE
//*********************************************************************
//JCVCVT01 EXEC JCVPROC,UID='DSNTIJCV.CVT01',COND=(4,LT)
//SYSPRINT DD   SYSOUT=*
//UTPRINT  DD   SYSOUT=*
//SYSUDUMP DD   SYSOUT=*
//SYSIN    DD  *
   CATMAINT UPDATE UTILX EXTENDED
//*
//*
//*********************************************************************
//* JCVCPY01: IMAGE COPY THE CONVERTED SYSUTILX TABLE SPACE
//*********************************************************************
//JCVCPY01 EXEC JCVPROC,UID='DSNTIJCV.CPY01',COND=(4,LT)
//SYSIN    DD  *
   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY TABLESPACE DSNDB01.SYSUTILX SHRLEVEL CHANGE
        COPYDDN(SYSCOPY) FULL YES
//*
//*
//*********************************************************************
//* JCVCPY02: IMAGE COPY THE SYSLGRNX TABLE SPACE
//*********************************************************************
//JCVCPY02 EXEC JCVPROC,UID='DSNTIJCV.CPY02',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF COPY_LIST
   INCLUDE TABLESPACE  DSNDB01.SYSLGRNX  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST COPY_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* JCVCVT02: CONVERT THE FORMAT OF THE SYSLGRNX TABLE SPACE
//*********************************************************************
//JCVCVT02 EXEC JCVPROC,UID='DSNTIJCV.CVT02',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF REORG_LIST
   INCLUDE TABLESPACE  DSNDB01.SYSLGRNX  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA

   REORG TABLESPACE LIST REORG_LIST SHRLEVEL CHANGE
         LOG NO COPYDDN(SYSCOPY)
         RBALRSN_CONVERSION EXTENDED
         RETRY 255 TIMEOUT TERM RETRY_DELAY 1 DRAIN_WAIT 1
         SORTDATA
//*
//*
//*********************************************************************
//* JCVCPY03: COPY OTHER DIRECTORY TABLE SPACES TO BE CONVERTED
//*********************************************************************
//JCVCPY03 EXEC JCVPROC,UID='DSNTIJCV.CPY03',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF COPY_LIST
   INCLUDE TABLESPACE  DSNDB01.DBD01     BASIC YES
   INCLUDE TABLESPACE  DSNDB01.SPT01     BASIC YES
   INCLUDE TABLESPACE  DSNDB01.SCT02     BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST COPY_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* JCVCVT03: CONVERT THE OTHER DIRECTORY TABLE SPACES
//*********************************************************************
//JCVCVT03 EXEC JCVPROC,UID='DSNTIJCV.CVT03',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF REORG_LIST
   INCLUDE TABLESPACE  DSNDB01.DBD01     BASIC YES
   INCLUDE TABLESPACE  DSNDB01.SPT01     BASIC YES
   INCLUDE TABLESPACE  DSNDB01.SCT02     BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA

   REORG TABLESPACE LIST REORG_LIST SHRLEVEL CHANGE
         LOG NO COPYDDN(SYSCOPY)
         RBALRSN_CONVERSION EXTENDED
         RETRY 255 TIMEOUT TERM RETRY_DELAY 1 DRAIN_WAIT 1
         SORTDATA
//*
//*********************************************************************
//* JCVCPY04: COPY THE DIRECTORY LOB TABLE SPACES
//*********************************************************************
//JCVCPY04 EXEC JCVPROC,UID='DSNTIJCV.CPY04',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF COPY_LIST
   INCLUDE TABLESPACE  DSNDB01.SYSDBDXA  BASIC YES
   INCLUDE TABLESPACE  DSNDB01.SYSSPUXA  BASIC YES
   INCLUDE TABLESPACE  DSNDB01.SYSSPUXB  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST COPY_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* JCVCVT04: CONVERT THE DIRECTORY LOB TABLE SPACES
//*********************************************************************
//JCVCVT04 EXEC JCVPROC,UID='DSNTIJCV.CVT04',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF REORG_LIST
   INCLUDE TABLESPACE  DSNDB01.SYSDBDXA  BASIC YES
   INCLUDE TABLESPACE  DSNDB01.SYSSPUXA  BASIC YES
   INCLUDE TABLESPACE  DSNDB01.SYSSPUXB  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA

   REORG TABLESPACE LIST REORG_LIST SHRLEVEL CHANGE
         LOG NO COPYDDN(SYSCOPY)
         RBALRSN_CONVERSION EXTENDED
         RETRY 255 TIMEOUT TERM RETRY_DELAY 1 DRAIN_WAIT 1
         SORTDATA
//*
//*********************************************************************
//* JCVCPY05: COPY THE SYSTSCPY CATALOG TABLE SPACE
//*********************************************************************
//JCVCPY05 EXEC JCVPROC,UID='DSNTIJCV.CPY05',COND=(4,LT)
//SYSIN DD *
 LISTDEF COPY_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSTSCPY  BASIC YES
   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST COPY_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* JCVCVT05: CONVERT THE SYSTSCPY CATALOG TABLE SPACE
//*********************************************************************
//JCVCVT05 EXEC JCVPROC,UID='DSNTIJCV.CVT05',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF REORG_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSTSCPY  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA

   REORG TABLESPACE LIST REORG_LIST SHRLEVEL CHANGE
         LOG NO COPYDDN(SYSCOPY)
         RBALRSN_CONVERSION EXTENDED
         RETRY 255 TIMEOUT TERM RETRY_DELAY 1 DRAIN_WAIT 1
         SORTDATA
//*
//*********************************************************************
//* JCVCPY06: COPY OTHER CATALOG TABLE SPACES TO BE CONVERTED (PART 1)
//*********************************************************************
//JCVCPY06 EXEC JCVPROC,UID='DSNTIJCV.CPY06',COND=(4,LT)
//SYSIN DD *
 LISTDEF COPY_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSDDF    BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSALTER  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSCONTX  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSEBCDC  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSGPAUT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSGRTNS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSHIST   BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSJAVA   BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSROLES  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSSEQ    BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSSEQ2   BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSSTATS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTARG   BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSADT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSASC  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSATS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSATW  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSAUX  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST COPY_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* JCVCVT06: CONVERT OTHER CATALOG TABLE SPACES (PART 1)
//*********************************************************************
//JCVCVT06 EXEC JCVPROC,UID='DSNTIJCV.CVT06',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF REORG_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSDDF    BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSALTER  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSCONTX  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSEBCDC  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSGPAUT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSGRTNS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSHIST   BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSJAVA   BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSROLES  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSSEQ    BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSSEQ2   BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSSTATS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTARG   BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSADT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSASC  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSATS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSATW  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSAUX  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA

   REORG TABLESPACE LIST REORG_LIST SHRLEVEL CHANGE
         LOG NO COPYDDN(SYSCOPY)
         RBALRSN_CONVERSION EXTENDED
         RETRY 255 TIMEOUT TERM RETRY_DELAY 1 DRAIN_WAIT 1
         SORTDATA SORTDEVT SYSDA NOSYSREC
//*
//*********************************************************************
//* JCVCPY07: COPY RELATED CATALOG LOB TABLE SPACES (PART 1)
//*********************************************************************
//JCVCPY07 EXEC JCVPROC,UID='DSNTIJCV.CPY07',COND=(4,LT)
//SYSIN DD *
 LISTDEF COPY_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSJAUXA  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSJAUXB  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSATX  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSOBX  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST COPY_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* JCVCVT07: CONVERT RELATED CATALOG LOB TABLE SPACES (PART 1)
//*********************************************************************
//JCVCVT07 EXEC JCVPROC,UID='DSNTIJCV.CVT07',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF REORG_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSJAUXA  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSJAUXB  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSATX  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSOBX  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA

   REORG TABLESPACE LIST REORG_LIST SHRLEVEL CHANGE
         LOG NO COPYDDN(SYSCOPY)
         RBALRSN_CONVERSION EXTENDED
         RETRY 255 TIMEOUT TERM RETRY_DELAY 1 DRAIN_WAIT 1
         SORTDATA
//*
//*********************************************************************
//* JCVCPY08: COPY OTHER CATALOG TABLE SPACES TO BE CONVERTED (PART 2)
//*********************************************************************
//JCVCPY08 EXEC JCVPROC,UID='DSNTIJCV.CPY08',COND=(4,LT)
//SYSIN DD *
 LISTDEF COPY_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSTSCHX  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSCKD  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSCKS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSCOL  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSCON  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSCTL  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDAT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDBA  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDBR  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDBU  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDEP  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSENV  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSFAU  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSFLD  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSFOR  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSIPT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSISS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSIXS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSKEY  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSKYC  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPDO  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPEN  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST COPY_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* JCVCVT08: CONVERT OTHER CATALOG TABLE SPACES (PART 2)
//*********************************************************************
//JCVCVT08 EXEC JCVPROC,UID='DSNTIJCV.CVT08',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF REORG_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSTSCHX  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSCKD  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSCKS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSCOL  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSCON  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSCTL  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDAT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDBA  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDBR  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDBU  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDEP  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSENV  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSFAU  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSFLD  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSFOR  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSIPT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSISS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSIXS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSKEY  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSKYC  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPDO  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPEN  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA

   REORG TABLESPACE LIST REORG_LIST SHRLEVEL CHANGE
         LOG NO COPYDDN(SYSCOPY)
         RBALRSN_CONVERSION EXTENDED
         RETRY 255 TIMEOUT TERM RETRY_DELAY 1 DRAIN_WAIT 1
         SORTDATA SORTDEVT SYSDA NOSYSREC
//*
//*********************************************************************
//* JCVCPY09: COPY RELATED CATALOG LOB TABLE SPACES (PART 2)
//*********************************************************************
//JCVCPY09 EXEC JCVPROC,UID='DSNTIJCV.CPY09',COND=(4,LT)
//SYSIN DD *
 LISTDEF COPY_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSTSCTD  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSCTR  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSIXR  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSIXT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPDT  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST COPY_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* JCVCVT09: CONVERT RELATED CATALOG LOB TABLE SPACES (PART 2)
//*********************************************************************
//JCVCVT09 EXEC JCVPROC,UID='DSNTIJCV.CVT09',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF REORG_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSTSCTD  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSCTR  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSIXR  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSIXT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPDT  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA

   REORG TABLESPACE LIST REORG_LIST SHRLEVEL CHANGE
         LOG NO COPYDDN(SYSCOPY)
         RBALRSN_CONVERSION EXTENDED
         RETRY 255 TIMEOUT TERM RETRY_DELAY 1 DRAIN_WAIT 1
         SORTDATA
//*
//*********************************************************************
//* JCVCPY10: COPY OTHER CATALOG TABLE SPACES TO BE CONVERTED (PART 3)
//*********************************************************************
//JCVCPY10 EXEC JCVPROC,UID='DSNTIJCV.CPY10',COND=(4,LT)
//SYSIN DD *
 LISTDEF COPY_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSTSPKA  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPKC  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPKD  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPKG  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPKL  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPKS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPKY  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPLA  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPLD  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPLN  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPLY  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPRH  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPRM  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSQRO  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSQRP  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSQRY  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSRAU  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSREL  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSROU  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSCM  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSRG  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST COPY_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* JCVCVT10: CONVERT OTHER CATALOG TABLE SPACES (PART 3)
//*********************************************************************
//JCVCVT10 EXEC JCVPROC,UID='DSNTIJCV.CVT10',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF REORG_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSTSPKA  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPKC  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPKD  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPKG  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPKL  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPKS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPKY  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPLA  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPLD  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPLN  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPLY  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPRH  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPRM  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSQRO  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSQRP  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSQRY  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSRAU  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSREL  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSROU  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSCM  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSRG  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA

   REORG TABLESPACE LIST REORG_LIST SHRLEVEL CHANGE
         LOG NO COPYDDN(SYSCOPY)
         RBALRSN_CONVERSION EXTENDED
         RETRY 255 TIMEOUT TERM RETRY_DELAY 1 DRAIN_WAIT 1
         SORTDATA SORTDEVT SYSDA NOSYSREC
//*
//*********************************************************************
//* JCVCPY11: COPY RELATED CATALOG LOB TABLE SPACES (PART 3)
//*********************************************************************
//JCVCPY11 EXEC JCVPROC,UID='DSNTIJCV.CPY11',COND=(4,LT)
//SYSIN DD *
 LISTDEF COPY_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSPLUXA  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSPLUXB  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPHX  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPKX  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPVR  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSQRA  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST COPY_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* JCVCVT11: CONVERT RELATED CATALOG LOB TABLE SPACES (PART 3)
//*********************************************************************
//JCVCVT11 EXEC JCVPROC,UID='DSNTIJCV.CVT11',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF REORG_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSPLUXA  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSPLUXB  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPHX  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPKX  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPVR  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSQRA  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA

   REORG TABLESPACE LIST REORG_LIST SHRLEVEL CHANGE
         LOG NO COPYDDN(SYSCOPY)
         RBALRSN_CONVERSION EXTENDED
         RETRY 255 TIMEOUT TERM RETRY_DELAY 1 DRAIN_WAIT 1
         SORTDATA
//*
//*********************************************************************
//* JCVCPY12: COPY OTHER CATALOG TABLE SPACES TO BE CONVERTED (PART 4)
//*********************************************************************
//JCVCPY12 EXEC JCVPROC,UID='DSNTIJCV.CPY12',COND=(4,LT)
//SYSIN DD *
 LISTDEF COPY_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSTSSTG  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSTM  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSYN  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTAB  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTAU  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTBC  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTPF  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTPT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTRG  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTSP  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTSS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSUNI  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVAR  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVAU  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVEW  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVOL  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVWD  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSXTM  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSXTS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSUSER   BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSXML    BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSQRE  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSQRS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSIXC  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSFB  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST COPY_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* JCVCVT12: CONVERT OTHER CATALOG TABLE SPACES (PART 4)
//*********************************************************************
//JCVCVT12 EXEC JCVPROC,UID='DSNTIJCV.CVT12',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF REORG_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSTSSTG  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSTM  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSYN  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTAB  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTAU  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTBC  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTPF  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTPT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTRG  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTSP  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTSS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSUNI  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVAR  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVAU  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVEW  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVOL  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVWD  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSXTM  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSXTS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSUSER   BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSXML    BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSQRE  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSQRS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSIXC  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSFB  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA

   REORG TABLESPACE LIST REORG_LIST SHRLEVEL CHANGE
         LOG NO COPYDDN(SYSCOPY)
         RBALRSN_CONVERSION EXTENDED
         RETRY 255 TIMEOUT TERM RETRY_DELAY 1 DRAIN_WAIT 1
         SORTDATA SORTDEVT SYSDA NOSYSREC
//*
//*********************************************************************
//* JCVCPY13: COPY RELATED CATALOG LOB TABLE SPACES (PART 4)
//*********************************************************************
//JCVCPY13 EXEC JCVPROC,UID='DSNTIJCV.CPY13',COND=(4,LT)
//SYSIN DD *
 LISTDEF COPY_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSTSTRT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVAD  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVAT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVTR  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVWT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPTX  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST COPY_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* JCVCVT13: CONVERT RELATED CATALOG LOB TABLE SPACES (PART 4)
//*********************************************************************
//JCVCVT13 EXEC JCVPROC,UID='DSNTIJCV.CVT13',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF REORG_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSTSTRT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVAD  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVAT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVTR  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSVWT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSPTX  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA

   REORG TABLESPACE LIST REORG_LIST SHRLEVEL CHANGE
         LOG NO COPYDDN(SYSCOPY)
         RBALRSN_CONVERSION EXTENDED
         RETRY 255 TIMEOUT TERM RETRY_DELAY 1 DRAIN_WAIT 1
         SORTDATA
//*
//*********************************************************************
//* JCVCPY14: COPY OTHER CATALOG TABLE SPACES TO BE CONVERTED (PART 5)
//*********************************************************************
//JCVCPY14 EXEC JCVPROC,UID='DSNTIJCV.CPY14',COND=(4,LT)
//SYSIN DD *
 LISTDEF COPY_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSTSDQY  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDQD  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSISH  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTSH  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSICO  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSES  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSNX  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSTA  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSLVH  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST COPY_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* JCVCVT14: CONVERT OTHER CATALOG TABLE SPACES (PART 5)
//*********************************************************************
//JCVCVT14 EXEC JCVPROC,UID='DSNTIJCV.CVT14',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF REORG_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSTSDQY  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDQD  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSISH  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSTSH  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSICO  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSES  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSNX  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSTA  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSLVH  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA

   REORG TABLESPACE LIST REORG_LIST SHRLEVEL CHANGE
         LOG NO COPYDDN(SYSCOPY)
         RBALRSN_CONVERSION EXTENDED
         RETRY 255 TIMEOUT TERM RETRY_DELAY 1 DRAIN_WAIT 1
         SORTDATA SORTDEVT SYSDA NOSYSREC
//*
//*********************************************************************
//* JCVCPY15: COPY RELATED CATALOG LOB TABLE SPACES (PART 5)
//*********************************************************************
//JCVCPY15 EXEC JCVPROC,UID='DSNTIJCV.CPY15',COND=(4,LT)
//SYSIN DD *
 LISTDEF COPY_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSTSDQT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDQS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDQE  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDQH  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDQO  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSNL  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSXL  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST COPY_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* JCVCVT15: CONVERT RELATED CATALOG LOB TABLE SPACES (PART 5)
//*********************************************************************
//JCVCVT15 EXEC JCVPROC,UID='DSNTIJCV.CVT15',COND=(4,LT)
//SYSIN    DD  *
 LISTDEF REORG_LIST
   INCLUDE TABLESPACE  DSNDB06.SYSTSDQT  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDQS  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDQE  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDQH  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSDQO  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSNL  BASIC YES
   INCLUDE TABLESPACE  DSNDB06.SYSTSSXL  BASIC YES

   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA

   REORG TABLESPACE LIST REORG_LIST SHRLEVEL CHANGE
         LOG NO COPYDDN(SYSCOPY)
         RBALRSN_CONVERSION EXTENDED
         RETRY 255 TIMEOUT TERM RETRY_DELAY 1 DRAIN_WAIT 1
         SORTDATA
//*

./ ADD NAME=DSNTIJCX
//********************************************************************* 00010000
//* Job name = DSNTIJCX                                                 00011000
//*                                                                     00012000
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM                          00013000
//*                                                                     00014000
//*    LICENSED MATERIALS - PROPERTY OF IBM                             00015000
//*    5650-DB2                                                         00016000
//*    (C) COPYRIGHT 1982, 2016 IBM CORP.  ALL RIGHTS RESERVED.         00017000
//*                                                                     00018000
//*    STATUS = VERSION 12                                              00019000
//*                                                                     00020000
//* Function = Check migration of indexes for DB2 Catalog and directory 00021000
//*                                                                     00022000
//* Pseudocode =                                                        00023000
//*   DSNCX1   STEP      Check indexes for the DB2 Catalog (DSNDB06)    00024000
//*   DSNCX2   STEP      Check indexes for DB2 skeleton cursor and      00025000
//*                            skeleton packages table spaces           00026000
//*   DSNCX3   STEP      Check first index for DB2 system utilities     00027000
//*                            table space                              00028000
//*   DSNCX3B  STEP      Check second index for DB2 system utilities    00029000
//*                            table space                              00030000
//*   DSNCX4   STEP      Check indexes for DB2 log range table space    00031000
//*   DSNCX5   STEP      Check indexes for DB2 database descriptor      00032000
//*                            table space                              00033000
//*                                                                     00034000
//* Change activity =                                                   00035000
//*   01/18/2016 Update for DB2 12                               180728 00036000
//*   02/15/2016 Long data set names                            PI42601 00037000
//*   07/01/2016 Support for CD catalog updates                  184402 00038000
//*              Add SYSTSLVH + DSNLVX01 + DSNLVX02                     00039000
//*                                                                     00040000
//********************************************************************* 00041000
//JOBLIB   DD DSN=DSN§§0.SDSNEXIT,DISP=SHR                              00042000
//         DD DSN=DSN§§0.SDSNLOAD,DISP=SHR                              00043000
//*                                                                     00044000
//*  Check indexes in the DB2 Catalog (DSNDB06)                         00045000
//*                                                                     00046000
//DSNCX1  EXEC DSNUPROC,SYSTEM=DSN,UID=DSNCX1                           00047000
//SYSABEND DD  DUMMY                                                    00048000
//SYSIN    DD  *                                                        00049000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSALTER   SORTDEVT SYSDA        00050000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSCONTX   SORTDEVT SYSDA        00051000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSDDF     SORTDEVT SYSDA        00052000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSGPAUT   SORTDEVT SYSDA        00053000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSGRTNS   SORTDEVT SYSDA        00054000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSHIST    SORTDEVT SYSDA        00055000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSJAUXA   SORTDEVT SYSDA        00056000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSJAUXB   SORTDEVT SYSDA        00057000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSJAVA    SORTDEVT SYSDA        00058000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSPLUXA   SORTDEVT SYSDA        00059000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSPLUXB   SORTDEVT SYSDA        00060000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSROLES   SORTDEVT SYSDA        00061000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSSEQ     SORTDEVT SYSDA        00062000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSSEQ2    SORTDEVT SYSDA        00063000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSSTATS   SORTDEVT SYSDA        00064000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTARG    SORTDEVT SYSDA        00065000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSADT   SORTDEVT SYSDA        00066000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSATS   SORTDEVT SYSDA        00067000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSATW   SORTDEVT SYSDA        00068000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSATX   SORTDEVT SYSDA        00069000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSAUX   SORTDEVT SYSDA        00070000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSCHD   SORTDEVT SYSDA        00071000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSCHR   SORTDEVT SYSDA        00072000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSCHX   SORTDEVT SYSDA        00073000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSCKD   SORTDEVT SYSDA        00074000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSCKS   SORTDEVT SYSDA        00075000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSCOL   SORTDEVT SYSDA        00076000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSCON   SORTDEVT SYSDA        00077000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSCPY   SORTDEVT SYSDA        00078000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSCTD   SORTDEVT SYSDA        00079000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSCTL   SORTDEVT SYSDA        00080000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSCTR   SORTDEVT SYSDA        00081000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDAT   SORTDEVT SYSDA        00082000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDBA   SORTDEVT SYSDA        00083000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDBR   SORTDEVT SYSDA        00084000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDBU   SORTDEVT SYSDA        00085000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDEP   SORTDEVT SYSDA        00086000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDQD   SORTDEVT SYSDA        00087000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDQE   SORTDEVT SYSDA        00088000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDQH   SORTDEVT SYSDA        00089000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDQO   SORTDEVT SYSDA        00090000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDQS   SORTDEVT SYSDA        00091000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDQT   SORTDEVT SYSDA        00092000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSDQY   SORTDEVT SYSDA        00093000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSENV   SORTDEVT SYSDA        00094000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSFAU   SORTDEVT SYSDA        00095000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSFLD   SORTDEVT SYSDA        00096000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSFOR   SORTDEVT SYSDA        00097000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSIPT   SORTDEVT SYSDA        00098000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSISS   SORTDEVT SYSDA        00099000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSIXC   SORTDEVT SYSDA        00100000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSIXR   SORTDEVT SYSDA        00101000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSIXS   SORTDEVT SYSDA        00102000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSIXT   SORTDEVT SYSDA        00103000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSKEY   SORTDEVT SYSDA        00104000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSKYC   SORTDEVT SYSDA        00105000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSLVH   SORTDEVT SYSDA        00106000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSOBX   SORTDEVT SYSDA        00107000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPDO   SORTDEVT SYSDA        00108000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPDT   SORTDEVT SYSDA        00109000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPEN   SORTDEVT SYSDA        00110000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPHX   SORTDEVT SYSDA        00111000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPKA   SORTDEVT SYSDA        00112000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPKC   SORTDEVT SYSDA        00113000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPKD   SORTDEVT SYSDA        00114000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPKG   SORTDEVT SYSDA        00115000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPKL   SORTDEVT SYSDA        00116000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPKS   SORTDEVT SYSDA        00117000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPKX   SORTDEVT SYSDA        00118000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPKY   SORTDEVT SYSDA        00119000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPLA   SORTDEVT SYSDA        00120000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPLD   SORTDEVT SYSDA        00121000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPLN   SORTDEVT SYSDA        00122000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPLY   SORTDEVT SYSDA        00123000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPRH   SORTDEVT SYSDA        00124000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPRM   SORTDEVT SYSDA        00125000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPTX   SORTDEVT SYSDA        00126000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSPVR   SORTDEVT SYSDA        00127000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSQRA   SORTDEVT SYSDA        00128000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSQRE   SORTDEVT SYSDA        00129000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSQRO   SORTDEVT SYSDA        00130000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSQRP   SORTDEVT SYSDA        00131000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSQRS   SORTDEVT SYSDA        00132000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSQRY   SORTDEVT SYSDA        00133000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSRAU   SORTDEVT SYSDA        00134000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSREL   SORTDEVT SYSDA        00135000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSROU   SORTDEVT SYSDA        00136000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSSCM   SORTDEVT SYSDA        00137000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSSES   SORTDEVT SYSDA        00138000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSSFB   SORTDEVT SYSDA        00139000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSSNL   SORTDEVT SYSDA        00140000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSSNX   SORTDEVT SYSDA        00141000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSSRG   SORTDEVT SYSDA        00142000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSSTA   SORTDEVT SYSDA        00143000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSSTG   SORTDEVT SYSDA        00144000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSSTM   SORTDEVT SYSDA        00145000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSSXL   SORTDEVT SYSDA        00146000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSSYN   SORTDEVT SYSDA        00147000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSTAB   SORTDEVT SYSDA        00148000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSTAU   SORTDEVT SYSDA        00149000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSTBC   SORTDEVT SYSDA        00150000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSTPF   SORTDEVT SYSDA        00151000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSTPT   SORTDEVT SYSDA        00152000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSTRG   SORTDEVT SYSDA        00153000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSTRT   SORTDEVT SYSDA        00154000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSTSP   SORTDEVT SYSDA        00155000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSTSS   SORTDEVT SYSDA        00156000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSVAD   SORTDEVT SYSDA        00157000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSVAR   SORTDEVT SYSDA        00158000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSVAT   SORTDEVT SYSDA        00159000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSVAU   SORTDEVT SYSDA        00160000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSVEW   SORTDEVT SYSDA        00161000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSVOL   SORTDEVT SYSDA        00162000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSVTR   SORTDEVT SYSDA        00163000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSVWD   SORTDEVT SYSDA        00164000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSVWT   SORTDEVT SYSDA        00165000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSXTM   SORTDEVT SYSDA        00166000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSTSXTS   SORTDEVT SYSDA        00167000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSUSER    SORTDEVT SYSDA        00168000
 CHECK INDEX(ALL) TABLESPACE   DSNDB06.SYSXML     SORTDEVT SYSDA        00169000
//*                                                                     00170000
//*  Check indexes for DB2 skeleton cursor and packages table spaces    00171000
//*                                                                     00172000
//DSNCX2  EXEC DSNUPROC,SYSTEM=DSN,UID=DSNCX2,                          00173000
//             COND=(4,LT)                                              00174000
//SYSABEND DD  DUMMY                                                    00175000
//SYSIN    DD  *                                                        00176000
 CHECK INDEX(SYSIBM.DSNSCT02)   SORTDEVT SYSDA                          00177000
 CHECK INDEX(SYSIBM.DSNSPT01)   SORTDEVT SYSDA                          00178000
 CHECK INDEX(SYSIBM.DSNSPT02)   SORTDEVT SYSDA                          00179000
 CHECK INDEX(SYSIBM.DSNSPDXA)   SORTDEVT SYSDA                          00180000
 CHECK INDEX(SYSIBM.DSNSPEXA)   SORTDEVT SYSDA                          00181000
//*                                                                     00182000
//*  Check first index for DB2 system utilities table space             00183000
//*                                                                     00184000
//DSNCX3  EXEC DSNUPROC,SYSTEM=DSN,UID=DSNCX3,                          00185000
//             COND=(4,LT)                                              00186000
//SYSABEND DD  DUMMY                                                    00187000
//SYSIN    DD  *                                                        00188000
 CHECK INDEX(SYSIBM.DSNLUX01)   SORTDEVT SYSDA                          00189000
//*                                                                     00190000
//*  Check second index for DB2 system utilities table space            00191000
//*                                                                     00192000
//DSNCX3B EXEC DSNUPROC,SYSTEM=DSN,UID=DSNCX3B,                         00193000
//             COND=(4,LT)                                              00194000
//SYSABEND DD  DUMMY                                                    00195000
//SYSIN    DD  *                                                        00196000
 CHECK INDEX(SYSIBM.DSNLUX02)   SORTDEVT SYSDA                          00197000
//*                                                                     00198000
//*  Check indexes for DB2 log range table space                        00199000
//*                                                                     00200000
//DSNCX4  EXEC DSNUPROC,SYSTEM=DSN,UID=DSNCX4,                          00201000
//             COND=(4,LT)                                              00202000
//SYSABEND DD  DUMMY                                                    00203000
//SYSIN    DD  *                                                        00204000
 CHECK INDEX(SYSIBM.DSNLLX01)   SORTDEVT SYSDA                          00205000
 CHECK INDEX(SYSIBM.DSNLLX02)   SORTDEVT SYSDA                          00206000
//*                                                                     00207000
//*  Check indexes for DB2 database descriptor table space              00208000
//*                                                                     00209000
//DSNCX5  EXEC DSNUPROC,SYSTEM=DSN,UID=DSNCX5,                          00210000
//             COND=(4,LT)                                              00211000
//SYSABEND DD  DUMMY                                                    00212000
//SYSIN    DD  *                                                        00213000
 CHECK INDEX(SYSIBM.DSNDB01X)   SORTDEVT SYSDA                          00214000
 CHECK INDEX(SYSIBM.DSNDB1XA)   SORTDEVT SYSDA                          00215000
//*                                                                     00216000

./ ADD NAME=DSNTIJI$
//*********************************************************************
//* JOB NAME = DSNTIJIC
//*
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM
//*
//*    Licensed Materials - Property of IBM
//*    5650-DB2
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 12
//*
//* FUNCTION = Create image copies of all the system catalog tables
//*
//* NOTES =
//*
//*   This job creates image copies of the DB2 directory and catalog
//*   on DISK using the LISTDEF and TEMPLATE facilities:
//*
//*   Job step ICDUTILX
//*   -----------------
//*     The SYSUTILX directory space is copied separately by the first
//*     job step, ICDUTILX, because it cannot be specified using the
//*     LISTDEF facility.  Also, for recoverability, SYSUTILX must
//*     always be copied first.
//*
//*   Job step ICDMAIN
//*   ----------------
//*     Most other DB2 directory and catalog table spaces are copied by
//*     the second job step, which uses a parallel mode of 10 to reduce
//*     processing time.
//*
//*   Job step ICDLGRNX
//*   -----------------
//*     For recoverability, SYSLGRNX must be copied after most other
//*     table spaces but before SYSTSCPY.
//*
//*   Job step ICDTSCPY
//*   -----------------
//*     For recoverability, SYSTSCPY must be copied after SYSLGRNX.
//*
//*   ATTENTION:
//*     Following these four job steps are numerous commented-out job
//*     steps for creating sequential image copies of the db2 directory
//*     and catalog on tape.
//*
//*     The tape image copy for each table space is done in a separate
//*     step so that the job will execute successfully when an image
//*     copy output data set spans more than one tape volume.  Each
//*     step's data set is passed to the next step so that a tape will
//*     not have to be demounted and remounted after every step.
//*     However, we also recommend that the image copy tapes be mounted
//*     as private volumes to prevent this problem.
//*
//*     If you prefer to create image copy data sets on TAPE, do the
//*     following:
//*
//*     1) Delete the four ICDxxxxx job steps.
//*     2) Uncomment the job steps for tape image copies.
//*     3) Follow TAPE IMAGE COPIES FOR DEFINE NO OBJECTS instructions
//*
//*     TAPE IMAGE COPIES FOR DEFINE NO OBJECTS
//*
//*     If any of the following DEFINE NO objects exist then uncomment
//*     the noted job step(s):
//*
//*           SYSTSISH   - ICTSISH job step
//*           SYSTSTSH   - ICTSTSH job step
//*
//*     For each uncommented DEFINE NO job step, ensure that the
//*     following JCL statements are correct for steps ICLGRNX,
//*     ICTSCPY and the uncommented step(s):
//*
//*        a) The image copy data set name used on the second DD
//*           card of the previous uncommented step is named on
//*           the first DD card.
//*        b) The UNIT and backwards reference fields properly
//*           reflect the previous uncommented step's step name,
//*           DD card name, etc.
//*        c) The data-set-sequence-number on the LABEL parameter is one
//*           higher than that of the previous uncommented step.
//*
//*   If a failure occurs in one step, fix the problem and rerun the
//*   complete job from the top.
//*
//*   If you are remigrating, you will need to either:
//*
//*   1)  Change the names of the data sets in which the
//*       new image copies will reside (migration image
//*       copies are using the current data set names) or
//*   2)  Run the MODIFY Utility to remove the migration
//*       image copies
//*
//*   The SYSUTILX COPY step must be the first step in the job,
//*   the SYSLGRNX COPY step must be the next to last step in the job
//*   and the SYSTSCPY COPY step must be the last step in the job.
//*
//* CHANGE ACTIVITY =
//*   01/07/2016 Convert job to perform COPY to disk and  182361 s15572
//*              to use TEMPLATEs and LISTDEFs to get
//*              Utilities parallelism.  The traditional
//*              sequential tape COPY job steps are
//*              preserved below, commented out.
//*   07/01/2016 Support for CD catalog updates                  184402
//*              Add SYSTSLVH + DSNLVX01 + DSNLVX02
//*   09/05/2019 Update SYSCOPY TEMPLATE name spec              PH12364
//*   11/13/2020 Handle DEFINE NO table spaces SYSTSISH and     PH22875
//*              SYSTSTSH
//*
//*********************************************************************/
//JOBLIB   DD  DISP=SHR,
//             DSN=DSN§§0.SDSNLOAD
//*********************************************************************
//* SYSUTILX IMAGE COPY STEP
//*********************************************************************
//ICDUTILX EXEC PGM=DSNUTILB,REGION=0M,
//             PARM='DSN,IMAGCOPY.UTILX'
//SYSPRINT  DD SYSOUT=*
//SYSABEND  DD SYSOUT=*
//UTPRINT   DD SYSOUT=*
//SYSUT1    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSUT2    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SORTOUT   DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSIN     DD *
   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY TABLESPACE DSNDB01.SYSUTILX  SHRLEVEL(CHANGE)
//*********************************************************************
//* MAIN IMAGE COPY STEP FOR DB2 CATALOG AND DIRECTORY TABLE SPACES
//*********************************************************************
//ICDMAIN EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY.MAIN',
//             REGION=0M,COND=(4,LT)
//SYSPRINT  DD SYSOUT=*
//SYSABEND  DD SYSOUT=*
//UTPRINT   DD SYSOUT=*
//SYSUT1    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSUT2    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SORTOUT   DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSIN     DD *
   LISTDEF TSP_LIST
           INCLUDE TABLESPACE  DSNDB01.DBD01
           INCLUDE TABLESPACE  DSNDB01.SCT02
           INCLUDE TABLESPACE  DSNDB01.SPT01
           INCLUDE TABLESPACE  DSNDB01.SYSDBDXA
           INCLUDE TABLESPACE  DSNDB01.SYSSPUXA
           INCLUDE TABLESPACE  DSNDB01.SYSSPUXB
           INCLUDE TABLESPACE  DSNDB06.SYSTSFAU
           INCLUDE TABLESPACE  DSNDB06.SYSTSCOL
           INCLUDE TABLESPACE  DSNDB06.SYSTSTSP
           INCLUDE TABLESPACE  DSNDB06.SYSTSTPT
           INCLUDE TABLESPACE  DSNDB06.SYSTSTAB
           INCLUDE TABLESPACE  DSNDB06.SYSTSIXS
           INCLUDE TABLESPACE  DSNDB06.SYSTSIXT
           INCLUDE TABLESPACE  DSNDB06.SYSTSIXR
           INCLUDE TABLESPACE  DSNDB06.SYSTSIPT
           INCLUDE TABLESPACE  DSNDB06.SYSTSREL
           INCLUDE TABLESPACE  DSNDB06.SYSTSFOR
           INCLUDE TABLESPACE  DSNDB06.SYSTSSYN
           INCLUDE TABLESPACE  DSNDB06.SYSTSFLD
           INCLUDE TABLESPACE  DSNDB06.SYSTSTAU
           INCLUDE TABLESPACE  DSNDB06.SYSTSKEY
           INCLUDE TABLESPACE  DSNDB06.SYSTSDBA
           INCLUDE TABLESPACE  DSNDB06.SYSTSDBU
           INCLUDE TABLESPACE  DSNDB06.SYSGPAUT
           INCLUDE TABLESPACE  DSNDB06.SYSTSSTG
           INCLUDE TABLESPACE  DSNDB06.SYSTSVOL
           INCLUDE TABLESPACE  DSNDB06.SYSTSPLN
           INCLUDE TABLESPACE  DSNDB06.SYSTSPLA
           INCLUDE TABLESPACE  DSNDB06.SYSTSDBR
           INCLUDE TABLESPACE  DSNDB06.SYSTSPLD
           INCLUDE TABLESPACE  DSNDB06.SYSTSSTM
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKL
           INCLUDE TABLESPACE  DSNDB06.SYSTSPLY
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKG
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKS
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKX
           INCLUDE TABLESPACE  DSNDB06.SYSTSPVR
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKY
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKD
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKA
           INCLUDE TABLESPACE  DSNDB06.SYSUSER
           INCLUDE TABLESPACE  DSNDB06.SYSTSCKS
           INCLUDE TABLESPACE  DSNDB06.SYSTSCHX
           INCLUDE TABLESPACE  DSNDB06.SYSTSCKD
           INCLUDE TABLESPACE  DSNDB06.SYSTSSRG
           INCLUDE TABLESPACE  DSNDB06.SYSTSVEW
           INCLUDE TABLESPACE  DSNDB06.SYSTSVWD
           INCLUDE TABLESPACE  DSNDB06.SYSTSVWT
           INCLUDE TABLESPACE  DSNDB06.SYSTSVTR
           INCLUDE TABLESPACE  DSNDB06.SYSSTATS
           INCLUDE TABLESPACE  DSNDB06.SYSDDF
           INCLUDE TABLESPACE  DSNDB06.SYSTSAUX
           INCLUDE TABLESPACE  DSNDB06.SYSTSCON
           INCLUDE TABLESPACE  DSNDB06.SYSTSDAT
           INCLUDE TABLESPACE  DSNDB06.SYSTSDEP
           INCLUDE TABLESPACE  DSNDB06.SYSTSENV
           INCLUDE TABLESPACE  DSNDB06.SYSTSKYC
           INCLUDE TABLESPACE  DSNDB06.SYSTSPRM
           INCLUDE TABLESPACE  DSNDB06.SYSTSRAU
           INCLUDE TABLESPACE  DSNDB06.SYSTSROU
           INCLUDE TABLESPACE  DSNDB06.SYSPLUXA
           INCLUDE TABLESPACE  DSNDB06.SYSPLUXB
           INCLUDE TABLESPACE  DSNDB06.SYSTSSCM
           INCLUDE TABLESPACE  DSNDB06.SYSTSTBC
           INCLUDE TABLESPACE  DSNDB06.SYSTSTRG
           INCLUDE TABLESPACE  DSNDB06.SYSTSTRT
           INCLUDE TABLESPACE  DSNDB06.SYSSEQ
           INCLUDE TABLESPACE  DSNDB06.SYSSEQ2
           INCLUDE TABLESPACE  DSNDB06.SYSHIST
           INCLUDE TABLESPACE  DSNDB06.SYSGRTNS
           INCLUDE TABLESPACE  DSNDB06.SYSJAUXA
           INCLUDE TABLESPACE  DSNDB06.SYSJAUXB
           INCLUDE TABLESPACE  DSNDB06.SYSJAVA
           INCLUDE TABLESPACE  DSNDB06.SYSALTER
           INCLUDE TABLESPACE  DSNDB06.SYSTSOBX
           INCLUDE TABLESPACE  DSNDB06.SYSTSASC
           INCLUDE TABLESPACE  DSNDB06.SYSEBCDC
           INCLUDE TABLESPACE  DSNDB06.SYSTSUNI
           INCLUDE TABLESPACE  DSNDB06.SYSXML
           INCLUDE TABLESPACE  DSNDB06.SYSTSXTM
           INCLUDE TABLESPACE  DSNDB06.SYSTSXTS
           INCLUDE TABLESPACE  DSNDB06.SYSTARG
           INCLUDE TABLESPACE  DSNDB06.SYSROLES
           INCLUDE TABLESPACE  DSNDB06.SYSCONTX
           INCLUDE TABLESPACE  DSNDB06.SYSTSTSS
           INCLUDE TABLESPACE  DSNDB06.SYSTSISS
           INCLUDE TABLESPACE  DSNDB06.SYSTSADT
           INCLUDE TABLESPACE  DSNDB06.SYSTSCTL
           INCLUDE TABLESPACE  DSNDB06.SYSTSCTR
           INCLUDE TABLESPACE  DSNDB06.SYSTSCTD
           INCLUDE TABLESPACE  DSNDB06.SYSTSPEN
           INCLUDE TABLESPACE  DSNDB06.SYSTSPDT
           INCLUDE TABLESPACE  DSNDB06.SYSTSPDO
           INCLUDE TABLESPACE  DSNDB06.SYSTSTPF
           INCLUDE TABLESPACE  DSNDB06.SYSTSPTX
           INCLUDE TABLESPACE  DSNDB06.SYSTSATW
           INCLUDE TABLESPACE  DSNDB06.SYSTSPRH
           INCLUDE TABLESPACE  DSNDB06.SYSTSPHX
           INCLUDE TABLESPACE  DSNDB06.SYSTSATS
           INCLUDE TABLESPACE  DSNDB06.SYSTSATX
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRA
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKC
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRY
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRP
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRO
           INCLUDE TABLESPACE  DSNDB06.SYSTSVAR
           INCLUDE TABLESPACE  DSNDB06.SYSTSVAT
           INCLUDE TABLESPACE  DSNDB06.SYSTSVAD
           INCLUDE TABLESPACE  DSNDB06.SYSTSVAU
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRE
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRS
           INCLUDE TABLESPACE  DSNDB06.SYSTSIXC
           INCLUDE TABLESPACE  DSNDB06.SYSTSSFB
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQY
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQT
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQS
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQE
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQH
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQO
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQD
           INCLUDE TABLESPACE  DSNDB06.SYSTSICO
           INCLUDE TABLESPACE  DSNDB06.SYSTSSES
           INCLUDE TABLESPACE  DSNDB06.SYSTSSNL
           INCLUDE TABLESPACE  DSNDB06.SYSTSSNX
           INCLUDE TABLESPACE  DSNDB06.SYSTSSXL
           INCLUDE TABLESPACE  DSNDB06.SYSTSSTA
           INCLUDE TABLESPACE  DSNDB06.SYSTSLVH
           INCLUDE TABLESPACE  DSNDB06.SYSTSISH DEFINED ALL
           INCLUDE TABLESPACE  DSNDB06.SYSTSTSH DEFINED ALL
   OPTIONS EVENT(ITEMERROR,SKIP)
   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST TSP_LIST COPYDDN(SYSCOPY) FULL YES
   PARALLEL 10
//*
//*********************************************************************
//* SYSLGRNX IMAGE COPY STEP
//*********************************************************************
//ICDLGRNX EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY.LGRNX',
//             REGION=0M,COND=(4,LT)
//SYSPRINT  DD SYSOUT=*
//SYSABEND  DD SYSOUT=*
//UTPRINT   DD SYSOUT=*
//SYSUT1    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSUT2    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SORTOUT   DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSIN     DD *
   LISTDEF TSP_LIST
           INCLUDE TABLESPACE  DSNDB01.SYSLGRNX
   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST TSP_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* SYSTSCPY IMAGE COPY STEP
//*********************************************************************
//ICDTSCPY EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY.TSCPY',
//             REGION=0M,COND=(4,LT)
//SYSPRINT  DD SYSOUT=*
//SYSABEND  DD SYSOUT=*
//UTPRINT   DD SYSOUT=*
//SYSUT1    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSUT2    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SORTOUT   DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSIN     DD *
   LISTDEF TSP_LIST
           INCLUDE TABLESPACE  DSNDB06.SYSTSCPY
   OPTIONS EVENT(ITEMERROR,SKIP)
   TEMPLATE SYSCOPY
            DSN(DSNC§§0.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST TSP_LIST COPYDDN(SYSCOPY) FULL YES
//********************************************************************
//* END OF JOB STEPS FOR IMAGE COPIES TO DISK
//********************************************************************
//* BEGINNING OF JOB STEPS FOR IMAGE COPIES TO TAPE
//********************************************************************
//*  //*****************************************************************
//*  //* SYSUTILX IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICUTILX EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K
//*  //UTILX    DD  DSN=DSN§§0.IMAGCOPY.SYSUTILX,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=TAPE,
//*  //             VOL=(,RETAIN,,99),LABEL=(01,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB01.SYSUTILX  COPYDDN UTILX SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* DBD01    IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICDBD01 EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //UTILX    DD  DSN=DSN§§0.IMAGCOPY.SYSUTILX,
//*  //             DISP=(OLD,KEEP)
//*  //DBD01    DD  DSN=DSN§§0.IMAGCOPY.DBD01,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=UTILX,
//*  //             VOL=(,RETAIN,,99,REF=*.ICUTILX.UTILX),LABEL=(02,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB01.DBD01     COPYDDN DBD01 SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SCT02 IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICSCT02 EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //DBD01    DD  DSN=DSN§§0.IMAGCOPY.DBD01,
//*  //             DISP=(OLD,KEEP)
//*  //SCT02    DD  DSN=DSN§§0.IMAGCOPY.SCT02,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=DBD01,
//*  //             VOL=(,RETAIN,,99,REF=*.ICDBD01.DBD01),LABEL=(03,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB01.SCT02     COPYDDN SCT02 SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SPT01    IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICSPT01 EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //SCT02    DD  DSN=DSN§§0.IMAGCOPY.SCT02,
//*  //             DISP=(OLD,KEEP)
//*  //SPT01    DD  DSN=DSN§§0.IMAGCOPY.SPT01,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=SCT02,
//*  //             VOL=(,RETAIN,,99,REF=*.ICSCT02.SCT02),LABEL=(04,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB01.SPT01     COPYDDN SPT01 SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSDBDXA IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICDBDXA EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //SPT01    DD  DSN=DSN§§0.IMAGCOPY.SPT01,
//*  //             DISP=(OLD,KEEP)
//*  //DBDXA    DD  DSN=DSN§§0.IMAGCOPY.SYSDBDXA,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=SPT01,
//*  //             VOL=(,RETAIN,,99,REF=*.ICSPT01.SPT01),LABEL=(05,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB01.SYSDBDXA  COPYDDN DBDXA SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSSPUXA IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICSPUXA EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //DBDXA    DD  DSN=DSN§§0.IMAGCOPY.SYSDBDXA,
//*  //             DISP=(OLD,KEEP)
//*  //SPUXA    DD  DSN=DSN§§0.IMAGCOPY.SYSSPUXA,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=DBDXA,
//*  //             VOL=(,RETAIN,,99,REF=*.ICDBDXA.DBDXA),LABEL=(06,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB01.SYSSPUXA  COPYDDN SPUXA SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSSPUXB IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICSPUXB EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //SPUXA    DD  DSN=DSN§§0.IMAGCOPY.SYSSPUXA,
//*  //             DISP=(OLD,KEEP)
//*  //SPUXB    DD  DSN=DSN§§0.IMAGCOPY.SYSSPUXB,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=SPUXA,
//*  //             VOL=(,RETAIN,,99,REF=*.ICSPUXA.SPUXA),LABEL=(07,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB01.SYSSPUXB  COPYDDN SPUXB SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSFAU IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSFAU EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //SPUXB    DD  DSN=DSN§§0.IMAGCOPY.SYSSPUXB,
//*  //             DISP=(OLD,KEEP)
//*  //TSFAU    DD  DSN=DSN§§0.IMAGCOPY.SYSTSFAU,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=SPUXB,
//*  //             VOL=(,RETAIN,,99,REF=*.ICSPUXB.SPUXB),LABEL=(08,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSFAU  COPYDDN TSFAU SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSCOL IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSCOL EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSFAU    DD  DSN=DSN§§0.IMAGCOPY.SYSTSFAU,
//*  //             DISP=(OLD,KEEP)
//*  //TSCOL    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCOL,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSFAU,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSFAU.TSFAU),LABEL=(09,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSCOL  COPYDDN TSCOL SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSTSP IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSTSP EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSCOL    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCOL,
//*  //             DISP=(OLD,KEEP)
//*  //TSTSP    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTSP,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSCOL,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSCOL.TSCOL),LABEL=(10,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSTSP  COPYDDN TSTSP SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSTPT IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSTPT EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSTSP    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTSP,
//*  //             DISP=(OLD,KEEP)
//*  //TSTPT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTPT,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSTSP,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSTSP.TSTSP),LABEL=(11,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSTPT  COPYDDN TSTPT SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSTAB IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSTAB EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSTPT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTPT,
//*  //             DISP=(OLD,KEEP)
//*  //TSTAB    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTAB,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSTPT,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSTPT.TSTPT),LABEL=(12,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSTAB  COPYDDN TSTAB SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSIXS IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSIXS EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSTAB    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTAB,
//*  //             DISP=(OLD,KEEP)
//*  //TSIXS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSIXS,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSTAB,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSTAB.TSTAB),LABEL=(13,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSIXS  COPYDDN TSIXS SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSIXT IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSIXT EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSIXS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSIXS,
//*  //             DISP=(OLD,KEEP)
//*  //TSIXT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSIXT,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSIXS,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSIXS.TSIXS),LABEL=(14,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSIXT  COPYDDN TSIXT SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSIXR IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSIXR EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSIXT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSIXT,
//*  //             DISP=(OLD,KEEP)
//*  //TSIXR    DD  DSN=DSN§§0.IMAGCOPY.SYSTSIXR,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSIXT,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSIXT.TSIXT),LABEL=(15,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSIXR  COPYDDN TSIXR SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSIPT IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSIPT EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSIXR    DD  DSN=DSN§§0.IMAGCOPY.SYSTSIXR,
//*  //             DISP=(OLD,KEEP)
//*  //TSIPT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSIPT,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSIXR,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSIXR.TSIXR),LABEL=(16,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSIPT  COPYDDN TSIPT SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSREL IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSREL EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSIPT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSIPT,
//*  //             DISP=(OLD,KEEP)
//*  //TSREL    DD  DSN=DSN§§0.IMAGCOPY.SYSTSREL,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSIPT,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSIPT.TSIPT),LABEL=(17,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSREL  COPYDDN TSREL SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSFOR IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSFOR EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSREL    DD  DSN=DSN§§0.IMAGCOPY.SYSTSREL,
//*  //             DISP=(OLD,KEEP)
//*  //TSFOR    DD  DSN=DSN§§0.IMAGCOPY.SYSTSFOR,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSREL,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSREL.TSREL),LABEL=(18,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSFOR  COPYDDN TSFOR SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSSYN IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSSYN EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSFOR    DD  DSN=DSN§§0.IMAGCOPY.SYSTSFOR,
//*  //             DISP=(OLD,KEEP)
//*  //TSSYN    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSYN,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSFOR,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSFOR.TSFOR),LABEL=(19,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSSYN  COPYDDN TSSYN SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSFLD IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSFLD EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSSYN    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSYN,
//*  //             DISP=(OLD,KEEP)
//*  //TSFLD    DD  DSN=DSN§§0.IMAGCOPY.SYSTSFLD,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSSYN,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSSYN.TSSYN),LABEL=(20,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSFLD  COPYDDN TSFLD SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSTAU IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSTAU EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSFLD    DD  DSN=DSN§§0.IMAGCOPY.SYSTSFLD,
//*  //             DISP=(OLD,KEEP)
//*  //TSTAU    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTAU,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSFLD,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSFLD.TSFLD),LABEL=(21,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSTAU  COPYDDN TSTAU SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSKEY IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSKEY EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSTAU    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTAU,
//*  //             DISP=(OLD,KEEP)
//*  //TSKEY    DD  DSN=DSN§§0.IMAGCOPY.SYSTSKEY,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSTAU,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSTAU.TSTAU),LABEL=(22,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSKEY  COPYDDN TSKEY SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSDBA IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSDBA EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSKEY    DD  DSN=DSN§§0.IMAGCOPY.SYSTSKEY,
//*  //             DISP=(OLD,KEEP)
//*  //TSDBA    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDBA,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSKEY,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSKEY.TSKEY),LABEL=(23,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSDBA  COPYDDN TSDBA SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSDBU IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSDBU EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSDBA    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDBA,
//*  //             DISP=(OLD,KEEP)
//*  //TSDBU    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDBU,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSDBA,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSDBA.TSDBA),LABEL=(24,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSDBU  COPYDDN TSDBU SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSGPAUT IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICGPAUT EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSDBU    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDBU,
//*  //             DISP=(OLD,KEEP)
//*  //GPAUT    DD  DSN=DSN§§0.IMAGCOPY.SYSGPAUT,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSDBU,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSDBU.TSDBU),LABEL=(25,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSGPAUT  COPYDDN GPAUT SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSSTG IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSSTG EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //GPAUT    DD  DSN=DSN§§0.IMAGCOPY.SYSGPAUT,
//*  //             DISP=(OLD,KEEP)
//*  //TSSTG    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSTG,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=GPAUT,
//*  //             VOL=(,RETAIN,,99,REF=*.ICGPAUT.GPAUT),LABEL=(26,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSSTG  COPYDDN TSSTG SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSVOL IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSVOL EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSSTG    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSTG,
//*  //             DISP=(OLD,KEEP)
//*  //TSVOL    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVOL,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSSTG,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSSTG.TSSTG),LABEL=(27,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSVOL  COPYDDN TSVOL SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPLN IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPLN EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSVOL    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVOL,
//*  //             DISP=(OLD,KEEP)
//*  //TSPLN    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPLN,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSVOL,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSVOL.TSVOL),LABEL=(28,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPLN  COPYDDN TSPLN SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPLA IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPLA EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPLN    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPLN,
//*  //             DISP=(OLD,KEEP)
//*  //TSPLA    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPLA,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPLN,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPLN.TSPLN),LABEL=(29,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPLA  COPYDDN TSPLA SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSDBR IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSDBR EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPLA    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPLA,
//*  //             DISP=(OLD,KEEP)
//*  //TSDBR    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDBR,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPLA,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPLA.TSPLA),LABEL=(30,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSDBR  COPYDDN TSDBR SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPLD IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPLD EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSDBR    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDBR,
//*  //             DISP=(OLD,KEEP)
//*  //TSPLD    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPLD,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSDBR,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSDBR.TSDBR),LABEL=(31,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPLD  COPYDDN TSPLD SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSSTM IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSSTM EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPLD    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPLD,
//*  //             DISP=(OLD,KEEP)
//*  //TSSTM    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSTM,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPLD,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPLD.TSPLD),LABEL=(32,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSSTM  COPYDDN TSSTM SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPKL IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPKL EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSSTM    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSTM,
//*  //             DISP=(OLD,KEEP)
//*  //TSPKL    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPKL,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSSTM,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSSTM.TSSTM),LABEL=(33,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPKL  COPYDDN TSPKL SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPLY IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPLY EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPKL    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPKL,
//*  //             DISP=(OLD,KEEP)
//*  //TSPLY    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPLY,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPKL,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPKL.TSPKL),LABEL=(34,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPLY  COPYDDN TSPLY SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPKG IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPKG EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPLY    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPLY,
//*  //             DISP=(OLD,KEEP)
//*  //TSPKG    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPKG,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPLY,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPLY.TSPLY),LABEL=(35,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPKG  COPYDDN TSPKG SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPKS IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPKS EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPKG    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPKG,
//*  //             DISP=(OLD,KEEP)
//*  //TSPKS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPKS,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPKG,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPKG.TSPKG),LABEL=(36,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPKS  COPYDDN TSPKS SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPKX IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPKX EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPKS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPKS,
//*  //             DISP=(OLD,KEEP)
//*  //TSPKX    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPKX,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPKS,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPKS.TSPKS),LABEL=(37,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPKX  COPYDDN TSPKX SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPVR IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPVR EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPKX    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPKX,
//*  //             DISP=(OLD,KEEP)
//*  //TSPVR    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPVR,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPKX,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPKX.TSPKX),LABEL=(38,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPVR  COPYDDN TSPVR SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPKY IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPKY EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPVR    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPVR,
//*  //             DISP=(OLD,KEEP)
//*  //TSPKY    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPKY,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPVR,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPVR.TSPVR),LABEL=(39,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPKY  COPYDDN TSPKY SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPKD IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPKD EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPKY    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPKY,
//*  //             DISP=(OLD,KEEP)
//*  //TSPKD    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPKD,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPKY,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPKY.TSPKY),LABEL=(40,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPKD  COPYDDN TSPKD SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPKA IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPKA EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPKD    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPKD,
//*  //             DISP=(OLD,KEEP)
//*  //TSPKA    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPKA,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPKD,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPKD.TSPKD),LABEL=(41,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPKA  COPYDDN TSPKA SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSUSER IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICUSER  EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPKA    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPKA,
//*  //             DISP=(OLD,KEEP)
//*  //USER     DD  DSN=DSN§§0.IMAGCOPY.SYSUSER,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPKA,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPKA.TSPKA),LABEL=(42,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSUSER   COPYDDN USER SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSCKS IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSCKS EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //USER     DD  DSN=DSN§§0.IMAGCOPY.SYSUSER,
//*  //             DISP=(OLD,KEEP)
//*  //TSCKS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCKS,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=USER,
//*  //             VOL=(,RETAIN,,99,REF=*.ICUSER.USER),LABEL=(43,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSCKS  COPYDDN TSCKS SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSCHX IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSCHX EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSCKS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCKS,
//*  //             DISP=(OLD,KEEP)
//*  //TSCHX    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCHX,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSCKS,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSCKS.TSCKS),LABEL=(44,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSCHX  COPYDDN TSCHX SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSCKD IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSCKD EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSCHX    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCHX,
//*  //             DISP=(OLD,KEEP)
//*  //TSCKD    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCKD,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSCHX,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSCHX.TSCHX),LABEL=(45,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSCKD  COPYDDN TSCKD SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSSRG IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSSRG EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSCKD    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCKD,
//*  //             DISP=(OLD,KEEP)
//*  //TSSRG    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSRG,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSCKD,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSCKD.TSCKD),LABEL=(46,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSSRG  COPYDDN TSSRG SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSVEW IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSVEW EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSSRG    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSRG,
//*  //             DISP=(OLD,KEEP)
//*  //TSVEW    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVEW,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSSRG,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSSRG.TSSRG),LABEL=(47,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSVEW  COPYDDN TSVEW SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSVWD IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSVWD EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSVEW    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVEW,
//*  //             DISP=(OLD,KEEP)
//*  //TSVWD    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVWD,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSVEW,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSVEW.TSVEW),LABEL=(48,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSVWD  COPYDDN TSVWD SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSVWT IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSVWT EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSVWD    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVWD,
//*  //             DISP=(OLD,KEEP)
//*  //TSVWT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVWT,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSVWD,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSVWD.TSVWD),LABEL=(49,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSVWT  COPYDDN TSVWT SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSVTR IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSVTR EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSVWT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVWT,
//*  //             DISP=(OLD,KEEP)
//*  //TSVTR    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVTR,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSVWT,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSVWT.TSVWT),LABEL=(50,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSVTR  COPYDDN TSVTR SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSSTATS IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICSTATS EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSVTR    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVTR,
//*  //             DISP=(OLD,KEEP)
//*  //STATS    DD  DSN=DSN§§0.IMAGCOPY.SYSSTATS,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSVTR,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSVTR.TSVTR),LABEL=(51,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSSTATS  COPYDDN STATS SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSDDF IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICDDF   EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //STATS    DD  DSN=DSN§§0.IMAGCOPY.SYSSTATS,
//*  //             DISP=(OLD,KEEP)
//*  //DDF      DD  DSN=DSN§§0.IMAGCOPY.SYSDDF,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=STATS,
//*  //             VOL=(,RETAIN,,99,REF=*.ICSTATS.STATS),LABEL=(52,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSDDF    COPYDDN DDF SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSAUX IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSAUX EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //DDF      DD  DSN=DSN§§0.IMAGCOPY.SYSDDF,
//*  //             DISP=(OLD,KEEP)
//*  //TSAUX    DD  DSN=DSN§§0.IMAGCOPY.SYSTSAUX,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=DDF,
//*  //             VOL=(,RETAIN,,99,REF=*.ICDDF.DDF),LABEL=(53,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSAUX  COPYDDN TSAUX SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSCON IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSCON EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSAUX    DD  DSN=DSN§§0.IMAGCOPY.SYSTSAUX,
//*  //             DISP=(OLD,KEEP)
//*  //TSCON    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCON,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSAUX,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSAUX.TSAUX),LABEL=(54,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSCON  COPYDDN TSCON SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSDAT IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSDAT EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSCON    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCON,
//*  //             DISP=(OLD,KEEP)
//*  //TSDAT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDAT,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSCON,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSCON.TSCON),LABEL=(55,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSDAT  COPYDDN TSDAT SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSDEP IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSDEP EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSDAT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDAT,
//*  //             DISP=(OLD,KEEP)
//*  //TSDEP    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDEP,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSDAT,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSDAT.TSDAT),LABEL=(56,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSDEP  COPYDDN TSDEP SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSENV IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSENV EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSDEP    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDEP,
//*  //             DISP=(OLD,KEEP)
//*  //TSENV    DD  DSN=DSN§§0.IMAGCOPY.SYSTSENV,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSDEP,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSDEP.TSDEP),LABEL=(57,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSENV  COPYDDN TSENV SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSKYC IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSKYC EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSENV    DD  DSN=DSN§§0.IMAGCOPY.SYSTSENV,
//*  //             DISP=(OLD,KEEP)
//*  //TSKYC    DD  DSN=DSN§§0.IMAGCOPY.SYSTSKYC,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSENV,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSENV.TSENV),LABEL=(58,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSKYC  COPYDDN TSKYC SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPRM IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPRM EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSKYC    DD  DSN=DSN§§0.IMAGCOPY.SYSTSKYC,
//*  //             DISP=(OLD,KEEP)
//*  //TSPRM    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPRM,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSKYC,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSKYC.TSKYC),LABEL=(59,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPRM  COPYDDN TSPRM SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSRAU IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSRAU EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPRM    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPRM,
//*  //             DISP=(OLD,KEEP)
//*  //TSRAU    DD  DSN=DSN§§0.IMAGCOPY.SYSTSRAU,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPRM,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPRM.TSPRM),LABEL=(60,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSRAU  COPYDDN TSRAU SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSROU IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSROU EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSRAU    DD  DSN=DSN§§0.IMAGCOPY.SYSTSRAU,
//*  //             DISP=(OLD,KEEP)
//*  //TSROU    DD  DSN=DSN§§0.IMAGCOPY.SYSTSROU,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSRAU,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSRAU.TSRAU),LABEL=(61,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSROU  COPYDDN TSROU SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSPLUXA IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICPLUXA EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSROU    DD  DSN=DSN§§0.IMAGCOPY.SYSTSROU,
//*  //             DISP=(OLD,KEEP)
//*  //PLUXA    DD  DSN=DSN§§0.IMAGCOPY.SYSPLUXA,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSROU,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSROU.TSROU),LABEL=(62,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSPLUXA  COPYDDN PLUXA SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSPLUXB IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICPLUXB EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //PLUXA    DD  DSN=DSN§§0.IMAGCOPY.SYSPLUXA,
//*  //             DISP=(OLD,KEEP)
//*  //PLUXB    DD  DSN=DSN§§0.IMAGCOPY.SYSPLUXB,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=PLUXA,
//*  //             VOL=(,RETAIN,,99,REF=*.ICPLUXA.PLUXA),LABEL=(63,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSPLUXB  COPYDDN PLUXB SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSSCM IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSSCM EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //PLUXB    DD  DSN=DSN§§0.IMAGCOPY.SYSPLUXB,
//*  //             DISP=(OLD,KEEP)
//*  //TSSCM    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSCM,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=PLUXB,
//*  //             VOL=(,RETAIN,,99,REF=*.ICPLUXB.PLUXB),LABEL=(64,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSSCM  COPYDDN TSSCM SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSTBC IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSTBC EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSSCM    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSCM,
//*  //             DISP=(OLD,KEEP)
//*  //TSTBC    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTBC,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSSCM,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSSCM.TSSCM),LABEL=(65,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSTBC  COPYDDN TSTBC SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSTRG IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSTRG EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSTBC    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTBC,
//*  //             DISP=(OLD,KEEP)
//*  //TSTRG    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTRG,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSTBC,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSTBC.TSTBC),LABEL=(66,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSTRG  COPYDDN TSTRG SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSTRT IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSTRT EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSTRG    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTRG,
//*  //             DISP=(OLD,KEEP)
//*  //TSTRT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTRT,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSTRG,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSTRG.TSTRG),LABEL=(67,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSTRT  COPYDDN TSTRT SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSSEQ IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICSEQ   EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSTRT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTRT,
//*  //             DISP=(OLD,KEEP)
//*  //SEQ      DD  DSN=DSN§§0.IMAGCOPY.SYSSEQ,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSTRT,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSTRT.TSTRT),LABEL=(68,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSSEQ    COPYDDN SEQ SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSSEQ2 IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICSEQ2  EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //SEQ      DD  DSN=DSN§§0.IMAGCOPY.SYSSEQ,
//*  //             DISP=(OLD,KEEP)
//*  //SEQ2     DD  DSN=DSN§§0.IMAGCOPY.SYSSEQ2,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=SEQ,
//*  //             VOL=(,RETAIN,,99,REF=*.ICSEQ.SEQ),LABEL=(69,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSSEQ2   COPYDDN SEQ2 SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSHIST IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICHIST  EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //SEQ2     DD  DSN=DSN§§0.IMAGCOPY.SYSSEQ2,
//*  //             DISP=(OLD,KEEP)
//*  //HIST     DD  DSN=DSN§§0.IMAGCOPY.SYSHIST,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=SEQ2,
//*  //             VOL=(,RETAIN,,99,REF=*.ICSEQ2.SEQ2),LABEL=(70,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSHIST   COPYDDN HIST SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSGRTNS IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICGRTNS EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //HIST     DD  DSN=DSN§§0.IMAGCOPY.SYSHIST,
//*  //             DISP=(OLD,KEEP)
//*  //GRTNS    DD  DSN=DSN§§0.IMAGCOPY.SYSGRTNS,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=HIST,
//*  //             VOL=(,RETAIN,,99,REF=*.ICHIST.HIST),LABEL=(71,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSGRTNS  COPYDDN GRTNS SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSJAUXA IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICJAUXA EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //GRTNS    DD  DSN=DSN§§0.IMAGCOPY.SYSGRTNS,
//*  //             DISP=(OLD,KEEP)
//*  //JAUXA    DD  DSN=DSN§§0.IMAGCOPY.SYSJAUXA,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=GRTNS,
//*  //             VOL=(,RETAIN,,99,REF=*.ICGRTNS.GRTNS),LABEL=(72,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSJAUXA  COPYDDN JAUXA SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSJAUXB IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICJAUXB EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //JAUXA    DD  DSN=DSN§§0.IMAGCOPY.SYSJAUXA,
//*  //             DISP=(OLD,KEEP)
//*  //JAUXB    DD  DSN=DSN§§0.IMAGCOPY.SYSJAUXB,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=JAUXA,
//*  //             VOL=(,RETAIN,,99,REF=*.ICJAUXA.JAUXA),LABEL=(73,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSJAUXB  COPYDDN JAUXB SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSJAVA IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICJAVA  EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //JAUXB    DD  DSN=DSN§§0.IMAGCOPY.SYSJAUXB,
//*  //             DISP=(OLD,KEEP)
//*  //JAVA     DD  DSN=DSN§§0.IMAGCOPY.SYSJAVA,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=JAUXB,
//*  //             VOL=(,RETAIN,,99,REF=*.ICJAUXB.JAUXB),LABEL=(74,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSJAVA   COPYDDN JAVA SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSALTER IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICALTER EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //JAVA     DD  DSN=DSN§§0.IMAGCOPY.SYSJAVA,
//*  //             DISP=(OLD,KEEP)
//*  //ALTER    DD  DSN=DSN§§0.IMAGCOPY.SYSALTER,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=JAVA,
//*  //             VOL=(,RETAIN,,99,REF=*.ICJAVA.JAVA),LABEL=(75,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSALTER  COPYDDN ALTER SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSOBX IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSOBX EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //ALTER    DD  DSN=DSN§§0.IMAGCOPY.SYSALTER,
//*  //             DISP=(OLD,KEEP)
//*  //TSOBX    DD  DSN=DSN§§0.IMAGCOPY.SYSTSOBX,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=ALTER,
//*  //             VOL=(,RETAIN,,99,REF=*.ICALTER.ALTER),LABEL=(76,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSOBX  COPYDDN TSOBX SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSASC IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSASC EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSOBX    DD  DSN=DSN§§0.IMAGCOPY.SYSTSOBX,
//*  //             DISP=(OLD,KEEP)
//*  //TSASC    DD  DSN=DSN§§0.IMAGCOPY.SYSTSASC,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSOBX,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSOBX.TSOBX),LABEL=(77,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSASC  COPYDDN TSASC SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSEBCDC IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICEBCDC EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSASC    DD  DSN=DSN§§0.IMAGCOPY.SYSTSASC,
//*  //             DISP=(OLD,KEEP)
//*  //EBCDC    DD  DSN=DSN§§0.IMAGCOPY.SYSEBCDC,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSASC,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSASC.TSASC),LABEL=(78,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSEBCDC  COPYDDN EBCDC SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSUNI IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSUNI EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //EBCDC    DD  DSN=DSN§§0.IMAGCOPY.SYSEBCDC,
//*  //             DISP=(OLD,KEEP)
//*  //TSUNI    DD  DSN=DSN§§0.IMAGCOPY.SYSTSUNI,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=EBCDC,
//*  //             VOL=(,RETAIN,,99,REF=*.ICEBCDC.EBCDC),LABEL=(79,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSUNI  COPYDDN TSUNI SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSXML IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICXML   EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSUNI    DD  DSN=DSN§§0.IMAGCOPY.SYSTSUNI,
//*  //             DISP=(OLD,KEEP)
//*  //XML      DD  DSN=DSN§§0.IMAGCOPY.SYSXML,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSUNI,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSUNI.TSUNI),LABEL=(80,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSXML    COPYDDN XML SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSXTM IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSXTM EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //XML      DD  DSN=DSN§§0.IMAGCOPY.SYSXML,
//*  //             DISP=(OLD,KEEP)
//*  //TSXTM    DD  DSN=DSN§§0.IMAGCOPY.SYSTSXTM,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=XML,
//*  //             VOL=(,RETAIN,,99,REF=*.ICXML.XML),LABEL=(81,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSXTM  COPYDDN TSXTM SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSXTS IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSXTS EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSXTM    DD  DSN=DSN§§0.IMAGCOPY.SYSTSXTM,
//*  //             DISP=(OLD,KEEP)
//*  //TSXTS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSXTS,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSXTM,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSXTM.TSXTM),LABEL=(82,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSXTS  COPYDDN TSXTS SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTARG IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTARG  EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSXTS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSXTS,
//*  //             DISP=(OLD,KEEP)
//*  //TARG     DD  DSN=DSN§§0.IMAGCOPY.SYSTARG,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSXTS,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSXTS.TSXTS),LABEL=(83,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTARG   COPYDDN TARG SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSROLES IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICROLES EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TARG     DD  DSN=DSN§§0.IMAGCOPY.SYSTARG,
//*  //             DISP=(OLD,KEEP)
//*  //ROLES    DD  DSN=DSN§§0.IMAGCOPY.SYSROLES,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TARG,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTARG.TARG),LABEL=(84,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSROLES  COPYDDN ROLES SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSCONTX IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICCONTX EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //ROLES    DD  DSN=DSN§§0.IMAGCOPY.SYSROLES,
//*  //             DISP=(OLD,KEEP)
//*  //CONTX    DD  DSN=DSN§§0.IMAGCOPY.SYSCONTX,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=ROLES,
//*  //             VOL=(,RETAIN,,99,REF=*.ICROLES.ROLES),LABEL=(85,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSCONTX  COPYDDN CONTX SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSTSS IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSTSS EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //CONTX    DD  DSN=DSN§§0.IMAGCOPY.SYSCONTX,
//*  //             DISP=(OLD,KEEP)
//*  //TSTSS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTSS,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=CONTX,
//*  //             VOL=(,RETAIN,,99,REF=*.ICCONTX.CONTX),LABEL=(86,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSTSS  COPYDDN TSTSS SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSISS IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSISS EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSTSS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTSS,
//*  //             DISP=(OLD,KEEP)
//*  //TSISS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSISS,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSTSS,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSTSS.TSTSS),LABEL=(87,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSISS  COPYDDN TSISS SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSADT IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSADT EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSISS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSISS,
//*  //             DISP=(OLD,KEEP)
//*  //TSADT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSADT,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSISS,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSISS.TSISS),LABEL=(88,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSADT  COPYDDN TSADT SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSCTL IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSCTL EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSADT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSADT,
//*  //             DISP=(OLD,KEEP)
//*  //TSCTL    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCTL,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSADT,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSADT.TSADT),LABEL=(89,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSCTL  COPYDDN TSCTL SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSCTR IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSCTR EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSCTL    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCTL,
//*  //             DISP=(OLD,KEEP)
//*  //TSCTR    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCTR,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSCTL,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSCTL.TSCTL),LABEL=(90,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSCTR  COPYDDN TSCTR SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSCTD IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSCTD EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSCTR    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCTR,
//*  //             DISP=(OLD,KEEP)
//*  //TSCTD    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCTD,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSCTR,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSCTR.TSCTR),LABEL=(91,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSCTD  COPYDDN TSCTD SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPEN IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPEN EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSCTD    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCTD,
//*  //             DISP=(OLD,KEEP)
//*  //TSPEN    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPEN,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSCTD,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSCTD.TSCTD),LABEL=(92,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPEN  COPYDDN TSPEN SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPDT IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPDT EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPEN    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPEN,
//*  //             DISP=(OLD,KEEP)
//*  //TSPDT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPDT,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPEN,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPEN.TSPEN),LABEL=(93,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPDT  COPYDDN TSPDT SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPDO IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPDO EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPDT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPDT,
//*  //             DISP=(OLD,KEEP)
//*  //TSPDO    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPDO,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPDT,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPDT.TSPDT),LABEL=(94,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPDO  COPYDDN TSPDO SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSTPF IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSTPF EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPDO    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPDO,
//*  //             DISP=(OLD,KEEP)
//*  //TSTPF    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTPF,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPDO,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPDO.TSPDO),LABEL=(95,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSTPF  COPYDDN TSTPF SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPTX IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPTX EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSTPF    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTPF,
//*  //             DISP=(OLD,KEEP)
//*  //TSPTX    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPTX,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSTPF,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSTPF.TSTPF),LABEL=(96,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPTX  COPYDDN TSPTX SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSATW IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSATW EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPTX    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPTX,
//*  //             DISP=(OLD,KEEP)
//*  //TSATW    DD  DSN=DSN§§0.IMAGCOPY.SYSTSATW,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPTX,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPTX.TSPTX),LABEL=(97,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSATW  COPYDDN TSATW SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPRH IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPRH EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSATW    DD  DSN=DSN§§0.IMAGCOPY.SYSTSATW,
//*  //             DISP=(OLD,KEEP)
//*  //TSPRH    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPRH,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSATW,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSATW.TSATW),LABEL=(98,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPRH  COPYDDN TSPRH SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPHX IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPHX EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPRH    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPRH,
//*  //             DISP=(OLD,KEEP)
//*  //TSPHX    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPHX,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPRH,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPRH.TSPRH),LABEL=(99,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPHX  COPYDDN TSPHX SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSATS IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSATS EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPHX    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPHX,
//*  //             DISP=(OLD,KEEP)
//*  //TSATS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSATS,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPHX,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPHX.TSPHX),LABEL=(100,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSATS  COPYDDN TSATS SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSATX IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSATX EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSATS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSATS,
//*  //             DISP=(OLD,KEEP)
//*  //TSATX    DD  DSN=DSN§§0.IMAGCOPY.SYSTSATX,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSATS,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSATS.TSATS),LABEL=(101,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSATX  COPYDDN TSATX SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSQRA IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSQRA EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSATX    DD  DSN=DSN§§0.IMAGCOPY.SYSTSATX,
//*  //             DISP=(OLD,KEEP)
//*  //TSQRA    DD  DSN=DSN§§0.IMAGCOPY.SYSTSQRA,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSATX,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSATX.TSATX),LABEL=(102,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSQRA  COPYDDN TSQRA SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSPKC IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSPKC EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSQRA    DD  DSN=DSN§§0.IMAGCOPY.SYSTSQRA,
//*  //             DISP=(OLD,KEEP)
//*  //TSPKC    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPKC,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSQRA,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSQRA.TSQRA),LABEL=(103,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSPKC  COPYDDN TSPKC SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSQRY IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSQRY EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSPKC    DD  DSN=DSN§§0.IMAGCOPY.SYSTSPKC,
//*  //             DISP=(OLD,KEEP)
//*  //TSQRY    DD  DSN=DSN§§0.IMAGCOPY.SYSTSQRY,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSPKC,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSPKC.TSPKC),LABEL=(104,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSQRY  COPYDDN TSQRY SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSQRP IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSQRP EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSQRY    DD  DSN=DSN§§0.IMAGCOPY.SYSTSQRY,
//*  //             DISP=(OLD,KEEP)
//*  //TSQRP    DD  DSN=DSN§§0.IMAGCOPY.SYSTSQRP,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSQRY,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSQRY.TSQRY),LABEL=(105,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSQRP  COPYDDN TSQRP SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSQRO IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSQRO EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSQRP    DD  DSN=DSN§§0.IMAGCOPY.SYSTSQRP,
//*  //             DISP=(OLD,KEEP)
//*  //TSQRO    DD  DSN=DSN§§0.IMAGCOPY.SYSTSQRO,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSQRP,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSQRP.TSQRP),LABEL=(106,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSQRO  COPYDDN TSQRO SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSVAR IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSVAR EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSQRO    DD  DSN=DSN§§0.IMAGCOPY.SYSTSQRO,
//*  //             DISP=(OLD,KEEP)
//*  //TSVAR    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVAR,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSQRO,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSQRO.TSQRO),LABEL=(107,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSVAR  COPYDDN TSVAR SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSVAT IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSVAT EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSVAR    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVAR,
//*  //             DISP=(OLD,KEEP)
//*  //TSVAT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVAT,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSVAR,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSVAR.TSVAR),LABEL=(108,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSVAT  COPYDDN TSVAT SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSVAD IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSVAD EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSVAT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVAT,
//*  //             DISP=(OLD,KEEP)
//*  //TSVAD    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVAD,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSVAT,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSVAT.TSVAT),LABEL=(109,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSVAD  COPYDDN TSVAD SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSVAU IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSVAU EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSVAD    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVAD,
//*  //             DISP=(OLD,KEEP)
//*  //TSVAU    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVAU,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSVAD,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSVAD.TSVAD),LABEL=(110,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSVAU  COPYDDN TSVAU SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSQRE IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSQRE EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSVAU    DD  DSN=DSN§§0.IMAGCOPY.SYSTSVAU,
//*  //             DISP=(OLD,KEEP)
//*  //TSQRE    DD  DSN=DSN§§0.IMAGCOPY.SYSTSQRE,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSVAU,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSVAU.TSVAU),LABEL=(111,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSQRE  COPYDDN TSQRE SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSQRS IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSQRS EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSQRE    DD  DSN=DSN§§0.IMAGCOPY.SYSTSQRE,
//*  //             DISP=(OLD,KEEP)
//*  //TSQRS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSQRS,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSQRE,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSQRE.TSQRE),LABEL=(112,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSQRS  COPYDDN TSQRS SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSIXC IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSIXC EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSQRS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSQRS,
//*  //             DISP=(OLD,KEEP)
//*  //TSIXC    DD  DSN=DSN§§0.IMAGCOPY.SYSTSIXC,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSQRS,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSQRS.TSQRS),LABEL=(113,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSIXC  COPYDDN TSIXC SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSSFB IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSSFB EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSIXC    DD  DSN=DSN§§0.IMAGCOPY.SYSTSIXC,
//*  //             DISP=(OLD,KEEP)
//*  //TSSFB    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSFB,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSIXC,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSIXC.TSIXC),LABEL=(114,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSSFB  COPYDDN TSSFB SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSDQY IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSDQY EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSSFB    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSFB,
//*  //             DISP=(OLD,KEEP)
//*  //TSDQY    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDQY,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSSFB,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSSFB.TSSFB),LABEL=(115,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSDQY  COPYDDN TSDQY SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSDQT IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSDQT EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSDQY    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDQY,
//*  //             DISP=(OLD,KEEP)
//*  //TSDQT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDQT,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSDQY,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSDQY.TSDQY),LABEL=(116,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSDQT  COPYDDN TSDQT SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSDQS IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSDQS EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSDQT    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDQT,
//*  //             DISP=(OLD,KEEP)
//*  //TSDQS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDQS,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSDQT,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSDQT.TSDQT),LABEL=(117,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSDQS  COPYDDN TSDQS SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSDQE IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSDQE EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSDQS    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDQS,
//*  //             DISP=(OLD,KEEP)
//*  //TSDQE    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDQE,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSDQS,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSDQS.TSDQS),LABEL=(118,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSDQE  COPYDDN TSDQE SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSDQH IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSDQH EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSDQE    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDQE,
//*  //             DISP=(OLD,KEEP)
//*  //TSDQH    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDQH,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSDQE,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSDQE.TSDQE),LABEL=(119,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSDQH  COPYDDN TSDQH SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSDQO IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSDQO EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSDQH    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDQH,
//*  //             DISP=(OLD,KEEP)
//*  //TSDQO    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDQO,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSDQH,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSDQH.TSDQH),LABEL=(120,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSDQO  COPYDDN TSDQO SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSDQD IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSDQD EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSDQO    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDQO,
//*  //             DISP=(OLD,KEEP)
//*  //TSDQD    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDQD,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSDQO,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSDQO.TSDQO),LABEL=(121,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSDQD  COPYDDN TSDQD SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSICO IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSICO EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSDQD    DD  DSN=DSN§§0.IMAGCOPY.SYSTSDQD,
//*  //             DISP=(OLD,KEEP)
//*  //TSICO    DD  DSN=DSN§§0.IMAGCOPY.SYSTSICO,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSDQD,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSDQD.TSDQD),LABEL=(122,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSICO  COPYDDN TSICO SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSSES IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSSES EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSICO    DD  DSN=DSN§§0.IMAGCOPY.SYSTSICO,
//*  //             DISP=(OLD,KEEP)
//*  //TSSES    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSES,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSICO,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSICO.TSICO),LABEL=(123,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSSES  COPYDDN TSSES SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSSNL IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSSNL EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSSES    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSES,
//*  //             DISP=(OLD,KEEP)
//*  //TSSNL    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSNL,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSSES,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSSES.TSSES),LABEL=(124,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSSNL  COPYDDN TSSNL SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSSNX IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSSNX EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSSNL    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSNL,
//*  //             DISP=(OLD,KEEP)
//*  //TSSNX    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSNX,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSSNL,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSSNL.TSSNL),LABEL=(125,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSSNX  COPYDDN TSSNX SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSSXL IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSSXL EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSSNX    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSNX,
//*  //             DISP=(OLD,KEEP)
//*  //TSSXL    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSXL,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSSNX,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSSNX.TSSNX),LABEL=(126,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSSXL  COPYDDN TSSXL SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSSTA IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSSTA EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSSXL    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSXL,
//*  //             DISP=(OLD,KEEP)
//*  //TSSTA    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSTA,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSSXL,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSSXL.TSSXL),LABEL=(127,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSSTA  COPYDDN TSSTA SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSLVH IMAGE COPY STEP
//*  //*****************************************************************
//*  //ICTSLVH EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSSTA    DD  DSN=DSN§§0.IMAGCOPY.SYSTSSTA,
//*  //             DISP=(OLD,KEEP)
//*  //TSLVH    DD  DSN=DSN§§0.IMAGCOPY.SYSTSLVH,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSSTA,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSSTA.TSSTA),LABEL=(128,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSLVH  COPYDDN TSLVH SHRLEVEL(CHANGE)
//*  //* //*************************************************************
//*  //* //* SYSTSISH IMAGE COPY STEP
//*  //* //*************************************************************
//*  //* //ICTSISH EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //* //             COND=(4,LT)
//*  //* //TSLVH    DD  DSN=DSN§§0.IMAGCOPY.SYSTSLVH,
//*  //* //             DISP=(OLD,KEEP)
//*  //* //TSISH    DD  DSN=DSN§§0.IMAGCOPY.SYSTSISH,
//*  //* //             DISP=(NEW,PASS,DELETE),
//*  //* //             UNIT=AFF=TSLVH,
//*  //* //             VOL=(,RETAIN,,99,REF=*.ICTSLVH.TSLVH),
//*  //* //             LABEL=(129,SL)
//*  //* //SYSPRINT DD  SYSOUT=*
//*  //* //SYSUDUMP DD  SYSOUT=*
//*  //* //SYSIN    DD  *
//*  //* COPY TABLESPACE DSNDB06.SYSTSISH COPYDDN TSISH
//*  //* SHRLEVEL(CHANGE)
//*  //* //*************************************************************
//*  //* //* SYSTSTSH IMAGE COPY STEP
//*  //* //*************************************************************
//*  //* //ICTSTSH EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //* //             COND=(4,LT)
//*  //* //TSISH    DD  DSN=DSN§§0.IMAGCOPY.SYSTSISH,
//*  //* //             DISP=(OLD,KEEP)
//*  //* //TSTSH    DD  DSN=DSN§§0.IMAGCOPY.SYSTSTSH,
//*  //* //             DISP=(NEW,PASS,DELETE),
//*  //* //             UNIT=AFF=TSISH,
//*  //* //             VOL=(,RETAIN,,99,REF=*.ICTSISH.TSISH),
//*  //* //             LABEL=(130,SL)
//*  //* //SYSPRINT DD  SYSOUT=*
//*  //* //SYSUDUMP DD  SYSOUT=*
//*  //* //SYSIN    DD  *
//*  //* COPY TABLESPACE DSNDB06.SYSTSTSH  COPYDDN TSTSH
//*  //* SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSLGRNX IMAGE COPY STEP
//*  //* -> SYSLGRNX IS ALWAYS COPIED NEXT TO LAST§
//*  //*****************************************************************
//*  //ICLGRNX EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //TSLVH    DD  DSN=DSN§§0.IMAGCOPY.SYSTSLVH,
//*  //             DISP=(OLD,KEEP)
//*  //LGRNX    DD  DSN=DSN§§0.IMAGCOPY.SYSLGRNX,
//*  //             DISP=(NEW,PASS,DELETE),
//*  //             UNIT=AFF=TSLVH,
//*  //             VOL=(,RETAIN,,99,REF=*.ICTSLVH.TSLVH),LABEL=(129,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB01.SYSLGRNX  COPYDDN LGRNX SHRLEVEL(CHANGE)
//*  //*****************************************************************
//*  //* SYSTSCPY IMAGE COPY STEP
//*  //* -> SYSTSCPY IS ALWAYS IMAGE COPIED LAST§
//*  //*****************************************************************
//*  //ICTSCPY EXEC PGM=DSNUTILB,PARM='DSN,IMAGCOPY',REGION=1024K,
//*  //             COND=(4,LT)
//*  //LGRNX    DD  DSN=DSN§§0.IMAGCOPY.SYSLGRNX,
//*  //             DISP=(OLD,KEEP)
//*  //TSCPY    DD  DSN=DSN§§0.IMAGCOPY.SYSTSCPY,
//*  //             DISP=(NEW,KEEP,DELETE),
//*  //             UNIT=AFF=LGRNX,
//*  //             VOL=(,RETAIN,,99,REF=*.ICLGRNX.LGRNX),LABEL=(130,SL)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSIN    DD  *
//*     COPY TABLESPACE DSNDB06.SYSTSCPY  COPYDDN TSCPY SHRLEVEL(CHANGE)

./ ADD NAME=DSNTIJIC
//DSNTIJIC  JOB ACCT£,                                                  00010000
//             DB2,                                                     00020000
//*            RESTART=ICSPT01,
//*            RESTART=ICUTILX,
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040000
//*THE VSAM DATA SET DOES NOT EXIST FOR TABLESPACE DSNDB06.SYSTSTSH
//*THE VSAM DATA SET DOES NOT EXIST FOR TABLESPACE DSNDB06.SYSTSISH
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050000
//      SYS019.LP2.DB2,                                                 00060000
//      SYS1.PROCLIB.&SYSNAME,                                          00061000
//      SYS1.SACBCNTL)                                                  00070000
//*********************************************************************
//* JOB NAME = DSNTIJIC
//*
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM
//*
//*    Licensed Materials - Property of IBM
//*    5650-DB2
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 12
//*
//* FUNCTION = Create image copies of all the system catalog tables
//*
//* NOTES =
//*
//*   This job creates image copies of the DB2 directory and catalog
//*   on DISK using the LISTDEF and TEMPLATE facilities:
//*
//*   Job step ICDUTILX
//*   -----------------
//*     The SYSUTILX directory space is copied separately by the first
//*     job step, ICDUTILX, because it cannot be specified using the
//*     LISTDEF facility.  Also, for recoverability, SYSUTILX must
//*     always be copied first.
//*
//*   Job step ICDMAIN
//*   ----------------
//*     Most other DB2 directory and catalog table spaces are copied by
//*     the second job step, which uses a parallel mode of 10 to reduce
//*     processing time.
//*
//*   Job step ICDLGRNX
//*   -----------------
//*     For recoverability, SYSLGRNX must be copied after most other
//*     table spaces but before SYSTSCPY.
//*
//*   Job step ICDTSCPY
//*   -----------------
//*     For recoverability, SYSTSCPY must be copied after SYSLGRNX.
//*
//*   ATTENTION:
//*     Following these four job steps are numerous commented-out job
//*     steps for creating sequential image copies of the db2 directory
//*     and catalog on tape.
//*
//*     The tape image copy for each table space is done in a separate
//*     step so that the job will execute successfully when an image
//*     copy output data set spans more than one tape volume.  Each
//*     step's data set is passed to the next step so that a tape will
//*     not have to be demounted and remounted after every step.
//*     However, we also recommend that the image copy tapes be mounted
//*     as private volumes to prevent this problem.
//*
//*     If you prefer to create image copy data sets on TAPE, do the
//*     following:
//*
//*     1) Delete the four ICDxxxxx job steps.
//*     2) Uncomment the job steps for tape image copies.
//*     3) Follow TAPE IMAGE COPIES FOR DEFINE NO OBJECTS instructions
//*
//*     TAPE IMAGE COPIES FOR DEFINE NO OBJECTS
//*
//*     If any of the following DEFINE NO objects exist then uncomment
//*     the noted job step(s):
//*
//*           SYSTSISH   - ICTSISH job step
//*           SYSTSTSH   - ICTSTSH job step
//*
//*     For each uncommented DEFINE NO job step, ensure that the
//*     following JCL statements are correct for steps ICLGRNX,
//*     ICTSCPY and the uncommented step(s):
//*
//*        a) The image copy data set name used on the second DD
//*           card of the previous uncommented step is named on
//*           the first DD card.
//*        b) The UNIT and backwards reference fields properly
//*           reflect the previous uncommented step's step name,
//*           DD card name, etc.
//*        c) The data-set-sequence-number on the LABEL parameter is one
//*           higher than that of the previous uncommented step.
//*
//*   If a failure occurs in one step, fix the problem and rerun the
//*   complete job from the top.
//*
//*   If you are remigrating, you will need to either:
//*
//*   1)  Change the names of the data sets in which the
//*       new image copies will reside (migration image
//*       copies are using the current data set names) or
//*   2)  Run the MODIFY Utility to remove the migration
//*       image copies
//*
//*   The SYSUTILX COPY step must be the first step in the job,
//*   the SYSLGRNX COPY step must be the next to last step in the job
//*   and the SYSTSCPY COPY step must be the last step in the job.
//*
//* CHANGE ACTIVITY =
//*   01/07/2016 Convert job to perform COPY to disk and  182361 s15572
//*              to use TEMPLATEs and LISTDEFs to get
//*              Utilities parallelism.  The traditional
//*              sequential tape COPY job steps are
//*              preserved below, commented out.
//*   07/01/2016 Support for CD catalog updates                  184402
//*              Add SYSTSLVH + DSNLVX01 + DSNLVX02
//*   09/05/2019 Update SYSCOPY TEMPLATE name spec              PH12364
//*   11/13/2020 Handle DEFINE NO table spaces SYSTSISH and     PH22875
//*              SYSTSTSH
//*
//*********************************************************************/
//JOBLIB   DD  DISP=SHR,
//             DSN=SYS2.DB2.SDSNLOAD
//*********************************************************************
//* SYSUTILX IMAGE COPY STEP
//*********************************************************************
//ICDUTILX EXEC PGM=DSNUTILB,REGION=0M,
//             PARM='DB2S,IMAGCOPY.UTILX'
//SYSPRINT  DD SYSOUT=*
//SYSABEND  DD SYSOUT=*
//UTPRINT   DD SYSOUT=*
//SYSUT1    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSUT2    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SORTOUT   DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSIN     DD *
   TEMPLATE SYSCOPY
            DSN(DB2S.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY TABLESPACE DSNDB01.SYSUTILX  SHRLEVEL(CHANGE)
//*********************************************************************
//* MAIN IMAGE COPY STEP FOR DB2 CATALOG AND DIRECTORY TABLE SPACES
//*********************************************************************
//ICDMAIN EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY.MAIN',
//             REGION=0M,COND=(4,LT)
//SYSPRINT  DD SYSOUT=*
//SYSABEND  DD SYSOUT=*
//UTPRINT   DD SYSOUT=*
//SYSUT1    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSUT2    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SORTOUT   DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSIN     DD *
   LISTDEF TSP_LIST
           INCLUDE TABLESPACE  DSNDB01.DBD01
           INCLUDE TABLESPACE  DSNDB01.SCT02
           INCLUDE TABLESPACE  DSNDB01.SPT01
           INCLUDE TABLESPACE  DSNDB01.SYSDBDXA
           INCLUDE TABLESPACE  DSNDB01.SYSSPUXA
           INCLUDE TABLESPACE  DSNDB01.SYSSPUXB
           INCLUDE TABLESPACE  DSNDB06.SYSTSFAU
           INCLUDE TABLESPACE  DSNDB06.SYSTSCOL
           INCLUDE TABLESPACE  DSNDB06.SYSTSTSP
           INCLUDE TABLESPACE  DSNDB06.SYSTSTPT
           INCLUDE TABLESPACE  DSNDB06.SYSTSTAB
           INCLUDE TABLESPACE  DSNDB06.SYSTSIXS
           INCLUDE TABLESPACE  DSNDB06.SYSTSIXT
           INCLUDE TABLESPACE  DSNDB06.SYSTSIXR
           INCLUDE TABLESPACE  DSNDB06.SYSTSIPT
           INCLUDE TABLESPACE  DSNDB06.SYSTSREL
           INCLUDE TABLESPACE  DSNDB06.SYSTSFOR
           INCLUDE TABLESPACE  DSNDB06.SYSTSSYN
           INCLUDE TABLESPACE  DSNDB06.SYSTSFLD
           INCLUDE TABLESPACE  DSNDB06.SYSTSTAU
           INCLUDE TABLESPACE  DSNDB06.SYSTSKEY
           INCLUDE TABLESPACE  DSNDB06.SYSTSDBA
           INCLUDE TABLESPACE  DSNDB06.SYSTSDBU
           INCLUDE TABLESPACE  DSNDB06.SYSGPAUT
           INCLUDE TABLESPACE  DSNDB06.SYSTSSTG
           INCLUDE TABLESPACE  DSNDB06.SYSTSVOL
           INCLUDE TABLESPACE  DSNDB06.SYSTSPLN
           INCLUDE TABLESPACE  DSNDB06.SYSTSPLA
           INCLUDE TABLESPACE  DSNDB06.SYSTSDBR
           INCLUDE TABLESPACE  DSNDB06.SYSTSPLD
           INCLUDE TABLESPACE  DSNDB06.SYSTSSTM
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKL
           INCLUDE TABLESPACE  DSNDB06.SYSTSPLY
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKG
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKS
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKX
           INCLUDE TABLESPACE  DSNDB06.SYSTSPVR
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKY
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKD
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKA
           INCLUDE TABLESPACE  DSNDB06.SYSUSER
           INCLUDE TABLESPACE  DSNDB06.SYSTSCKS
           INCLUDE TABLESPACE  DSNDB06.SYSTSCHX
           INCLUDE TABLESPACE  DSNDB06.SYSTSCKD
           INCLUDE TABLESPACE  DSNDB06.SYSTSSRG
           INCLUDE TABLESPACE  DSNDB06.SYSTSVEW
           INCLUDE TABLESPACE  DSNDB06.SYSTSVWD
           INCLUDE TABLESPACE  DSNDB06.SYSTSVWT
           INCLUDE TABLESPACE  DSNDB06.SYSTSVTR
           INCLUDE TABLESPACE  DSNDB06.SYSSTATS
           INCLUDE TABLESPACE  DSNDB06.SYSDDF
           INCLUDE TABLESPACE  DSNDB06.SYSTSAUX
           INCLUDE TABLESPACE  DSNDB06.SYSTSCON
           INCLUDE TABLESPACE  DSNDB06.SYSTSDAT
           INCLUDE TABLESPACE  DSNDB06.SYSTSDEP
           INCLUDE TABLESPACE  DSNDB06.SYSTSENV
           INCLUDE TABLESPACE  DSNDB06.SYSTSKYC
           INCLUDE TABLESPACE  DSNDB06.SYSTSPRM
           INCLUDE TABLESPACE  DSNDB06.SYSTSRAU
           INCLUDE TABLESPACE  DSNDB06.SYSTSROU
           INCLUDE TABLESPACE  DSNDB06.SYSPLUXA
           INCLUDE TABLESPACE  DSNDB06.SYSPLUXB
           INCLUDE TABLESPACE  DSNDB06.SYSTSSCM
           INCLUDE TABLESPACE  DSNDB06.SYSTSTBC
           INCLUDE TABLESPACE  DSNDB06.SYSTSTRG
           INCLUDE TABLESPACE  DSNDB06.SYSTSTRT
           INCLUDE TABLESPACE  DSNDB06.SYSSEQ
           INCLUDE TABLESPACE  DSNDB06.SYSSEQ2
           INCLUDE TABLESPACE  DSNDB06.SYSHIST
           INCLUDE TABLESPACE  DSNDB06.SYSGRTNS
           INCLUDE TABLESPACE  DSNDB06.SYSJAUXA
           INCLUDE TABLESPACE  DSNDB06.SYSJAUXB
           INCLUDE TABLESPACE  DSNDB06.SYSJAVA
           INCLUDE TABLESPACE  DSNDB06.SYSALTER
           INCLUDE TABLESPACE  DSNDB06.SYSTSOBX
           INCLUDE TABLESPACE  DSNDB06.SYSTSASC
           INCLUDE TABLESPACE  DSNDB06.SYSEBCDC
           INCLUDE TABLESPACE  DSNDB06.SYSTSUNI
           INCLUDE TABLESPACE  DSNDB06.SYSXML
           INCLUDE TABLESPACE  DSNDB06.SYSTSXTM
           INCLUDE TABLESPACE  DSNDB06.SYSTSXTS
           INCLUDE TABLESPACE  DSNDB06.SYSTARG
           INCLUDE TABLESPACE  DSNDB06.SYSROLES
           INCLUDE TABLESPACE  DSNDB06.SYSCONTX
           INCLUDE TABLESPACE  DSNDB06.SYSTSTSS
           INCLUDE TABLESPACE  DSNDB06.SYSTSISS
           INCLUDE TABLESPACE  DSNDB06.SYSTSADT
           INCLUDE TABLESPACE  DSNDB06.SYSTSCTL
           INCLUDE TABLESPACE  DSNDB06.SYSTSCTR
           INCLUDE TABLESPACE  DSNDB06.SYSTSCTD
           INCLUDE TABLESPACE  DSNDB06.SYSTSPEN
           INCLUDE TABLESPACE  DSNDB06.SYSTSPDT
           INCLUDE TABLESPACE  DSNDB06.SYSTSPDO
           INCLUDE TABLESPACE  DSNDB06.SYSTSTPF
           INCLUDE TABLESPACE  DSNDB06.SYSTSPTX
           INCLUDE TABLESPACE  DSNDB06.SYSTSATW
           INCLUDE TABLESPACE  DSNDB06.SYSTSPRH
           INCLUDE TABLESPACE  DSNDB06.SYSTSPHX
           INCLUDE TABLESPACE  DSNDB06.SYSTSATS
           INCLUDE TABLESPACE  DSNDB06.SYSTSATX
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRA
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKC
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRY
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRP
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRO
           INCLUDE TABLESPACE  DSNDB06.SYSTSVAR
           INCLUDE TABLESPACE  DSNDB06.SYSTSVAT
           INCLUDE TABLESPACE  DSNDB06.SYSTSVAD
           INCLUDE TABLESPACE  DSNDB06.SYSTSVAU
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRE
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRS
           INCLUDE TABLESPACE  DSNDB06.SYSTSIXC
           INCLUDE TABLESPACE  DSNDB06.SYSTSSFB
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQY
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQT
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQS
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQE
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQH
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQO
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQD
           INCLUDE TABLESPACE  DSNDB06.SYSTSICO
           INCLUDE TABLESPACE  DSNDB06.SYSTSSES
           INCLUDE TABLESPACE  DSNDB06.SYSTSSNL
           INCLUDE TABLESPACE  DSNDB06.SYSTSSNX
           INCLUDE TABLESPACE  DSNDB06.SYSTSSXL
           INCLUDE TABLESPACE  DSNDB06.SYSTSSTA
           INCLUDE TABLESPACE  DSNDB06.SYSTSLVH
   OPTIONS EVENT(ITEMERROR,SKIP)
   TEMPLATE SYSCOPY
            DSN(DB2S.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST TSP_LIST COPYDDN(SYSCOPY) FULL YES
   PARALLEL 10
//*
//*********************************************************************
//* SYSLGRNX IMAGE COPY STEP
//*********************************************************************
//ICDLGRNX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY.LGRNX',
//             REGION=0M,COND=(4,LT)
//SYSPRINT  DD SYSOUT=*
//SYSABEND  DD SYSOUT=*
//UTPRINT   DD SYSOUT=*
//SYSUT1    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSUT2    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SORTOUT   DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSIN     DD *
   LISTDEF TSP_LIST
           INCLUDE TABLESPACE  DSNDB01.SYSLGRNX
   TEMPLATE SYSCOPY
            DSN(DB2S.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST TSP_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* SYSTSCPY IMAGE COPY STEP
//*********************************************************************
//ICDTSCPY EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY.TSCPY',
//             REGION=0M,COND=(4,LT)
//SYSPRINT  DD SYSOUT=*
//SYSABEND  DD SYSOUT=*
//UTPRINT   DD SYSOUT=*
//SYSUT1    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSUT2    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SORTOUT   DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSIN     DD *
   LISTDEF TSP_LIST
           INCLUDE TABLESPACE  DSNDB06.SYSTSCPY
   OPTIONS EVENT(ITEMERROR,SKIP)
   TEMPLATE SYSCOPY
            DSN(DB2S.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST TSP_LIST COPYDDN(SYSCOPY) FULL YES
//********************************************************************
//* END OF JOB STEPS FOR IMAGE COPIES TO DISK
//********************************************************************
//* BEGINNING OF JOB STEPS FOR IMAGE COPIES TO TAPE CHANGED RLR
//********************************************************************
//*****************************************************************
//* SYSUTILX IMAGE COPY STEP
//*****************************************************************
//ICUTILX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M
//UTILX    DD  DSN=DB2S.IMAGCOPY.SYSUTILX(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390,
//*            UNIT=TAPE,
//             VOL=(,RETAIN,,99),LABEL=(01,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB01.SYSUTILX  COPYDDN UTILX SHRLEVEL(CHANGE)
//*****************************************************************
//* DBD01    IMAGE COPY STEP
//*****************************************************************
//ICDBD01 EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//UTILX    DD  DSN=DB2S.IMAGCOPY.SYSUTILX(0),
//             DISP=(OLD,KEEP)
//DBD01    DD  DSN=DB2S.IMAGCOPY.DBD01(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=UTILX,
//             VOL=(,RETAIN,,99,REF=*.ICUTILX.UTILX),LABEL=(02,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB01.DBD01     COPYDDN DBD01 SHRLEVEL(CHANGE)
//*****************************************************************
//* SCT02 IMAGE COPY STEP
//*****************************************************************
//ICSCT02 EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//DBD01    DD  DSN=DB2S.IMAGCOPY.DBD01,
//             DISP=(OLD,KEEP)
//SCT02    DD  DSN=DB2S.IMAGCOPY.SCT02(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=DBD01,
//             VOL=(,RETAIN,,99,REF=*.ICDBD01.DBD01),LABEL=(03,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB01.SCT02     COPYDDN SCT02 SHRLEVEL(CHANGE)
//*****************************************************************
//* SPT01    IMAGE COPY STEP
//*****************************************************************
//ICSPT01 EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//SCT02    DD  DSN=DB2S.IMAGCOPY.SCT02(0),
//             DISP=(OLD,KEEP)
//SPT01    DD  DSN=DB2S.IMAGCOPY.SPT01(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(20,20))
//*            UNIT=AFF=SCT02,
//*            VOL=(,RETAIN,,99,REF=*.ICSCT02.SCT02),LABEL=(04,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB01.SPT01     COPYDDN SPT01 SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSDBDXA IMAGE COPY STEP
//*****************************************************************
//ICDBDXA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//SPT01    DD  DSN=DB2S.IMAGCOPY.SPT01(0),
//             DISP=(OLD,KEEP)
//DBDXA    DD  DSN=DB2S.IMAGCOPY.SYSDBDXA(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=SPT01,
//             VOL=(,RETAIN,,99,REF=*.ICSPT01.SPT01),LABEL=(05,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB01.SYSDBDXA  COPYDDN DBDXA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSSPUXA IMAGE COPY STEP
//*****************************************************************
//ICSPUXA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//DBDXA    DD  DSN=DB2S.IMAGCOPY.SYSDBDXA(0),
//             DISP=(OLD,KEEP)
//SPUXA    DD  DSN=DB2S.IMAGCOPY.SYSSPUXA(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=DBDXA,
//             VOL=(,RETAIN,,99,REF=*.ICDBDXA.DBDXA),LABEL=(06,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB01.SYSSPUXA  COPYDDN SPUXA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSSPUXB IMAGE COPY STEP
//*****************************************************************
//ICSPUXB EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//SPUXA    DD  DSN=DB2S.IMAGCOPY.SYSSPUXA(0),
//             DISP=(OLD,KEEP)
//SPUXB    DD  DSN=DB2S.IMAGCOPY.SYSSPUXB(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=SPUXA,
//             VOL=(,RETAIN,,99,REF=*.ICSPUXA.SPUXA),LABEL=(07,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB01.SYSSPUXB  COPYDDN SPUXB SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSFAU IMAGE COPY STEP
//*****************************************************************
//ICTSFAU EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//SPUXB    DD  DSN=DB2S.IMAGCOPY.SYSSPUXB(0),
//             DISP=(OLD,KEEP)
//TSFAU    DD  DSN=DB2S.IMAGCOPY.SYSTSFAU(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=SPUXB,
//             VOL=(,RETAIN,,99,REF=*.ICSPUXB.SPUXB),LABEL=(08,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSFAU  COPYDDN TSFAU SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCOL IMAGE COPY STEP
//*****************************************************************
//ICTSCOL EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSFAU    DD  DSN=DB2S.IMAGCOPY.SYSTSFAU(0),
//             DISP=(OLD,KEEP)
//TSCOL    DD  DSN=DB2S.IMAGCOPY.SYSTSCOL(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSFAU,
//             VOL=(,RETAIN,,99,REF=*.ICTSFAU.TSFAU),LABEL=(09,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCOL  COPYDDN TSCOL SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTSP IMAGE COPY STEP
//*****************************************************************
//ICTSTSP EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSCOL    DD  DSN=DB2S.IMAGCOPY.SYSTSCOL(0),
//             DISP=(OLD,KEEP)
//TSTSP    DD  DSN=DB2S.IMAGCOPY.SYSTSTSP(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSCOL,
//             VOL=(,RETAIN,,99,REF=*.ICTSCOL.TSCOL),LABEL=(10,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTSP  COPYDDN TSTSP SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTPT IMAGE COPY STEP
//*****************************************************************
//ICTSTPT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTSP    DD  DSN=DB2S.IMAGCOPY.SYSTSTSP(0),
//             DISP=(OLD,KEEP)
//TSTPT    DD  DSN=DB2S.IMAGCOPY.SYSTSTPT(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSTSP,
//             VOL=(,RETAIN,,99,REF=*.ICTSTSP.TSTSP),LABEL=(11,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTPT  COPYDDN TSTPT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTAB IMAGE COPY STEP
//*****************************************************************
//ICTSTAB EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTPT    DD  DSN=DB2S.IMAGCOPY.SYSTSTPT(0),
//             DISP=(OLD,KEEP)
//TSTAB    DD  DSN=DB2S.IMAGCOPY.SYSTSTAB(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSTPT,
//             VOL=(,RETAIN,,99,REF=*.ICTSTPT.TSTPT),LABEL=(12,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTAB  COPYDDN TSTAB SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSIXS IMAGE COPY STEP
//*****************************************************************
//ICTSIXS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTAB    DD  DSN=DB2S.IMAGCOPY.SYSTSTAB(0),
//             DISP=(OLD,KEEP)
//TSIXS    DD  DSN=DB2S.IMAGCOPY.SYSTSIXS(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSTAB,
//             VOL=(,RETAIN,,99,REF=*.ICTSTAB.TSTAB),LABEL=(13,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSIXS  COPYDDN TSIXS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSIXT IMAGE COPY STEP
//*****************************************************************
//ICTSIXT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSIXS    DD  DSN=DB2S.IMAGCOPY.SYSTSIXS(0),
//             DISP=(OLD,KEEP)
//TSIXT    DD  DSN=DB2S.IMAGCOPY.SYSTSIXT(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSIXS,
//             VOL=(,RETAIN,,99,REF=*.ICTSIXS.TSIXS),LABEL=(14,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSIXT  COPYDDN TSIXT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSIXR IMAGE COPY STEP
//*****************************************************************
//ICTSIXR EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSIXT    DD  DSN=DB2S.IMAGCOPY.SYSTSIXT(0),
//             DISP=(OLD,KEEP)
//TSIXR    DD  DSN=DB2S.IMAGCOPY.SYSTSIXR(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSIXT,
//             VOL=(,RETAIN,,99,REF=*.ICTSIXT.TSIXT),LABEL=(15,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSIXR  COPYDDN TSIXR SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSIPT IMAGE COPY STEP
//*****************************************************************
//ICTSIPT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSIXR    DD  DSN=DB2S.IMAGCOPY.SYSTSIXR(0),
//             DISP=(OLD,KEEP)
//TSIPT    DD  DSN=DB2S.IMAGCOPY.SYSTSIPT(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSIXR,
//             VOL=(,RETAIN,,99,REF=*.ICTSIXR.TSIXR),LABEL=(16,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSIPT  COPYDDN TSIPT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSREL IMAGE COPY STEP
//*****************************************************************
//ICTSREL EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSIPT    DD  DSN=DB2S.IMAGCOPY.SYSTSIPT(0),
//             DISP=(OLD,KEEP)
//TSREL    DD  DSN=DB2S.IMAGCOPY.SYSTSREL(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSIPT,
//             VOL=(,RETAIN,,99,REF=*.ICTSIPT.TSIPT),LABEL=(17,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSREL  COPYDDN TSREL SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSFOR IMAGE COPY STEP
//*****************************************************************
//ICTSFOR EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSREL    DD  DSN=DB2S.IMAGCOPY.SYSTSREL(0),
//             DISP=(OLD,KEEP)
//TSFOR    DD  DSN=DB2S.IMAGCOPY.SYSTSFOR(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSREL,
//             VOL=(,RETAIN,,99,REF=*.ICTSREL.TSREL),LABEL=(18,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSFOR  COPYDDN TSFOR SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSYN IMAGE COPY STEP
//*****************************************************************
//ICTSSYN EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSFOR    DD  DSN=DB2S.IMAGCOPY.SYSTSFOR(0),
//             DISP=(OLD,KEEP)
//TSSYN    DD  DSN=DB2S.IMAGCOPY.SYSTSSYN(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSFOR,
//             VOL=(,RETAIN,,99,REF=*.ICTSFOR.TSFOR),LABEL=(19,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSYN  COPYDDN TSSYN SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSFLD IMAGE COPY STEP
//*****************************************************************
//ICTSFLD EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSYN    DD  DSN=DB2S.IMAGCOPY.SYSTSSYN(0),
//             DISP=(OLD,KEEP)
//TSFLD    DD  DSN=DB2S.IMAGCOPY.SYSTSFLD(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSSYN,
//             VOL=(,RETAIN,,99,REF=*.ICTSSYN.TSSYN),LABEL=(20,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSFLD  COPYDDN TSFLD SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTAU IMAGE COPY STEP
//*****************************************************************
//ICTSTAU EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSFLD    DD  DSN=DB2S.IMAGCOPY.SYSTSFLD(0),
//             DISP=(OLD,KEEP)
//TSTAU    DD  DSN=DB2S.IMAGCOPY.SYSTSTAU(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSFLD,
//             VOL=(,RETAIN,,99,REF=*.ICTSFLD.TSFLD),LABEL=(21,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTAU  COPYDDN TSTAU SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSKEY IMAGE COPY STEP
//*****************************************************************
//ICTSKEY EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTAU    DD  DSN=DB2S.IMAGCOPY.SYSTSTAU(0),
//             DISP=(OLD,KEEP)
//TSKEY    DD  DSN=DB2S.IMAGCOPY.SYSTSKEY(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSTAU,
//             VOL=(,RETAIN,,99,REF=*.ICTSTAU.TSTAU),LABEL=(22,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSKEY  COPYDDN TSKEY SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDBA IMAGE COPY STEP
//*****************************************************************
//ICTSDBA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSKEY    DD  DSN=DB2S.IMAGCOPY.SYSTSKEY(0),
//             DISP=(OLD,KEEP)
//TSDBA    DD  DSN=DB2S.IMAGCOPY.SYSTSDBA(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSKEY,
//             VOL=(,RETAIN,,99,REF=*.ICTSKEY.TSKEY),LABEL=(23,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDBA  COPYDDN TSDBA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDBU IMAGE COPY STEP
//*****************************************************************
//ICTSDBU EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDBA    DD  DSN=DB2S.IMAGCOPY.SYSTSDBA(0),
//             DISP=(OLD,KEEP)
//TSDBU    DD  DSN=DB2S.IMAGCOPY.SYSTSDBU(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSDBA,
//             VOL=(,RETAIN,,99,REF=*.ICTSDBA.TSDBA),LABEL=(24,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDBU  COPYDDN TSDBU SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSGPAUT IMAGE COPY STEP
//*****************************************************************
//ICGPAUT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDBU    DD  DSN=DB2S.IMAGCOPY.SYSTSDBU(0),
//             DISP=(OLD,KEEP)
//GPAUT    DD  DSN=DB2S.IMAGCOPY.SYSGPAUT(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSDBU,
//             VOL=(,RETAIN,,99,REF=*.ICTSDBU.TSDBU),LABEL=(25,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSGPAUT  COPYDDN GPAUT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSTG IMAGE COPY STEP
//*****************************************************************
//ICTSSTG EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//GPAUT    DD  DSN=DB2S.IMAGCOPY.SYSGPAUT(0),
//             DISP=(OLD,KEEP)
//TSSTG    DD  DSN=DB2S.IMAGCOPY.SYSTSSTG(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=GPAUT,
//             VOL=(,RETAIN,,99,REF=*.ICGPAUT.GPAUT),LABEL=(26,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSTG  COPYDDN TSSTG SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVOL IMAGE COPY STEP
//*****************************************************************
//ICTSVOL EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSTG    DD  DSN=DB2S.IMAGCOPY.SYSTSSTG(0),
//             DISP=(OLD,KEEP)
//TSVOL    DD  DSN=DB2S.IMAGCOPY.SYSTSVOL(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSSTG,
//             VOL=(,RETAIN,,99,REF=*.ICTSSTG.TSSTG),LABEL=(27,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVOL  COPYDDN TSVOL SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPLN IMAGE COPY STEP
//*****************************************************************
//ICTSPLN EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVOL    DD  DSN=DB2S.IMAGCOPY.SYSTSVOL(0),
//             DISP=(OLD,KEEP)
//TSPLN    DD  DSN=DB2S.IMAGCOPY.SYSTSPLN(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSVOL,
//             VOL=(,RETAIN,,99,REF=*.ICTSVOL.TSVOL),LABEL=(28,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPLN  COPYDDN TSPLN SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPLA IMAGE COPY STEP
//*****************************************************************
//ICTSPLA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPLN    DD  DSN=DB2S.IMAGCOPY.SYSTSPLN(0),
//             DISP=(OLD,KEEP)
//TSPLA    DD  DSN=DB2S.IMAGCOPY.SYSTSPLA(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSPLN,
//             VOL=(,RETAIN,,99,REF=*.ICTSPLN.TSPLN),LABEL=(29,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPLA  COPYDDN TSPLA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDBR IMAGE COPY STEP
//*****************************************************************
//ICTSDBR EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPLA    DD  DSN=DB2S.IMAGCOPY.SYSTSPLA(0),
//             DISP=(OLD,KEEP)
//TSDBR    DD  DSN=DB2S.IMAGCOPY.SYSTSDBR(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSPLA,
//             VOL=(,RETAIN,,99,REF=*.ICTSPLA.TSPLA),LABEL=(30,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDBR  COPYDDN TSDBR SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPLD IMAGE COPY STEP
//*****************************************************************
//ICTSPLD EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDBR    DD  DSN=DB2S.IMAGCOPY.SYSTSDBR(0),
//             DISP=(OLD,KEEP)
//TSPLD    DD  DSN=DB2S.IMAGCOPY.SYSTSPLD(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSDBR,
//             VOL=(,RETAIN,,99,REF=*.ICTSDBR.TSDBR),LABEL=(31,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPLD  COPYDDN TSPLD SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSTM IMAGE COPY STEP
//*****************************************************************
//ICTSSTM EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPLD    DD  DSN=DB2S.IMAGCOPY.SYSTSPLD(0),
//             DISP=(OLD,KEEP)
//TSSTM    DD  DSN=DB2S.IMAGCOPY.SYSTSSTM(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSPLD,
//             VOL=(,RETAIN,,99,REF=*.ICTSPLD.TSPLD),LABEL=(32,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSTM  COPYDDN TSSTM SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPKL IMAGE COPY STEP
//*****************************************************************
//ICTSPKL EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSTM    DD  DSN=DB2S.IMAGCOPY.SYSTSSTM(0),
//             DISP=(OLD,KEEP)
//TSPKL    DD  DSN=DB2S.IMAGCOPY.SYSTSPKL(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSSTM,
//             VOL=(,RETAIN,,99,REF=*.ICTSSTM.TSSTM),LABEL=(33,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPKL  COPYDDN TSPKL SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPLY IMAGE COPY STEP
//*****************************************************************
//ICTSPLY EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPKL    DD  DSN=DB2S.IMAGCOPY.SYSTSPKL(0),
//             DISP=(OLD,KEEP)
//TSPLY    DD  DSN=DB2S.IMAGCOPY.SYSTSPLY(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSPKL,
//             VOL=(,RETAIN,,99,REF=*.ICTSPKL.TSPKL),LABEL=(34,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPLY  COPYDDN TSPLY SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPKG IMAGE COPY STEP
//*****************************************************************
//ICTSPKG EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPLY    DD  DSN=DB2S.IMAGCOPY.SYSTSPLY(0),
//             DISP=(OLD,KEEP)
//TSPKG    DD  DSN=DB2S.IMAGCOPY.SYSTSPKG(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSPLY,
//             VOL=(,RETAIN,,99,REF=*.ICTSPLY.TSPLY),LABEL=(35,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPKG  COPYDDN TSPKG SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPKS IMAGE COPY STEP
//*****************************************************************
//ICTSPKS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPKG    DD  DSN=DB2S.IMAGCOPY.SYSTSPKG(0),
//             DISP=(OLD,KEEP)
//TSPKS    DD  DSN=DB2S.IMAGCOPY.SYSTSPKS(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSPKG,
//             VOL=(,RETAIN,,99,REF=*.ICTSPKG.TSPKG),LABEL=(36,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPKS  COPYDDN TSPKS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPKX IMAGE COPY STEP
//*****************************************************************
//ICTSPKX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPKS    DD  DSN=DB2S.IMAGCOPY.SYSTSPKS(0),
//             DISP=(OLD,KEEP)
//TSPKX    DD  DSN=DB2S.IMAGCOPY.SYSTSPKX(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSPKS,
//             VOL=(,RETAIN,,99,REF=*.ICTSPKS.TSPKS),LABEL=(37,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPKX  COPYDDN TSPKX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPVR IMAGE COPY STEP
//*****************************************************************
//ICTSPVR EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPKX    DD  DSN=DB2S.IMAGCOPY.SYSTSPKX(0),
//             DISP=(OLD,KEEP)
//TSPVR    DD  DSN=DB2S.IMAGCOPY.SYSTSPVR(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSPKX,
//             VOL=(,RETAIN,,99,REF=*.ICTSPKX.TSPKX),LABEL=(38,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPVR  COPYDDN TSPVR SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPKY IMAGE COPY STEP
//*****************************************************************
//ICTSPKY EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPVR    DD  DSN=DB2S.IMAGCOPY.SYSTSPVR(0),
//             DISP=(OLD,KEEP)
//TSPKY    DD  DSN=DB2S.IMAGCOPY.SYSTSPKY(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSPVR,
//             VOL=(,RETAIN,,99,REF=*.ICTSPVR.TSPVR),LABEL=(39,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPKY  COPYDDN TSPKY SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPKD IMAGE COPY STEP
//*****************************************************************
//ICTSPKD EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPKY    DD  DSN=DB2S.IMAGCOPY.SYSTSPKY(0),
//             DISP=(OLD,KEEP)
//TSPKD    DD  DSN=DB2S.IMAGCOPY.SYSTSPKD(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSPKY,
//             VOL=(,RETAIN,,99,REF=*.ICTSPKY.TSPKY),LABEL=(40,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPKD  COPYDDN TSPKD SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPKA IMAGE COPY STEP
//*****************************************************************
//ICTSPKA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPKD    DD  DSN=DB2S.IMAGCOPY.SYSTSPKD(0),
//             DISP=(OLD,KEEP)
//TSPKA    DD  DSN=DB2S.IMAGCOPY.SYSTSPKA(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSPKD,
//             VOL=(,RETAIN,,99,REF=*.ICTSPKD.TSPKD),LABEL=(41,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPKA  COPYDDN TSPKA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSUSER IMAGE COPY STEP
//*****************************************************************
//ICUSER  EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPKA    DD  DSN=DB2S.IMAGCOPY.SYSTSPKA(0),
//             DISP=(OLD,KEEP)
//USER     DD  DSN=DB2S.IMAGCOPY.SYSUSER(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSPKA,
//             VOL=(,RETAIN,,99,REF=*.ICTSPKA.TSPKA),LABEL=(42,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSUSER   COPYDDN USER SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCKS IMAGE COPY STEP
//*****************************************************************
//ICTSCKS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//USER     DD  DSN=DB2S.IMAGCOPY.SYSUSER(0),
//             DISP=(OLD,KEEP)
//TSCKS    DD  DSN=DB2S.IMAGCOPY.SYSTSCKS(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=USER,
//             VOL=(,RETAIN,,99,REF=*.ICUSER.USER),LABEL=(43,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCKS  COPYDDN TSCKS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCHX IMAGE COPY STEP
//*****************************************************************
//ICTSCHX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSCKS    DD  DSN=DB2S.IMAGCOPY.SYSTSCKS(0),
//             DISP=(OLD,KEEP)
//TSCHX    DD  DSN=DB2S.IMAGCOPY.SYSTSCHX(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSCKS,
//             VOL=(,RETAIN,,99,REF=*.ICTSCKS.TSCKS),LABEL=(44,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCHX  COPYDDN TSCHX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCKD IMAGE COPY STEP
//*****************************************************************
//ICTSCKD EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSCHX    DD  DSN=DB2S.IMAGCOPY.SYSTSCHX(0),
//             DISP=(OLD,KEEP)
//TSCKD    DD  DSN=DB2S.IMAGCOPY.SYSTSCKD(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSCHX,
//             VOL=(,RETAIN,,99,REF=*.ICTSCHX.TSCHX),LABEL=(45,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCKD  COPYDDN TSCKD SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSRG IMAGE COPY STEP
//*****************************************************************
//ICTSSRG EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSCKD    DD  DSN=DB2S.IMAGCOPY.SYSTSCKD(0),
//             DISP=(OLD,KEEP)
//TSSRG    DD  DSN=DB2S.IMAGCOPY.SYSTSSRG(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSCKD,
//             VOL=(,RETAIN,,99,REF=*.ICTSCKD.TSCKD),LABEL=(46,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSRG  COPYDDN TSSRG SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVEW IMAGE COPY STEP
//*****************************************************************
//ICTSVEW EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSRG    DD  DSN=DB2S.IMAGCOPY.SYSTSSRG(0),
//             DISP=(OLD,KEEP)
//TSVEW    DD  DSN=DB2S.IMAGCOPY.SYSTSVEW(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSSRG,
//             VOL=(,RETAIN,,99,REF=*.ICTSSRG.TSSRG),LABEL=(47,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVEW  COPYDDN TSVEW SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVWD IMAGE COPY STEP
//*****************************************************************
//ICTSVWD EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVEW    DD  DSN=DB2S.IMAGCOPY.SYSTSVEW(0),
//             DISP=(OLD,KEEP)
//TSVWD    DD  DSN=DB2S.IMAGCOPY.SYSTSVWD(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSVEW,
//             VOL=(,RETAIN,,99,REF=*.ICTSVEW.TSVEW),LABEL=(48,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVWD  COPYDDN TSVWD SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVWT IMAGE COPY STEP
//*****************************************************************
//ICTSVWT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVWD    DD  DSN=DB2S.IMAGCOPY.SYSTSVWD(0),
//             DISP=(OLD,KEEP)
//TSVWT    DD  DSN=DB2S.IMAGCOPY.SYSTSVWT(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSVWD,
//             VOL=(,RETAIN,,99,REF=*.ICTSVWD.TSVWD),LABEL=(49,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVWT  COPYDDN TSVWT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVTR IMAGE COPY STEP
//*****************************************************************
//ICTSVTR EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVWT    DD  DSN=DB2S.IMAGCOPY.SYSTSVWT(0),
//             DISP=(OLD,KEEP)
//TSVTR    DD  DSN=DB2S.IMAGCOPY.SYSTSVTR(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSVWT,
//             VOL=(,RETAIN,,99,REF=*.ICTSVWT.TSVWT),LABEL=(50,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVTR  COPYDDN TSVTR SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSSTATS IMAGE COPY STEP
//*****************************************************************
//ICSTATS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVTR    DD  DSN=DB2S.IMAGCOPY.SYSTSVTR(0),
//             DISP=(OLD,KEEP)
//STATS    DD  DSN=DB2S.IMAGCOPY.SYSSTATS(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=TSVTR,
//             VOL=(,RETAIN,,99,REF=*.ICTSVTR.TSVTR),LABEL=(51,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSSTATS  COPYDDN STATS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSDDF IMAGE COPY STEP
//*****************************************************************
//ICDDF   EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//STATS    DD  DSN=DB2S.IMAGCOPY.SYSSTATS(0),
//             DISP=(OLD,KEEP)
//DDF      DD  DSN=DB2S.IMAGCOPY.SYSDDF(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=STATS,
//             VOL=(,RETAIN,,99,REF=*.ICSTATS.STATS),LABEL=(52,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSDDF    COPYDDN DDF SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSAUX IMAGE COPY STEP
//*****************************************************************
//ICTSAUX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//DDF      DD  DSN=DB2S.IMAGCOPY.SYSDDF(0),
//             DISP=(OLD,KEEP)
//TSAUX    DD  DSN=DB2S.IMAGCOPY.SYSTSAUX(+1),
//             DISP=(NEW,CATLG,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=AFF=DDF,
//             VOL=(,RETAIN,,99,REF=*.ICDDF.DDF),LABEL=(53,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSAUX  COPYDDN TSAUX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCON IMAGE COPY STEP
//*****************************************************************
//ICTSCON EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSAUX    DD  DSN=DB2S.IMAGCOPY.SYSTSAUX(0),
//             DISP=(OLD,KEEP)
//TSCON    DD  DSN=DB2S.IMAGCOPY.SYSTSCON(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSAUX,
//             VOL=(,RETAIN,,99,REF=*.ICTSAUX.TSAUX),LABEL=(54,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCON  COPYDDN TSCON SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDAT IMAGE COPY STEP
//*****************************************************************
//ICTSDAT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSCON    DD  DSN=DB2S.IMAGCOPY.SYSTSCON(0),
//             DISP=(OLD,KEEP)
//TSDAT    DD  DSN=DB2S.IMAGCOPY.SYSTSDAT(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSCON,
//             VOL=(,RETAIN,,99,REF=*.ICTSCON.TSCON),LABEL=(55,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDAT  COPYDDN TSDAT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDEP IMAGE COPY STEP
//*****************************************************************
//ICTSDEP EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDAT    DD  DSN=DB2S.IMAGCOPY.SYSTSDAT(0),
//             DISP=(OLD,KEEP)
//TSDEP    DD  DSN=DB2S.IMAGCOPY.SYSTSDEP(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSDAT,
//             VOL=(,RETAIN,,99,REF=*.ICTSDAT.TSDAT),LABEL=(56,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDEP  COPYDDN TSDEP SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSENV IMAGE COPY STEP
//*****************************************************************
//ICTSENV EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDEP    DD  DSN=DB2S.IMAGCOPY.SYSTSDEP(0),
//             DISP=(OLD,KEEP)
//TSENV    DD  DSN=DB2S.IMAGCOPY.SYSTSENV(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSDEP,
//             VOL=(,RETAIN,,99,REF=*.ICTSDEP.TSDEP),LABEL=(57,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSENV  COPYDDN TSENV SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSKYC IMAGE COPY STEP
//*****************************************************************
//ICTSKYC EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSENV    DD  DSN=DB2S.IMAGCOPY.SYSTSENV(0),
//             DISP=(OLD,KEEP)
//TSKYC    DD  DSN=DB2S.IMAGCOPY.SYSTSKYC(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSENV,
//             VOL=(,RETAIN,,99,REF=*.ICTSENV.TSENV),LABEL=(58,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSKYC  COPYDDN TSKYC SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPRM IMAGE COPY STEP
//*****************************************************************
//ICTSPRM EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSKYC    DD  DSN=DB2S.IMAGCOPY.SYSTSKYC(0),
//             DISP=(OLD,KEEP)
//TSPRM    DD  DSN=DB2S.IMAGCOPY.SYSTSPRM(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSKYC,
//             VOL=(,RETAIN,,99,REF=*.ICTSKYC.TSKYC),LABEL=(59,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPRM  COPYDDN TSPRM SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSRAU IMAGE COPY STEP
//*****************************************************************
//ICTSRAU EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPRM    DD  DSN=DB2S.IMAGCOPY.SYSTSPRM(0),
//             DISP=(OLD,KEEP)
//TSRAU    DD  DSN=DB2S.IMAGCOPY.SYSTSRAU(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSPRM,
//             VOL=(,RETAIN,,99,REF=*.ICTSPRM.TSPRM),LABEL=(60,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSRAU  COPYDDN TSRAU SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSROU IMAGE COPY STEP
//*****************************************************************
//ICTSROU EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSRAU    DD  DSN=DB2S.IMAGCOPY.SYSTSRAU(0),
//             DISP=(OLD,KEEP)
//TSROU    DD  DSN=DB2S.IMAGCOPY.SYSTSROU(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSRAU,
//             VOL=(,RETAIN,,99,REF=*.ICTSRAU.TSRAU),LABEL=(61,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSROU  COPYDDN TSROU SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSPLUXA IMAGE COPY STEP
//*****************************************************************
//ICPLUXA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSROU    DD  DSN=DB2S.IMAGCOPY.SYSTSROU(0),
//             DISP=(OLD,KEEP)
//PLUXA    DD  DSN=DB2S.IMAGCOPY.SYSPLUXA(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSROU,
//             VOL=(,RETAIN,,99,REF=*.ICTSROU.TSROU),LABEL=(62,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSPLUXA  COPYDDN PLUXA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSPLUXB IMAGE COPY STEP
//*****************************************************************
//ICPLUXB EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//PLUXA    DD  DSN=DB2S.IMAGCOPY.SYSPLUXA(0),
//             DISP=(OLD,KEEP)
//PLUXB    DD  DSN=DB2S.IMAGCOPY.SYSPLUXB(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=PLUXA,
//             VOL=(,RETAIN,,99,REF=*.ICPLUXA.PLUXA),LABEL=(63,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSPLUXB  COPYDDN PLUXB SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSCM IMAGE COPY STEP
//*****************************************************************
//ICTSSCM EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//PLUXB    DD  DSN=DB2S.IMAGCOPY.SYSPLUXB(0),
//             DISP=(OLD,KEEP)
//TSSCM    DD  DSN=DB2S.IMAGCOPY.SYSTSSCM(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=PLUXB,
//             VOL=(,RETAIN,,99,REF=*.ICPLUXB.PLUXB),LABEL=(64,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSCM  COPYDDN TSSCM SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTBC IMAGE COPY STEP
//*****************************************************************
//ICTSTBC EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSCM    DD  DSN=DB2S.IMAGCOPY.SYSTSSCM(0),
//             DISP=(OLD,KEEP)
//TSTBC    DD  DSN=DB2S.IMAGCOPY.SYSTSTBC(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSSCM,
//             VOL=(,RETAIN,,99,REF=*.ICTSSCM.TSSCM),LABEL=(65,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTBC  COPYDDN TSTBC SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTRG IMAGE COPY STEP
//*****************************************************************
//ICTSTRG EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTBC    DD  DSN=DB2S.IMAGCOPY.SYSTSTBC(0),
//             DISP=(OLD,KEEP)
//TSTRG    DD  DSN=DB2S.IMAGCOPY.SYSTSTRG(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSTBC,
//             VOL=(,RETAIN,,99,REF=*.ICTSTBC.TSTBC),LABEL=(66,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTRG  COPYDDN TSTRG SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTRT IMAGE COPY STEP
//*****************************************************************
//ICTSTRT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTRG    DD  DSN=DB2S.IMAGCOPY.SYSTSTRG(0),
//             DISP=(OLD,KEEP)
//TSTRT    DD  DSN=DB2S.IMAGCOPY.SYSTSTRT(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSTRG,
//             VOL=(,RETAIN,,99,REF=*.ICTSTRG.TSTRG),LABEL=(67,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTRT  COPYDDN TSTRT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSSEQ IMAGE COPY STEP
//*****************************************************************
//ICSEQ   EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTRT    DD  DSN=DB2S.IMAGCOPY.SYSTSTRT(0),
//             DISP=(OLD,KEEP)
//SEQ      DD  DSN=DB2S.IMAGCOPY.SYSSEQ(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSTRT,
//             VOL=(,RETAIN,,99,REF=*.ICTSTRT.TSTRT),LABEL=(68,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSSEQ    COPYDDN SEQ SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSSEQ2 IMAGE COPY STEP
//*****************************************************************
//ICSEQ2  EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//SEQ      DD  DSN=DB2S.IMAGCOPY.SYSSEQ(0),
//             DISP=(OLD,KEEP)
//SEQ2     DD  DSN=DB2S.IMAGCOPY.SYSSEQ2(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=SEQ,
//             VOL=(,RETAIN,,99,REF=*.ICSEQ.SEQ),LABEL=(69,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSSEQ2   COPYDDN SEQ2 SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSHIST IMAGE COPY STEP
//*****************************************************************
//ICHIST  EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//SEQ2     DD  DSN=DB2S.IMAGCOPY.SYSSEQ2(0),
//             DISP=(OLD,KEEP)
//HIST     DD  DSN=DB2S.IMAGCOPY.SYSHIST(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=SEQ2,
//             VOL=(,RETAIN,,99,REF=*.ICSEQ2.SEQ2),LABEL=(70,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSHIST   COPYDDN HIST SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSGRTNS IMAGE COPY STEP
//*****************************************************************
//ICGRTNS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//HIST     DD  DSN=DB2S.IMAGCOPY.SYSHIST(0),
//             DISP=(OLD,KEEP)
//GRTNS    DD  DSN=DB2S.IMAGCOPY.SYSGRTNS(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=HIST,
//             VOL=(,RETAIN,,99,REF=*.ICHIST.HIST),LABEL=(71,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSGRTNS  COPYDDN GRTNS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSJAUXA IMAGE COPY STEP
//*****************************************************************
//ICJAUXA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//GRTNS    DD  DSN=DB2S.IMAGCOPY.SYSGRTNS(0),
//             DISP=(OLD,KEEP)
//JAUXA    DD  DSN=DB2S.IMAGCOPY.SYSJAUXA(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=GRTNS,
//             VOL=(,RETAIN,,99,REF=*.ICGRTNS.GRTNS),LABEL=(72,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSJAUXA  COPYDDN JAUXA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSJAUXB IMAGE COPY STEP
//*****************************************************************
//ICJAUXB EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//JAUXA    DD  DSN=DB2S.IMAGCOPY.SYSJAUXA(0),
//             DISP=(OLD,KEEP)
//JAUXB    DD  DSN=DB2S.IMAGCOPY.SYSJAUXB(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=JAUXA,
//             VOL=(,RETAIN,,99,REF=*.ICJAUXA.JAUXA),LABEL=(73,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSJAUXB  COPYDDN JAUXB SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSJAVA IMAGE COPY STEP
//*****************************************************************
//ICJAVA  EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//JAUXB    DD  DSN=DB2S.IMAGCOPY.SYSJAUXB(0),
//             DISP=(OLD,KEEP)
//JAVA     DD  DSN=DB2S.IMAGCOPY.SYSJAVA(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=JAUXB,
//             VOL=(,RETAIN,,99,REF=*.ICJAUXB.JAUXB),LABEL=(74,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSJAVA   COPYDDN JAVA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSALTER IMAGE COPY STEP
//*****************************************************************
//ICALTER EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//JAVA     DD  DSN=DB2S.IMAGCOPY.SYSJAVA(0),
//             DISP=(OLD,KEEP)
//ALTER    DD  DSN=DB2S.IMAGCOPY.SYSALTER(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=JAVA,
//             VOL=(,RETAIN,,99,REF=*.ICJAVA.JAVA),LABEL=(75,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSALTER  COPYDDN ALTER SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSOBX IMAGE COPY STEP
//*****************************************************************
//ICTSOBX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//ALTER    DD  DSN=DB2S.IMAGCOPY.SYSALTER(0),
//             DISP=(OLD,KEEP)
//TSOBX    DD  DSN=DB2S.IMAGCOPY.SYSTSOBX(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=ALTER,
//             VOL=(,RETAIN,,99,REF=*.ICALTER.ALTER),LABEL=(76,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSOBX  COPYDDN TSOBX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSASC IMAGE COPY STEP
//*****************************************************************
//ICTSASC EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSOBX    DD  DSN=DB2S.IMAGCOPY.SYSTSOBX(0),
//             DISP=(OLD,KEEP)
//TSASC    DD  DSN=DB2S.IMAGCOPY.SYSTSASC(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSOBX,
//             VOL=(,RETAIN,,99,REF=*.ICTSOBX.TSOBX),LABEL=(77,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSASC  COPYDDN TSASC SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSEBCDC IMAGE COPY STEP
//*****************************************************************
//ICEBCDC EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSASC    DD  DSN=DB2S.IMAGCOPY.SYSTSASC(0),
//             DISP=(OLD,KEEP)
//EBCDC    DD  DSN=DB2S.IMAGCOPY.SYSEBCDC(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSASC,
//             VOL=(,RETAIN,,99,REF=*.ICTSASC.TSASC),LABEL=(78,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSEBCDC  COPYDDN EBCDC SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSUNI IMAGE COPY STEP
//*****************************************************************
//ICTSUNI EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//EBCDC    DD  DSN=DB2S.IMAGCOPY.SYSEBCDC(0),
//             DISP=(OLD,KEEP)
//TSUNI    DD  DSN=DB2S.IMAGCOPY.SYSTSUNI(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=EBCDC,
//             VOL=(,RETAIN,,99,REF=*.ICEBCDC.EBCDC),LABEL=(79,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSUNI  COPYDDN TSUNI SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSXML IMAGE COPY STEP
//*****************************************************************
//ICXML   EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSUNI    DD  DSN=DB2S.IMAGCOPY.SYSTSUNI(0),
//             DISP=(OLD,KEEP)
//XML      DD  DSN=DB2S.IMAGCOPY.SYSXML(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSUNI,
//             VOL=(,RETAIN,,99,REF=*.ICTSUNI.TSUNI),LABEL=(80,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSXML    COPYDDN XML SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSXTM IMAGE COPY STEP
//*****************************************************************
//ICTSXTM EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//XML      DD  DSN=DB2S.IMAGCOPY.SYSXML(0),
//             DISP=(OLD,KEEP)
//TSXTM    DD  DSN=DB2S.IMAGCOPY.SYSTSXTM(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=XML,
//             VOL=(,RETAIN,,99,REF=*.ICXML.XML),LABEL=(81,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSXTM  COPYDDN TSXTM SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSXTS IMAGE COPY STEP
//*****************************************************************
//ICTSXTS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSXTM    DD  DSN=DB2S.IMAGCOPY.SYSTSXTM(0),
//             DISP=(OLD,KEEP)
//TSXTS    DD  DSN=DB2S.IMAGCOPY.SYSTSXTS(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSXTM,
//             VOL=(,RETAIN,,99,REF=*.ICTSXTM.TSXTM),LABEL=(82,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSXTS  COPYDDN TSXTS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTARG IMAGE COPY STEP
//*****************************************************************
//ICTARG  EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSXTS    DD  DSN=DB2S.IMAGCOPY.SYSTSXTS(0),
//             DISP=(OLD,KEEP)
//TARG     DD  DSN=DB2S.IMAGCOPY.SYSTARG(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSXTS,
//             VOL=(,RETAIN,,99,REF=*.ICTSXTS.TSXTS),LABEL=(83,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTARG   COPYDDN TARG SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSROLES IMAGE COPY STEP
//*****************************************************************
//ICROLES EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TARG     DD  DSN=DB2S.IMAGCOPY.SYSTARG(0),
//             DISP=(OLD,KEEP)
//ROLES    DD  DSN=DB2S.IMAGCOPY.SYSROLES(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TARG,
//             VOL=(,RETAIN,,99,REF=*.ICTARG.TARG),LABEL=(84,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSROLES  COPYDDN ROLES SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSCONTX IMAGE COPY STEP
//*****************************************************************
//ICCONTX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//ROLES    DD  DSN=DB2S.IMAGCOPY.SYSROLES(0),
//             DISP=(OLD,KEEP)
//CONTX    DD  DSN=DB2S.IMAGCOPY.SYSCONTX(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=ROLES,
//             VOL=(,RETAIN,,99,REF=*.ICROLES.ROLES),LABEL=(85,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSCONTX  COPYDDN CONTX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTSS IMAGE COPY STEP
//*****************************************************************
//ICTSTSS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//CONTX    DD  DSN=DB2S.IMAGCOPY.SYSCONTX(0),
//             DISP=(OLD,KEEP)
//TSTSS    DD  DSN=DB2S.IMAGCOPY.SYSTSTSS(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=CONTX,
//             VOL=(,RETAIN,,99,REF=*.ICCONTX.CONTX),LABEL=(86,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTSS  COPYDDN TSTSS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSISS IMAGE COPY STEP
//*****************************************************************
//ICTSISS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTSS    DD  DSN=DB2S.IMAGCOPY.SYSTSTSS(0),
//             DISP=(OLD,KEEP)
//TSISS    DD  DSN=DB2S.IMAGCOPY.SYSTSISS(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSTSS,
//             VOL=(,RETAIN,,99,REF=*.ICTSTSS.TSTSS),LABEL=(87,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSISS  COPYDDN TSISS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSADT IMAGE COPY STEP
//*****************************************************************
//ICTSADT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSISS    DD  DSN=DB2S.IMAGCOPY.SYSTSISS(0),
//             DISP=(OLD,KEEP)
//TSADT    DD  DSN=DB2S.IMAGCOPY.SYSTSADT(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSISS,
//             VOL=(,RETAIN,,99,REF=*.ICTSISS.TSISS),LABEL=(88,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSADT  COPYDDN TSADT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCTL IMAGE COPY STEP
//*****************************************************************
//ICTSCTL EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSADT    DD  DSN=DB2S.IMAGCOPY.SYSTSADT(0),
//             DISP=(OLD,KEEP)
//TSCTL    DD  DSN=DB2S.IMAGCOPY.SYSTSCTL(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSADT,
//             VOL=(,RETAIN,,99,REF=*.ICTSADT.TSADT),LABEL=(89,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCTL  COPYDDN TSCTL SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCTR IMAGE COPY STEP
//*****************************************************************
//ICTSCTR EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSCTL    DD  DSN=DB2S.IMAGCOPY.SYSTSCTL(0),
//             DISP=(OLD,KEEP)
//TSCTR    DD  DSN=DB2S.IMAGCOPY.SYSTSCTR,
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSCTL,
//             VOL=(,RETAIN,,99,REF=*.ICTSCTL.TSCTL),LABEL=(90,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCTR  COPYDDN TSCTR SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCTD IMAGE COPY STEP
//*****************************************************************
//ICTSCTD EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSCTR    DD  DSN=DB2S.IMAGCOPY.SYSTSCTR(0),
//             DISP=(OLD,KEEP)
//TSCTD    DD  DSN=DB2S.IMAGCOPY.SYSTSCTD(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSCTR,
//             VOL=(,RETAIN,,99,REF=*.ICTSCTR.TSCTR),LABEL=(91,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCTD  COPYDDN TSCTD SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPEN IMAGE COPY STEP
//*****************************************************************
//ICTSPEN EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSCTD    DD  DSN=DB2S.IMAGCOPY.SYSTSCTD(0),
//             DISP=(OLD,KEEP)
//TSPEN    DD  DSN=DB2S.IMAGCOPY.SYSTSPEN(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSCTD,
//             VOL=(,RETAIN,,99,REF=*.ICTSCTD.TSCTD),LABEL=(92,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPEN  COPYDDN TSPEN SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPDT IMAGE COPY STEP
//*****************************************************************
//ICTSPDT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPEN    DD  DSN=DB2S.IMAGCOPY.SYSTSPEN(0),
//             DISP=(OLD,KEEP)
//TSPDT    DD  DSN=DB2S.IMAGCOPY.SYSTSPDT(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSPEN,
//             VOL=(,RETAIN,,99,REF=*.ICTSPEN.TSPEN),LABEL=(93,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPDT  COPYDDN TSPDT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPDO IMAGE COPY STEP
//*****************************************************************
//ICTSPDO EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPDT    DD  DSN=DB2S.IMAGCOPY.SYSTSPDT(0),
//             DISP=(OLD,KEEP)
//TSPDO    DD  DSN=DB2S.IMAGCOPY.SYSTSPDO(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSPDT,
//             VOL=(,RETAIN,,99,REF=*.ICTSPDT.TSPDT),LABEL=(94,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPDO  COPYDDN TSPDO SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTPF IMAGE COPY STEP
//*****************************************************************
//ICTSTPF EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPDO    DD  DSN=DB2S.IMAGCOPY.SYSTSPDO(0),
//             DISP=(OLD,KEEP)
//TSTPF    DD  DSN=DB2S.IMAGCOPY.SYSTSTPF(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSPDO,
//             VOL=(,RETAIN,,99,REF=*.ICTSPDO.TSPDO),LABEL=(95,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTPF  COPYDDN TSTPF SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPTX IMAGE COPY STEP
//*****************************************************************
//ICTSPTX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTPF    DD  DSN=DB2S.IMAGCOPY.SYSTSTPF(0),
//             DISP=(OLD,KEEP)
//TSPTX    DD  DSN=DB2S.IMAGCOPY.SYSTSPTX(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSTPF,
//             VOL=(,RETAIN,,99,REF=*.ICTSTPF.TSTPF),LABEL=(96,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPTX  COPYDDN TSPTX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSATW IMAGE COPY STEP
//*****************************************************************
//ICTSATW EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPTX    DD  DSN=DB2S.IMAGCOPY.SYSTSPTX(0),
//             DISP=(OLD,KEEP)
//TSATW    DD  DSN=DB2S.IMAGCOPY.SYSTSATW(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSPTX,
//             VOL=(,RETAIN,,99,REF=*.ICTSPTX.TSPTX),LABEL=(97,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSATW  COPYDDN TSATW SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPRH IMAGE COPY STEP
//*****************************************************************
//ICTSPRH EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSATW    DD  DSN=DB2S.IMAGCOPY.SYSTSATW(0),
//             DISP=(OLD,KEEP)
//TSPRH    DD  DSN=DB2S.IMAGCOPY.SYSTSPRH(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSATW,
//             VOL=(,RETAIN,,99,REF=*.ICTSATW.TSATW),LABEL=(98,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPRH  COPYDDN TSPRH SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPHX IMAGE COPY STEP
//*****************************************************************
//ICTSPHX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPRH    DD  DSN=DB2S.IMAGCOPY.SYSTSPRH(0),
//             DISP=(OLD,KEEP)
//TSPHX    DD  DSN=DB2S.IMAGCOPY.SYSTSPHX(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSPRH,
//             VOL=(,RETAIN,,99,REF=*.ICTSPRH.TSPRH),LABEL=(99,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPHX  COPYDDN TSPHX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSATS IMAGE COPY STEP
//*****************************************************************
//ICTSATS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPHX    DD  DSN=DB2S.IMAGCOPY.SYSTSPHX(0),
//             DISP=(OLD,KEEP)
//TSATS    DD  DSN=DB2S.IMAGCOPY.SYSTSATS(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSPHX,
//             VOL=(,RETAIN,,99,REF=*.ICTSPHX.TSPHX),LABEL=(100,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSATS  COPYDDN TSATS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSATX IMAGE COPY STEP
//*****************************************************************
//ICTSATX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSATS    DD  DSN=DB2S.IMAGCOPY.SYSTSATS(0),
//             DISP=(OLD,KEEP)
//TSATX    DD  DSN=DB2S.IMAGCOPY.SYSTSATX(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSATS,
//             VOL=(,RETAIN,,99,REF=*.ICTSATS.TSATS),LABEL=(101,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSATX  COPYDDN TSATX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSQRA IMAGE COPY STEP
//*****************************************************************
//ICTSQRA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSATX    DD  DSN=DB2S.IMAGCOPY.SYSTSATX(0),
//             DISP=(OLD,KEEP)
//TSQRA    DD  DSN=DB2S.IMAGCOPY.SYSTSQRA(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSATX,
//             VOL=(,RETAIN,,99,REF=*.ICTSATX.TSATX),LABEL=(102,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSQRA  COPYDDN TSQRA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPKC IMAGE COPY STEP
//*****************************************************************
//ICTSPKC EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSQRA    DD  DSN=DB2S.IMAGCOPY.SYSTSQRA(0),
//             DISP=(OLD,KEEP)
//TSPKC    DD  DSN=DB2S.IMAGCOPY.SYSTSPKC(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSQRA,
//             VOL=(,RETAIN,,99,REF=*.ICTSQRA.TSQRA),LABEL=(103,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPKC  COPYDDN TSPKC SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSQRY IMAGE COPY STEP
//*****************************************************************
//ICTSQRY EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPKC    DD  DSN=DB2S.IMAGCOPY.SYSTSPKC(0),
//             DISP=(OLD,KEEP)
//TSQRY    DD  DSN=DB2S.IMAGCOPY.SYSTSQRY(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSPKC,
//             VOL=(,RETAIN,,99,REF=*.ICTSPKC.TSPKC),LABEL=(104,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSQRY  COPYDDN TSQRY SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSQRP IMAGE COPY STEP
//*****************************************************************
//ICTSQRP EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSQRY    DD  DSN=DB2S.IMAGCOPY.SYSTSQRY(0),
//             DISP=(OLD,KEEP)
//TSQRP    DD  DSN=DB2S.IMAGCOPY.SYSTSQRP(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSQRY,
//             VOL=(,RETAIN,,99,REF=*.ICTSQRY.TSQRY),LABEL=(105,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSQRP  COPYDDN TSQRP SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSQRO IMAGE COPY STEP
//*****************************************************************
//ICTSQRO EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSQRP    DD  DSN=DB2S.IMAGCOPY.SYSTSQRP(0),
//             DISP=(OLD,KEEP)
//TSQRO    DD  DSN=DB2S.IMAGCOPY.SYSTSQRO(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSQRP,
//             VOL=(,RETAIN,,99,REF=*.ICTSQRP.TSQRP),LABEL=(106,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSQRO  COPYDDN TSQRO SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVAR IMAGE COPY STEP
//*****************************************************************
//ICTSVAR EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSQRO    DD  DSN=DB2S.IMAGCOPY.SYSTSQRO(0),
//             DISP=(OLD,KEEP)
//TSVAR    DD  DSN=DB2S.IMAGCOPY.SYSTSVAR(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSQRO,
//             VOL=(,RETAIN,,99,REF=*.ICTSQRO.TSQRO),LABEL=(107,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVAR  COPYDDN TSVAR SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVAT IMAGE COPY STEP
//*****************************************************************
//ICTSVAT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVAR    DD  DSN=DB2S.IMAGCOPY.SYSTSVAR(0),
//             DISP=(OLD,KEEP)
//TSVAT    DD  DSN=DB2S.IMAGCOPY.SYSTSVAT(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSVAR,
//             VOL=(,RETAIN,,99,REF=*.ICTSVAR.TSVAR),LABEL=(108,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVAT  COPYDDN TSVAT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVAD IMAGE COPY STEP
//*****************************************************************
//ICTSVAD EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVAT    DD  DSN=DB2S.IMAGCOPY.SYSTSVAT(0),
//             DISP=(OLD,KEEP)
//TSVAD    DD  DSN=DB2S.IMAGCOPY.SYSTSVAD(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSVAT,
//             VOL=(,RETAIN,,99,REF=*.ICTSVAT.TSVAT),LABEL=(109,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVAD  COPYDDN TSVAD SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVAU IMAGE COPY STEP
//*****************************************************************
//ICTSVAU EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVAD    DD  DSN=DB2S.IMAGCOPY.SYSTSVAD(0),
//             DISP=(OLD,KEEP)
//TSVAU    DD  DSN=DB2S.IMAGCOPY.SYSTSVAU(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSVAD,
//             VOL=(,RETAIN,,99,REF=*.ICTSVAD.TSVAD),LABEL=(110,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVAU  COPYDDN TSVAU SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSQRE IMAGE COPY STEP
//*****************************************************************
//ICTSQRE EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVAU    DD  DSN=DB2S.IMAGCOPY.SYSTSVAU(0),
//             DISP=(OLD,KEEP)
//TSQRE    DD  DSN=DB2S.IMAGCOPY.SYSTSQRE(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSVAU,
//             VOL=(,RETAIN,,99,REF=*.ICTSVAU.TSVAU),LABEL=(111,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSQRE  COPYDDN TSQRE SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSQRS IMAGE COPY STEP
//*****************************************************************
//ICTSQRS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSQRE    DD  DSN=DB2S.IMAGCOPY.SYSTSQRE(0),
//             DISP=(OLD,KEEP)
//TSQRS    DD  DSN=DB2S.IMAGCOPY.SYSTSQRS(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSQRE,
//             VOL=(,RETAIN,,99,REF=*.ICTSQRE.TSQRE),LABEL=(112,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSQRS  COPYDDN TSQRS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSIXC IMAGE COPY STEP
//*****************************************************************
//ICTSIXC EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSQRS    DD  DSN=DB2S.IMAGCOPY.SYSTSQRS(0),
//             DISP=(OLD,KEEP)
//TSIXC    DD  DSN=DB2S.IMAGCOPY.SYSTSIXC(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSQRS,
//             VOL=(,RETAIN,,99,REF=*.ICTSQRS.TSQRS),LABEL=(113,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSIXC  COPYDDN TSIXC SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSFB IMAGE COPY STEP
//*****************************************************************
//ICTSSFB EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSIXC    DD  DSN=DB2S.IMAGCOPY.SYSTSIXC(0),
//             DISP=(OLD,KEEP)
//TSSFB    DD  DSN=DB2S.IMAGCOPY.SYSTSSFB(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSIXC,
//             VOL=(,RETAIN,,99,REF=*.ICTSIXC.TSIXC),LABEL=(114,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSFB  COPYDDN TSSFB SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDQY IMAGE COPY STEP
//*****************************************************************
//ICTSDQY EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSFB    DD  DSN=DB2S.IMAGCOPY.SYSTSSFB(0),
//             DISP=(OLD,KEEP)
//TSDQY    DD  DSN=DB2S.IMAGCOPY.SYSTSDQY(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSSFB,
//             VOL=(,RETAIN,,99,REF=*.ICTSSFB.TSSFB),LABEL=(115,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDQY  COPYDDN TSDQY SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDQT IMAGE COPY STEP
//*****************************************************************
//ICTSDQT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDQY    DD  DSN=DB2S.IMAGCOPY.SYSTSDQY(0),
//             DISP=(OLD,KEEP)
//TSDQT    DD  DSN=DB2S.IMAGCOPY.SYSTSDQT(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSDQY,
//             VOL=(,RETAIN,,99,REF=*.ICTSDQY.TSDQY),LABEL=(116,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDQT  COPYDDN TSDQT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDQS IMAGE COPY STEP
//*****************************************************************
//ICTSDQS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDQT    DD  DSN=DB2S.IMAGCOPY.SYSTSDQT(0),
//             DISP=(OLD,KEEP)
//TSDQS    DD  DSN=DB2S.IMAGCOPY.SYSTSDQS(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSDQT,
//             VOL=(,RETAIN,,99,REF=*.ICTSDQT.TSDQT),LABEL=(117,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDQS  COPYDDN TSDQS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDQE IMAGE COPY STEP
//*****************************************************************
//ICTSDQE EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDQS    DD  DSN=DB2S.IMAGCOPY.SYSTSDQS(0),
//             DISP=(OLD,KEEP)
//TSDQE    DD  DSN=DB2S.IMAGCOPY.SYSTSDQE(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSDQS,
//             VOL=(,RETAIN,,99,REF=*.ICTSDQS.TSDQS),LABEL=(118,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDQE  COPYDDN TSDQE SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDQH IMAGE COPY STEP
//*****************************************************************
//ICTSDQH EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDQE    DD  DSN=DB2S.IMAGCOPY.SYSTSDQE(0),
//             DISP=(OLD,KEEP)
//TSDQH    DD  DSN=DB2S.IMAGCOPY.SYSTSDQH(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSDQE,
//             VOL=(,RETAIN,,99,REF=*.ICTSDQE.TSDQE),LABEL=(119,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDQH  COPYDDN TSDQH SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDQO IMAGE COPY STEP
//*****************************************************************
//ICTSDQO EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDQH    DD  DSN=DB2S.IMAGCOPY.SYSTSDQH(0),
//             DISP=(OLD,KEEP)
//TSDQO    DD  DSN=DB2S.IMAGCOPY.SYSTSDQO(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSDQH,
//             VOL=(,RETAIN,,99,REF=*.ICTSDQH.TSDQH),LABEL=(120,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDQO  COPYDDN TSDQO SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDQD IMAGE COPY STEP
//*****************************************************************
//ICTSDQD EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDQO    DD  DSN=DB2S.IMAGCOPY.SYSTSDQO(0),
//             DISP=(OLD,KEEP)
//TSDQD    DD  DSN=DB2S.IMAGCOPY.SYSTSDQD(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSDQO,
//             VOL=(,RETAIN,,99,REF=*.ICTSDQO.TSDQO),LABEL=(121,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDQD  COPYDDN TSDQD SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSICO IMAGE COPY STEP
//*****************************************************************
//ICTSICO EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDQD    DD  DSN=DB2S.IMAGCOPY.SYSTSDQD(0),
//             DISP=(OLD,KEEP)
//TSICO    DD  DSN=DB2S.IMAGCOPY.SYSTSICO(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSDQD,
//             VOL=(,RETAIN,,99,REF=*.ICTSDQD.TSDQD),LABEL=(122,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSICO  COPYDDN TSICO SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSES IMAGE COPY STEP
//*****************************************************************
//ICTSSES EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSICO    DD  DSN=DB2S.IMAGCOPY.SYSTSICO(0),
//             DISP=(OLD,KEEP)
//TSSES    DD  DSN=DB2S.IMAGCOPY.SYSTSSES(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSICO,
//             VOL=(,RETAIN,,99,REF=*.ICTSICO.TSICO),LABEL=(123,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSES  COPYDDN TSSES SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSNL IMAGE COPY STEP
//*****************************************************************
//ICTSSNL EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSES    DD  DSN=DB2S.IMAGCOPY.SYSTSSES(0),
//             DISP=(OLD,KEEP)
//TSSNL    DD  DSN=DB2S.IMAGCOPY.SYSTSSNL(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSSES,
//             VOL=(,RETAIN,,99,REF=*.ICTSSES.TSSES),LABEL=(124,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSNL  COPYDDN TSSNL SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSNX IMAGE COPY STEP
//*****************************************************************
//ICTSSNX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSNL    DD  DSN=DB2S.IMAGCOPY.SYSTSSNL(0),
//             DISP=(OLD,KEEP)
//TSSNX    DD  DSN=DB2S.IMAGCOPY.SYSTSSNX(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSSNL,
//             VOL=(,RETAIN,,99,REF=*.ICTSSNL.TSSNL),LABEL=(125,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSNX  COPYDDN TSSNX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSXL IMAGE COPY STEP
//*****************************************************************
//ICTSSXL EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSNX    DD  DSN=DB2S.IMAGCOPY.SYSTSSNX(0),
//             DISP=(OLD,KEEP)
//TSSXL    DD  DSN=DB2S.IMAGCOPY.SYSTSSXL(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSSNX,
//             VOL=(,RETAIN,,99,REF=*.ICTSSNX.TSSNX),LABEL=(126,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSXL  COPYDDN TSSXL SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSTA IMAGE COPY STEP
//*****************************************************************
//ICTSSTA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSXL    DD  DSN=DB2S.IMAGCOPY.SYSTSSXL(0),
//             DISP=(OLD,KEEP)
//TSSTA    DD  DSN=DB2S.IMAGCOPY.SYSTSSTA(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSSXL,
//             VOL=(,RETAIN,,99,REF=*.ICTSSXL.TSSXL),LABEL=(127,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSTA  COPYDDN TSSTA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSLVH IMAGE COPY STEP
//*****************************************************************
//ICTSLVH EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSTA    DD  DSN=DB2S.IMAGCOPY.SYSTSSTA(0),
//             DISP=(OLD,KEEP)
//TSLVH    DD  DSN=DB2S.IMAGCOPY.SYSTSLVH(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSSTA,
//             VOL=(,RETAIN,,99,REF=*.ICTSSTA.TSSTA),LABEL=(128,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSLVH  COPYDDN TSLVH SHRLEVEL(CHANGE)
//* //*************************************************************
//* //* SYSTSISH IMAGE COPY STEP
//* //*************************************************************
//* //ICTSISH EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//* //             COND=(4,LT)
//* //TSLVH    DD  DSN=DB2S.IMAGCOPY.SYSTSLVH(0),
//* //             DISP=(OLD,KEEP)
//* //TSISH    DD  DSN=DB2S.IMAGCOPY.SYSTSISH(+1),
//* //             DISP=(NEW,CATLG,DELETE),
//* //             UNIT=AFF=TSLVH,
//* //             VOL=(,RETAIN,,99,REF=*.ICTSLVH.TSLVH),
//* //             LABEL=(129,SL)
//* //SYSPRINT DD  SYSOUT=*
//* //SYSUDUMP DD  SYSOUT=*
//* //SYSIN    DD  *
//* COPY TABLESPACE DSNDB06.SYSTSISH COPYDDN TSISH
//* SHRLEVEL(CHANGE)
//* //*************************************************************
//* //* SYSTSTSH IMAGE COPY STEP
//* //*************************************************************
//* //ICTSTSH EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//* //             COND=(4,LT)
//* //TSISH    DD  DSN=DB2S.IMAGCOPY.SYSTSISH(0),
//* //             DISP=(OLD,KEEP)
//* //TSTSH    DD  DSN=DB2S.IMAGCOPY.SYSTSTSH(+1),
//* //             DISP=(NEW,CATLG,DELETE),
//* //             UNIT=AFF=TSISH,
//* //             VOL=(,RETAIN,,99,REF=*.ICTSISH.TSISH),
//* //             LABEL=(130,SL)
//* //SYSPRINT DD  SYSOUT=*
//* //SYSUDUMP DD  SYSOUT=*
//* //SYSIN    DD  *
//* COPY TABLESPACE DSNDB06.SYSTSTSH  COPYDDN TSTSH
//* SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSLGRNX IMAGE COPY STEP
//* -> SYSLGRNX IS ALWAYS COPIED NEXT TO LAST§
//*****************************************************************
//ICLGRNX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSLVH    DD  DSN=DB2S.IMAGCOPY.SYSTSLVH(0),
//             DISP=(OLD,KEEP)
//LGRNX    DD  DSN=DB2S.IMAGCOPY.SYSLGRNX(+1),
//             DISP=(NEW,CATLG,DELETE),
//             UNIT=AFF=TSLVH,
//             VOL=(,RETAIN,,99,REF=*.ICTSLVH.TSLVH),LABEL=(129,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB01.SYSLGRNX  COPYDDN LGRNX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCPY IMAGE COPY STEP
//* -> SYSTSCPY IS ALWAYS IMAGE COPIED LAST§
//*****************************************************************
//ICTSCPY EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//LGRNX    DD  DSN=DB2S.IMAGCOPY.SYSLGRNX(0),
//             DISP=(OLD,KEEP)
//TSCPY    DD  DSN=DB2S.IMAGCOPY.SYSTSCPY(+1),
//             DISP=(NEW,KEEP,DELETE),
//             UNIT=AFF=LGRNX,
//             VOL=(,RETAIN,,99,REF=*.ICLGRNX.LGRNX),LABEL=(130,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCPY  COPYDDN TSCPY SHRLEVEL(CHANGE)

./ ADD NAME=DSNTIJI1
//DSNTIJIC  JOB ACCT£,                                                  00010000
//             DB2,                                                     00020000
//             RESTART=ICUTILX,
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040000
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050000
//      SYS019.LP2.DB2,                                                 00060000
//      SYS1.PROCLIB.&SYSNAME,                                          00061000
//      SYS1.SACBCNTL)                                                  00070000
//*********************************************************************
//* JOB NAME = DSNTIJIC
//*
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM
//*
//*    Licensed Materials - Property of IBM
//*    5650-DB2
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 12
//*
//* FUNCTION = Create image copies of all the system catalog tables
//*
//* NOTES =
//*
//*   This job creates image copies of the DB2 directory and catalog
//*   on DISK using the LISTDEF and TEMPLATE facilities:
//*
//*   Job step ICDUTILX
//*   -----------------
//*     The SYSUTILX directory space is copied separately by the first
//*     job step, ICDUTILX, because it cannot be specified using the
//*     LISTDEF facility.  Also, for recoverability, SYSUTILX must
//*     always be copied first.
//*
//*   Job step ICDMAIN
//*   ----------------
//*     Most other DB2 directory and catalog table spaces are copied by
//*     the second job step, which uses a parallel mode of 10 to reduce
//*     processing time.
//*
//*   Job step ICDLGRNX
//*   -----------------
//*     For recoverability, SYSLGRNX must be copied after most other
//*     table spaces but before SYSTSCPY.
//*
//*   Job step ICDTSCPY
//*   -----------------
//*     For recoverability, SYSTSCPY must be copied after SYSLGRNX.
//*
//*   ATTENTION:
//*     Following these four job steps are numerous commented-out job
//*     steps for creating sequential image copies of the db2 directory
//*     and catalog on tape.
//*
//*     The tape image copy for each table space is done in a separate
//*     step so that the job will execute successfully when an image
//*     copy output data set spans more than one tape volume.  Each
//*     step's data set is passed to the next step so that a tape will
//*     not have to be demounted and remounted after every step.
//*     However, we also recommend that the image copy tapes be mounted
//*     as private volumes to prevent this problem.
//*
//*     If you prefer to create image copy data sets on TAPE, do the
//*     following:
//*
//*     1) Delete the four ICDxxxxx job steps.
//*     2) Uncomment the job steps for tape image copies.
//*     3) Follow TAPE IMAGE COPIES FOR DEFINE NO OBJECTS instructions
//*
//*     TAPE IMAGE COPIES FOR DEFINE NO OBJECTS
//*
//*     If any of the following DEFINE NO objects exist then uncomment
//*     the noted job step(s):
//*
//*           SYSTSISH   - ICTSISH job step
//*           SYSTSTSH   - ICTSTSH job step
//*
//*     For each uncommented DEFINE NO job step, ensure that the
//*     following JCL statements are correct for steps ICLGRNX,
//*     ICTSCPY and the uncommented step(s):
//*
//*        a) The image copy data set name used on the second DD
//*           card of the previous uncommented step is named on
//*           the first DD card.
//*        b) The UNIT and backwards reference fields properly
//*           reflect the previous uncommented step's step name,
//*           DD card name, etc.
//*        c) The data-set-sequence-number on the LABEL parameter is one
//*           higher than that of the previous uncommented step.
//*
//*   If a failure occurs in one step, fix the problem and rerun the
//*   complete job from the top.
//*
//*   If you are remigrating, you will need to either:
//*
//*   1)  Change the names of the data sets in which the
//*       new image copies will reside (migration image
//*       copies are using the current data set names) or
//*   2)  Run the MODIFY Utility to remove the migration
//*       image copies
//*
//*   The SYSUTILX COPY step must be the first step in the job,
//*   the SYSLGRNX COPY step must be the next to last step in the job
//*   and the SYSTSCPY COPY step must be the last step in the job.
//*
//* CHANGE ACTIVITY =
//*   01/07/2016 Convert job to perform COPY to disk and  182361 s15572
//*              to use TEMPLATEs and LISTDEFs to get
//*              Utilities parallelism.  The traditional
//*              sequential tape COPY job steps are
//*              preserved below, commented out.
//*   07/01/2016 Support for CD catalog updates                  184402
//*              Add SYSTSLVH + DSNLVX01 + DSNLVX02
//*   09/05/2019 Update SYSCOPY TEMPLATE name spec              PH12364
//*   11/13/2020 Handle DEFINE NO table spaces SYSTSISH and     PH22875
//*              SYSTSTSH
//*
//*********************************************************************/
//JOBLIB   DD  DISP=SHR,
//             DSN=SYS2.DB2.SDSNLOAD
//*********************************************************************
//* SYSUTILX IMAGE COPY STEP
//*********************************************************************
//ICDUTILX EXEC PGM=DSNUTILB,REGION=0M,
//             PARM='DB2S,IMAGCOPY.UTILX'
//SYSPRINT  DD SYSOUT=*
//SYSABEND  DD SYSOUT=*
//UTPRINT   DD SYSOUT=*
//SYSUT1    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSUT2    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SORTOUT   DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSIN     DD *
   TEMPLATE SYSCOPY
            DSN(DB2S.BACK.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY TABLESPACE DSNDB01.SYSUTILX  SHRLEVEL(CHANGE)
//*********************************************************************
//* MAIN IMAGE COPY STEP FOR DB2 CATALOG AND DIRECTORY TABLE SPACES
//*********************************************************************
//ICDMAIN EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY.MAIN',
//             REGION=0M,COND=(4,LT)
//SYSPRINT  DD SYSOUT=*
//SYSABEND  DD SYSOUT=*
//UTPRINT   DD SYSOUT=*
//SYSUT1    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSUT2    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SORTOUT   DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSIN     DD *
   LISTDEF TSP_LIST
           INCLUDE TABLESPACE  DSNDB01.DBD01
           INCLUDE TABLESPACE  DSNDB01.SCT02
           INCLUDE TABLESPACE  DSNDB01.SPT01
           INCLUDE TABLESPACE  DSNDB01.SYSDBDXA
           INCLUDE TABLESPACE  DSNDB01.SYSSPUXA
           INCLUDE TABLESPACE  DSNDB01.SYSSPUXB
           INCLUDE TABLESPACE  DSNDB06.SYSTSFAU
           INCLUDE TABLESPACE  DSNDB06.SYSTSCOL
           INCLUDE TABLESPACE  DSNDB06.SYSTSTSP
           INCLUDE TABLESPACE  DSNDB06.SYSTSTPT
           INCLUDE TABLESPACE  DSNDB06.SYSTSTAB
           INCLUDE TABLESPACE  DSNDB06.SYSTSIXS
           INCLUDE TABLESPACE  DSNDB06.SYSTSIXT
           INCLUDE TABLESPACE  DSNDB06.SYSTSIXR
           INCLUDE TABLESPACE  DSNDB06.SYSTSIPT
           INCLUDE TABLESPACE  DSNDB06.SYSTSREL
           INCLUDE TABLESPACE  DSNDB06.SYSTSFOR
           INCLUDE TABLESPACE  DSNDB06.SYSTSSYN
           INCLUDE TABLESPACE  DSNDB06.SYSTSFLD
           INCLUDE TABLESPACE  DSNDB06.SYSTSTAU
           INCLUDE TABLESPACE  DSNDB06.SYSTSKEY
           INCLUDE TABLESPACE  DSNDB06.SYSTSDBA
           INCLUDE TABLESPACE  DSNDB06.SYSTSDBU
           INCLUDE TABLESPACE  DSNDB06.SYSGPAUT
           INCLUDE TABLESPACE  DSNDB06.SYSTSSTG
           INCLUDE TABLESPACE  DSNDB06.SYSTSVOL
           INCLUDE TABLESPACE  DSNDB06.SYSTSPLN
           INCLUDE TABLESPACE  DSNDB06.SYSTSPLA
           INCLUDE TABLESPACE  DSNDB06.SYSTSDBR
           INCLUDE TABLESPACE  DSNDB06.SYSTSPLD
           INCLUDE TABLESPACE  DSNDB06.SYSTSSTM
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKL
           INCLUDE TABLESPACE  DSNDB06.SYSTSPLY
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKG
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKS
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKX
           INCLUDE TABLESPACE  DSNDB06.SYSTSPVR
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKY
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKD
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKA
           INCLUDE TABLESPACE  DSNDB06.SYSUSER
           INCLUDE TABLESPACE  DSNDB06.SYSTSCKS
           INCLUDE TABLESPACE  DSNDB06.SYSTSCHX
           INCLUDE TABLESPACE  DSNDB06.SYSTSCKD
           INCLUDE TABLESPACE  DSNDB06.SYSTSSRG
           INCLUDE TABLESPACE  DSNDB06.SYSTSVEW
           INCLUDE TABLESPACE  DSNDB06.SYSTSVWD
           INCLUDE TABLESPACE  DSNDB06.SYSTSVWT
           INCLUDE TABLESPACE  DSNDB06.SYSTSVTR
           INCLUDE TABLESPACE  DSNDB06.SYSSTATS
           INCLUDE TABLESPACE  DSNDB06.SYSDDF
           INCLUDE TABLESPACE  DSNDB06.SYSTSAUX
           INCLUDE TABLESPACE  DSNDB06.SYSTSCON
           INCLUDE TABLESPACE  DSNDB06.SYSTSDAT
           INCLUDE TABLESPACE  DSNDB06.SYSTSDEP
           INCLUDE TABLESPACE  DSNDB06.SYSTSENV
           INCLUDE TABLESPACE  DSNDB06.SYSTSKYC
           INCLUDE TABLESPACE  DSNDB06.SYSTSPRM
           INCLUDE TABLESPACE  DSNDB06.SYSTSRAU
           INCLUDE TABLESPACE  DSNDB06.SYSTSROU
           INCLUDE TABLESPACE  DSNDB06.SYSPLUXA
           INCLUDE TABLESPACE  DSNDB06.SYSPLUXB
           INCLUDE TABLESPACE  DSNDB06.SYSTSSCM
           INCLUDE TABLESPACE  DSNDB06.SYSTSTBC
           INCLUDE TABLESPACE  DSNDB06.SYSTSTRG
           INCLUDE TABLESPACE  DSNDB06.SYSTSTRT
           INCLUDE TABLESPACE  DSNDB06.SYSSEQ
           INCLUDE TABLESPACE  DSNDB06.SYSSEQ2
           INCLUDE TABLESPACE  DSNDB06.SYSHIST
           INCLUDE TABLESPACE  DSNDB06.SYSGRTNS
           INCLUDE TABLESPACE  DSNDB06.SYSJAUXA
           INCLUDE TABLESPACE  DSNDB06.SYSJAUXB
           INCLUDE TABLESPACE  DSNDB06.SYSJAVA
           INCLUDE TABLESPACE  DSNDB06.SYSALTER
           INCLUDE TABLESPACE  DSNDB06.SYSTSOBX
           INCLUDE TABLESPACE  DSNDB06.SYSTSASC
           INCLUDE TABLESPACE  DSNDB06.SYSEBCDC
           INCLUDE TABLESPACE  DSNDB06.SYSTSUNI
           INCLUDE TABLESPACE  DSNDB06.SYSXML
           INCLUDE TABLESPACE  DSNDB06.SYSTSXTM
           INCLUDE TABLESPACE  DSNDB06.SYSTSXTS
           INCLUDE TABLESPACE  DSNDB06.SYSTARG
           INCLUDE TABLESPACE  DSNDB06.SYSROLES
           INCLUDE TABLESPACE  DSNDB06.SYSCONTX
           INCLUDE TABLESPACE  DSNDB06.SYSTSTSS
           INCLUDE TABLESPACE  DSNDB06.SYSTSISS
           INCLUDE TABLESPACE  DSNDB06.SYSTSADT
           INCLUDE TABLESPACE  DSNDB06.SYSTSCTL
           INCLUDE TABLESPACE  DSNDB06.SYSTSCTR
           INCLUDE TABLESPACE  DSNDB06.SYSTSCTD
           INCLUDE TABLESPACE  DSNDB06.SYSTSPEN
           INCLUDE TABLESPACE  DSNDB06.SYSTSPDT
           INCLUDE TABLESPACE  DSNDB06.SYSTSPDO
           INCLUDE TABLESPACE  DSNDB06.SYSTSTPF
           INCLUDE TABLESPACE  DSNDB06.SYSTSPTX
           INCLUDE TABLESPACE  DSNDB06.SYSTSATW
           INCLUDE TABLESPACE  DSNDB06.SYSTSPRH
           INCLUDE TABLESPACE  DSNDB06.SYSTSPHX
           INCLUDE TABLESPACE  DSNDB06.SYSTSATS
           INCLUDE TABLESPACE  DSNDB06.SYSTSATX
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRA
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKC
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRY
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRP
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRO
           INCLUDE TABLESPACE  DSNDB06.SYSTSVAR
           INCLUDE TABLESPACE  DSNDB06.SYSTSVAT
           INCLUDE TABLESPACE  DSNDB06.SYSTSVAD
           INCLUDE TABLESPACE  DSNDB06.SYSTSVAU
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRE
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRS
           INCLUDE TABLESPACE  DSNDB06.SYSTSIXC
           INCLUDE TABLESPACE  DSNDB06.SYSTSSFB
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQY
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQT
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQS
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQE
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQH
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQO
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQD
           INCLUDE TABLESPACE  DSNDB06.SYSTSICO
           INCLUDE TABLESPACE  DSNDB06.SYSTSSES
           INCLUDE TABLESPACE  DSNDB06.SYSTSSNL
           INCLUDE TABLESPACE  DSNDB06.SYSTSSNX
           INCLUDE TABLESPACE  DSNDB06.SYSTSSXL
           INCLUDE TABLESPACE  DSNDB06.SYSTSSTA
           INCLUDE TABLESPACE  DSNDB06.SYSTSLVH
           INCLUDE TABLESPACE  DSNDB06.SYSTSISH DEFINED ALL
           INCLUDE TABLESPACE  DSNDB06.SYSTSTSH DEFINED ALL
   OPTIONS EVENT(ITEMERROR,SKIP)
   TEMPLATE SYSCOPY
            DSN(DB2S.BACK.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST TSP_LIST COPYDDN(SYSCOPY) FULL YES
   PARALLEL 10
//*
//*********************************************************************
//* SYSLGRNX IMAGE COPY STEP
//*********************************************************************
//ICDLGRNX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY.LGRNX',
//             REGION=0M,COND=(4,LT)
//SYSPRINT  DD SYSOUT=*
//SYSABEND  DD SYSOUT=*
//UTPRINT   DD SYSOUT=*
//SYSUT1    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSUT2    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SORTOUT   DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSIN     DD *
   LISTDEF TSP_LIST
           INCLUDE TABLESPACE  DSNDB01.SYSLGRNX
   TEMPLATE SYSCOPY
            DSN(DB2S.BACK.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST TSP_LIST COPYDDN(SYSCOPY) FULL YES
//*
//*********************************************************************
//* SYSTSCPY IMAGE COPY STEP
//*********************************************************************
//ICDTSCPY EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY.TSCPY',
//             REGION=0M,COND=(4,LT)
//SYSPRINT  DD SYSOUT=*
//SYSABEND  DD SYSOUT=*
//UTPRINT   DD SYSOUT=*
//SYSUT1    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSUT2    DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SORTOUT   DD UNIT=SYSDA,SPACE=(4000,(200,200),,,ROUND)
//SYSIN     DD *
   LISTDEF TSP_LIST
           INCLUDE TABLESPACE  DSNDB06.SYSTSCPY
   OPTIONS EVENT(ITEMERROR,SKIP)
   TEMPLATE SYSCOPY
            DSN(DB2S.BACK.&DB..&SN..&IC.&JU..&UQ.)
            DISP (NEW,CATLG,CATLG)
            UNIT SYSDA
   COPY SHRLEVEL CHANGE
   LIST TSP_LIST COPYDDN(SYSCOPY) FULL YES
//********************************************************************
//* END OF JOB STEPS FOR IMAGE COPIES TO DISK
//********************************************************************
//* BEGINNING OF JOB STEPS FOR IMAGE COPIES TO TAPE CHANGED RLR
//********************************************************************
//*****************************************************************
//* SYSUTILX IMAGE COPY STEP
//*****************************************************************
//ICUTILX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M
//UTILX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSUTILX,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=TAPE,
//*            VOL=(,RETAIN,,99),LABEL=(01,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB01.SYSUTILX  COPYDDN UTILX SHRLEVEL(CHANGE)
//*****************************************************************
//* DBD01    IMAGE COPY STEP
//*****************************************************************
//ICDBD01 EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//UTILX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSUTILX,
//             DISP=(OLD,KEEP)
//DBD01    DD  DSN=DB2S.BACK.IMAGCOPY.DBD01,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=UTILX,
//*            VOL=(,RETAIN,,99,REF=*.ICUTILX.UTILX),LABEL=(02,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB01.DBD01     COPYDDN DBD01 SHRLEVEL(CHANGE)
//*****************************************************************
//* SCT02 IMAGE COPY STEP
//*****************************************************************
//ICSCT02 EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//DBD01    DD  DSN=DB2S.BACK.IMAGCOPY.DBD01,
//             DISP=(OLD,KEEP)
//SCT02    DD  DSN=DB2S.BACK.IMAGCOPY.SCT02,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=DBD01,
//*            VOL=(,RETAIN,,99,REF=*.ICDBD01.DBD01),LABEL=(03,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB01.SCT02     COPYDDN SCT02 SHRLEVEL(CHANGE)
//*****************************************************************
//* SPT01    IMAGE COPY STEP
//*****************************************************************
//ICSPT01 EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//SCT02    DD  DSN=DB2S.BACK.IMAGCOPY.SCT02,
//             DISP=(OLD,KEEP)
//SPT01    DD  DSN=DB2S.BACK.IMAGCOPY.SPT01,
//             DISP=(NEW,PASS,KEEP),
//             VOL=SER=SYSCO1,
//             SPACE=(CYL,(20,20)),
//             UNIT=3390
//*            UNIT=AFF=SCT02,
//*            VOL=(,RETAIN,,99,REF=*.ICSCT02.SCT02),LABEL=(04,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB01.SPT01     COPYDDN SPT01 SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSDBDXA IMAGE COPY STEP
//*****************************************************************
//ICDBDXA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//SPT01    DD  DSN=DB2S.BACK.IMAGCOPY.SPT01,
//             DISP=(OLD,KEEP)
//DBDXA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSDBDXA,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=SPT01,
//*            VOL=(,RETAIN,,99,REF=*.ICSPT01.SPT01),LABEL=(05,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB01.SYSDBDXA  COPYDDN DBDXA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSSPUXA IMAGE COPY STEP
//*****************************************************************
//ICSPUXA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//DBDXA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSDBDXA,
//             DISP=(OLD,KEEP)
//SPUXA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSSPUXA,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=DBDXA,
//*            VOL=(,RETAIN,,99,REF=*.ICDBDXA.DBDXA),LABEL=(06,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB01.SYSSPUXA  COPYDDN SPUXA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSSPUXB IMAGE COPY STEP
//*****************************************************************
//ICSPUXB EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//SPUXA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSSPUXA,
//             DISP=(OLD,KEEP)
//SPUXB    DD  DSN=DB2S.BACK.IMAGCOPY.SYSSPUXB,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=SPUXA,
//*            VOL=(,RETAIN,,99,REF=*.ICSPUXA.SPUXA),LABEL=(07,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB01.SYSSPUXB  COPYDDN SPUXB SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSFAU IMAGE COPY STEP
//*****************************************************************
//ICTSFAU EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//SPUXB    DD  DSN=DB2S.BACK.IMAGCOPY.SYSSPUXB,
//             DISP=(OLD,KEEP)
//TSFAU    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSFAU,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=SPUXB,
//*            VOL=(,RETAIN,,99,REF=*.ICSPUXB.SPUXB),LABEL=(08,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSFAU  COPYDDN TSFAU SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCOL IMAGE COPY STEP
//*****************************************************************
//ICTSCOL EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSFAU    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSFAU,
//             DISP=(OLD,KEEP)
//TSCOL    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCOL,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSFAU,
//*            VOL=(,RETAIN,,99,REF=*.ICTSFAU.TSFAU),LABEL=(09,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCOL  COPYDDN TSCOL SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTSP IMAGE COPY STEP
//*****************************************************************
//ICTSTSP EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSCOL    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCOL,
//             DISP=(OLD,KEEP)
//TSTSP    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTSP,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSCOL,
//*            VOL=(,RETAIN,,99,REF=*.ICTSCOL.TSCOL),LABEL=(10,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTSP  COPYDDN TSTSP SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTPT IMAGE COPY STEP
//*****************************************************************
//ICTSTPT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTSP    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTSP,
//             DISP=(OLD,KEEP)
//TSTPT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTPT,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSTSP,
//*            VOL=(,RETAIN,,99,REF=*.ICTSTSP.TSTSP),LABEL=(11,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTPT  COPYDDN TSTPT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTAB IMAGE COPY STEP
//*****************************************************************
//ICTSTAB EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTPT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTPT,
//             DISP=(OLD,KEEP)
//TSTAB    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTAB,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSTPT,
//*            VOL=(,RETAIN,,99,REF=*.ICTSTPT.TSTPT),LABEL=(12,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTAB  COPYDDN TSTAB SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSIXS IMAGE COPY STEP
//*****************************************************************
//ICTSIXS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTAB    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTAB,
//             DISP=(OLD,KEEP)
//TSIXS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSIXS,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSTAB,
//*            VOL=(,RETAIN,,99,REF=*.ICTSTAB.TSTAB),LABEL=(13,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSIXS  COPYDDN TSIXS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSIXT IMAGE COPY STEP
//*****************************************************************
//ICTSIXT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSIXS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSIXS,
//             DISP=(OLD,KEEP)
//TSIXT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSIXT,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSIXS,
//*            VOL=(,RETAIN,,99,REF=*.ICTSIXS.TSIXS),LABEL=(14,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSIXT  COPYDDN TSIXT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSIXR IMAGE COPY STEP
//*****************************************************************
//ICTSIXR EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSIXT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSIXT,
//             DISP=(OLD,KEEP)
//TSIXR    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSIXR,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSIXT,
//*            VOL=(,RETAIN,,99,REF=*.ICTSIXT.TSIXT),LABEL=(15,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSIXR  COPYDDN TSIXR SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSIPT IMAGE COPY STEP
//*****************************************************************
//ICTSIPT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSIXR    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSIXR,
//             DISP=(OLD,KEEP)
//TSIPT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSIPT,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSIXR,
//*            VOL=(,RETAIN,,99,REF=*.ICTSIXR.TSIXR),LABEL=(16,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSIPT  COPYDDN TSIPT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSREL IMAGE COPY STEP
//*****************************************************************
//ICTSREL EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSIPT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSIPT,
//             DISP=(OLD,KEEP)
//TSREL    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSREL,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSIPT,
//*            VOL=(,RETAIN,,99,REF=*.ICTSIPT.TSIPT),LABEL=(17,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSREL  COPYDDN TSREL SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSFOR IMAGE COPY STEP
//*****************************************************************
//ICTSFOR EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSREL    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSREL,
//             DISP=(OLD,KEEP)
//TSFOR    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSFOR,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSREL,
//*            VOL=(,RETAIN,,99,REF=*.ICTSREL.TSREL),LABEL=(18,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSFOR  COPYDDN TSFOR SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSYN IMAGE COPY STEP
//*****************************************************************
//ICTSSYN EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSFOR    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSFOR,
//             DISP=(OLD,KEEP)
//TSSYN    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSYN,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSFOR,
//*            VOL=(,RETAIN,,99,REF=*.ICTSFOR.TSFOR),LABEL=(19,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSYN  COPYDDN TSSYN SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSFLD IMAGE COPY STEP
//*****************************************************************
//ICTSFLD EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSYN    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSYN,
//             DISP=(OLD,KEEP)
//TSFLD    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSFLD,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSSYN,
//*            VOL=(,RETAIN,,99,REF=*.ICTSSYN.TSSYN),LABEL=(20,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSFLD  COPYDDN TSFLD SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTAU IMAGE COPY STEP
//*****************************************************************
//ICTSTAU EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSFLD    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSFLD,
//             DISP=(OLD,KEEP)
//TSTAU    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTAU,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSFLD,
//*            VOL=(,RETAIN,,99,REF=*.ICTSFLD.TSFLD),LABEL=(21,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTAU  COPYDDN TSTAU SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSKEY IMAGE COPY STEP
//*****************************************************************
//ICTSKEY EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTAU    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTAU,
//             DISP=(OLD,KEEP)
//TSKEY    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSKEY,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSTAU,
//*            VOL=(,RETAIN,,99,REF=*.ICTSTAU.TSTAU),LABEL=(22,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSKEY  COPYDDN TSKEY SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDBA IMAGE COPY STEP
//*****************************************************************
//ICTSDBA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSKEY    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSKEY,
//             DISP=(OLD,KEEP)
//TSDBA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDBA,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSKEY,
//*            VOL=(,RETAIN,,99,REF=*.ICTSKEY.TSKEY),LABEL=(23,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDBA  COPYDDN TSDBA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDBU IMAGE COPY STEP
//*****************************************************************
//ICTSDBU EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDBA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDBA,
//             DISP=(OLD,KEEP)
//TSDBU    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDBU,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSDBA,
//*            VOL=(,RETAIN,,99,REF=*.ICTSDBA.TSDBA),LABEL=(24,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDBU  COPYDDN TSDBU SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSGPAUT IMAGE COPY STEP
//*****************************************************************
//ICGPAUT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDBU    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDBU,
//             DISP=(OLD,KEEP)
//GPAUT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSGPAUT,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSDBU,
//*            VOL=(,RETAIN,,99,REF=*.ICTSDBU.TSDBU),LABEL=(25,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSGPAUT  COPYDDN GPAUT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSTG IMAGE COPY STEP
//*****************************************************************
//ICTSSTG EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//GPAUT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSGPAUT,
//             DISP=(OLD,KEEP)
//TSSTG    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSTG,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=GPAUT,
//*            VOL=(,RETAIN,,99,REF=*.ICGPAUT.GPAUT),LABEL=(26,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSTG  COPYDDN TSSTG SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVOL IMAGE COPY STEP
//*****************************************************************
//ICTSVOL EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSTG    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSTG,
//             DISP=(OLD,KEEP)
//TSVOL    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVOL,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSSTG,
//*            VOL=(,RETAIN,,99,REF=*.ICTSSTG.TSSTG),LABEL=(27,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVOL  COPYDDN TSVOL SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPLN IMAGE COPY STEP
//*****************************************************************
//ICTSPLN EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVOL    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVOL,
//             DISP=(OLD,KEEP)
//TSPLN    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPLN,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSVOL,
//*            VOL=(,RETAIN,,99,REF=*.ICTSVOL.TSVOL),LABEL=(28,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPLN  COPYDDN TSPLN SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPLA IMAGE COPY STEP
//*****************************************************************
//ICTSPLA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPLN    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPLN,
//             DISP=(OLD,KEEP)
//TSPLA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPLA,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPLN,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPLN.TSPLN),LABEL=(29,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPLA  COPYDDN TSPLA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDBR IMAGE COPY STEP
//*****************************************************************
//ICTSDBR EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPLA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPLA,
//             DISP=(OLD,KEEP)
//TSDBR    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDBR,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPLA,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPLA.TSPLA),LABEL=(30,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDBR  COPYDDN TSDBR SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPLD IMAGE COPY STEP
//*****************************************************************
//ICTSPLD EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDBR    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDBR,
//             DISP=(OLD,KEEP)
//TSPLD    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPLD,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSDBR,
//*            VOL=(,RETAIN,,99,REF=*.ICTSDBR.TSDBR),LABEL=(31,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPLD  COPYDDN TSPLD SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSTM IMAGE COPY STEP
//*****************************************************************
//ICTSSTM EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPLD    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPLD,
//             DISP=(OLD,KEEP)
//TSSTM    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSTM,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPLD,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPLD.TSPLD),LABEL=(32,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSTM  COPYDDN TSSTM SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPKL IMAGE COPY STEP
//*****************************************************************
//ICTSPKL EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSTM    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSTM,
//             DISP=(OLD,KEEP)
//TSPKL    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPKL,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSSTM,
//*            VOL=(,RETAIN,,99,REF=*.ICTSSTM.TSSTM),LABEL=(33,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPKL  COPYDDN TSPKL SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPLY IMAGE COPY STEP
//*****************************************************************
//ICTSPLY EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPKL    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPKL,
//             DISP=(OLD,KEEP)
//TSPLY    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPLY,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPKL,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPKL.TSPKL),LABEL=(34,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPLY  COPYDDN TSPLY SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPKG IMAGE COPY STEP
//*****************************************************************
//ICTSPKG EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPLY    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPLY,
//             DISP=(OLD,KEEP)
//TSPKG    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPKG,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPLY,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPLY.TSPLY),LABEL=(35,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPKG  COPYDDN TSPKG SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPKS IMAGE COPY STEP
//*****************************************************************
//ICTSPKS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPKG    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPKG,
//             DISP=(OLD,KEEP)
//TSPKS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPKS,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPKG,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPKG.TSPKG),LABEL=(36,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPKS  COPYDDN TSPKS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPKX IMAGE COPY STEP
//*****************************************************************
//ICTSPKX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPKS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPKS,
//             DISP=(OLD,KEEP)
//TSPKX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPKX,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPKS,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPKS.TSPKS),LABEL=(37,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPKX  COPYDDN TSPKX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPVR IMAGE COPY STEP
//*****************************************************************
//ICTSPVR EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPKX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPKX,
//             DISP=(OLD,KEEP)
//TSPVR    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPVR,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPKX,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPKX.TSPKX),LABEL=(38,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPVR  COPYDDN TSPVR SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPKY IMAGE COPY STEP
//*****************************************************************
//ICTSPKY EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPVR    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPVR,
//             DISP=(OLD,KEEP)
//TSPKY    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPKY,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPVR,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPVR.TSPVR),LABEL=(39,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPKY  COPYDDN TSPKY SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPKD IMAGE COPY STEP
//*****************************************************************
//ICTSPKD EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPKY    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPKY,
//             DISP=(OLD,KEEP)
//TSPKD    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPKD,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPKY,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPKY.TSPKY),LABEL=(40,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPKD  COPYDDN TSPKD SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPKA IMAGE COPY STEP
//*****************************************************************
//ICTSPKA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPKD    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPKD,
//             DISP=(OLD,KEEP)
//TSPKA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPKA,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPKD,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPKD.TSPKD),LABEL=(41,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPKA  COPYDDN TSPKA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSUSER IMAGE COPY STEP
//*****************************************************************
//ICUSER  EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPKA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPKA,
//             DISP=(OLD,KEEP)
//USER     DD  DSN=DB2S.BACK.IMAGCOPY.SYSUSER,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPKA,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPKA.TSPKA),LABEL=(42,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSUSER   COPYDDN USER SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCKS IMAGE COPY STEP
//*****************************************************************
//ICTSCKS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//USER     DD  DSN=DB2S.BACK.IMAGCOPY.SYSUSER,
//             DISP=(OLD,KEEP)
//TSCKS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCKS,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=USER,
//*            VOL=(,RETAIN,,99,REF=*.ICUSER.USER),LABEL=(43,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCKS  COPYDDN TSCKS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCHX IMAGE COPY STEP
//*****************************************************************
//ICTSCHX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSCKS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCKS,
//             DISP=(OLD,KEEP)
//TSCHX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCHX,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSCKS,
//*            VOL=(,RETAIN,,99,REF=*.ICTSCKS.TSCKS),LABEL=(44,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCHX  COPYDDN TSCHX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCKD IMAGE COPY STEP
//*****************************************************************
//ICTSCKD EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSCHX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCHX,
//             DISP=(OLD,KEEP)
//TSCKD    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCKD,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSCHX,
//*            VOL=(,RETAIN,,99,REF=*.ICTSCHX.TSCHX),LABEL=(45,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCKD  COPYDDN TSCKD SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSRG IMAGE COPY STEP
//*****************************************************************
//ICTSSRG EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSCKD    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCKD,
//             DISP=(OLD,KEEP)
//TSSRG    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSRG,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSCKD,
//*            VOL=(,RETAIN,,99,REF=*.ICTSCKD.TSCKD),LABEL=(46,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSRG  COPYDDN TSSRG SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVEW IMAGE COPY STEP
//*****************************************************************
//ICTSVEW EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSRG    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSRG,
//             DISP=(OLD,KEEP)
//TSVEW    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVEW,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSSRG,
//*            VOL=(,RETAIN,,99,REF=*.ICTSSRG.TSSRG),LABEL=(47,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVEW  COPYDDN TSVEW SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVWD IMAGE COPY STEP
//*****************************************************************
//ICTSVWD EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVEW    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVEW,
//             DISP=(OLD,KEEP)
//TSVWD    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVWD,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSVEW,
//*            VOL=(,RETAIN,,99,REF=*.ICTSVEW.TSVEW),LABEL=(48,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVWD  COPYDDN TSVWD SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVWT IMAGE COPY STEP
//*****************************************************************
//ICTSVWT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVWD    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVWD,
//             DISP=(OLD,KEEP)
//TSVWT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVWT,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSVWD,
//*            VOL=(,RETAIN,,99,REF=*.ICTSVWD.TSVWD),LABEL=(49,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVWT  COPYDDN TSVWT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVTR IMAGE COPY STEP
//*****************************************************************
//ICTSVTR EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVWT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVWT,
//             DISP=(OLD,KEEP)
//TSVTR    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVTR,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSVWT,
//*            VOL=(,RETAIN,,99,REF=*.ICTSVWT.TSVWT),LABEL=(50,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVTR  COPYDDN TSVTR SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSSTATS IMAGE COPY STEP
//*****************************************************************
//ICSTATS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVTR    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVTR,
//             DISP=(OLD,KEEP)
//STATS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSSTATS,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSVTR,
//*            VOL=(,RETAIN,,99,REF=*.ICTSVTR.TSVTR),LABEL=(51,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSSTATS  COPYDDN STATS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSDDF IMAGE COPY STEP
//*****************************************************************
//ICDDF   EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//STATS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSSTATS,
//             DISP=(OLD,KEEP)
//DDF      DD  DSN=DB2S.BACK.IMAGCOPY.SYSDDF,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=STATS,
//*            VOL=(,RETAIN,,99,REF=*.ICSTATS.STATS),LABEL=(52,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSDDF    COPYDDN DDF SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSAUX IMAGE COPY STEP
//*****************************************************************
//ICTSAUX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//DDF      DD  DSN=DB2S.BACK.IMAGCOPY.SYSDDF,
//             DISP=(OLD,KEEP)
//TSAUX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSAUX,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=DDF,
//*            VOL=(,RETAIN,,99,REF=*.ICDDF.DDF),LABEL=(53,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSAUX  COPYDDN TSAUX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCON IMAGE COPY STEP
//*****************************************************************
//ICTSCON EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSAUX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSAUX,
//             DISP=(OLD,KEEP)
//TSCON    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCON,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSAUX,
//*            VOL=(,RETAIN,,99,REF=*.ICTSAUX.TSAUX),LABEL=(54,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCON  COPYDDN TSCON SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDAT IMAGE COPY STEP
//*****************************************************************
//ICTSDAT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSCON    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCON,
//             DISP=(OLD,KEEP)
//TSDAT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDAT,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSCON,
//*            VOL=(,RETAIN,,99,REF=*.ICTSCON.TSCON),LABEL=(55,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDAT  COPYDDN TSDAT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDEP IMAGE COPY STEP
//*****************************************************************
//ICTSDEP EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDAT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDAT,
//             DISP=(OLD,KEEP)
//TSDEP    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDEP,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSDAT,
//*            VOL=(,RETAIN,,99,REF=*.ICTSDAT.TSDAT),LABEL=(56,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDEP  COPYDDN TSDEP SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSENV IMAGE COPY STEP
//*****************************************************************
//ICTSENV EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDEP    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDEP,
//             DISP=(OLD,KEEP)
//TSENV    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSENV,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSDEP,
//*            VOL=(,RETAIN,,99,REF=*.ICTSDEP.TSDEP),LABEL=(57,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSENV  COPYDDN TSENV SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSKYC IMAGE COPY STEP
//*****************************************************************
//ICTSKYC EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSENV    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSENV,
//             DISP=(OLD,KEEP)
//TSKYC    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSKYC,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSENV,
//*            VOL=(,RETAIN,,99,REF=*.ICTSENV.TSENV),LABEL=(58,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSKYC  COPYDDN TSKYC SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPRM IMAGE COPY STEP
//*****************************************************************
//ICTSPRM EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSKYC    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSKYC,
//             DISP=(OLD,KEEP)
//TSPRM    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPRM,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSKYC,
//*            VOL=(,RETAIN,,99,REF=*.ICTSKYC.TSKYC),LABEL=(59,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPRM  COPYDDN TSPRM SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSRAU IMAGE COPY STEP
//*****************************************************************
//ICTSRAU EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPRM    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPRM,
//             DISP=(OLD,KEEP)
//TSRAU    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSRAU,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPRM,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPRM.TSPRM),LABEL=(60,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSRAU  COPYDDN TSRAU SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSROU IMAGE COPY STEP
//*****************************************************************
//ICTSROU EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSRAU    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSRAU,
//             DISP=(OLD,KEEP)
//TSROU    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSROU,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSRAU,
//*            VOL=(,RETAIN,,99,REF=*.ICTSRAU.TSRAU),LABEL=(61,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSROU  COPYDDN TSROU SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSPLUXA IMAGE COPY STEP
//*****************************************************************
//ICPLUXA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSROU    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSROU,
//             DISP=(OLD,KEEP)
//PLUXA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSPLUXA,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSROU,
//*            VOL=(,RETAIN,,99,REF=*.ICTSROU.TSROU),LABEL=(62,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSPLUXA  COPYDDN PLUXA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSPLUXB IMAGE COPY STEP
//*****************************************************************
//ICPLUXB EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//PLUXA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSPLUXA,
//             DISP=(OLD,KEEP)
//PLUXB    DD  DSN=DB2S.BACK.IMAGCOPY.SYSPLUXB,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=PLUXA,
//*            VOL=(,RETAIN,,99,REF=*.ICPLUXA.PLUXA),LABEL=(63,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSPLUXB  COPYDDN PLUXB SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSCM IMAGE COPY STEP
//*****************************************************************
//ICTSSCM EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//PLUXB    DD  DSN=DB2S.BACK.IMAGCOPY.SYSPLUXB,
//             DISP=(OLD,KEEP)
//TSSCM    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSCM,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=PLUXB,
//*            VOL=(,RETAIN,,99,REF=*.ICPLUXB.PLUXB),LABEL=(64,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSCM  COPYDDN TSSCM SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTBC IMAGE COPY STEP
//*****************************************************************
//ICTSTBC EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSCM    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSCM,
//             DISP=(OLD,KEEP)
//TSTBC    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTBC,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSSCM,
//*            VOL=(,RETAIN,,99,REF=*.ICTSSCM.TSSCM),LABEL=(65,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTBC  COPYDDN TSTBC SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTRG IMAGE COPY STEP
//*****************************************************************
//ICTSTRG EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTBC    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTBC,
//             DISP=(OLD,KEEP)
//TSTRG    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTRG,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSTBC,
//*            VOL=(,RETAIN,,99,REF=*.ICTSTBC.TSTBC),LABEL=(66,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTRG  COPYDDN TSTRG SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTRT IMAGE COPY STEP
//*****************************************************************
//ICTSTRT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTRG    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTRG,
//             DISP=(OLD,KEEP)
//TSTRT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTRT,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSTRG,
//*            VOL=(,RETAIN,,99,REF=*.ICTSTRG.TSTRG),LABEL=(67,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTRT  COPYDDN TSTRT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSSEQ IMAGE COPY STEP
//*****************************************************************
//ICSEQ   EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTRT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTRT,
//             DISP=(OLD,KEEP)
//SEQ      DD  DSN=DB2S.BACK.IMAGCOPY.SYSSEQ,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSTRT,
//*            VOL=(,RETAIN,,99,REF=*.ICTSTRT.TSTRT),LABEL=(68,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSSEQ    COPYDDN SEQ SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSSEQ2 IMAGE COPY STEP
//*****************************************************************
//ICSEQ2  EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//SEQ      DD  DSN=DB2S.BACK.IMAGCOPY.SYSSEQ,
//             DISP=(OLD,KEEP)
//SEQ2     DD  DSN=DB2S.BACK.IMAGCOPY.SYSSEQ2,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=SEQ,
//*            VOL=(,RETAIN,,99,REF=*.ICSEQ.SEQ),LABEL=(69,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSSEQ2   COPYDDN SEQ2 SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSHIST IMAGE COPY STEP
//*****************************************************************
//ICHIST  EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//SEQ2     DD  DSN=DB2S.BACK.IMAGCOPY.SYSSEQ2,
//             DISP=(OLD,KEEP)
//HIST     DD  DSN=DB2S.BACK.IMAGCOPY.SYSHIST,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=SEQ2,
//*            VOL=(,RETAIN,,99,REF=*.ICSEQ2.SEQ2),LABEL=(70,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSHIST   COPYDDN HIST SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSGRTNS IMAGE COPY STEP
//*****************************************************************
//ICGRTNS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//HIST     DD  DSN=DB2S.BACK.IMAGCOPY.SYSHIST,
//             DISP=(OLD,KEEP)
//GRTNS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSGRTNS,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=HIST,
//*            VOL=(,RETAIN,,99,REF=*.ICHIST.HIST),LABEL=(71,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSGRTNS  COPYDDN GRTNS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSJAUXA IMAGE COPY STEP
//*****************************************************************
//ICJAUXA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//GRTNS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSGRTNS,
//             DISP=(OLD,KEEP)
//JAUXA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSJAUXA,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=GRTNS,
//*            VOL=(,RETAIN,,99,REF=*.ICGRTNS.GRTNS),LABEL=(72,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSJAUXA  COPYDDN JAUXA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSJAUXB IMAGE COPY STEP
//*****************************************************************
//ICJAUXB EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//JAUXA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSJAUXA,
//             DISP=(OLD,KEEP)
//JAUXB    DD  DSN=DB2S.BACK.IMAGCOPY.SYSJAUXB,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=JAUXA,
//*            VOL=(,RETAIN,,99,REF=*.ICJAUXA.JAUXA),LABEL=(73,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSJAUXB  COPYDDN JAUXB SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSJAVA IMAGE COPY STEP
//*****************************************************************
//ICJAVA  EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//JAUXB    DD  DSN=DB2S.BACK.IMAGCOPY.SYSJAUXB,
//             DISP=(OLD,KEEP)
//JAVA     DD  DSN=DB2S.BACK.IMAGCOPY.SYSJAVA,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=JAUXB,
//*            VOL=(,RETAIN,,99,REF=*.ICJAUXB.JAUXB),LABEL=(74,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSJAVA   COPYDDN JAVA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSALTER IMAGE COPY STEP
//*****************************************************************
//ICALTER EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//JAVA     DD  DSN=DB2S.BACK.IMAGCOPY.SYSJAVA,
//             DISP=(OLD,KEEP)
//ALTER    DD  DSN=DB2S.BACK.IMAGCOPY.SYSALTER,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=JAVA,
//*            VOL=(,RETAIN,,99,REF=*.ICJAVA.JAVA),LABEL=(75,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSALTER  COPYDDN ALTER SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSOBX IMAGE COPY STEP
//*****************************************************************
//ICTSOBX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//ALTER    DD  DSN=DB2S.BACK.IMAGCOPY.SYSALTER,
//             DISP=(OLD,KEEP)
//TSOBX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSOBX,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=ALTER,
//*            VOL=(,RETAIN,,99,REF=*.ICALTER.ALTER),LABEL=(76,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSOBX  COPYDDN TSOBX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSASC IMAGE COPY STEP
//*****************************************************************
//ICTSASC EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSOBX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSOBX,
//             DISP=(OLD,KEEP)
//TSASC    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSASC,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSOBX,
//*            VOL=(,RETAIN,,99,REF=*.ICTSOBX.TSOBX),LABEL=(77,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSASC  COPYDDN TSASC SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSEBCDC IMAGE COPY STEP
//*****************************************************************
//ICEBCDC EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSASC    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSASC,
//             DISP=(OLD,KEEP)
//EBCDC    DD  DSN=DB2S.BACK.IMAGCOPY.SYSEBCDC,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSASC,
//*            VOL=(,RETAIN,,99,REF=*.ICTSASC.TSASC),LABEL=(78,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSEBCDC  COPYDDN EBCDC SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSUNI IMAGE COPY STEP
//*****************************************************************
//ICTSUNI EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//EBCDC    DD  DSN=DB2S.BACK.IMAGCOPY.SYSEBCDC,
//             DISP=(OLD,KEEP)
//TSUNI    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSUNI,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=EBCDC,
//*            VOL=(,RETAIN,,99,REF=*.ICEBCDC.EBCDC),LABEL=(79,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSUNI  COPYDDN TSUNI SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSXML IMAGE COPY STEP
//*****************************************************************
//ICXML   EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSUNI    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSUNI,
//             DISP=(OLD,KEEP)
//XML      DD  DSN=DB2S.BACK.IMAGCOPY.SYSXML,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSUNI,
//*            VOL=(,RETAIN,,99,REF=*.ICTSUNI.TSUNI),LABEL=(80,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSXML    COPYDDN XML SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSXTM IMAGE COPY STEP
//*****************************************************************
//ICTSXTM EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//XML      DD  DSN=DB2S.BACK.IMAGCOPY.SYSXML,
//             DISP=(OLD,KEEP)
//TSXTM    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSXTM,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=XML,
//*            VOL=(,RETAIN,,99,REF=*.ICXML.XML),LABEL=(81,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSXTM  COPYDDN TSXTM SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSXTS IMAGE COPY STEP
//*****************************************************************
//ICTSXTS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSXTM    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSXTM,
//             DISP=(OLD,KEEP)
//TSXTS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSXTS,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSXTM,
//*            VOL=(,RETAIN,,99,REF=*.ICTSXTM.TSXTM),LABEL=(82,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSXTS  COPYDDN TSXTS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTARG IMAGE COPY STEP
//*****************************************************************
//ICTARG  EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSXTS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSXTS,
//             DISP=(OLD,KEEP)
//TARG     DD  DSN=DB2S.BACK.IMAGCOPY.SYSTARG,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSXTS,
//*            VOL=(,RETAIN,,99,REF=*.ICTSXTS.TSXTS),LABEL=(83,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTARG   COPYDDN TARG SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSROLES IMAGE COPY STEP
//*****************************************************************
//ICROLES EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TARG     DD  DSN=DB2S.BACK.IMAGCOPY.SYSTARG,
//             DISP=(OLD,KEEP)
//ROLES    DD  DSN=DB2S.BACK.IMAGCOPY.SYSROLES,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TARG,
//*            VOL=(,RETAIN,,99,REF=*.ICTARG.TARG),LABEL=(84,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSROLES  COPYDDN ROLES SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSCONTX IMAGE COPY STEP
//*****************************************************************
//ICCONTX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//ROLES    DD  DSN=DB2S.BACK.IMAGCOPY.SYSROLES,
//             DISP=(OLD,KEEP)
//CONTX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSCONTX,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=ROLES,
//*            VOL=(,RETAIN,,99,REF=*.ICROLES.ROLES),LABEL=(85,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSCONTX  COPYDDN CONTX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTSS IMAGE COPY STEP
//*****************************************************************
//ICTSTSS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//CONTX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSCONTX,
//             DISP=(OLD,KEEP)
//TSTSS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTSS,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=CONTX,
//*            VOL=(,RETAIN,,99,REF=*.ICCONTX.CONTX),LABEL=(86,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTSS  COPYDDN TSTSS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSISS IMAGE COPY STEP
//*****************************************************************
//ICTSISS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTSS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTSS,
//             DISP=(OLD,KEEP)
//TSISS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSISS,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSTSS,
//*            VOL=(,RETAIN,,99,REF=*.ICTSTSS.TSTSS),LABEL=(87,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSISS  COPYDDN TSISS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSADT IMAGE COPY STEP
//*****************************************************************
//ICTSADT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSISS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSISS,
//             DISP=(OLD,KEEP)
//TSADT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSADT,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSISS,
//*            VOL=(,RETAIN,,99,REF=*.ICTSISS.TSISS),LABEL=(88,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSADT  COPYDDN TSADT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCTL IMAGE COPY STEP
//*****************************************************************
//ICTSCTL EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSADT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSADT,
//             DISP=(OLD,KEEP)
//TSCTL    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCTL,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSADT,
//*            VOL=(,RETAIN,,99,REF=*.ICTSADT.TSADT),LABEL=(89,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCTL  COPYDDN TSCTL SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCTR IMAGE COPY STEP
//*****************************************************************
//ICTSCTR EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSCTL    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCTL,
//             DISP=(OLD,KEEP)
//TSCTR    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCTR,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSCTL,
//*            VOL=(,RETAIN,,99,REF=*.ICTSCTL.TSCTL),LABEL=(90,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCTR  COPYDDN TSCTR SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCTD IMAGE COPY STEP
//*****************************************************************
//ICTSCTD EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSCTR    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCTR,
//             DISP=(OLD,KEEP)
//TSCTD    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCTD,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSCTR,
//*            VOL=(,RETAIN,,99,REF=*.ICTSCTR.TSCTR),LABEL=(91,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCTD  COPYDDN TSCTD SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPEN IMAGE COPY STEP
//*****************************************************************
//ICTSPEN EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSCTD    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCTD,
//             DISP=(OLD,KEEP)
//TSPEN    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPEN,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSCTD,
//*            VOL=(,RETAIN,,99,REF=*.ICTSCTD.TSCTD),LABEL=(92,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPEN  COPYDDN TSPEN SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPDT IMAGE COPY STEP
//*****************************************************************
//ICTSPDT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPEN    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPEN,
//             DISP=(OLD,KEEP)
//TSPDT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPDT,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPEN,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPEN.TSPEN),LABEL=(93,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPDT  COPYDDN TSPDT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPDO IMAGE COPY STEP
//*****************************************************************
//ICTSPDO EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPDT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPDT,
//             DISP=(OLD,KEEP)
//TSPDO    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPDO,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPDT,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPDT.TSPDT),LABEL=(94,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPDO  COPYDDN TSPDO SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSTPF IMAGE COPY STEP
//*****************************************************************
//ICTSTPF EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPDO    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPDO,
//             DISP=(OLD,KEEP)
//TSTPF    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTPF,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPDO,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPDO.TSPDO),LABEL=(95,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSTPF  COPYDDN TSTPF SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPTX IMAGE COPY STEP
//*****************************************************************
//ICTSPTX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSTPF    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTPF,
//             DISP=(OLD,KEEP)
//TSPTX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPTX,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSTPF,
//*            VOL=(,RETAIN,,99,REF=*.ICTSTPF.TSTPF),LABEL=(96,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPTX  COPYDDN TSPTX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSATW IMAGE COPY STEP
//*****************************************************************
//ICTSATW EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPTX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPTX,
//             DISP=(OLD,KEEP)
//TSATW    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSATW,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPTX,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPTX.TSPTX),LABEL=(97,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSATW  COPYDDN TSATW SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPRH IMAGE COPY STEP
//*****************************************************************
//ICTSPRH EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSATW    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSATW,
//             DISP=(OLD,KEEP)
//TSPRH    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPRH,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSATW,
//*            VOL=(,RETAIN,,99,REF=*.ICTSATW.TSATW),LABEL=(98,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPRH  COPYDDN TSPRH SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPHX IMAGE COPY STEP
//*****************************************************************
//ICTSPHX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPRH    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPRH,
//             DISP=(OLD,KEEP)
//TSPHX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPHX,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPRH,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPRH.TSPRH),LABEL=(99,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPHX  COPYDDN TSPHX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSATS IMAGE COPY STEP
//*****************************************************************
//ICTSATS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPHX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPHX,
//             DISP=(OLD,KEEP)
//TSATS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSATS,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPHX,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPHX.TSPHX),LABEL=(100,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSATS  COPYDDN TSATS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSATX IMAGE COPY STEP
//*****************************************************************
//ICTSATX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSATS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSATS,
//             DISP=(OLD,KEEP)
//TSATX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSATX,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSATS,
//*            VOL=(,RETAIN,,99,REF=*.ICTSATS.TSATS),LABEL=(101,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSATX  COPYDDN TSATX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSQRA IMAGE COPY STEP
//*****************************************************************
//ICTSQRA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSATX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSATX,
//             DISP=(OLD,KEEP)
//TSQRA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSQRA,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSATX,
//*            VOL=(,RETAIN,,99,REF=*.ICTSATX.TSATX),LABEL=(102,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSQRA  COPYDDN TSQRA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSPKC IMAGE COPY STEP
//*****************************************************************
//ICTSPKC EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSQRA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSQRA,
//             DISP=(OLD,KEEP)
//TSPKC    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPKC,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSQRA,
//*            VOL=(,RETAIN,,99,REF=*.ICTSQRA.TSQRA),LABEL=(103,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSPKC  COPYDDN TSPKC SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSQRY IMAGE COPY STEP
//*****************************************************************
//ICTSQRY EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSPKC    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSPKC,
//             DISP=(OLD,KEEP)
//TSQRY    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSQRY,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSPKC,
//*            VOL=(,RETAIN,,99,REF=*.ICTSPKC.TSPKC),LABEL=(104,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSQRY  COPYDDN TSQRY SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSQRP IMAGE COPY STEP
//*****************************************************************
//ICTSQRP EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSQRY    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSQRY,
//             DISP=(OLD,KEEP)
//TSQRP    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSQRP,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSQRY,
//*            VOL=(,RETAIN,,99,REF=*.ICTSQRY.TSQRY),LABEL=(105,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSQRP  COPYDDN TSQRP SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSQRO IMAGE COPY STEP
//*****************************************************************
//ICTSQRO EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSQRP    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSQRP,
//             DISP=(OLD,KEEP)
//TSQRO    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSQRO,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSQRP,
//*            VOL=(,RETAIN,,99,REF=*.ICTSQRP.TSQRP),LABEL=(106,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSQRO  COPYDDN TSQRO SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVAR IMAGE COPY STEP
//*****************************************************************
//ICTSVAR EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSQRO    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSQRO,
//             DISP=(OLD,KEEP)
//TSVAR    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVAR,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSQRO,
//*            VOL=(,RETAIN,,99,REF=*.ICTSQRO.TSQRO),LABEL=(107,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVAR  COPYDDN TSVAR SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVAT IMAGE COPY STEP
//*****************************************************************
//ICTSVAT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVAR    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVAR,
//             DISP=(OLD,KEEP)
//TSVAT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVAT,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSVAR,
//*            VOL=(,RETAIN,,99,REF=*.ICTSVAR.TSVAR),LABEL=(108,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVAT  COPYDDN TSVAT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVAD IMAGE COPY STEP
//*****************************************************************
//ICTSVAD EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVAT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVAT,
//             DISP=(OLD,KEEP)
//TSVAD    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVAD,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSVAT,
//*            VOL=(,RETAIN,,99,REF=*.ICTSVAT.TSVAT),LABEL=(109,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVAD  COPYDDN TSVAD SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSVAU IMAGE COPY STEP
//*****************************************************************
//ICTSVAU EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVAD    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVAD,
//             DISP=(OLD,KEEP)
//TSVAU    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVAU,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSVAD,
//*            VOL=(,RETAIN,,99,REF=*.ICTSVAD.TSVAD),LABEL=(110,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSVAU  COPYDDN TSVAU SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSQRE IMAGE COPY STEP
//*****************************************************************
//ICTSQRE EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSVAU    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSVAU,
//             DISP=(OLD,KEEP)
//TSQRE    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSQRE,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSVAU,
//*            VOL=(,RETAIN,,99,REF=*.ICTSVAU.TSVAU),LABEL=(111,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSQRE  COPYDDN TSQRE SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSQRS IMAGE COPY STEP
//*****************************************************************
//ICTSQRS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSQRE    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSQRE,
//             DISP=(OLD,KEEP)
//TSQRS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSQRS,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSQRE,
//*            VOL=(,RETAIN,,99,REF=*.ICTSQRE.TSQRE),LABEL=(112,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSQRS  COPYDDN TSQRS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSIXC IMAGE COPY STEP
//*****************************************************************
//ICTSIXC EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSQRS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSQRS,
//             DISP=(OLD,KEEP)
//TSIXC    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSIXC,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSQRS,
//*            VOL=(,RETAIN,,99,REF=*.ICTSQRS.TSQRS),LABEL=(113,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSIXC  COPYDDN TSIXC SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSFB IMAGE COPY STEP
//*****************************************************************
//ICTSSFB EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSIXC    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSIXC,
//             DISP=(OLD,KEEP)
//TSSFB    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSFB,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSIXC,
//*            VOL=(,RETAIN,,99,REF=*.ICTSIXC.TSIXC),LABEL=(114,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSFB  COPYDDN TSSFB SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDQY IMAGE COPY STEP
//*****************************************************************
//ICTSDQY EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSFB    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSFB,
//             DISP=(OLD,KEEP)
//TSDQY    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDQY,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSSFB,
//*            VOL=(,RETAIN,,99,REF=*.ICTSSFB.TSSFB),LABEL=(115,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDQY  COPYDDN TSDQY SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDQT IMAGE COPY STEP
//*****************************************************************
//ICTSDQT EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDQY    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDQY,
//             DISP=(OLD,KEEP)
//TSDQT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDQT,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSDQY,
//*            VOL=(,RETAIN,,99,REF=*.ICTSDQY.TSDQY),LABEL=(116,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDQT  COPYDDN TSDQT SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDQS IMAGE COPY STEP
//*****************************************************************
//ICTSDQS EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDQT    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDQT,
//             DISP=(OLD,KEEP)
//TSDQS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDQS,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSDQT,
//*            VOL=(,RETAIN,,99,REF=*.ICTSDQT.TSDQT),LABEL=(117,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDQS  COPYDDN TSDQS SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDQE IMAGE COPY STEP
//*****************************************************************
//ICTSDQE EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDQS    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDQS,
//             DISP=(OLD,KEEP)
//TSDQE    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDQE,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSDQS,
//*            VOL=(,RETAIN,,99,REF=*.ICTSDQS.TSDQS),LABEL=(118,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDQE  COPYDDN TSDQE SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDQH IMAGE COPY STEP
//*****************************************************************
//ICTSDQH EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDQE    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDQE,
//             DISP=(OLD,KEEP)
//TSDQH    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDQH,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSDQE,
//*            VOL=(,RETAIN,,99,REF=*.ICTSDQE.TSDQE),LABEL=(119,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDQH  COPYDDN TSDQH SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDQO IMAGE COPY STEP
//*****************************************************************
//ICTSDQO EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDQH    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDQH,
//             DISP=(OLD,KEEP)
//TSDQO    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDQO,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSDQH,
//*            VOL=(,RETAIN,,99,REF=*.ICTSDQH.TSDQH),LABEL=(120,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDQO  COPYDDN TSDQO SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSDQD IMAGE COPY STEP
//*****************************************************************
//ICTSDQD EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDQO    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDQO,
//             DISP=(OLD,KEEP)
//TSDQD    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDQD,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSDQO,
//*            VOL=(,RETAIN,,99,REF=*.ICTSDQO.TSDQO),LABEL=(121,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSDQD  COPYDDN TSDQD SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSICO IMAGE COPY STEP
//*****************************************************************
//ICTSICO EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSDQD    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSDQD,
//             DISP=(OLD,KEEP)
//TSICO    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSICO,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSDQD,
//*            VOL=(,RETAIN,,99,REF=*.ICTSDQD.TSDQD),LABEL=(122,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSICO  COPYDDN TSICO SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSES IMAGE COPY STEP
//*****************************************************************
//ICTSSES EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSICO    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSICO,
//             DISP=(OLD,KEEP)
//TSSES    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSES,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSICO,
//*            VOL=(,RETAIN,,99,REF=*.ICTSICO.TSICO),LABEL=(123,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSES  COPYDDN TSSES SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSNL IMAGE COPY STEP
//*****************************************************************
//ICTSSNL EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSES    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSES,
//             DISP=(OLD,KEEP)
//TSSNL    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSNL,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSSES,
//*            VOL=(,RETAIN,,99,REF=*.ICTSSES.TSSES),LABEL=(124,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSNL  COPYDDN TSSNL SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSNX IMAGE COPY STEP
//*****************************************************************
//ICTSSNX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSNL    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSNL,
//             DISP=(OLD,KEEP)
//TSSNX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSNX,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSSNL,
//*            VOL=(,RETAIN,,99,REF=*.ICTSSNL.TSSNL),LABEL=(125,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSNX  COPYDDN TSSNX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSXL IMAGE COPY STEP
//*****************************************************************
//ICTSSXL EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSNX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSNX,
//             DISP=(OLD,KEEP)
//TSSXL    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSXL,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSSNX,
//*            VOL=(,RETAIN,,99,REF=*.ICTSSNX.TSSNX),LABEL=(126,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSXL  COPYDDN TSSXL SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSSTA IMAGE COPY STEP
//*****************************************************************
//ICTSSTA EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSXL    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSXL,
//             DISP=(OLD,KEEP)
//TSSTA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSTA,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSSXL,
//*            VOL=(,RETAIN,,99,REF=*.ICTSSXL.TSSXL),LABEL=(127,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSSTA  COPYDDN TSSTA SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSLVH IMAGE COPY STEP
//*****************************************************************
//ICTSLVH EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSSTA    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSSTA,
//             DISP=(OLD,KEEP)
//TSLVH    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSLVH,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSSTA,
//*            VOL=(,RETAIN,,99,REF=*.ICTSSTA.TSSTA),LABEL=(128,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSLVH  COPYDDN TSLVH SHRLEVEL(CHANGE)
//* //*************************************************************
//* //* SYSTSISH IMAGE COPY STEP
//* //*************************************************************
//* //ICTSISH EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//* //             COND=(4,LT)
//* //TSLVH    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSLVH,
//* //             DISP=(OLD,KEEP)
//* //TSISH    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSISH,
//* //             DISP=(NEW,PASS,DELETE),
//* //*            UNIT=AFF=TSLVH,
//* //*            VOL=(,RETAIN,,99,REF=*.ICTSLVH.TSLVH),
//* //             LABEL=(129,SL)
//* //SYSPRINT DD  SYSOUT=*
//* //SYSUDUMP DD  SYSOUT=*
//* //SYSIN    DD  *
//* COPY TABLESPACE DSNDB06.SYSTSISH COPYDDN TSISH
//* SHRLEVEL(CHANGE)
//* //*************************************************************
//* //* SYSTSTSH IMAGE COPY STEP
//* //*************************************************************
//* //ICTSTSH EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//* //             COND=(4,LT)
//* //TSISH    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSISH,
//* //             DISP=(OLD,KEEP)
//* //TSTSH    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSTSH,
//* //             DISP=(NEW,PASS,DELETE),
//* //*            UNIT=AFF=TSISH,
//* //*            VOL=(,RETAIN,,99,REF=*.ICTSISH.TSISH),
//* //             LABEL=(130,SL)
//* //SYSPRINT DD  SYSOUT=*
//* //SYSUDUMP DD  SYSOUT=*
//* //SYSIN    DD  *
//* COPY TABLESPACE DSNDB06.SYSTSTSH  COPYDDN TSTSH
//* SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSLGRNX IMAGE COPY STEP
//* -> SYSLGRNX IS ALWAYS COPIED NEXT TO LAST§
//*****************************************************************
//ICLGRNX EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//TSLVH    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSLVH,
//             DISP=(OLD,KEEP)
//LGRNX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSLGRNX,
//             DISP=(NEW,PASS,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=TSLVH,
//*            VOL=(,RETAIN,,99,REF=*.ICTSLVH.TSLVH),LABEL=(129,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB01.SYSLGRNX  COPYDDN LGRNX SHRLEVEL(CHANGE)
//*****************************************************************
//* SYSTSCPY IMAGE COPY STEP
//* -> SYSTSCPY IS ALWAYS IMAGE COPIED LAST§
//*****************************************************************
//ICTSCPY EXEC PGM=DSNUTILB,PARM='DB2S,IMAGCOPY',REGION=8M,
//             COND=(4,LT)
//LGRNX    DD  DSN=DB2S.BACK.IMAGCOPY.SYSLGRNX,
//             DISP=(OLD,KEEP)
//TSCPY    DD  DSN=DB2S.BACK.IMAGCOPY.SYSTSCPY,
//             DISP=(NEW,KEEP,DELETE),
//             SPACE=(CYL,(2,2)),
//             UNIT=3390
//*            UNIT=AFF=LGRNX,
//*            VOL=(,RETAIN,,99,REF=*.ICLGRNX.LGRNX),LABEL=(130,SL)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   COPY TABLESPACE DSNDB06.SYSTSCPY  COPYDDN TSCPY SHRLEVEL(CHANGE)

./ ADD NAME=DSNTIJMJ
//*********************************************************************
//* JOB NAME = DSNTIJMJ
//*
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM
//*
//*    Licensed Materials - Property of IBM
//*    5650-DB2
//*    (C) COPYRIGHT 1982, 2018 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 12
//*
//* FUNCTION = Creates the environment files for the DB2-supplied
//*            Java WLM environment
//*
//* PSEUDOCODE =
//*   DSNTIJJ  STEP      Creates a Language Environment run-time options
//*                      data set for DSNWLMJ, the address space proc
//*                      for the DSNWLM_JAVA
//*                      core WLM environment.
//*   DSNTIJCV STEP      Creates the directory of the environment
//*                      variable file which is created in job step
//*                      DSNTIJR.
//*   DSNTIJR  STEP      Creates an environment variable file in HFS
//*                      for the DSNWLM_JAVA
//*                      core WLM environment.
//*   DSNTIJCP STEP      Creates the directory of the JVM startup
//*                      options file which is created in job step
//*                      DSNTIJS.
//*   DSNTIJS  STEP      Creates a JVM startup options file in HFS
//*                      for the DSNWLM_JAVA
//*                      core WLM environment.
//*
//* NOTES =
//*   Please check this job carefully to ensure that the system
//*   library names are the correct library names for your site.
//*
//*   Job step DSNTIJJ creates a Language Environment run-time options
//*   data set for stored procedures and UDFs that run in
//*     DSNWLM_JAVA,
//*   the DB2 core WLM environment for DB2 Java routines.  This data
//*   set is allocated by the JAVAENV DD of the DSNWLMJ address space
//*   proc, which is created by installation job DSNTIJMW.
//*
//*   Job step DSNTIJCV executes the DB2 REXX EXEC DSNTJMJX
//*   which can be used to create the directory of the
//*   environment file created by job step DSNTIJR below
//*   if it does not exist. The absolute path and name of the
//*   environment file is passed to DSNTJMJX as a parameter.
//*   The file name is included to validate that it does not
//*   already exist as a directory. The directory of the
//*   environment file, if it does not exist, or any portion
//*   of it that does not already exist, is created in HFS/zFS.
//*   The environment file is created within the directory
//*   by job step DSNTIJR.
//*
//*   Job step DSNTIJR creates the environment variable file in HFS for
//*     DSNWLM_JAVA.
//*   The name of this file is assigned to the _CEE_ENVFILE variable
//*   of the Language Environment run-time options data set created
//*   by job step DSNTIJJ.
//*   The absolute path and name of this file is also passed as a
//*   parameter to the DB2 REXX EXEC DSNTJMJX in job step DSNTIJCV,
//*   where the directory of this file, if it does not exist,
//*   is created.
//*
//*   Job step DSNTIJCP executes the DB2 REXX EXEC DSNTJMJX
//*   which can be used to create the directory of the
//*   JVM startup options file created by job step DSNTIJS below
//*   if it does not exist. The absolute path and name of the
//*   JVM startup options file is passed to DSNTJMJX as a parameter.
//*   The file name is included to validate that it does not
//*   already exist as a directory. The directory of the
//*   JVM startup options file, if it does not exist, or any portion
//*   of it that does not already exist, is created in HFS/zFS.
//*   The JVM startup options file is created within the directory
//*   by job step DSNTIJS.
//*
//*   Job step DSNTIJS creates the JVM startup options file in HFS for
//*     DSNWLM_JAVA.
//*   The name of this file is assigned to the JVMPROPS variable
//*   of the environment variable file created by job step DSNTIJR.
//*   The absolute path and name of this file is also passed as a
//*   parameter to the DB2 REXX EXEC DSNTJMJX in job step DSNTIJCP,
//*   where the directory of this file, if it does not exist,
//*   is created.
//*
//*   Before running this job, review the DSNTIJx job steps and
//*   optionally update the following Java paths:
//*      (a) _CEE_ENVFILE is the name of a HFS file that contains
//*          settings for environment variables.
//*            Example: /usr/lpp/db2c10/base/classes/dsnenvfile.txt
//*          This file is created by job step DSNTIJR.
//*          The directory of this file is created by job step
//*          DSNTIJCV if it does not exist.
//*      (b) DB2_BASE is the highest-level directory in the set of HFS
//*          directories that contain DB2 for z/OS code
//*            Example: /usr/lpp/db2c10/base
//*      (c) JCC_HOME is the path where the JCC driver is
//*          located.
//*            Example: /usr/lpp/db2c10/jdbc
//*      (d) JAVA_HOME is the path where the JDK is located.
//*            Example: /usr/lpp/java150/J5.0
//*      (e) JVMPROPS is the name of a HFS file that contains startup
//*          options for the JVM
//*            Example: /usr/lpp/java/properties/dsnjvmsp
//*          This file is created by job step DSNTIJS.
//*          The directory of this file is created by job step
//*          DSNTIJCP if it does not exist.
//*   The user ID used to run this job needs to have write permission
//*   to the HFS directories where these files are created.
//*   This user ID must also have an OMVS segment.
//*
//* CHANGE LOG:
//*   05/07/2018 Split up DSNTIJMV                               s74993
//*               - DSNTIJMV: Defines DB2 and IRLM to z/OS
//*               - DSNTIJMA: Adds the DB2 and IRLM startup procs to
//*                           the system proclib
//*               - DSNTIJMP: Adds the DB2 language procs to the
//*                           system proclib
//*               - DSNTIJMW: Adds the startup procs for the DB2-
//*                           supplied WLM environments to the system
//*                           proclib
//*               - DSNTIJMJ: Creates the environment files for the
//*                           DB2-supplied Java WLM environment
//*   08/22/2018 Provide Db2 installation panel fields for       s77909
//*              Java-related configuration
//*
//*********************************************************************
//*
//*********************************************************************
//* Create a Language Environment run-time options data set for
//*   DSNWLM_JAVA,
//* the WLM environment for DB2-supplied Java stored procs and UDFs.
//*
//* This data set is allocated by the JAVAENV DD of the DSNWLMJ
//* address space proc that is created by installation job DSNTIJMW.
//*
//* Review the settings below and update as appropriate for your
//* environment:
//* - If you modify the data set name allocated by STDOUT, you need to
//*   make the same change to the JAVAENV DD setting in the DSNWLMJ
//*   address space proc.
//* - The HFS file specified by the _CEE_ENVFILE parameter is created
//*   by job step DSNTIJR below. If you change the _CEE_ENVFILE setting
//*   here, make the same change to the parameter passed to the DB2
//*   REXX EXEC DSNTJMJX in job step DSNTIJCV, and make the same
//*   change to the STDOUT DD of job step DSNTIJR.
//* Refer to the DB2 Programming for Java guide for a description of
//* the environment variables and other options in the Language
//* Environment run-time options data set.
//*********************************************************************
//DSNTIJJ EXEC PGM=BPXBATCH,COND=(4,LT)
//STDPARM  DD  *
sh echo
'ENVAR("_CEE_ENVFILE=/usr/lpp/db2c10/base/classes/dsnenvfile.txt"),';
echo 'MSGFILE(JSPDEBUG,,,,ENQ),';
echo 'XPLINK(ON)';
//STDOUT   DD  DSN=DSN§§0.DSNWLMJ.JAVAENV,
//             DISP=(,CATLG,DELETE),
//             UNIT=SYSDA,SPACE=(TRK,1),
//             DCB=(RECFM=VB,LRECL=255)
//*
//*********************************************************************
//* Create the directory of the environment file which is created in
//* job step DSNTIJR below. The directory is created if it does not
//* exist.
//*
//* The parameter passed to the DB2 REXX EXEC DSNTJMJX is the
//* absolute path and name of the environment file which is created
//* in job step DSNTIJR below.
//*
//* If you modify the parameter passed to the DB2 REXX EXEC DSNTJMJX,
//* you need to make the same change to the _CEE_ENVFILE setting in the
//* Language Environment run-time options data set created by job step
//* DSNTIJJ, and make the same change to the STDOUT DD of job step
//* DSNTIJR.
//*********************************************************************
//DSNTIJCV EXEC PGM=IKJEFT01,DYNAMNBR=20,
//             COND=(4,LT)
//SYSEXEC  DD  DISP=SHR,DSN=DSN§§0.SDSNCLST
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
  DSNTJMJX +
  /usr/lpp/db2c10/base/classes/dsnenvfile.txt
//*
//*********************************************************************
//* Create the environment variable file in HFS for
//*   DSNWLM_JAVA,
//* the WLM environment for DB2-supplied Java stored procs and UDFs.
//*
//* The file allocated by STDOUT below is used by the _CEE_ENVFILE
//* environment variable of the Language Environment run-time options
//* data set created by job step DSNTIJJ.
//*
//* Review the settings below and update as appropriate for your
//* environment.  If you modify the data set name allocated by STDOUT,
//* you need to make the same change to the _CEE_ENVFILE setting in the
//* Language Environment run-time options data set created by job step
//* DSNTIJJ, and make the same change to the parameter passed to the
//* DB2 REXX EXEC DSNTJMJX in job step DSNTIJCV.
//* - CLASSPATH needs to specify the path for the Java class that
//*   contains the jar file for z/OS XML System Services XML schema
//*   registration (gxljapi.jar).
//* - The HFS file specified by the JVMPROPS parameter is created
//*   by job step DSNTIJS below.  If you change the JVMPROPS setting
//*   here, make the same change to the parameter passed to the
//*   DB2 REXX EXEC DSNTJMJX in job step DSNTIJCP, and
//*   make the same change to the STDOUT DD of job step DSNTIJS.
//* - LIBPATH needs to specify the path for the native library for z/OS
//*   XML System Services (libGXLNVBAT.so).
//* - STEPLIB needs to specify the name of the DB2 for z/OS runtime
//*   library (SDSNLOAD)
//*
//* Refer to the DB2 Programming for Java guide for a description of
//* the environment variables and other options in this file.
//*********************************************************************
//DSNTIJR EXEC PGM=BPXBATCH,COND=(4,LT)
//STDPARM  DD  *
sh
echo CLASSPATH=/usr/include/java_classes/gxljapi.jar;
echo DB2_BASE=/usr/lpp/db2c10/base;
echo JCC_HOME=/usr/lpp/db2c10/jdbc;
echo JAVA_HOME=/usr/lpp/java150/J5.0;
echo JVMPROPS=/usr/lpp/java/properties/dsnjvmsp;
echo LIBPATH=/usr/lib/java_runtime;
echo STEPLIB=DSN§§0.SDSNLOAD;
//STDOUT   DD  PATH='/usr/lpp/db2c10/base/classes/dsnenvfile.txt',
//             PATHOPTS=(OWRONLY,OCREAT,OEXCL),
//             PATHMODE=(SIRWXU,SIRGRP)
//STDERR   DD  SYSOUT=*
//*
//*********************************************************************
//* Create the directory of the JVM startup options file which is
//* created in job step DSNTIJS below. The directory is created if
//* it does not exist.
//*
//* The parameter passed to the DB2 REXX EXEC DSNTJMJX is the
//* absolute path and name of the JVM startup options file which is
//* created in job step DSNTIJS below.
//*
//* If you modify the parameter passed to the DB2 REXX EXEC DSNTJMJX,
//* you need to make the same change to the JVMPROPS setting in the
//* Language Environment run-time options data set created by job step
//* DSNTIJJ, and make the same change to the STDOUT DD of job step
//* DSNTIJS.
//*********************************************************************
//DSNTIJCP EXEC PGM=IKJEFT01,DYNAMNBR=20,
//             COND=(4,LT)
//SYSEXEC  DD  DISP=SHR,DSN=DSN§§0.SDSNCLST
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
  DSNTJMJX +
  /usr/lpp/java/properties/dsnjvmsp
//*
//*********************************************************************
//* Create the JVM startup options file in HFS for
//*   DSNWLM_JAVA,
//* the WLM environment for DB2-supplied Java stored procs and UDFs.
//*
//* The name allocated by STDOUT below is used by the JVMPROPS
//* environment variable of the Language Environment run-time options
//* data set created by job step DSNTIJJ.
//*
//* Review the settings below and update as appropriate for your
//* environment.  If you modify the data set name allocated by STDOUT,
//* you need to make the same change to the JVMPROPS setting in the
//* Language Environment run-time options data set created by job step
//* DSNTIJJ, and make the same change to the parameter passed to the
//* DB2 REXX EXEC DSNTJMJX in job step DSNTIJCP.
//*
//* Refer to the DB2 Programming for Java guide for a description of
//* the environment variables and other options in this file.
//*********************************************************************
//DSNTIJS EXEC PGM=BPXBATCH,COND=(4,LT)
//STDPARM  DD  *
sh
echo '££ This file contains optional JVM startup options for';
echo '££   DSNWLM_JAVA,';
echo '££ the WLM environment for DB2-supplied Java stored procs and';
echo '££ UDFs.  Lines that begin with a single "£" are commented-out';
echo '££ JVM startup startup options.  To activate an option, delete';
echo '££ the leading "£".';
echo '££';
echo '££ Sets the initial size of middleware heap within';
echo '££ the non-system heap';
echo '£-Xms64M';
echo '££ Sets the maximum size of nonsystem heap';
echo '£-Xmx128M';
//STDOUT   DD  PATH='/usr/lpp/java/properties/dsnjvmsp',
//             PATHOPTS=(OWRONLY,OCREAT,OEXCL),
//             PATHMODE=(SIRWXU,SIRGRP)
//STDERR   DD  SYSOUT=*
//*

./ ADD NAME=DSNTIJML
//*********************************************************************
//*  NAME = DSNTIJML
//*
//*  DESCRIPTIVE NAME = JOB TO INSTALL MQLISTENER
//*
//*    LICENSED MATERIALS - PROPERTY OF IBM
//*    5605-DB2
//*    (C) COPYRIGHT 2004, 2010 IBM CORP.  ALL RIGHTS RESERVED.
//*
//*    STATUS = VERSION 10
//*
//*  Pseudocode =
//*    COPYHFS  Step     Copy DSNTEJSP file as untar.cmd file on HFS
//*    UNTARLN  Step     Untar mqlsn.tar file on HFS
//*    CREATBL  Step     Create SYSMQL.LISTENERS table
//*    BINDBRM  Step     Bind the dbrms.
//*
//*  §§§ IMPORTANT  §§§
//*  §§§ This is a case-sensitive file. Please update this file using
//*  §§§ CAPS OFF
//*  §§§ IMPORTANT  §§§
//*  Notes =
//*    Follow the instructions below to customize this job for your
//*    system :
//*    (1) Add a valid job card
//*    (2) Locate and change all occurrences of the following strings
//*        as indicated:
//*        (A) '§DSN§' to the subsystem name of your DB2
//*        (B) 'DSNTIA§§' to the plan name for DSNTIAD on your DB2
//*        (C) 'DSN§§0' to the prefix of the target library for DB2
//*
//*    (3) If MQListener is not installed in the default path
//*        ( ex:  /usr/lpp/db2/db2a10/mql)
//*        , please change the path information in
//*        step COPYHFS and update the path information in DSNTEJSP
//*        member to point to the directory where MQListener is
//*        installed.
//*        The default paths of MQListener:
//*        /usr/lpp/db2/db2b10/mql  (DB2 Sequoia)
//*        /usr/lpp/db2/db2a10/mql  (DB2 10)
//*        /usr/lpp/db2mql_910      (DB2 9)
//*
//* CHANGE ACTIVITY =
//*********************************************************************
//*
//JOBLIB  DD  DSN=DSN§§0.SDSNEXIT,DISP=SHR
//        DD  DSN=DSN§§0.SDSNLOAD,DISP=SHR
//        DD  DSN=DSN§§0.RUNLIB.LOAD,DISP=SHR
//*********************************************************************
//*
//* COPY FILE FROM SAMPLE LIBRARY TO HFS
//*
//*********************************************************************
//*
//COPYHFS EXEC PGM=IKJEFT01
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSTSIN DD *
   oput 'DSN§§0.SDSNSAMP(DSNTEJSP)'  -
   '/usr/lpp/db2/db2a10/mql/untar.cmd'
//*
//*********************************************************************
//*
//*        STEP  2: UNTAR THE FILES ON HFS.
//*
//*********************************************************************
//*
//UNTARLN  EXEC PGM=BPXBATCH,REGION=8M
//STDIN    DD  PATH='/usr/lpp/db2/db2a10/mql/untar.cmd',
//         PATHOPTS=(ORDONLY)
//STDOUT   DD  PATH='/usr/lpp/db2/db2a10/mql/install.out',
//         PATHOPTS=(OWRONLY,OCREAT),PATHMODE=SIRWXU
//STDERR   DD  PATH='/usr/lpp/db2/db2a10/mql/install.err',
//         PATHOPTS=(OWRONLY,OCREAT),PATHMODE=SIRWXU
//*
//*********************************************************************
//*
//*        STEP  3: CREATE SYSMQL.LISTENERS TABLE
//*
//*********************************************************************
//*
//CREATBL EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
 DSN SYSTEM(§DSN§)
 RUN PROGRAM(DSNTIAD)          -
     PLAN(DSNTIA§§)           -
     LIB('DSN§§0.RUNLIB.LOAD') -
     PARM('RC0')
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSIN    DD *
  DROP TABLE SYSMQL.LISTENERS;
  COMMIT;
  CREATE TABLE SYSMQL.LISTENERS (
      CONFIGURATIONNAME VARCHAR(18) NOT NULL DEFAULT '',
      QUEUEMANAGER VARCHAR(48) NOT NULL DEFAULT '',
      INPUTQUEUE VARCHAR(48) NOT NULL,
      PROCNODE VARCHAR(30) NOT NULL DEFAULT '',
      PROCSCHEMA VARCHAR(30) NOT NULL,
      PROCNAME VARCHAR(128) NOT NULL,
      PROCTYPE INTEGER NOT NULL DEFAULT 1,
      NUMINSTANCES INTEGER NOT NULL CONSTRAINT POSNUMINSTANCES
        CHECK (NUMINSTANCES > 0 AND NUMINSTANCES <=128) DEFAULT 1,
      WAITMILLIS INTEGER NOT NULL CONSTRAINT POSWAITMILLIS
        CHECK (WAITMILLIS >= 0) DEFAULT 50,
      MINQUEUEDEPTH INTEGER NOT NULL CONSTRAINT POSMINQUEUEDEPTH
        CHECK (MINQUEUEDEPTH >=1) DEFAULT 1,
      UNIQUE (CONFIGURATIONNAME, QUEUEMANAGER, INPUTQUEUE)
  );
  COMMIT;
  CREATE UNIQUE INDEX MQLIDX ON SYSMQL.LISTENERS (
                 CONFIGURATIONNAME,
                 QUEUEMANAGER,
                 INPUTQUEUE);
  COMMIT;
//*
//*********************************************************************
//*
//*        STEP  4: BIND THE DBRM's to PLAN DB2MQLSN
//*
//*********************************************************************
//*
//BINDBRM    EXEC PGM=IKJEFT01,DYNAMNBR=20
//DBRMLIB    DD  DISP=SHR,DSN=DSN§§0.SDSNDBRM
//SYSPRINT   DD SYSOUT=*
//SYSTSPRT   DD SYSOUT=*,DCB=BLKSIZE=133
//SYSTSIN    DD *
DSN SYSTEM(§DSN§)
BIND PACKAGE(LSNR) MEMBER(DSNàMQRN) ACTION(REPLACE) -
  ISOLATION(CS);
BIND PACKAGE(LSNR) MEMBER(DSNàMQCF) ACTION(REPLACE) -
  ISOLATION(CS);
BIND PLAN(DB2MQLSN)                                  +
      PKLIST(LSNR.*) +
     ACTION(REP) DISCONNECT(EXPLICIT) ISOLATION(CS);
RUN  PROGRAM(DSNTIAD) PLAN(DSNTIA§§)
//SYSIN DD *
  GRANT EXECUTE ON PLAN DB2MQLSN TO PUBLIC;
//*

./ ADD NAME=DSNTIJNX
//********************************************************************* 00010000
//* JOB NAME = DSNTIJNX                                                 00011000
//*                                                                     00012000
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM                          00013000
//*                                                                     00014000
//*    Licensed Materials - Property of IBM                             00015000
//*    5650-DB2                                                         00016000
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.         00017000
//*                                                                     00018000
//*    STATUS = Version 12                                              00019000
//*                                                                     00020000
//* FUNCTION = CREATE NEW-FUNCTION DEPENDENT OBJECTS                    00021000
//*                                                                     00022000
//* PSEUDOCODE =                                                        00023000
//*   DSNTIRU  STEP     REBIND SPUFI PACKAGES                           00024000
//*   DSNTIRX  STEP     REBIND DB2 REXX LANGUAGE SUPPORT                00025000
//*                                                                     00026000
//* DEPENDENCIES =                                                      00027000
//*                                                                     00028000
//* NOTES =                                                             00029000
//*                                                                     00030000
//* Change activity =                                                   00031000
//*   08/18/2014 Single-phase migration             s21938_inst1 s21938 00032000
//*                                                                     00033000
//********************************************************************* 00034000
//JOBLIB  DD  DISP=SHR,DSN=DSN§§0.SDSNEXIT                              00035000
//        DD  DISP=SHR,DSN=DSN§§0.SDSNLOAD                              00036000
//*                                                                     00037000
//DSNTIRU EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00038000
//SYSTSPRT DD  SYSOUT=*                                                 00039000
//SYSPRINT DD  SYSOUT=*                                                 00040000
//SYSUDUMP DD  SYSOUT=*                                                 00041000
//SYSTSIN  DD  *                                                        00042000
  DSN SYSTEM(DSN)                                                       00043000
  END                                                                   00044000
//*                                                                     00045000

./ ADD NAME=DSNTIJPD
//********************************************************************* 00010000
//*  NAME = DSNTIJPD                                                    00011000
//*                                                                     00012000
//*  DESCRIPTIVE NAME = DB2 INSTALL JOB                                 00013000
//*                                                                     00014000
//*    LICENSED MATERIALS - PROPERTY OF IBM                             00015000
//*    5650-DB2                                                         00016000
//*    (C) COPYRIGHT 1982, 2016 IBM CORP.  ALL RIGHTS RESERVED.         00017000
//*                                                                     00018000
//*    STATUS = VERSION 12                                              00019000
//*                                                                     00020000
//*  FUNCTION = EXECUTES THE DSNTP2DP EXEC TO GENERATE STATEMENTS       00021000
//*             FOR CONVERTING EXISTING BOUND APPLICATIONS THAT USE     00022000
//*             PRIVATE PROTOCOL TO DRDA.                               00023000
//*                                                                     00024000
//*  PSEUDOCODE =                                                       00025000
//*    DSNTCI   STEP    *OPTIONAL: CREATE CATALOG INDEXES FOR DSNTP2DP  00026000
//*    DSNTRI   STEP    *OPTIONAL: REBUILD INDEXES AND RUNSTATS INDEX   00027000
//*    DSNTCPP  STEP    *OPTIONAL: CREATE AND POPULATE A PRIVATE        00028000
//*                      PROTOCOL INFORMATION TABLE (PPINFOTABLE)       00029000
//*    DELETE   STEP     DELETE DATA SETS CREATED BY THIS JOB           00030000
//*    DSNTP2DP STEP     EXECUTE THE DSNTP2DP EXEC                      00031000
//*    DSNTDI   STEP    *OPTIONAL: DROP CATALOG INDEXES FOR DSNTP2DP    00032000
//*                                                                     00033000
//*  DEPENDENCIES =                                                     00034000
//*    (1) REQUIRES DB2 REXX LANGUAGE SUPPORT                           00035000
//*    (2) OPTIONALLY REQUIRES A PRIVATE PROTOCOL INFORMATION TABLE     00036000
//*        BE CREATED                                                   00037000
//*                                                                     00038000
//*  NOTES =                                                            00039000
//*    THIS JOB CONTAINS OPTIONAL STEPS FOR ADDING AND INITIALIZING     00040000
//*    SPECIAL INDEXES ON THE DB2 CATALOG THAT ENHANCE THE PERFORMANCE  00041000
//*    OF THE DSNTP2DP EXEC.  ANOTHER OPTIONAL STEP CAN BE USED TO      00042000
//*    DROP THESE INDEXES AFTER DSNTP2DP COMPLETES.  THESE INDEXES ARE  00043000
//*    CREATED IN THE DEFAULT STORAGE GROUP, SYSDEFLT.  IF YOUR SYSTEM  00044000
//*    NEEDS TO MANAGE THE STORAGE FOR THESE INDEXES DIFFERENTLY,       00045000
//*    MODIFY THE CREATE INDEX STATEMENTS IN JOB STEP DSNTCI.           00046000
//*    THE PERFORMANCE OF THIS JOB ALSO DEPENDS ON THE STATISTICS       00047000
//*    BEING AS UP TO DATE AS POSSIBLE FOR THE SYSTEM PROVIDED          00048000
//*    INDEXES DEFINED ON THE FOLLOWING CATALOG TABLES:                 00049000
//*      SYSIBM.SYSTABLES                                               00050000
//*      SYSIBM.SYSPACKAGE                                              00051000
//*      SYSIBM.SYSPACKDEP                                              00052000
//*      SYSIBM.SYSPACKSTMT                                             00053000
//*      SYSIBM.SYSPLAN                                                 00054000
//*      SYSIBM.SYSPLANDEP                                              00055000
//*      SYSIBM.SYSPACKLIST                                             00056000
//*                                                                     00057000
//*    PRIOR TO RUNNING THIS JOB, CUSTOMIZE IT FOR YOUR SYSTEM:         00058000
//*    (1) ADD A VALID JOB CARD                                         00059000
//*    (2) LOCATE AND CHANGE ALL OCCURRENCES OF THE FOLLOWING STRINGS   00060000
//*        AS INDICATED:                                                00061000
//*        (A) THE SUBSYSTEM NAME '§DSN§' TO THE NAME OF YOUR DB2       00062000
//*        (B) 'DSN§§0' TO THE PREFIX OF THE TARGET LIBRARY FOR DB2     00063000
//*        (C) 'DSNTIA§§' TO THE PLAN NAME FOR DSNTIAD ON YOUR DB2      00064000
//*        (D) '§AUTHID§' TO THE CREATOR NAME USED TO CREATE AND        00065000
//*            AND POPULATE THE PRIVATE PROTOCOL INFORMATION TABLE      00066000
//*            (PPINFOTABLE)                                            00067000
//*    (3) TO ACTIVATE THE SPECIAL INDEXES ON THE DB2 CATALOG FOR       00068000
//*        ENHANCED DSNTP2DP PERFORMANCE, UNCOMMENT JOB STEPS DSNTCI,   00069000
//*        DSNTRI, AND DSNTDI.  FOR FASTER REBUILD INDEX PROCESSING,    00070000
//*        CHANGE THE DEVICE TYPE IN THE SORTDEVT CLAUSE TO A VIRTUAL   00071000
//*        INPUT/OUTPUT DEVICE TYPE.                                    00072000
//*    (4) TO CREATE AND POPULATE THE PPINFOTABLE, UNCOMMENT JOB STEP   00073000
//*        DSNTCPP. IF NO PPINFOTABLE EXISTS OR IS TO BE CREATED, THEN  00074000
//*        ALTER THE DSNTP2DP COMMAND IN JOB STEP DSNTP2DP BY REMOVING  00075000
//*        THE PPINFOTABLE PARAMETER AS FOLLOWS:                        00076000
//*            DSNTP2DP SSID=§DSN§ PLANS=Y PACKAGES=Y                   00077000
//*                                                                     00078000
//* CHANGE ACTIVITY =                                                   00079000
//*  DM1364  - 03/22/10 - HJS - NEW PART TO RUN DSNTP2DP                00080000
//*  DM1440  - 07/12/10 - HJS - ADD USER INDEXES                        00081000
//*  DN1651  - 11/07/12 - BCM - ADD SET CURRENT SQLID      DN1651_INST1 00082000
//*  S24922  - 10/02/15 - BCM - INSTALLATION W/O SYSADM     S24922_INST100083000
//*  PI42601 - 02/15/16 - LONG DATA SET NAMES                           00084000
//*                                                                     00085000
//********************************************************************* 00086000
//JOBLIB   DD DISP=SHR,DSN=DSN§§0.SDSNEXIT                              00087000
//         DD DISP=SHR,DSN=DSN§§0.SDSNLOAD                              00088000
//*                                                                     00089000
//********************************************************************* 00090000
//* DSNTCI  : (OPTIONAL) CREATE CATALOG INDEXES FOR DSNTP2DP            00091000
//********************************************************************* 00092000
//*  //DSNTICI  EXEC PGM=IKJEFT01,DYNAMNBR=20                           00093000
//*  //SYSTSPRT  DD SYSOUT=*                                            00094000
//*  //SYSPRINT  DD SYSOUT=*                                            00095000
//*  //SYSUDUMP  DD SYSOUT=*                                            00096000
//*  //SYSTSIN   DD *                                                   00097000
//*    DSN SYSTEM(§DSN§)                                                00098000
//*    RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) -                           00099000
//*         LIBRARY('DSN§§0.RUNLIB.LOAD')                               00100000
//*    END                                                              00101000
//*  //SYSIN    DD  *                                                   00102000
//*    SET CURRENT SQLID = 'SYSADM';                                    00103000
//*    CREATE INDEX SYSIBM.DSN_USERPACKAGE01                            00104000
//*           ON SYSIBM.SYSPACKAGE                                      00105000
//*             (TYPE,DBPROTOCOL,COLLID,NAME,CONTOKEN)                  00106000
//*           USING STOGROUP SYSDEFLT PRIQTY -1   SECQTY -1             00107000
//*           PCTFREE 0 CLOSE NO DEFER YES;                             00108000
//*    CREATE INDEX SYSIBM.DSN_USERPACKSTMT01                           00109000
//*           ON SYSIBM.SYSPACKSTMT                                     00110000
//*             (COLLID,NAME,CONTOKEN,STATUS)                           00111000
//*           USING STOGROUP SYSDEFLT PRIQTY -1   SECQTY -1             00112000
//*           PCTFREE 0 CLOSE NO DEFER YES;                             00113000
//*    CREATE INDEX SYSIBM.DSN_USERSTMT01                               00114000
//*           ON SYSIBM.SYSSTMT                                         00115000
//*             (PLNAME,NAME,STMTNO,STMTNOI,SECTNO,SEQNO                00116000
//*             ,EXPLAINABLE,STATUS)                                    00117000
//*           USING STOGROUP SYSDEFLT PRIQTY -1   SECQTY -1             00118000
//*           PCTFREE 0 CLOSE NO DEFER YES;                             00119000
//*    CREATE INDEX SYSIBM.DSN_USERPLAN01                               00120000
//*           ON SYSIBM.SYSPLAN                                         00121000
//*             (DBPROTOCOL,PLENTRIES,NAME)                             00122000
//*           USING STOGROUP SYSDEFLT PRIQTY -1   SECQTY -1             00123000
//*           PCTFREE 0 CLOSE NO DEFER YES;                             00124000
//*    CREATE INDEX SYSIBM.DSN_USERDBRM01                               00125000
//*           ON SYSIBM.SYSDBRM                                         00126000
//*             (PLNAME, NAME)                                          00127000
//*           USING STOGROUP SYSDEFLT PRIQTY -1   SECQTY -1             00128000
//*           PCTFREE 0 CLOSE NO DEFER YES;                             00129000
//*    CREATE INDEX SYSIBM.DSN_USERDBRM02                               00130000
//*           ON SYSIBM.SYSDBRM                                         00131000
//*             (PLNAME)                                                00132000
//*           USING STOGROUP SYSDEFLT PRIQTY -1   SECQTY -1             00133000
//*           PCTFREE 0 CLOSE NO DEFER YES;                             00134000
//*    CREATE INDEX SYSIBM.DSN_USERPLANDEP01                            00135000
//*           ON SYSIBM.SYSPLANDEP                                      00136000
//*             (DNAME,BCREATOR,BNAME,BTYPE)                            00137000
//*           USING STOGROUP SYSDEFLT PRIQTY -1   SECQTY -1             00138000
//*           PCTFREE 0 CLOSE NO DEFER YES;                             00139000
//*                                                                     00140000
//********************************************************************* 00141000
//* DSNTRI  : (OPTIONAL) PERFORM REBUILD INDEX ON NEW INDEXES           00142000
//********************************************************************* 00143000
//*  //DSNTRI   EXEC PGM=DSNUTILB,COND=(4,LT),                          00144000
//*  //             PARM='§DSN§,DSNTIJPD.DSNTRI'                        00145000
//*  //SYSPRINT  DD SYSOUT=*                                            00146000
//*  //UTPRINT   DD SYSOUT=*                                            00147000
//*  //SYSUDUMP  DD SYSOUT=*                                            00148000
//*  //SYSIN     DD *                                                   00149000
//*    REBUILD  INDEX (SYSIBM.DSN_USERPACKAGE01)                        00150000
//*      SORTDEVT SYSDA SORTNUM 4                                       00151000
//*      STATISTICS UPDATE ALL                                          00152000
//*    REBUILD  INDEX (SYSIBM.DSN_USERSTMT01)                           00153000
//*      SORTDEVT SYSDA SORTNUM 4                                       00154000
//*      STATISTICS UPDATE ALL                                          00155000
//*    REBUILD  INDEX (SYSIBM.DSN_USERPLAN01)                           00156000
//*      SORTDEVT SYSDA SORTNUM 4                                       00157000
//*      STATISTICS UPDATE ALL                                          00158000
//*    REBUILD  INDEX (SYSIBM.DSN_USERDBRM01)                           00159000
//*      SORTDEVT SYSDA SORTNUM 4                                       00160000
//*      STATISTICS UPDATE ALL                                          00161000
//*    REBUILD  INDEX (SYSIBM.DSN_USERDBRM02)                           00162000
//*      SORTDEVT SYSDA SORTNUM 4                                       00163000
//*      STATISTICS UPDATE ALL                                          00164000
//*    REBUILD  INDEX (SYSIBM.DSN_USERPLANDEP01)                        00165000
//*      SORTDEVT SYSDA SORTNUM 4                                       00166000
//*      STATISTICS UPDATE ALL                                          00167000
//*                                                                     00168000
//*                                                                     00169000
//* CREATE A PRIVATE PROTOCOL INFORMATION TABLE (PPINFOTABLE)           00170000
//*                                                                     00171000
//*  //DSNTCPP EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                00172000
//*  //SYSTSPRT DD SYSOUT=*                                             00173000
//*  //SYSPRINT DD SYSOUT=*                                             00174000
//*  //SYSUDUMP DD SYSOUT=*                                             00175000
//*  //SYSTSIN DD *                                                     00176000
//*    DSN SYSTEM(§DSN§)                                                00177000
//*    RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) -                           00178000
//*        LIBRARY('DSN§§0.RUNLIB.LOAD')                                00179000
//*    END                                                              00180000
//*  //SYSIN DD *                                                       00181000
//*    SET CURRENT SQLID = 'SYSADM';                                    00182000
//*    CREATE TABLE §AUTHID§.PPINFOTABLE                                00183000
//*         ( PLANNAME          CHAR(8) NOT NULL                        00184000
//*         , PGMPKGNAME          CHAR(8) NOT NULL                      00185000
//*         , SERVING_LOCATION       CHAR(16) NOT NULL                  00186000
//*         );                                                          00187000
//*    CREATE UNIQUE INDEX §AUTHID§.PPINFOTABLE_IX1                     00188000
//*           ON §AUTHID§.PPINFOTABLE                                   00189000
//*         ( PLANNAME                                                  00190000
//*         , PGMPKGNAME                                                00191000
//*         , SERVING_LOCATION                                          00192000
//*         );                                                          00193000
//*    CREATE INDEX §AUTHID§.PPINFOTABLE_IX2                            00194000
//*           ON §AUTHID§.PPINFOTABLE                                   00195000
//*         ( PGMPKGNAME                                                00196000
//*         );                                                          00197000
//*--UNCOMMENT AND REMOVE THE LEADING DASHES AND REPEAT THE             00198000
//*--SAMPLE INSERT STATEMENT FOR AS MANY ROWS TO BE ADDED               00199000
//*--TO THE TABLE BY REPLACING THE SAMPLE VALUES CLAUSE WITH            00200000
//*--A CLAUSE APPLICABLE TO YOUR INSTALLATION.                          00201000
//*--INSERT INTO §AUTHID§.PPINFOTABLE                                   00202000
//*--    (PLANNAME, PGMPKGNAME, SERVING_LOCATION)                       00203000
//*--  VALUES                                                           00204000
//*--    ('PLAN-NAME','PGMPKGNAME','LOCATION-NAME');                    00205000
//********************************************************************* 00206000
//* DELETE  : DELETE DATA SETS CREATED BY THIS JOB                      00207000
//********************************************************************* 00208000
//DELETE   EXEC PGM=IEFBR14,COND=(4,LT)                                 00209000
//OUTPKGS   DD DSN=DSN§§0.DSNTIJPD.DSNTP2DP.OUTPKGS,                    00210000
//             DISP=(MOD,DELETE),                                       00211000
//             UNIT=SYSDA,SPACE=(TRK,0)                                 00212000
//OUTPLANS  DD DSN=DSN§§0.DSNTIJPD.DSNTP2DP.OUTPLANS,                   00213000
//             DISP=(MOD,DELETE),                                       00214000
//             UNIT=SYSDA,SPACE=(TRK,0)                                 00215000
//*                                                                     00216000
//**********************************************************************00217000
//* DSNTP2DP: GENERATES STATEMENTS FOR CONVERTING EXISTING BOUND        00218000
//*           APPLICATIONS THAT USE PRIVATE PROTOCOL TO DRDA.  THESE    00219000
//*           OUTPUTS ARE CREATED:                                      00220000
//*           - OUTPKGS : CONTAINS GENERATED REBIND PACKAGE STATEMENTS  00221000
//*                       FOR CONVERTING PACKAGES AT THE LOCAL SERVER   00222000
//*                       TO DRDA.  ALSO CONTAINS A BIND PACKAGE COPY   00223000
//*                       STATEMENT FOR EACH REMOTE LOCATION WHERE A    00224000
//*                       LOCAL PACKAGE BEING CONVERTED HAS A DEPENDENCY00225000
//*           - OUTPLANS: CONTAINS GENERATED BIND PLAN STATEMENTS       00226000
//*                       REQUIRED TO CONVERT PLANS USING PRIVATE       00227000
//*                       PROTOCOL TO DRDA.                             00228000
//*           SEE THE OUTPUT FILES ASSOCIATED WITH EACH DD FOR GUIDANCE 00229000
//*           ON PROCESSING THE STATEMENTS.  SEE THE DB2 INSTALLATION   00230000
//*           GUIDE FOR FURTHER GUIDANCE ON USING THE GENERATED         00231000
//*           STATEMENTS.                                               00232000
//**********************************************************************00233000
//DSNTP2DP EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                    00234000
//SYSEXEC  DD DISP=SHR,DSN=DSN§§0.SDSNCLST                              00235000
//SYSTSPRT  DD SYSOUT=*                                                 00236000
//SYSPRINT  DD SYSOUT=*                                                 00237000
//SYSUDUMP  DD SYSOUT=*                                                 00238000
//SYSTSIN   DD *                                                        00239000
  DSNTP2DP SSID=§DSN§ +                                                 00240000
           PLANS=Y +                                                    00241000
           PACKAGES=Y +                                                 00242000
           PPINFOTABLE=§AUTHID§.PPINFOTABLE                             00243000
//OUTPKGS   DD DSN=DSN§§0.DSNTIJPD.DSNTP2DP.OUTPKGS,                    00244000
//             DISP=(,CATLG),                                           00245000
//             UNIT=SYSDA,                                              00246000
//             SPACE=(TRK,(10,10),RLSE),                                00247000
//             DCB=(RECFM=FB,LRECL=80)                                  00248000
//OUTPLANS  DD DSN=DSN§§0.DSNTIJPD.DSNTP2DP.OUTPLANS,                   00249000
//             DISP=(,CATLG),                                           00250000
//             UNIT=SYSDA,                                              00251000
//             SPACE=(TRK,(10,10),RLSE),                                00252000
//             DCB=(RECFM=FB,LRECL=80)                                  00253000
//*                                                                     00254000
//********************************************************************* 00255000
//* DSNTDI  : (OPTIONAL) DROP CATALOG INDEXES FOR DSNTP2DP              00256000
//********************************************************************* 00257000
//*  //DSNTIDI  EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)               00258000
//*  //SYSTSPRT  DD SYSOUT=*                                            00259000
//*  //SYSPRINT  DD SYSOUT=*                                            00260000
//*  //SYSUDUMP  DD SYSOUT=*                                            00261000
//*  //SYSTSIN   DD *                                                   00262000
//*    DSN SYSTEM(§DSN§)                                                00263000
//*    RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) -                           00264000
//*         LIBRARY('DSN§§0.RUNLIB.LOAD')                               00265000
//*    END                                                              00266000
//*  //SYSIN    DD  *                                                   00267000
//*    SET CURRENT SQLID = 'SYSADM';                                    00268000
//*    DROP INDEX SYSIBM.DSN_USERPACKAGE01;                             00269000
//*    DROP INDEX SYSIBM.DSN_USERPACKSTMT01;                            00270000
//*    DROP INDEX SYSIBM.DSN_USERSTMT01   ;                             00271000
//*    DROP INDEX SYSIBM.DSN_USERPLAN01   ;                             00272000
//*    DROP INDEX SYSIBM.DSN_USERDBRM01   ;                             00273000
//*    DROP INDEX SYSIBM.DSN_USERDBRM02   ;                             00274000
//*    DROP INDEX SYSIBM.DSN_USERPLANDEP01;                             00275000

./ ADD NAME=DSNTIJPE
//*********************************************************************
//*  NAME = DSNTIJPE
//*
//*  DESCRIPTIVE NAME = DB2 INSTALL JOB
//*
//*    Licensed Materials - Property of IBM
//*    5650-DB2
//*    (C) COPYRIGHT 1982, 2021 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 12
//*
//*  FUNCTION = RUN THIS JOB ON DB2 12 PRIOR TO:
//*             (1) MIGRATION TO DB2 13
//*             (2) ACTIVATION OF DB2 12 FUNCTION LEVEL V12R1M510
//*
//*             IT QUERIES THE DB2 CATALOG TO IDENTIFY CONDITIONS THAT
//*             WILL NEED TO BE REMEDIED BEFORE YOU ATTEMPT TO MIGRATE
//*             TO DB2 13 OR ATTEMPT TO ACTIVATE DB2 12 FUNCTION LEVEL
//*             V12R1M510, OR CONDITIONS THAT NEED TO BE ATTENDED TO
//*             AFTER YOU HAVE MIGRATED TO DB2 13.
//*
//*             THERE ARE TWO FORMS OF OUTPUT FROM THIS JOB:
//*             (1) 23 REPORTS THAT IDENTIFY CONDITIONS ON DB2 12
//*                 THAT NEED TO BE REMEDIED BEFORE YOU COMMENCE
//*                 MIGRATION TO DB2 13 OR ATTEMPT TO ACTIVATE DB2 12
//*                 FUNCTION LEVEL V12R1M510, OR CONDITIONS THAT
//*                 NEED TO BE ATTENDED TO AFTER YOU HAVE MIGRATED
//*                 TO DB2 13.
//*
//*             (2) A DATA SET OF 'REBIND PACKAGE' DSN SUBCOMMANDS THAT
//*                 CAN BE INPUT TO DSN TO REBIND PACKAGES THAT NEED
//*                 TO BE REBOUND TO AVOID AUTOMATIC REBIND WHEN THE
//*                 PACKAGES ARE EXECUTED IN DB2 13. THIS DATA SET
//*                 IS ALLOCATED TO THE REBIND08 DD CARD. REVIEW THE
//*                 CONTENTS OF THIS DATA SET CAREFULLY PRIOR TO
//*                 PROCESSING IT.
//*
//*  PSEUDOCODE =
//*    DELETE   STEP     REMOVE DATA SETS CREATED BY PREVIOUS RUNS
//*    DSNTGEN  STEP     COPY DSNTPMQ EXEC TO A TEMP PDS
//*    DSNTPMQ  STEP     CALL DSNTPMQ TO GENERATE PREMIGRATION REPORTS
//*
//*     NOTES = THE JCL REQUIRES DB2 REXX IN THE DB2 ENVIRONMENT YOU
//*             ARE MIGRATING FROM.
//*
//*             THE FOLLOWING MANUAL TAILORING IS REQUIRED:
//*             1. ADD A VALID JOB CARD.
//*             2. LOCATE AND CHANGE ALL OCCURRENCES OF THE FOLLOWING
//*                STRINGS AS INDICATED:
//*                A. '§SYSADM§' TO THE AUTHORIZATION ID TO BE USED
//*                   BY DB2 QUERIES IN THIS JOB.
//*                B. '§DSN§' TO THE NAME OF THE DB2 SUBSYSTEM YOU ARE
//*                   PREPARING TO MIGRATE.
//*                C. 'DSN§§0' TO THE PREFIX OF THE DB2 TARGET
//*                   LIBRARIES FOR THE DB2 SUBSYSTEM YOU ARE
//*                   PREPARING TO MIGRATE.
//*
//* CHANGE ACTIVITY =
//*   2021/02/21 PH33727     Created for Db2 12
//*
//*********************************************************************
//*
//JOBLIB  DD  DSN=DSN§§0.SDSNEXIT,DISP=SHR
//        DD  DSN=DSN§§0.SDSNLOAD,DISP=SHR
//*
//DELETE  EXEC PGM=IEFBR14
//REBIND08 DD DSN=DSN§§0.DSNTIJPE.REBIND08,
//            DISP=(MOD,DELETE),
//            UNIT=SYSDA,SPACE=(TRK,0)
//*
//DSNTGEN EXEC PGM=IEBGENER,COND=(4,LT)
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//SYSUT2   DD  DSN=&&TEMPPDS(DSNTPMQ),
//             DISP=(,PASS),
//             UNIT=SYSDA,SPACE=(TRK,(1,1,1),RLSE),
//             DCB=(RECFM=FB,LRECL=80)
//SYSUT1   DD *
  /** REXX ** DSNTPMQ ************************************************/
  PARSE UPPER ARG ssid authid

  ssid = STRIP(ssid)
  authid = STRIP(authid)
  high_rc = 0

  CALL validateArgs ssid,
                    authid

  ADDRESS TSO "SUBCOM DSNREXX"           /* HOST CMD ENV AVAILABLE?   */
  IF rc THEN                             /* NO, LET'S MAKE ONE        */
    S_rc = RXSUBCOM('ADD','DSNREXX','DSNREXX') /* ADD HOST CMD ENV    */

  ADDRESS DSNREXX "CONNECT" ssid
  IF SQLCODE ç= 0 THEN CALL errsqlca 'CONNECT'

  CALL setAuthId authid

  CALL generateReport01

  CALL generateReport02

  CALL generateReport03

  CALL generateReport04

  CALL generateReport05

  CALL generateReport06

  CALL generateReport07

  CALL generateReport08 ssid

  CALL generateReport09

  CALL generateReport10

  CALL generateReport11

  CALL generateReport12

  CALL generateReport13

  CALL generateReport14

  CALL generateReport15

  CALL generateReport16

  CALL generateReport17

  CALL generateReport18

  CALL generateReport19

  CALL generateReport20

  CALL generateReport21

  CALL generateReport22

  CALL generateReport23

  ADDRESS DSNREXX "EXECSQL COMMIT"
  ADDRESS DSNREXX "DISCONNECT"

  EXIT Finis() /* end DSNTPMQ */

  /*==================================================================*/
  /* Begin subroutines                                                */
  /*==================================================================*/
  validateArgs: PROCEDURE
    /*****************************************************************/
    /* Print a welcome message and then validate the parameters      */
    /*****************************************************************/
    PARSE ARG   ssid                  /* Db2 Subsystem ID            */,
                authid                /* Authorization ID for work   */

    CALL IntMsg,
        'DSNTPMQ entry:'
    CALL IntMsg,
        '  Subsystem ID ............................................. ',
        ssid
    CALL IntMsg,
        '  Authorization ID ......................................... ',
        authid
    CALL IntMsg ''

    digits     = "0123456789"
    dquote     = '"'
    letters    = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    nationals  = "à£$"
    quote      = "'"
    underscore = "_"

    /******************************************************************
    * Validate the argument for parameter 1, ssid                     *
    * Rules: 1-4 characters starting with A-Z or à, £, or $.          *
    *        Remaining characters must be A-Z, 0-9, à, £, or $        *
    ******************************************************************/
    IF (LENGTH(ssid) < 1 ! LENGTH(ssid) > 4),
     ! (VERIFY(ssid, letters!!nationals) = 1),
     ! (VERIFY(ssid, letters!!digits!!nationals) > 0) THEN
      DO
      CALL IntMsg,
          'Error: The argument for parameter 1, SUBSYSTEM ',
          'ID, must be 1 to 4 char-'
      CALL IntMsg,
          '               acters and begin with A-Z, à, £, or $.  ',
          'The other characters must'
      CALL IntMsg,
          '               be A-Z, 0-9, à, £, or $.'
      CALL abort 54
    END

    /******************************************************************
    * Validate the argument for parameter 2, authid                   *
    * Rules: 1-8 characters starting with A-Z or à, £, or $.          *
    *        Remaining characters must be A-Z, 0-9, à, £, or $        *
    ******************************************************************/
    IF (LENGTH(authid) < 1 ! LENGTH(authid) > 8),
     ! (VERIFY(authid, letters!!nationals) = 1),
     ! (VERIFY(authid, letters!!digits!!nationals) > 0) THEN
      DO
        CALL IntMsg,
            'Error: The argument for parameter 2, AUTHORIZA',
            'TION ID, must be 1 to 8'
        CALL IntMsg,
            '               characters and begin with A-Z, à, £, or $.',
            '  The other characters'
        CALL IntMsg,
            '               must be A-Z, 0-9, à, £, or $.'
        CALL abort 54
      END
    RETURN /* end validateArgs */

  setAuthId: PROCEDURE
    /*****************************************************************/
    /* Set the current authorization id                              */
    /*****************************************************************/
    PARSE ARG authid                  /* Authorization id to use     */

    SQLSTMT = "SET CURRENT SQLID = '" !! authid !! "'"
    ADDRESS DSNREXX EXECSQL SQLSTMT
    IF sqlcode <> 0 THEN
       CALL errsqlca "SET CURRENT SQLID"

    RETURN /* end setAuthId */


  generateReport01: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 1:                              */
    /*   Reports existence of the previous-release sample database   */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT01 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT01 OPEN rc=' rc

    TEMP.1  = "=== REPORT 1" COPIES('=',59)
    TEMP.2  = "= Existence of the Db2 11 sample database           ",
                "                  ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The following lists the Db2 12",
                "sample database, DSN8D12A.  This      ="
    TEMP.5  = "= database is needed for verifying",
                "migration to Db2 13.  If DSN8D12A   ="
    TEMP.6  = "= is not listed below, you are",
                "recommended to recreate it before       ="
    TEMP.7  = "= commencing migration to Db2 13. ",
                "Run Db2 12 IVP job DSNTEJ1 to       ="
    TEMP.8  = "= recreate it.  You should also run",
                "one or more of the phase 2 and     ="
    TEMP.9  = "= phase 3 IVP jobs in Db2 12.  See",
                "the Db2 12 Installation Guide, the  ="
    TEMP.10 = "= chapter on Verifying with Sample",
                "Applications for more information.  ="
    TEMP.11 = COPIES('=',72)
    TEMP.12 = "NAME"
    TEMP.13 = "----------"

    'EXECIO' 13 'DISKW REPORT01 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT01 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT= "SELECT '""' !! NAME !! '""'",
               "FROM SYSIBM.SYSDATABASE",
              "WHERE NAME IN( 'DSN8D11A' )"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :TEMP"
    DO WHILE SQLCODE = 0
      TEMP.1 = TEMP
      'EXECIO' 1 'DISKW REPORT01 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT01 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :TEMP"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP.
    'EXECIO 0 DISKW REPORT01 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT01 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 1 completed'

    RETURN /* end generateReport01 */


  generateReport02: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 2:                              */
    /*   Report simple table spaces                                  */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT02 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT02 OPEN rc=' rc

    TEMP.1  = "=== REPORT 2" COPIES('=',59)
    TEMP.2  = "= Existence of simple table spaces                  ",
                "                  ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Each table space listed below is a simple",
                "table space, meaning that  ="
    TEMP.5  = "= it is neither partitioned nor segmented. ",
                "Although Db2 13 can use    ="
    TEMP.6  = "= existing simple table spaces and allows you",
                "to alter data, update    ="
    TEMP.7  = "= data, or retrieve data from them, it does not",
                "allow you to create    ="
    TEMP.8  = "= them.  If you accidentally drop a simple table",
                "space in 13, you      ="
    TEMP.9  = "= will be unable to recreate it.  Therefore, before",
                "migrating to 13,   ="
    TEMP.10 = "= convert each table space listed below to a preferred",
                "type of table   ="
    TEMP.11 = "= space.                                          ",
                 "                    ="
    TEMP.12 = COPIES('=',72)
    TEMP.13 = "DBNAME.TSNAME"
    TEMP.14 = COPIES('-',49)

    'EXECIO' 14 'DISKW REPORT02 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT02 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT STRIP(TS.DBNAME)",
          "!! '.'",
          "!! STRIP(TS.NAME)",
        "FROM SYSIBM.SYSTABLESPACE TS",
       "WHERE TS.PARTITIONS = 0",
         "AND TS.SEGSIZE = 0",
         "AND TS.TYPE   <> 'O'",
         "AND TS.DBNAME NOT IN ('DSNDB01', 'DSNDB06')",
         "AND TS.DBNAME NOT IN",
              "( SELECT DB.NAME",
                  "FROM SYSIBM.SYSDATABASE DB",
                 "WHERE DB.TYPE = 'W'",
              ")",
         "AND TS.DBNAME NOT LIKE 'DSN8%'",
    "ORDER BY TS.DBNAME, TS.NAME"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1"
    DO WHILE SQLCODE = 0
      TEMP.1 = HV1
      'EXECIO' 1 'DISKW REPORT02 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT02 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT02 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT02 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 2 completed'
  RETURN /* end GenerateReport02 */


  generateReport03: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 3:                              */
    /*   Reports explain tables that are not in current-release fmt  */
    /*****************************************************************/
    "EXECIO 0 DISKW Report03 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT03 OPEN rc=' rc

    TEMP.1  = "=== REPORT 3" COPIES('=',59)
    TEMP.2  = "= EXPLAIN tables that need to be updated to",
                "Db2 12 format              ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The EXPLAIN tables listed below are not in",
                "current-release format,   ="
    TEMP.5  = "= meaning that one or more columns available",
                "in the current release    ="
    TEMP.6  = "= (Db2 12) is missing or has a different length",
                "than found.  Use of    ="
    TEMP.7  = "= such EXPLAIN tables is deprecated and support",
                "for them may be        ="
    TEMP.8  = "= removed in a future release of Db2.  Use Db2",
                "sample job DSNTIJXA or  ="
    TEMP.9  = "= Db2-supplied stored procedure",
                "SYSPROC.ADMIN_EXPLAIN_MAINT to alter   ="
    TEMP.10 = "= all tables in a specified schema to current",
                "release format.          ="
    TEMP.11 = COPIES('=',72)
    TEMP.12 = "CREATOR.NAME" COPIES(' ',244)
    TEMP.13 = COPIES('-',257)

    'EXECIO' 13 'DISKW REPORT03 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT03 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    /*****************************************************************/
    /* The following CTE consists of 2 parts separated by UNIONs:    */
    /* Part 1: Finds EXPLAIN tables that have missing columns        */
    /* Part 2: Finds EXPLAIN tables that have unexpected column lens */
    /*****************************************************************/
    SQLSTMT =,
      "WITH OLD_FORMAT_EXPLAIN_TABLES (FULL_NAME) AS",
      "( SELECT STRIP(TBCREATOR) !! '.' !! STRIP(TBNAME)",
          "FROM SYSIBM.SYSCOLUMNS",
         "WHERE TBNAME IN( 'DSN_COLDIST_TABLE'",
                        ", 'DSN_DETCOST_TABLE'",
                        ", 'DSN_FILTER_TABLE'",
                        ", 'DSN_FUNCTION_TABLE'",
                        ", 'DSN_KEYTGTDIST_TABLE'",
                        ", 'DSN_PGRANGE_TABLE'",
                        ", 'DSN_PGROUP_TABLE'",
                        ", 'DSN_PREDICAT_TABLE'",
                        ", 'DSN_PREDICATE_SELECTIVITY'",
                        ", 'DSN_PROFILE_HISTORY'",
                        ", 'DSN_PROFILE_TABLE'",
                        ", 'DSN_PTASK_TABLE'",
                        ", 'DSN_QUERY_TABLE'",
                        ", 'DSN_QUERYINFO_TABLE'",
                        ", 'DSN_SORT_TABLE'",
                        ", 'DSN_SORTKEY_TABLE'",
                        ", 'DSN_STAT_FEEDBACK'",
                        ", 'DSN_STATEMENT_CACHE_TABLE'",
                        ", 'DSN_STATEMNT_TABLE'",
                        ", 'DSN_STRUCT_TABLE'",
                        ", 'DSN_VIEWREF_TABLE'",
                        ", 'DSN_VIRTUAL_INDEXES'",
                        ", 'DSN_VIRTUAL_KEYTARGETS'",
                        ", 'PLAN_TABLE'",
                        ")",
          "GROUP BY TBCREATOR, TBNAME",
          "HAVING (TBNAME = 'DSN_COLDIST_TABLE'",
                  "AND MAX(COLNO) <  22)",
              "OR (TBNAME = 'DSN_DETCOST_TABLE'",
                  "AND MAX(COLNO) < 138)",
              "OR (TBNAME = 'DSN_FILTER_TABLE'",
                  "AND MAX(COLNO) <  19)",
              "OR (TBNAME = 'DSN_FUNCTION_TABLE'",
                  "AND MAX(COLNO) <  21)",
              "OR (TBNAME = 'DSN_KEYTGTDIST_TABLE'",
                  "AND MAX(COLNO) <  22)",
              "OR (TBNAME = 'DSN_PGRANGE_TABLE'",
                  "AND MAX(COLNO) <  16)",
              "OR (TBNAME = 'DSN_PGROUP_TABLE'",
                  "AND MAX(COLNO) <  43)",
              "OR (TBNAME = 'DSN_PREDICAT_TABLE'",
                  "AND MAX(COLNO) <  43)",
              "OR (TBNAME = 'DSN_PREDICATE_SELECTIVITY'",
                  "AND MAX(COLNO) <  17)",
              "OR (TBNAME = 'DSN_PROFILE_HISTORY'",
                  "AND MAX(COLNO) <  15)",
              "OR (TBNAME = 'DSN_PROFILE_TABLE'",
                  "AND MAX(COLNO) <  15)",
              "OR (TBNAME = 'DSN_PTASK_TABLE'",
                  "AND MAX(COLNO) <  26)",
              "OR (TBNAME = 'DSN_QUERY_TABLE'",
                  "AND MAX(COLNO) <  16)",
              "OR (TBNAME = 'DSN_QUERYINFO_TABLE'",
                  "AND MAX(COLNO) <  18)",
              "OR (TBNAME = 'DSN_SORT_TABLE'",
                  "AND MAX(COLNO) <  17)",
              "OR (TBNAME = 'DSN_SORTKEY_TABLE'",
                  "AND MAX(COLNO) <  22)",
              "OR (TBNAME = 'DSN_STATEMENT_CACHE_TABLE'",
                  "AND MAX(COLNO) <  95)",
              "OR (TBNAME = 'DSN_STATEMNT_TABLE'",
                  "AND MAX(COLNO) <  24)",
              "OR (TBNAME = 'DSN_STRUCT_TABLE'",
                  "AND MAX(COLNO) <  21)",
              "OR (TBNAME = 'DSN_VIEWREF_TABLE'",
                  "AND MAX(COLNO) <  13)",
              "OR (TBNAME = 'DSN_VIRTUAL_INDEXES'",
                  "AND MAX(COLNO) < 150)",
              "OR (TBNAME = 'DSN_VIRTUAL_KEYTARGETS'",
                  "AND MAX(COLNO) < 16)",
              "OR (TBNAME = 'PLAN_TABLE'",
                  "AND MAX(COLNO) <  67)",
        "UNION",
        "SELECT STRIP(TBCREATOR) !! '.' !! STRIP(TBNAME)",
          "FROM SYSIBM.SYSCOLUMNS",
         "WHERE TBNAME IN( 'DSN_DETCOST_TABLE'",
                        ", 'DSN_FILTER_TABLE'",
                        ", 'DSN_FUNCTION_TABLE'",
                        ", 'DSN_PGRANGE_TABLE'",
                        ", 'DSN_PGROUP_TABLE'",
                        ", 'DSN_PREDICAT_TABLE'",
                        ", 'DSN_PROFILE_HISTORY'",
                        ", 'DSN_PROFILE_TABLE'",
                        ", 'DSN_PTASK_TABLE'",
                        ", 'DSN_QUERY_TABLE'",
                        ", 'DSN_SORT_TABLE'",
                        ", 'DSN_SORTKEY_TABLE'",
                        ", 'DSN_STATEMENT_CACHE_TABLE'",
                        ", 'DSN_STATEMENT_RUNTIME_INFO'",
                        ", 'DSN_STATEMNT_TABLE'",
                        ", 'DSN_STRUCT_TABLE'",
                        ", 'DSN_VIEWREF_TABLE'",
                        ", 'DSN_VIRTUAL_INDEXES'",
                        ", 'PLAN_TABLE'",
                        ")",
           "AND (    (NAME = 'ACCESSCREATOR'    AND LENGTH <> 128)",
                 "OR (NAME = 'ACCESSNAME'       AND LENGTH <> 128)",
                 "OR (NAME = 'APPLNAME'         AND LENGTH <> 24)",
                 "OR (NAME = 'COLLID'           AND LENGTH <> 128)",
                 "OR (NAME = 'CORRELATION_NAME' AND LENGTH <> 128)",
                 "OR (NAME = 'CREATOR'          AND LENGTH <> 128)",
                 "OR (NAME = 'FUNCTION_NAME'    AND LENGTH <> 128)",
                 "OR (NAME = 'FUNCTION_TEXT'    AND LENGTH <> 1500)",
                 "OR (NAME = 'GROUP_MEMBER'     AND LENGTH <> 24)",
                 "OR (NAME = 'HINTUSED'         AND LENGTH <> 128)",
                 "OR (NAME = 'OPTHINT'          AND LENGTH <> 128)",
                 "OR (NAME = 'PATH'             AND LENGTH <> 2048)",
                 "OR (NAME = 'PLANNAME'         AND LENGTH <> 24)",
                 "OR (NAME = 'PROGNAME'         AND LENGTH <> 128)",
                 "OR (NAME = 'REMARKS'          AND LENGTH <> 762)",
                 "OR (NAME = 'SCHEMA_NAME'      AND LENGTH <> 128)",
                 "OR (NAME = 'SPEC_FUNC_NAME'   AND LENGTH <> 128)",
                 "OR (NAME = 'TNAME'            AND LENGTH <> 128)",
                 "OR (NAME = 'VERSION'          AND LENGTH <> 122)",
                 "OR (NAME = 'VIEW_CREATOR'     AND LENGTH <> 128)",
                 "OR (NAME = 'VIEW_NAME'        AND LENGTH <> 128)",
               ")",
      ")",
      "SELECT DISTINCT(FULL_NAME)",
        "FROM OLD_FORMAT_EXPLAIN_TABLES",
       "ORDER BY FULL_NAME"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :HV1"
    DO WHILE SQLCODE = 0
      TEMP.1 = HV1
      'EXECIO' 1 'DISKW REPORT03 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT03 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :HV1"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT03 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT03 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 3 completed'

    RETURN /* end generateReport03 */


  generateReport04: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 4:                              */
    /*   Reports user-defined indexes on the Db2 catalog that        */
    /*   do not reside in the Db2 catalog space.               DM1800*/
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT04 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT04 OPEN rc=' rc

    TEMP.1  = "=== REPORT 4" COPIES('=',59)
    TEMP.2  = "= User indexes on the Db2 catalog that",
                "are not in the Db2 catalog space="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The indexes listed below are user-defined",
                "indexes on the Db2 catalog ="
    TEMP.5  = "= that do not reside in the data space used",
                "by the Db2 catalog and     ="
    TEMP.6  = "= directory.  IBM recommends that, before you",
                "begin migration to the   ="
    TEMP.7  = "= next release of Db2, you drop and recreate",
                "these indexes to move     ="
    TEMP.8  = "= them into the Db2 catalog space.",
                "                                    ="
    TEMP.9  = COPIES('=',72)
    TEMP.10 = "CREATOR.NAME"
    TEMP.11 = COPIES('-',257)

    'EXECIO' 11 'DISKW REPORT04 (STEM TEMP.'

    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT04 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT RTRIM(IX.CREATOR)",
           ", RTRIM(IX.NAME)",
        "FROM SYSIBM.SYSINDEXES   IX",
           ", SYSIBM.SYSINDEXPART IXP",
        "WHERE IX.CREATOR   = IXP.IXCREATOR",
          "AND IX.NAME      = IXP.IXNAME",
          "AND IX.DBID      = 6",
          "AND (    IX.OBID BETWEEN 400 AND 599",
                "OR IX.OBID BETWEEN 900 AND 1699",
              ")",
          "AND IXP.STORNAME <> '00000001'",
      "ORDER BY IX.CREATOR, IX.NAME"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2"
    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 !! "." !! HV2
      'EXECIO' 1 'DISKW REPORT04 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT04 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2
    'EXECIO 0 DISKW REPORT04 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT04 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 4 completed'

    RETURN /* end generateReport04 */


  generateReport05: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 5:                              */
    /*   Reports package copies that are not supported in Db2 13     */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT05 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT05 OPEN rc=' rc

    TEMP.1  = "=== REPORT 5" COPIES('=',59)
    TEMP.2  = "= Package copies that are not supported after",
                "migration                ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The following is a list of package copies",
                "that were last bound prior ="
    TEMP.5  = "= to Db2 11. Db2 13 will not execute package",
                "copies bound prior to Db2 ="
    TEMP.6  = "= 11. If ABIND is YES or COEXIST, upon initial",
                "execution of the CURRENT="
    TEMP.7  = "= package copy, Db2 13 will automatically rebind",
                "the package. If ABIND ="
    TEMP.8  = "= is set to 'NO', Db2 13 will return SQLCODE -908",
                "(SQLSTATE 23510) for ="
    TEMP.9  = "= all attempts to use any such package until it is",
                "explicitly rebound. ="
    TEMP.10 = "= To avoid the autobinds or outages from SQLCODE",
                "-908, you should      ="
    TEMP.11 = "= rebind CURRENT package copies that will be invalid",
                "before migration  ="
    TEMP.12 = "= to Db2 13.  Db2 13 will block a REBIND SWITCH to",
                "a package copy that ="
    TEMP.13 = "= is invalid or was bound before Db2 11.  After",
                "migration and before   ="
    TEMP.14 = "= initial REBIND on Db2 13, you can remove inactive,",
                "invalid package   ="
    TEMP.15 = "= copies using FREE PACKAGE PLANMGMTSCOPE(INACTIVE)",
                "INVALIDONLY(YES).  ="
    TEMP.16 = "= By freeing inactive, invalid package copies before",
                "the initial       ="
    TEMP.17 = "= REBIND on Db2 13, the ORIGINAL slot can be populated",
                "with a copy     ="
    TEMP.18 = "= that is valid and more recent.                      ",
                "                ="
    TEMP.19 = COPIES('=',72)
    TEMP.20 = "Last Used  Copy     Collection-ID.Package-name.(Version)"
    TEMP.21 = "---------- --------" COPIES('-',382)

    'EXECIO' 21 'DISKW REPORT05 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT05 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "  SELECT LASTUSED ",
      "       , 'CURRENT ' AS PKGCOPY ",
      "       , RTRIM(COLLID) !! '.' !! ",
      "         RTRIM(NAME) !! '.(' !! ",
      "         RTRIM(VERSION) !! ')' ",
      "         AS RESULT ",
      "    FROM SYSIBM.SYSPACKAGE ",
      "   WHERE RELBOUND NOT IN  ('P','Q','R') ",
      "  UNION ALL ",
      "  SELECT LASTUSED ",
      "       , CASE WHEN COPYID = 1 THEN 'PREVIOUS' ",
      "              WHEN COPYID = 2 THEN 'ORIGINAL' ",
      "              ELSE 'ERROR' ",
      "         END AS PKGCOPY ",
      "       , RTRIM(COLLID) !! '.' !! ",
      "         RTRIM(NAME) !! '.(' !! ",
      "         RTRIM(VERSION) !! ')' ",
      "         AS RESULT ",
      "    FROM SYSIBM.SYSPACKCOPY ",
      "   WHERE RELBOUND NOT IN  ('P','Q','R') ",
      "ORDER BY RESULT, PKGCOPY ",
      "  FOR FETCH ONLY WITH UR "

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2, :HV3"
    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 HV2 HV3
      'EXECIO' 1 'DISKW REPORT05 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT05 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2, :HV3"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2 HV3
    'EXECIO 0 DISKW REPORT05 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT05 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 5 completed'

    RETURN /* end generateReport05 */


  generateReport06: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 6:                              */
    /*   Reports packages that are autobind candidates in Db2 13     */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT06 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT06 OPEN rc=' rc

    TEMP.1  = "=== REPORT 6" COPIES('=',59)
    TEMP.2  = "= Packages that are not supported",
                "after migration to Db2 13            ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The following is a list of packages",
                "that were last bound prior to    ="
    TEMP.5  = "= Db2 11.  Such packages are not",
                "supported after migration to Db2 13   ="
    TEMP.6  = "= and will be automatically rebound",
                "the first time used if the ABIND   ="
    TEMP.7  = "= subsystem parameter is set to 'YES'",
                "or 'COEXIST'.  If ABIND is set   ="
    TEMP.8  = "= to 'NO', Db2 13 will return SQLCODE",
                "-908 (SQLSTATE 23510) for all    ="
    TEMP.9  = "= attempts to use any such package",
                "until it is explicitly rebound.     ="
    TEMP.10 = "= To avoid the autobinds or outages",
                "from SQLCODE -908, you should      ="
    TEMP.11 = "= rebind these packages before you",
                "begin migration to Db2 13.          ="
    TEMP.12 = COPIES('=',72)
    TEMP.13 = "Valid Operative LastUsed   PLANMGMT APREUSE",
              "Collection-ID.Package-name.Hex-contoken"
    TEMP.14 = "----- --------- ---------- -------- -------",
               COPIES('-',278)

    'EXECIO' 14 'DISKW REPORT06 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT06 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "  SELECT RPAD(VALID, 5, ' ') ",
      "       , RPAD(OPERATIVE, 9, ' ') ",
      "       , LASTUSED ",
      "       , CASE PLANMGMT ",
      "           WHEN 'B' THEN 'BASIC   ' ",
      "           WHEN 'E' THEN 'EXTENDED' ",
      "           ELSE          'OFF     ' ",
      "         END ",
      "       , CASE APREUSE ",
      "           WHEN 'E' THEN 'ERROR  ' ",
      "           WHEN 'W' THEN 'WARN   ' ",
      "           ELSE          'NONE   ' ",
      "         END ",
      "       , RTRIM( '""' !! RTRIM(COLLID)  !! '""' ) ",
      "         !! '.'",
      "         !! RTRIM( '""' !! RTRIM(NAME)    !! '""' ) ",
      "         !! '.'",
      "         !! HEX(CONTOKEN) ",
      "         AS RESULT",
      "    FROM SYSIBM.SYSPACKAGE ",
      "   WHERE RELBOUND NOT IN  ('P','Q','R') ",
      "ORDER BY RESULT "

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2, :HV3, :HV4,",
                                          ":HV5, :HV6"
    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 HV2 HV3 HV4 HV5 HV6
      'EXECIO' 1 'DISKW REPORT06 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT06 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2, :HV3, :HV4,",
                                            ":HV5, :HV6"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2 HV3 HV4 HV5 HV6
    'EXECIO 0 DISKW REPORT06 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT06 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 6 completed'

    RETURN /* end generateReport06 */


  generateReport07: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 7:                              */
    /*   Reports plans that are autobind candidates in Db2 12        */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT07 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT07 OPEN rc=' rc

    TEMP.1  = "=== REPORT 7" COPIES('=',59)
    TEMP.2  = "= Plans that are not supported",
                "after migration to Db2 13               ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The following is a list of plans",
                "that were last bound prior to       ="
    TEMP.5  = "= Db2 11.  Such plans are not",
                "supported after migration to Db2 13      ="
    TEMP.6  = "= and will be automatically rebound",
                "the first time used if the ABIND   ="
    TEMP.7  = "= subsystem parameter is set to 'YES'",
                "or 'COEXIST'.  If ABIND is set   ="
    TEMP.8  = "= to 'NO', Db2 13 will return SQLCODE",
                "-908 (SQLSTATE 23510) for all    ="
    TEMP.9  = "= attempts to use any such plan",
                "until it is explicitly rebound.        ="
    TEMP.10 = "= To avoid the autobinds or outages",
                "from SQLCODE -908, you should      ="
    TEMP.11 = "= rebind these plans before you",
                "begin migration to Db2 13.             ="
    TEMP.12 = COPIES('=',72)
    TEMP.13 = "Valid Operative Plan-Name/Creator"
    TEMP.14 = "----- ---------" COPIES('-',261)

    'EXECIO' 14 'DISKW REPORT07 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT07 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "  SELECT RPAD(VALID, 5, ' ') ",
      "       , RPAD(OPERATIVE, 9, ' ') ",
      "       , RTRIM( '""' !! RTRIM(NAME) !! '""' )",
      "         !! '/'",
      "         !! RTRIM( '""' !! RTRIM(CREATOR) !! '""' )",
      "         AS RESULT",
      "    FROM SYSIBM.SYSPLAN ",
      "   WHERE RELBOUND NOT IN  ('P','Q','R')  ",
      "ORDER BY RESULT "

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2, :HV3"
    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 HV2 HV3
      'EXECIO' 1 'DISKW REPORT07 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT06 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2, :HV3"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2 HV3
    'EXECIO 0 DISKW REPORT07 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT07 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 7 completed'

    RETURN /* end generateReport07 */

  generateReport08: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 8:                              */
    /*   Reports packages to be rebound prior to migrate to          */
    /*   release 13 or V12R1M510 activation                          */
    /*****************************************************************/
    PARSE ARG   ssid                  /* Db2 Subsystem ID            */
    "EXECIO 0 DISKW REPORT08 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT08 OPEN rc=' rc

    TEMP.1  = "=== REPORT 8" COPIES('=',59)
    TEMP.2 = "= Packages need to be rebound prior",
               "to activation of function level    ="
    TEMP.3 = "= V12R1M510 and prior to migration",
              "to Db2 13.                          ="
    TEMP.4  = COPIES('=',72)
    TEMP.5  = "= The following is a list of the packages",
                "that need to be rebound      ="
    TEMP.6  = "= before you attempt to activate function",
                "level V12R1M510 or migration ="
    TEMP.7  = "= to Db2 13. The listed packages were",
                "used within 18 months and were   ="
    TEMP.8  = "= bound prior to Db2 11. REBIND commands",
                "are listed in the data set    ="
    TEMP.9  = "= allocated to the REBIND08 DD card. ",
                "                                 ="
    TEMP.10 = COPIES('=',72)
    TEMP.11 = "Collection-ID.Package-name.(Version)"
    TEMP.12 = COPIES('-',324)

    'EXECIO' 12 'DISKW REPORT08 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT08 rc=' rc

    TEMP.1 = "DSN S("ssid")"
    'EXECIO' 1 'DISKW REBIND08 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REBIND08 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT= "SELECT STRIP(COLLID)",
                   ",STRIP(NAME)",
                   ",STRIP(VERSION)",
                   ",TYPE",
               "FROM SYSIBM.SYSPACKAGE",
              "WHERE LASTUSED >= DATE(DAYS(CURRENT DATE) - 548)",
              "  AND RELBOUND NOT IN  ('P','Q','R')",
              "  AND VALID <> 'N'",
              "  AND OPERATIVE <> 'N'"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :PKCOLLID",
                                         ",:PKNAM",
                                         ",:PKVER",
                                         ",:PKTYPE"
    DO WHILE SQLCODE = 0

      TEMP.1 = PKCOLLID !! "." !! PKNAM !! ".(" !! PKVER !! ")"
      'EXECIO' 1 'DISKW REPORT08 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT08 rc=' rc

      PKID = PKCOLLID !! '.' !! PKNAM

      IF LENGTH(PKVER) <> 0 THEN
        PKID = PKID !! '.(' !! PKVER !! ')'

      n = 0
      DO WHILE LENGTH(PKID) > 0

        n = n + 1
        IF n = 1 THEN
          DO
            IF PKTYPE <> 'T' THEN
              DO
                TEMP.n = "REBIND PACKAGE("
              END
            ELSE
              DO
                TEMP.n = "REBIND TRIGGER-"
                n = n + 1
                TEMP.n = "       PACKAGE("
              END
          END
        ELSE
          TEMP.n = "               "

        IF LENGTH(PKID) > 56 THEN
          DO
            CHOP = SUBSTR(PKID,1,56)
            PKID = SUBSTR(PKID,57)
            TEMP.n = TEMP.n !! CHOP !! "+"
          END
        ELSE
          DO
            TEMP.n = TEMP.n !! PKID !! ")"
            PKID = ""
          END

      END /* DO WHILE LENGTH(PKID) > 0 */

      'EXECIO' n 'DISKW REBIND08 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REBIND08 rc=' rc

      address DSNREXX "EXECSQL FETCH C1 INTO :PKCOLLID",
                                           ",:PKNAM",
                                           ",:PKVER",
                                           ",:PKTYPE"
    END /* WHILE SQLCODE = 0 */

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP.
    'EXECIO 0 DISKW REPORT08 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT08 CLOSE rc=' rc

    'EXECIO 0 DISKW REBIND08 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REBIND08 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 8 completed'

    RETURN /* end generateReport08 */


  generateReport09: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 9:                              */
    /*   Report problem with catalog table space version numbers.    */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT09 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT09 OPEN rc=' rc

    TEMP.1  = "=== REPORT 9" COPIES('=',59)
    TEMP.2  = "= Db2 table spaces with unexpected versioning",
                "                         ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Following is a list of Db2 catalog",
                "table spaces for which the oldest ="
    TEMP.5  = "= version is greater than the current",
                "version. Such table spaces may   ="
    TEMP.6  = "= cause the DSNTIJTC job to fail. Before",
                "running the DSNTIJTC job use  ="
    TEMP.7  = "= MODIFY RECOVERY followed by REORG to",
                "correct the versioning of all   ="
    TEMP.8  = "= these table spaces. See the Utility",
                "Guide for information about      ="
    TEMP.9  = "= these utilities.                   ",
                "                                 ="
    TEMP.10 = COPIES('=',72)

    TEMP.11 = "CREATOR.NAME.OLDEST_VERSION.CURRENT_VERSION"
    TEMP.12 = COPIES('-',72)

    'EXECIO' 12 'DISKW REPORT09 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT09 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "  SELECT STRIP(CREATOR),",
      "         SUBSTR(NAME, 1, 8),",
      "         OLDEST_VERSION,",
      "         CURRENT_VERSION",
      "    FROM SYSIBM.SYSTABLESPACE",
      "   WHERE DBID = 6",
      "     AND (CURRENT_VERSION < OLDEST_VERSION)"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2, :HV3, :HV4"

    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 !! '.' !! HV2 !! '.' !! HV3 !! '.' !! HV4
      'EXECIO' 1 'DISKW REPORT09 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT09 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2, :HV3, :HV4"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT09 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT09 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 9 completed'

    RETURN /* end generateReport09 */


  generateReport10: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 10:                             */
    /*   Report inconsistent version numbers in the Db2 catalog      */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT10 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT10 OPEN rc=' rc

    TEMP.1  = "=== REPORT 10" COPIES('=',58)
    TEMP.2  = "= Db2 tables with unexpected versioning             ",
                "                  ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Below is a list of tables which have",
                "inconsistent version numbers in ="
    TEMP.5  = "= the Db2 catalog.  The inconsistencies",
                "do not affect normal Db2       ="
    TEMP.6  = "= operations but may interfere with",
                "the DSNTIJTC job. Therefore,       ="
    TEMP.7  = "= before running the DSNTIJTC job,",
                 "contact IBM Service for assistance  ="
    TEMP.8  = "= to get them resolved.             ",
                "                                  ="
    TEMP.9  = COPIES('=',72)

    'EXECIO' 9 'DISKW REPORT10 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT10 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT TB.CREATOR",
           ", TB.NAME",
           ", TB.DBNAME",
           ", TB.TSNAME",
           ", TB.DBID",
           ", TB.OBID",
           ", TB.VERSION",
           ", TS.OBID",
           ", TS.PSID",
           ", TS.OLDEST_VERSION",
           ", TS.CURRENT_VERSION",
        "FROM SYSIBM.SYSTABLES     TB",
           ", SYSIBM.SYSTABLESPACE TS",
       "WHERE TB.DBNAME = TS.DBNAME",
         "AND TB.TSNAME = TS.NAME",
         "AND TB.TYPE = 'T'",
         "AND TS.OLDEST_VERSION = 0",
         "AND TS.CURRENT_VERSION = 0",
         "AND TB.VERSION <> 0"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2, :HV3, :HV4,",
                                  ":HV5, :HV6, :HV7, :HV8,",
                                  ":HV9, :HV10, :HV11"

    DO WHILE SQLCODE = 0
      TEMP.1  = COPIES('-',148)
      TEMP.2  = "TB.CREATOR        :" HV1
      TEMP.3  = "TB.NAME           :" HV2
      TEMP.4  = "TB.DBNAME         :" HV3
      TEMP.5  = "TB.TSNAME         :" HV4
      TEMP.6  = "TB.DBID           :" HV5
      TEMP.7  = "TB.OBID           :" HV6
      TEMP.8  = "TB.VERSION        :" HV7
      TEMP.9  = "TS.OBID           :" HV8
      TEMP.10 = "TS.PSID           :" HV9
      TEMP.11 = "TS.OLDEST_VERSION :" HV10
      TEMP.12 = "TS.CURRENT_VERSION:" HV11

      'EXECIO' 12 'DISKW REPORT10 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT10 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2, :HV3, :HV4,",
                                    ":HV5, :HV6, :HV7, :HV8,",
                                    ":HV9, :HV10, :HV11"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT10 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT10 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 10 completed'

    RETURN /* end generateReport10 */


  generateReport11: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 11:                             */
    /*   Report Db2 system page discrepancies for SYSTABLES          */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT11 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT11 OPEN rc=' rc

    TEMP.1  = "=== REPORT 11" COPIES('=',58)
    TEMP.2  = "= Db2 system page discrepancies for",
                "SYSTABLES                          ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Queries on the following table",
                "spaces may fail with SQLCODE -904,    ="
    TEMP.5  = "= reason code 00C900E3, because of",
                "internal difference in data that    ="
    TEMP.6  = "= is stored for the SYSIBM.SYSTABLES",
                "table in the Db2 system pages.    ="
    TEMP.7  = "= If any rows are listed below then,",
                "before running the DSNTIJTC job,  ="
    TEMP.8  = "= take the following actions:        ",
                "                                 ="
    TEMP.9  = "=    1- REORG the DSNDB06.SYSALTER",
                "catalog table space                 ="
    TEMP.10 = "=    2- Run MODIFY RECOVERY for",
                "DSNDB06.SYSALTER as follows:           ="
    TEMP.11 = "=         MODIFY RECOVERY TABLESPACE",
                "DSNDB06.SYSALTER DELETE AGE(*)    ="
    TEMP.12 = "=    3- Take an image copy of the",
                "DSNDB06.SYSALTER table space         ="
    TEMP.13 = "=    4- Run REPAIR CATALOG TABLESPACE",
                "DSNDB06.SYSALTER TEST and        ="
    TEMP.14 = "=       ensure that the retulting",
                "return code is zero.                 ="
    TEMP.15 = COPIES('=',72)

    TEMP.16 = "dbname.tsname      Last REORG or LOAD REPLACE",
                " Oldest Version  Last ALTER DATABASE"
    TEMP.17 = "-----------------  --------------------------",
                " --------------  --------------------------"

    'EXECIO' 17 'DISKW REPORT11 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT11 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
        "SELECT STRIP(P.DBNAME)",
             ", STRIP(P.TSNAME)",
             ", P.REORG_LR_TS",
             ", P.OLDEST_VERSION",
             ", S.ALTEREDTS",
          "FROM SYSIBM.SYSTABLEPART P",
             ", SYSIBM.SYSTABLES S",
         "WHERE S.DBNAME = P.DBNAME",
               "AND S.TSNAME = P.TSNAME",
               "AND S.ALTEREDTS > P.REORG_LR_TS",
               "AND S.DBNAME = 'DSNDB06'",
               "AND S.TSNAME = 'SYSALTER'",
               "AND P.OLDEST_VERSION = 0"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2, :HV3, :HV4, :HV5"

    DO WHILE SQLCODE = 0
      TEMP.1 = SUBSTR( (HV1 !! '.' !! HV2), 1, 17 ) !! '  ',
            !! HV3 !! '  ',
            !! SUBSTR( HV4, 1, 14 ) !! '  ',
            !! HV5
      'EXECIO' 1 'DISKW REPORT11 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT11 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2, :HV3, :HV4, :HV5"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2 HV3 HV4 HV5
    'EXECIO 0 DISKW REPORT11 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT11 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 11 completed'

    RETURN /* end generateReport11 */


  generateReport12: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 12:                             */
    /*   Report orphaned rows in SYSCOPY and SYSOBDS                 */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT12 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT12 OPEN rc=' rc

    TEMP.1  = "=== REPORT 12" COPIES('=',58)
    TEMP.2  = "= Orphaned rows in Db2 catalog tables SYSIBM.SYSCOPY",
                "& SYSIBM.SYSOBDS  ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Listed below are the row IDs of",
              "orphaned rows in Db2 catalog tables  ="
    TEMP.5  = "= SYSIBM.SYSCOPY and SYSIBM.SYSOBDS. ",
              "These rows were left during      ="
    TEMP.6  = "= Db2 10 enabling new-function mode",
              "processing by a problem that was   ="
    TEMP.7  = "= subsequently fixed by APAR PM41956",
              "/ PTF UK70176.  The orphaned rows ="
    TEMP.8  = "= do not affect normal Db2 operations",
              "but may interfere with the       ="
    TEMP.9  = "= DSNTIJTC job. Therefore, before",
              "running the DSNTIJTC job, you need   ="
    TEMP.10 = "= to remove each entry listed below by",
              "running the following with      ="
    TEMP.11 = "= <rid> replaced by the indicated",
              "ROWID value:                         ="
    TEMP.12 = "=   * for the SYSCOPY rows returned:  ",
              "                                ="
    TEMP.13 = "=       REPAIR OBJECT                 ",
              "                                ="
    TEMP.14 = "=         LOCATE TABLESPACE DSNDB06.SYSCOPY",
              "RID X'<rid>' DELETE        ="
    TEMP.15 = "=   * for the SYSOBDS rows returned:  ",
              "                                ="
    TEMP.16 = "=       REPAIR OBJECT                 ",
              "                                ="
    TEMP.17 = "=         LOCATE TABLESPACE DSNDB06.SYSALTER",
              "RID X'<rid>' DELETE       ="
    TEMP.18 = COPIES('=',72)

    TEMP.19 = "TABLE   ROWID"
    TEMP.20 = "------- ----------"

    'EXECIO' 20 'DISKW REPORT12 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT12 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "  SELECT 'SYSCOPY', RIGHT(HEX(RID(C)), 10)",
      "    FROM SYSIBM.SYSCOPY C",
      "   WHERE C.TSNAME = 'DSNVTH01'",
      "     AND C.DBNAME = 'DSNDB06'",
      "     AND NOT EXISTS(SELECT *",
      "                      FROM SYSIBM.SYSINDEXES I",
      "                     WHERE I.CREATOR = 'SYSIBM'",
      "                       AND I.NAME = 'DSNVTH01'",
      "                   )",
      "  UNION",
      "  SELECT 'SYSOBDS', RIGHT(HEX(RID(O)), 10)",
      "    FROM SYSIBM.SYSOBDS O",
      "   WHERE O.DBID = 6 AND O.OBDTYPE = 'R'",
      "     AND NOT EXISTS (SELECT *",
      "                       FROM SYSIBM.SYSTABLESPACE T",
      "                      WHERE T.DBID = O.DBID",
      "                        AND T.PSID = O.PSID",
      "                    )",
      "ORDER BY 1, 2"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2"

    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 !! ' ' !! HV2
      'EXECIO' 1 'DISKW REPORT12 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT12 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT12 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT12 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 12 completed'

    RETURN /* end generateReport12 */


  generateReport13: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 13:                             */
    /*   Report orphaned rows in SYSTABSTATS                         */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT13 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT13 OPEN rc=' rc

    TEMP.1  = "=== REPORT 13" COPIES('=',58)
    TEMP.2  = "= Orphaned rows in Db2 catalog table",
                "SYSIBM.SYSTABSTATS                ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Listed below are orphaned rows in",
                "catalog table SYSIBM.SYSTABSTATS.  ="
    TEMP.5  = "= These rows do not affect normal",
                "Db2 operations but may interfere     ="
    TEMP.6  = "= with the DSNTIJTC job. Therefore,",
                "after reviewing these rows, delete ="
    TEMP.7  = "= them before running the DSNTIJTC",
                "job. For example:                   ="
    TEMP.8  = "=   DELETE FROM SYSIBM.SYSTABSTATS A",
                "                                  ="
    TEMP.9  = "=    WHERE NOT EXISTS ( SELECT 1 FROM",
                "SYSIBM.SYSTABLEPART B            ="
    TEMP.10 = "=                               WHERE",
                "A.DBNAME    = B.DBNAME           ="
    TEMP.11 = "=                                 AND",
                "A.TSNAME    = B.TSNAME           ="
    TEMP.12 = "=                                 AND",
                "A.PARTITION = B.PARTITION )      ="
    TEMP.13 = COPIES('=',72)

    TEMP.14 = "OWNER.NAME.PARTITION"
    TEMP.15 = COPIES('-',264)

    'EXECIO' 15 'DISKW REPORT13 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT13 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT A.OWNER",
           ", A.NAME",
           ", A.PARTITION",
        "FROM SYSIBM.SYSTABSTATS A",
        "WHERE NOT EXISTS ( SELECT 1 FROM SYSIBM.SYSTABLEPART B",
                            "WHERE A.DBNAME    = B.DBNAME",
                              "AND A.TSNAME    = B.TSNAME",
                              "AND A.PARTITION = B.PARTITION",
                         ")",
    "ORDER BY A.OWNER, A.NAME, A.PARTITION"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2, :HV3"

    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 !! '.' !! HV2 !! '.' !! HV3
      'EXECIO' 1 'DISKW REPORT13 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT13 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2, :HV3"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT13 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT13 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 13 completed'

    RETURN /* end generateReport13 */


  generateReport14: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 14:                             */
    /*   Report orphaned rows in SYSCOLAUTH                          */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT14 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT14 OPEN rc=' rc

    TEMP.1  = "=== REPORT 14" COPIES('=',58)
    TEMP.2  = "= Orphaned rows in Db2 catalog table",
                "SYSIBM.SYSCOLAUTH                 ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Listed below are orphaned rows in",
                "catalog table SYSIBM.SYSCOLAUTH,   ="
    TEMP.5  = "= which records the UPDATE or REFERENCES",
                "privileges that are held by   ="
    TEMP.6  = "= users on individual columns of a table",
                "or view.  These rows do not   ="
    TEMP.7  = "= affect normal Db2 operations but may",
                "interfere with the DSNTIJTC job ="
    TEMP.8  = "= . Therefore, before running the",
                "DSNTIJTC job, you need to remove     ="
    TEMP.9  = "= them using the REPAIR utility.",
                "The following example SQL shows how   ="
    TEMP.10 = "= to generate a REPAIR control statement",
                "that you can use to delete    ="
    TEMP.11 = "= all of the orphaned rows:             ",
                "                              ="
    TEMP.12 = "=                                          ",
                "                           ="
    TEMP.13 = "=     SELECT 'REPAIR OBJECT LOG YES'       ",
                "                           ="
    TEMP.14 = "=       FROM SYSIBM.SYSDUMMY1              ",
                "                           ="
    TEMP.15 = "=     UNION ALL                            ",
                "                           ="
    TEMP.16 = "=     SELECT DISTINCT                      ",
                "                           ="
    TEMP.17 = "=            '  LOCATE",
                "TABLESPACE DSNDB06.SYSTSFAU '                   ="
    TEMP.18 = "=            !! 'RID(X''' !!",
                "RIGHT(HEX(RID(A)),10) !! ''') DELETE'     ="
    TEMP.19 = "=       FROM SYSIBM.SYSCOLAUTH  A",
                "                                     ="
    TEMP.20 = "=      WHERE NOT EXISTS (SELECT 1 FROM",
                "SYSIBM.SYSCOLUMNS  B            ="
    TEMP.21 = "=                         WHERE A.CREATOR",
                "  = B.TBCREATOR              ="
    TEMP.22 = "=                           AND A.TNAME",
                "    = B.TBNAME                 ="
    TEMP.23 = "=                           AND A.COLNAME",
                "  = B.NAME                   ="
    TEMP.24 = "=               )                        ",
                "                             ="
    TEMP.25 = "=     ORDER BY 1 DESC                    ",
                "                             ="
    TEMP.26 = "=                                        ",
                "                             ="
    TEMP.27 = "= After running the REPAIR operation, review",
                "the output and also check ="
    TEMP.28 = "= the status of table space DSNDB06.SYSTSFAU",
                "for CHECK PENDING status. ="
    TEMP.29 = COPIES('=',72)


    'EXECIO' 29 'DISKW REPORT14 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT14 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT RIGHT(HEX(RID(A)), 10)",
           ", A.GRANTOR",
           ", A.GRANTEE",
           ", CASE A.GRANTEETYPE",
               "WHEN ' ' THEN 'AUTH ID'",
               "WHEN 'L' THEN 'ROLE'",
               "WHEN 'P' THEN 'PLAN OR PACKAGE'",
               "ELSE 'OTHER'",
             "END",
           ", A.CREATOR",
           ", A.TNAME",
           ", A.COLNAME",
           ", A.COLLID",
           ", HEX(A.CONTOKEN)",
           ", CASE A.PRIVILEGE",
               "WHEN ' ' THEN 'UPDATE'",
               "WHEN 'R' THEN 'REFERENCES'",
               "ELSE 'OTHER'",
             "END",
           ", A.GRANTEDTS",
           ", CASE GRANTORTYPE",
               "WHEN ' ' THEN 'AUTH ID'",
               "WHEN 'L' THEN 'ROLE'",
               "ELSE 'OTHER'",
             "END",
        "FROM SYSIBM.SYSCOLAUTH  A",
       "WHERE NOT EXISTS ( SELECT 1 FROM SYSIBM.SYSCOLUMNS  B",
                                  "WHERE A.CREATOR   = B.TBCREATOR",
                                    "AND A.TNAME     = B.TBNAME",
                                    "AND A.COLNAME   = B.NAME",
                        ")",
    "ORDER BY A.CREATOR, A.TNAME, A.COLNAME"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2, :HV3, :HV4,",
                                  ":HV5, :HV6, :HV7, :HV8,",
                                  ":HV9, :HV10, :HV11, :HV12"

    DO WHILE SQLCODE = 0
      TEMP.1  = COPIES('-',141)
      TEMP.2  = "RID        :" HV1
      TEMP.3  = "GRANTOR    :" HV2
      TEMP.4  = "GRANTEE    :" HV3
      TEMP.5  = "GRANTEETYPE:" HV4
      TEMP.6  = "CREATOR    :" HV5
      TEMP.7  = "TNAME      :" HV6
      TEMP.8  = "COLNAME    :" HV7
      TEMP.9  = "COLLID     :" HV8
      TEMP.10 = "CONTOKEN   :" HV9
      TEMP.11 = "PRIVILEGE  :" HV10
      TEMP.12 = "GRANTEDTS  :" HV11
      TEMP.13 = "GRANTORTYPE:" HV12

      'EXECIO' 13 'DISKW REPORT14 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT14 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2, :HV3, :HV4,",
                                    ":HV5, :HV6, :HV7, :HV8,",
                                    ":HV9, :HV10, :HV11, :HV12"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT14 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT14 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 14 completed'

    RETURN /* end generateReport14 */


  generateReport15: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 15:                             */
    /*   Report extraneous text in SYSIBM.SYSTRIGGERS.TEXT           */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT15 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT15 OPEN rc=' rc

    TEMP.1  = "=== REPORT 15" COPIES('=',58)
    TEMP.2  = "= Extraneous text in TEXT column of",
                "SYSIBM.SYSTRIGGERS                 ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= For each trigger listed below, the",
                "TEXT column of SYSIBM.SYSTRIGGERS ="
    TEMP.5  = "= contains additional or extraneous SQL",
                "text after the CREATE TRIGGER  ="
    TEMP.6  = "= statement. Such triggers cannot be",
                "rebuilt by the REPAIR DBD REBUILD ="
    TEMP.7  = "= utility after you migrate to Db2 13. ",
                "In response, drop and recreate ="
    TEMP.8  = "= these triggers before you migrate to",
                "Db2 13.  Note: The extraneous   ="
    TEMP.9  = "= SQL text can result when a create",
                "trigger statement that contains a  ="
    TEMP.10 = "= BEGIN ATOMIC clause is improperly",
                "terminated by a semicolon instead  ="
    TEMP.11 = "= of an alternative statement terminator.",
                " If you recreate a trigger   ="
    TEMP.12 = "= using the CREATE TRIGGER statement in",
                "the TEXT column of SYSIBM.-    ="
    TEMP.13 = "= SYSTRIGGERS, be sure to exclude the",
                "extraneous text.  If the CREATE  ="
    TEMP.14 = "= TRIGGER statement processes with",
                "SQLCODE +098, drop the trigger and  ="
    TEMP.15 = "= reinspect the statement for improper",
                "use of the semicolon.           ="
    TEMP.16 = COPIES('=',72)

    TEMP.17 = "Schema.Name"
    TEMP.18 = COPIES('-',257)

    'EXECIO' 18 'DISKW REPORT15 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT15 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT RTRIM(SCHEMA) !! '.' !! RTRIM(NAME)",
        "FROM SYSIBM.SYSTRIGGERS",
       "WHERE TEXT LIKE '%CREATE TRIGGER % BEGIN ATOMIC %;%END%; %'",
       "ORDER BY SCHEMA, NAME"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1"

    DO WHILE SQLCODE = 0
      TEMP.1 = HV1
      'EXECIO' 1 'DISKW REPORT15 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT15 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT15 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT15 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 15 completed'

    RETURN /* end generateReport15 */


  generateReport16: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 16:                             */
    /*   Report Unicode columns in EBCDIC tables                     */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT16 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT16 OPEN rc=' rc

    TEMP.1  = "=== REPORT 16" COPIES('=',58)
    TEMP.2  = "= Unicode columns in EBCDIC tables           ",
                "                         ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The columns listed below are Unicode columns",
                "that were defined in    ="
    TEMP.5  = "= EBCDIC-encoded tables before activation of new",
                "function in Db2 12.   ="
    TEMP.6  = "= These columns are subject to the Db2 11",
                "restrictions. In Db2 12,     ="
    TEMP.7  = "= after new function is activated, newly-defined",
                "Unicode columns in    ="
    TEMP.8  = "= EBCDIC tables are no longer subject to those",
                "restrictions. Also,     ="
    TEMP.9  = "= support for Unicode columns that were defined",
                "in EBCDIC tables prior ="
    TEMP.10 = "= to Db2 12 new function availability will be",
                "deprecated in the future.="
    TEMP.11 = "= Therefore, use the ALTER TABLE ALTER COLUMN",
                "SET DATA TYPE statement  ="
    TEMP.12 = "= to convert those columns as soon as possible",
                "after migrating to Db2  ="
    TEMP.13 = "= 12 and activating new function.             ",
                "                        ="
    TEMP.14 = "=                                             ",
                "                        ="
    TEMP.15 = "= For a Db2 11 column definition like:        ",
                "                        ="
    TEMP.16 = "=   column-name VARCHAR(length) CCSID 1208    ",
                "                        ="
    TEMP.17 = "= use:                                        ",
                "                        ="
    TEMP.18 = "=   ALTER TABLE creator.table-name            ",
                "                        ="
    TEMP.19 = "=     ALTER COLUMN column-name                ",
                "                        ="
    TEMP.20 = "=     SET DATA TYPE VARCHAR(length)           ",
                "                        ="
    TEMP.21 = "=                                             ",
                "                        ="
    TEMP.22 = "= For a Db2 11 column definition like:        ",
                "                        ="
    TEMP.23 = "=   column-name VARGRAPHIC(length) CCSID 1200 ",
                "                        ="
    TEMP.24 = "= use:                                        ",
                "                        ="
    TEMP.25 = "=   ALTER TABLE creator.table-name            ",
                "                        ="
    TEMP.26 = "=     ALTER COLUMN column-name                ",
                "                        ="
    TEMP.27 = "=     SET DATA TYPE VARGRAPHIC(length)        ",
                "                        ="
    TEMP.28 = "=                                             ",
                "                        ="
    TEMP.29 = "= where the data type and data length must be the",
                "same data type and   ="
    TEMP.30 = "= data length as the existing column, i.e. the",
                "data type and data      ="
    TEMP.31 = "= length cannot be altered.                   ",
                "                        ="
    TEMP.32 = "=                                             ",
                "                        ="
    TEMP.33 = "= Note: ALTER TABLE cannot proceed if there are",
                "other conditions that  ="
    TEMP.34 = "=       exist to prevent the column from being",
                "altered.                ="
    TEMP.35 = "=       For example, an index is defined on the",
                "column, the table is   ="
    TEMP.36 = "=       a clone table, the table is a history",
                "table, the table is a    ="
    TEMP.37 = "=       system-period temporal table, etc. Those",
                "conditions must be    ="
    TEMP.38 = "=       removed before the base table can be",
                "altered.                  ="
    TEMP.39 = "=                                             ",
                "                        ="
    TEMP.40 = COPIES('=',72)

    'EXECIO' 40 'DISKW REPORT16 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT16 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT RTRIM(TBCREATOR) !! '.' !! RTRIM(TBNAME)",
           ", RTRIM(NAME)",
           ", RTRIM(COLTYPE)",
           ", LENGTH",
           ", CCSID",
        "FROM SYSIBM.SYSCOLUMNS",
       "WHERE CCSID IN( 1200, 1208 )",
         "AND COLTYPE = 'VARBIN'",
    "ORDER BY 1"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    HV1_OLD = ''
    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2, :HV3, :HV4, :HV5"

    DO WHILE SQLCODE = 0
      IF HV1 ç= HV1_OLD THEN,
        /*************************************************************/
        /* If the creator.table name changes, add a report break     */
        /*************************************************************/
        DO
          IF HV1_OLD ç= '' THEN,
            /*********************************************************/
            /* Insert a blank line ahead of the break (except for    */
            /* the first auth type)                                  */
            /*********************************************************/
            DO
              TEMP.1 = COPIES('-',140)
              'EXECIO' 1 'DISKW REPORT16 (STEM TEMP.'
              if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                                  , 'EXECIO DISKW REPORT16 rc=' rc
            END
          TEMP.1 = 'CREATOR.TABLE-NAME :' HV1
          'EXECIO' 1 'DISKW REPORT16 (STEM TEMP.'
          if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                              , 'EXECIO DISKW REPORT16 rc=' rc
          HV1_OLD = HV1
        END
      TEMP.1 = 'COLUMN-NAME        :' HV2
      TEMP.2 = 'COLUMN-TYPE(LENGTH):' HV3 !! '(',
                                   !! HV4 !! ') CCSID ',
                                   !! HV5
      TEMP.3 = ''

      'EXECIO' 3 'DISKW REPORT16 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT16 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2, :HV3, :HV4, :HV5"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV1_OLD HV2 HV3 HV4 HV5
    'EXECIO 0 DISKW REPORT16 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT16 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 16 completed'

    RETURN /* end generateReport16 */


  generateReport17: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 17:                             */
    /*   Report indexes on Unicode columns in EBCDIC tables          */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT17 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT17 OPEN rc=' rc

    TEMP.1  = "=== REPORT 17" COPIES('=',58)
    TEMP.2  = "= Indexes on Unicode columns in EBCDIC tables",
                "                         ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The indexes listed below are indexes that were",
                "defined on Unicode    ="
    TEMP.5  = "= columns in EBCDIC tables that were defined",
                "prior to Db2 12 new       ="
    TEMP.6  = "= function availability.  After activating new",
                "function in Db2 12,     ="
    TEMP.7  = "= you need to drop those indexes before you can",
                "alter the column in    ="
    TEMP.8  = "= order to lift the Db2 11 restrictions that are",
                "currently imposed     ="
    TEMP.9  = "= on the column.  After the Db2 11 restrictions",
                "are lifted from        ="
    TEMP.10 = "= the column, you can then recreate the index.",
                "                        ="
    TEMP.11 = COPIES('=',72)

    'EXECIO' 11 'DISKW REPORT17 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT17 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT RTRIM(I.CREATOR) !! '.' !! RTRIM(I.NAME)",
           ", RTRIM(I.TBCREATOR) !! '.' !! RTRIM(I.TBNAME)",
        "FROM SYSIBM.SYSINDEXES I",
           ", SYSIBM.SYSKEYS K",
           ", SYSIBM.SYSCOLUMNS C",
       "WHERE I.NAME = K.IXNAME",
         "AND I.CREATOR = K.IXCREATOR",
         "AND I.TBNAME = C.TBNAME",
         "AND I.TBCREATOR = C.TBCREATOR",
         "AND K.COLNO = C.COLNO",
         "AND C.CCSID IN (1200, 1208)",
         "AND C.COLTYPE = 'VARBIN'",
    "GROUP BY RTRIM(I.CREATOR) !! '.' !! RTRIM(I.NAME)",
           ", RTRIM(I.TBCREATOR) !! '.' !! RTRIM(I.TBNAME)"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2"

    DO WHILE SQLCODE = 0
      TEMP.1 = 'CREATOR.INDEX-NAME:' HV1
      TEMP.2 = 'CREATOR.TABLE-NAME:' HV2
      TEMP.3 = ''
      'EXECIO' 3 'DISKW REPORT17 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT17 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2
    'EXECIO 0 DISKW REPORT17 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT17 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 17 completed'

    RETURN /* end generateReport17 */


  generateReport18: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 18:                             */
    /*   Report obsolete RLSTs                                       */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT18 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT18 OPEN rc=' rc

    TEMP.1  = "=== REPORT 18" COPIES('=',58)
    TEMP.2  = "= Old-format RLSTs that need to be updated",
                "before Db2 13 migration     ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The Resource Limit Specification Tables",
                "(RLSTs) listed below are not ="
    TEMP.5  = "= in a format that is supported in Db2 13. ",
                "In Db2 13, RLSTs must have ="
    TEMP.6  = "= 11 columns and the AUTHID, RLFCOLLN,",
                "and RLFPKG columns must each be ="
    TEMP.7  = "= defined as VARCHAR(128).  Before migrating",
                "to Db2 13, alter these    ="
    TEMP.8  = "= tables to comply with this format:        ",
                "                          ="
    TEMP.9  = "=                                           ",
                "                          ="
    TEMP.10 = "=   CREATE TABLE DSNRLSTxx                  ",
                "                          ="
    TEMP.11 = "=         ( AUTHID          VARCHAR(128) NOT",
                "NULL WITH DEFAULT         ="
    TEMP.12 = "=         , PLANNAME        CHAR(8)      NOT",
                "NULL WITH DEFAULT         ="
    TEMP.13 = "=         , ASUTIME         INTEGER,        ",
                "                          ="
    TEMP.14 = "=         , LUNAME          CHAR(8)      NOT",
                "NULL WITH DEFAULT         ="
    TEMP.15 = "=         , RLFFUNC         CHAR(1)      NOT",
                "NULL WITH DEFAULT         ="
    TEMP.16 = "=         , RLFBIND         CHAR(1)      NOT",
                "NULL WITH DEFAULT         ="
    TEMP.17 = "=         , RLFCOLLN        VARCHAR(128) NOT",
                "NULL WITH DEFAULT         ="
    TEMP.18 = "=         , RLFPKG          VARCHAR(128) NOT",
                "NULL WITH DEFAULT         ="
    TEMP.19 = "=         , RLFASUERR       INTEGER         ",
                "                          ="
    TEMP.20 = "=         , RLFASUWARN      INTEGER         ",
                "                          ="
    TEMP.21 = "=         , RLF_CATEGORY_B  CHAR(1)      NOT",
                "NULL WITH DEFAULT         ="
    TEMP.22 = "=         )                                 ",
                "                          ="
    TEMP.23 = COPIES('=',72)
    TEMP.24 = "RLST CREATOR.NAME"
    TEMP.25 = COPIES('-',72)

    'EXECIO' 25 'DISKW REPORT18 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT18 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
        "WITH OLD_FORMAT_RLST_TABLES (FULL_NAME) AS",
          "(  /***** detecting v2r3 rlst table format *****/",
               "SELECT STRIP(TBCREATOR) !! '.' !! STRIP(TBNAME)",
                 "FROM SYSIBM.SYSCOLUMNS",
                "WHERE TBNAME LIKE 'DSNRLST__'",
             "GROUP BY TBCREATOR, TBNAME",
               "HAVING (MAX(COLNO) < 11)",
           "UNION",
             "/***** detecting v6/7 rlst table format *****/",
               "SELECT STRIP(TBCREATOR) !! '.' !! STRIP(TBNAME)",
                 "FROM SYSIBM.SYSCOLUMNS",
                "WHERE TBNAME LIKE 'DSNRLST__'",
                  "AND(    (NAME = 'AUTHID'    AND LENGTH <> 128)",
                       "OR (NAME = 'RLFCOLLN'  AND LENGTH <> 128)",
                       "OR (NAME = 'RLFPKG'    AND LENGTH <> 128)",
                     ")",
          ")",
          "/***** select from expression *****/",
          "SELECT DISTINCT(FULL_NAME)",
            "FROM OLD_FORMAT_RLST_TABLES",
        "ORDER BY FULL_NAME"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1"

    DO WHILE SQLCODE = 0
      TEMP.1 = HV1
      'EXECIO' 1 'DISKW REPORT18 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT18 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT18 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT18 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 18 completed'

    RETURN /* end generateReport18 */

  generateReport19: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 19:                             */
    /*   Report process for converting to UNLOAD privilege           */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT19 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT19 OPEN rc=' rc

    TEMP.1  = "=== REPORT 19" COPIES('=',58)
    TEMP.2  = "= Authorization change for the Db2 UNLOAD utility",
                "                     ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Db2 12 introduces a new authorization privilege,",
                "UNLOAD, that        ="
    TEMP.5  = "= replaces the SELECT privilege for controlling who",
                "can use the Db2    ="
    TEMP.6  = "= UNLOAD utility to unload data from a table. You",
                "can grant the UNLOAD ="
    TEMP.7  = "= privilege to a user prior to activation of Db2 12",
                "new function but   ="
    TEMP.8  = "= it does not become effective until new function is",
                "activated. To     ="
    TEMP.9  = "= avoid disrupting users of the UNLOAD utility,",
                "follow these steps     ="
    TEMP.10 = "= when migrating to Db2 12:                      ",
                "                     ="
    TEMP.11 = "= (1) Set the Db2 AUTH_COMPATIBILITY parameter to",
                    "include option       ="
    TEMP.12 = "=     SELECT_FOR_UNLOAD.  This option disables",
                    "UNLOAD privilege        ="
    TEMP.13 = "=     checking and retains the traditional use of",
                    "the SELECT           ="
    TEMP.14 = "=     privilege for UNLOAD.                      ",
                    "                     ="
    TEMP.15 = "= (2) Activate serviceability trace IFCID 404 to",
                    "audit the usage of    ="
    TEMP.16 = "=     the SELECT privilege for UNLOAD utility",
                    "access.                  ="
    TEMP.17 = "= (3) Grant the UNLOAD privilege to users on",
                    "objects identified by     ="
    TEMP.18 = "=     the IFCID 404 trace.  IDs that are granted",
                    "the UNLOAD privilege  ="
    TEMP.19 = "=     will continue to use SELECT access for",
                    "UNLOAD utility access     ="
    TEMP.20 = "=     until you remove the SELECT_FOR_UNLOAD",
                    "option from the Db2       ="
    TEMP.21 = "=     AUTH_COMPATIBILITY parameter.  However,",
                    "these IDs will no longer ="
    TEMP.22 = "=     be flagged by IFCID 404.                  ",
                    "                      ="
    TEMP.23 = "= (4) After the access switchover has been",
                    "completed, remove the       ="
    TEMP.24 = "=     SELECT_FOR_UNLOAD option from the Db2",
                    "AUTH_COMPATIBILITY         ="
    TEMP.25 = "=     parameter to enable use of the UNLOAD",
                    "privilege for UNLOAD       ="
    TEMP.26 = "=     utility access.                            ",
                "                     ="
    TEMP.27 = "=                                                ",
                "                     ="
    TEMP.28 = "= NOTE: Because SELECT authorization can be",
                "granted for many reasons   ="
    TEMP.29 = "=       other than access to the UNLOAD utility,",
                "this report does not  ="
    TEMP.30 = "=       include a list of IDs that have SELECT",
                "authorization.  It is   ="
    TEMP.31 = "=       advisory only.                           ",
                "                     ="
    TEMP.32 = COPIES('=',72)

    'EXECIO' 32 'DISKW REPORT19 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT19 rc=' rc

    drop TEMP.
    'EXECIO 0 DISKW REPORT19 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT19 CLOSE rc=' rc

    CALL IntMsg,
        '  Report 19 completed'

    RETURN /* end generateReport19 */


  generateReport20: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 20:                             */
    /*   Report tables that have an OBID of 1                        */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT20 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT20 OPEN rc=' rc

    TEMP.1  = "=== REPORT 20" COPIES('=',58)
    TEMP.2  = "= Tables that have an OBID of 1            ",
                "                           ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Following is a list of tables that were created",
                "with an OBID of 1.   ="
    TEMP.5  = "= Use of OBID 1 in the CREATE TABLE statement was",
                "disallowed by APAR   ="
    TEMP.6  = "= PM61352.  This APAR also directed that all",
                "existing tables having an ="
    TEMP.7  = "= OBID of 1 be dropped and recreated with a",
                "different OBID.            ="
    TEMP.8  = "=                                    ",
                "                                 ="
    TEMP.9  = "= A subsequent APAR, PI88793, enforces the OBID",
                "restriction during:    ="
    TEMP.10 = "= - conversion from non-UTS to UTS table space",
                "types                   ="
    TEMP.11 = "= - table space versioning",
                "                                            ="
    TEMP.12 = "= - adding a check constraint to a table",
                "                              ="
    TEMP.13 = "= - creating or altering an index to include",
                "a row change timestamp    ="
    TEMP.14 = "=   column                       ",
                "                                     ="
    TEMP.15 = "= - creating an index with the DEFINE NO",
                "option                        ="
    TEMP.16 = "= Such requests will fail with SQLCODE -736 for",
                "tables that have an    ="
    TEMP.17 = "= OBID of 1.  To avoid this error, you need to",
                "drop each table listed  ="
    TEMP.18 = "= below and recreate it with a different OBID.",
                "                        ="
    TEMP.19 = "=                                    ",
                "                                 ="
    TEMP.20 = "= You need to complete this work before beginning",
                "migration to the     ="
    TEMP.21 = "= next release of Db2.               ",
                "                                 ="
    TEMP.22 = COPIES('=',72)
    TEMP.23 = "CREATOR.NAME"
    TEMP.24 = COPIES('-',257)

    'EXECIO'  24 'DISKW REPORT20 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT20 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT STRIP(CREATOR)",
           ", STRIP(NAME)",
        "FROM SYSIBM.SYSTABLES",
        "WHERE OBID = 1",
          "AND (  TYPE = 'T'",
              "OR TYPE = 'M'",
              "OR TYPE = 'H'",
              "OR TYPE = 'R'  )"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2"
    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 !! "." !! HV2
      'EXECIO' 1 'DISKW REPORT20 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT20 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2
    'EXECIO 0 DISKW REPORT20 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT20 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 20 completed'

    RETURN /* end generateReport20 */


  generateReport21: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 21:                             */
    /*   Report foreign key constraints that have a Db2 catalog      */
    /*   table as a parent                                           */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT21 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT21 OPEN rc=' rc

    TEMP.1  = "=== REPORT 21" COPIES('=',58)
    TEMP.2  = "= Foreign key constraints that have a Db2 catalog",
                "table as a parent    ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Following is a list of foreign key constraints",
                "that have a Db2       ="
    TEMP.5  = "= catalog table as a parent.  Such constraints",
                "can cause failures when ="
    TEMP.6  = "= used by the LOAD DATA utility or by processing",
                "of a DROP TABLESPACE  ="
    TEMP.7  = "= request.  Executing other statements or utilities",
                "that use the       ="
    TEMP.8  = "= constraint may result in unexpected behavior.",
                " APAR PI87444 modifies ="
    TEMP.9  = "= Db2 to prevent establishing such relationships",
                "but does not resolve  ="
    TEMP.10 = "= existing foreign key constraints where a catalog",
                "table is the parent.="
    TEMP.11 = "= These foreign key constraints, listed below, need",
                "to be dropped.     ="
    TEMP.12 = "=                                    ",
                "                                 ="
    TEMP.13 = "= To avoid Db2 catalog migration errors,",
                "you need to remove them       ="
    TEMP.14 = "= before beginning migration to the next",
                "release of Db2.               ="
    TEMP.15 = COPIES('=',72)

    'EXECIO'  15 'DISKW REPORT21 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT21 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT STRIP(REL.RELNAME)        AS CONSTRAINT_NAME",
           ", STRIP(TAB_CHILD.CREATOR)  AS CHILD_TABLECREATOR",
           ", STRIP(TAB_CHILD.NAME)     AS CHILD_TABLENAME",
           ", STRIP(TAB_PARENT.CREATOR) AS PARENT_TABLECREATOR",
           ", STRIP(TAB_PARENT.NAME)    AS PARENT_TABLENAME",
        "FROM SYSIBM.SYSTABLES TAB_CHILD",
           ", SYSIBM.SYSRELS   REL",
           ", SYSIBM.SYSTABLES TAB_PARENT",
        "WHERE TAB_CHILD.CREATOR  = REL.CREATOR",
          "AND TAB_CHILD.NAME     = REL.TBNAME",
          "AND TAB_CHILD.DBID    <> 6",
          "AND TAB_PARENT.CREATOR = REL.REFTBCREATOR",
          "AND TAB_PARENT.NAME    = REL.REFTBNAME",
          "AND TAB_PARENT.DBID    = 6"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2, :HV3, :HV4, :HV5"
    DO WHILE SQLCODE = 0
      TEMP.1  = COPIES('-',150)
      TEMP.2  = "CONSTRAINT NAME     :" HV1
      TEMP.3  = "CHILD TABLE CREATOR :" HV2
      TEMP.4  = "CHILD TABLE NAME    :" HV3
      TEMP.5  = "PARENT TABLE CREATOR:" HV4
      TEMP.6  = "PARENT TABLE NAME   :" HV5

      'EXECIO' 6 'DISKW REPORT21 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT21 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2, :HV3, :HV4, :HV5"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2 HV3 HV4 HV5
    'EXECIO 0 DISKW REPORT21 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT21 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 21 completed'

    RETURN /* end generateReport21 */


  generateReport22: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 22:                             */
    /*   Report expression-based indexes created in Db2 9            */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT22 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT22 OPEN rc=' rc

    TEMP.1  = "=== REPORT 22" COPIES('=',58)
    TEMP.2  = "= Indexes created in Db2 9 for z/OS that",
                "are expression-based indexes  ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Following is a list of indexes that were created as",
                "                 ="
    TEMP.5  = "= expression-based indexes in Db2 9.",
                "                                  ="
    TEMP.6  = "=                                    ",
                "                                 ="
    TEMP.7 = "= If an expression-based index was created in Db2 9,",
               "its runtime       ="
    TEMP.8 = "= structure cannot be executed on Db2 13, thus Db2 13",
               "will implicitly  ="
    TEMP.9 = "= alter regenerate the index when it is referenced",
               "in an SQL statement ="
    TEMP.10 = "= as an access path. To avoid the implicit alter",
                "regenerate activity   ="
    TEMP.11 = "= for DML applications that run on Db2 13 later,",
                "you must explicitly   ="
    TEMP.12 = "= alter regenerate each expression-based index",
                "listed in the report    ="
    TEMP.13 = "= below.                                      ",
                "                        ="
    TEMP.14 = "=                                    ",
                "                                 ="
    TEMP.15 = "= If you expect to run applications on Db2 12 data",
                "sharing members     ="
    TEMP.16 = "= during migration to Db2 13, alter regenerate these",
                "indexes before    ="
    TEMP.17 = "= you begin migration to Db2 13. Otherwise, complete",
                "the migration to  ="
    TEMP.18 = "= Db2 13 first. Then explicitly alter regenerate the",
                "expression-based  ="
    TEMP.19 = "= indexes listed below, after migration to Db2 13 is",
                "complete.         ="
    TEMP.20 = "=                                    ",
                "                                 ="
    TEMP.21 = "= If you alter regenerate the indexes in Db2 13, you",
                "can check the     ="
    TEMP.22 = "= SYSINDEXES.REGENERATETS value to confirm that the",
                "index regeneration ="
    TEMP.23 = "= succeeded.                                        ",
                "                  ="
    TEMP.24 = "=                                    ",
                "                                 ="
    TEMP.25 = "= The following example SQL shows how to alter",
                "regenerate an index:    ="
    TEMP.26 = "=   ALTER INDEX index-name REGENERATE",
                "                                 ="
    TEMP.27 = "=                                    ",
                "                                 ="
    TEMP.28 = "= After running the alter index regenerate operation,",
                "check the status ="
    TEMP.29 = "= of the index for REBUILD-pending (RBDP) status.",
                " This operation      ="
    TEMP.30 = "= might also invalidate packages that depend on",
                "the index, or packages ="
    TEMP.31 = "= that depend on related objects through cascading",
                "effects.            ="
    TEMP.32 = "=                                    ",
                "                                 ="
    TEMP.33 = "= Note: REPORT22 continues to identify all",
                "expression-based indexes    ="
    TEMP.34 = "=       created in Db2 9, regardless of whether",
                "the alter index        ="
    TEMP.35 = "=       regenerate is complete.",
                "                                       ="
    TEMP.36 = COPIES('=',72)
    TEMP.37 = "CREATOR.NAME"
    TEMP.38 = COPIES('-',257)

    'EXECIO'  38 'DISKW REPORT22 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT22 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT STRIP(CREATOR)",
           ", STRIP(NAME)",
        "FROM SYSIBM.SYSINDEXES",
        "WHERE (IX_EXTENSION_TYPE = 'S'",
          "OR  IX_EXTENSION_TYPE = 'T')",
          "AND RELCREATED = 'M'"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2"
    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 !! "." !! HV2
      'EXECIO' 1 'DISKW REPORT22 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT22 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2
    'EXECIO 0 DISKW REPORT22 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT22 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 22 completed'

    RETURN /* end generateReport22 */


  generateReport23: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 23:                             */
    /*   Report native SQL procedures and compiled SQL scalar        */
    /*   functions created in V9                                     */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT23 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT23 OPEN rc=' rc

    TEMP.1  = "=== REPORT 23" COPIES('=',58)
    TEMP.2  = "= Native SQL procedures and compiled",
      "SQL scalar functions created in   ="
    TEMP.3  = "= Db2 9 for z/OS                     ",
      "                                 ="
    TEMP.4  = COPIES('=',72)
    TEMP.5  = "= Following is a list of native SQL procedures and",
      "compiled SQL        ="
    TEMP.6  = "= scalar functions created in Db2 9 for z/OS.",
      "                         ="
    TEMP.7  = "=                                    ",
      "                                 ="
    TEMP.8  = "= If a native SQL procedure or a compiled SQL",
      "scalar function was      ="
    TEMP.9  = "= created in Db2 9 and runs on Db2 13, Db2 will",
      "implicitly alter       ="
    TEMP.10 = "= regenerate the routine. To avoid the implicit",
      "alter regenerate       ="
    TEMP.11 = "= activity, you must explicity alter regenerate",
      "each routine listed    ="
    TEMP.12 = "= in the report below.               ",
      "                                 ="
    TEMP.13 = "=                                    ",
      "                                 ="
    TEMP.14 = "= If you expect to run these routines on Db2 12",
      "data sharing members   ="
    TEMP.15 = "= during migration to Db2 13, alter regenerate",
      "these routines before   ="
    TEMP.16 = "= you begin migration to Db2 13. Otherwise, complete",
      "the migration to  ="
    TEMP.17 = "= Db2 13 first. Then explicitly alter regenerate the",
      "routines listed   ="
    TEMP.18 = "= below, after migration to Db2 13 is complete.",
      "                       ="
    TEMP.19 = "=                                    ",
      "                                 ="
    TEMP.20 = "= If you alter regenerate the routines in Db2 13, you",
      "can check the    ="
    TEMP.21 = "= SYSROUTINES.REGENERATETS value to confirm that the",
      "routine           ="
    TEMP.22 = "= regeneration succeeded.            ",
      "                                 ="
    TEMP.23 = "=                                    ",
      "                                 ="
    TEMP.24 = "= The following example SQL shows how to alter",
      "regenerate a native     ="
    TEMP.25 = "= SQL procedure:                     ",
      "                                 ="
    TEMP.26 = "=   ALTER PROCEDURE schema.name      ",
      "                                 ="
    TEMP.27 = "=   REGENERATE VERSION version-id    ",
      "                                 ="
    TEMP.28 = "=                                    ",
      "                                 ="
    TEMP.29 = "= The following example SQL shows how to alter",
      "regenerate a compiled   ="
    TEMP.30 = "= SQL scalar function:               ",
      "                                 ="
    TEMP.31 = "=   ALTER SPECIFIC FUNCTION schema.specificname",
      "                       ="
    TEMP.32 = "=   REGENERATE VERSION version-id    ",
      "                                 ="
    TEMP.33 = "=                                    ",
      "                                 ="
    TEMP.34 = "= Note: REPORT23 continues to identify all native",
      "SQL procedures and   ="
    TEMP.35 = "=       compiled SQL scalar functions created in",
      "Db2 9, regardless     ="
    TEMP.36 = "=       of whether the alter routine regenerate is",
      "already done.       ="
    TEMP.37  = COPIES('=',72)

    'EXECIO' 37 'DISKW REPORT23 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT23 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT CASE ROUTINETYPE",
      "         WHEN 'F' THEN 'FUNCTION'",
      "         ELSE 'PROCEDURE'",
      "       END",
      "     , RTRIM(SCHEMA) !! '.' !! RTRIM(NAME)",
      "     , RTRIM(SCHEMA) !! '.' !! RTRIM(SPECIFICNAME)",
      "     , RTRIM(VERSION)",
      "  FROM SYSIBM.SYSROUTINES",
      " WHERE RELCREATED = 'M'",
      "   AND (ORIGIN = 'N'",
      "    OR (ORIGIN = 'Q' AND INLINE='N'))",
      " ORDER BY ROUTINETYPE, SCHEMA, SPECIFICNAME"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2, :HV3, :HV4"

    DO WHILE SQLCODE = 0
      TEMP.1  = COPIES('-',278)
      TEMP.2  = "ROUTINETYPE        :" HV1
      IF HV1 = 'PROCEDURE' THEN
        TEMP.3  = "SCHEMA.NAME        :" HV2
      ELSE
        TEMP.3  = "SCHEMA.SPECIFICNAME:" HV3
      TEMP.4  = "VERSION-ID         :" HV4

      'EXECIO' 4 'DISKW REPORT23 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT23 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2, :HV3, :HV4"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2 HV3 HV4

    'EXECIO 0 DISKW REPORT23 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT23 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 23 completed'

    RETURN /* end generateReport23 */



  IntMsg: PROCEDURE expose debug ownmsg.; TRACE O
    PARSE ARG msg
    SAY msg
    RETURN /* end IntMsg */


  /********************************************************************/
  /* Got a dataset allocation or I/O error, print out message & abort.*/
  /********************************************************************/
  Dsn_Error:
    if debug<3 then trace O
    /* "ARG"(1) is the code section name, "ARG"(2) the event text.    */
    call IntMsg 'I/O error occurred in "'"ARG"(1)'". Event:' "ARG"(2)
    call Abort 23
    return /* end Dsn_Error */


  /********************************************************************/
  /* Got a failure SQLCODE, write diagnostics to result set and abort.*/
  /********************************************************************/
  ERRSQLCA:
    IF debug<3 THEN TRACE O

    CALL IntMsg '** Error SQL statement -' "ARG"(1)
    /* If this is a CREATE, show the statement we are working with.  */
    IF "WORD"("ARG"(1),1) = 'CREATE' THEN DO
      CALL IntMsg 'SQL statement follows:'
      CALL IntMsg sqlstmt
    END

    CALL IntMsg 'SQLCODE ='SQLCODE
    CALL IntMsg 'SQLERRMC='!!"TRANSLATE"(SQLERRMC,';','FF'x)
    CALL IntMsg 'SQLERRP ='SQLERRP
    CALL IntMsg 'SQLERRD ='SQLERRD.1','SQLERRD.2','SQLERRD.3,
                      !!','SQLERRD.4','SQLERRD.5','SQLERRD.6

    CALL IntMsg 'SQLWARN ='SQLWARN.0','SQLWARN.1','SQLWARN.2,
                      !!','SQLWARN.3','SQLWARN.4','SQLWARN.5,
                      !!','SQLWARN.6','SQLWARN.7','SQLWARN.8,
                      !!','SQLWARN.9','SQLWARN.10
    CALL IntMsg 'SQLSTATE='SQLSTATE

    ADDRESS DSNREXX "EXECSQL ROLLBACK"

    CALL Abort 27
    RETURN /* end ERRSQLCA */


  /********************************************************************/
  /* Got a bad enough error to stop processing.  Put an error message */
  /* into the result set and terminate with RC>=8.                    */
  /********************************************************************/
  Abort:
    IF aborting=1 THEN RETURN; ELSE aborting=1
    IF debug<3 THEN TRACE O
    IF debug>0 THEN SAY 'Subroutine: Abort'

    PARSE ARG errorid .
    SELECT                                                /* errorid */
      WHEN errorid=23 THEN DO
        CALL IntMsg 'Aborting due to I/O errors.'
        high_rc = 8
      END
      WHEN errorid=27 THEN DO
        CALL IntMsg 'Aborting due to unexpected SQLCODE.'
        high_rc = 8
      END
      WHEN errorid=44 THEN DO
        CALL IntMsg 'Aborting due to more table spaces requested than',
                 !! 'could be added.'
        high_rc = 8
      END
      WHEN errorid=54 THEN DO
        CALL IntMsg 'Aborting due to unexpected parameter setting.'
        high_rc = 8
      END
      OTHERWISE DO
        CALL IntMsg 'ABORT: invalid error id' errorid
        high_rc = 999
        END
    END /* SELECT errorid */

    IF "WORDPOS"( high_rc, '0 4 8 999' ) > 0 /* An expected value ?..*/
      THEN high_rc = 8                     /* Yes, normal abort rc=8 */
      ELSE high_rc = 999                   /* No, force internal err */

    EXIT Finis() /* end Abort */


  /********************************************************************/
  /* Do clean up processing and exit. Put all internally generated    */
  /* messages into global temp table for result set.  Open the result */
  /* set cursor.  Set the highest return code.  Close all files and   */
  /* exit                                                             */
  /********************************************************************/
  Finis:
      SAY '*** End   RC='high_rc
      RETURN high_rc  /* normal end of DSNTPMQ */

//*
//DSNTPMQ EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSEXEC  DD  DSN=&&TEMPPDS,DISP=(OLD,DELETE)
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
  DSNTPMQ §DSN§ §SYSADM§
//REPORT01 DD  SYSOUT=*
//REPORT02 DD  SYSOUT=*
//REPORT03 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=274)
//REPORT04 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=274)
//REPORT05 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=402)
//REPORT06 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=322)
//REPORT07 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=277)
//REPORT08 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=324)
//REBIND08 DD  DSN=DSN§§0.DSNTIJPE.REBIND08,
//             DISP=(,CATLG),
//             UNIT=SYSDA,SPACE=(1024,(10,10),RLSE),
//             DCB=(RECFM=FB,LRECL=80)
//REPORT09 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=72)
//REPORT10 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=148)
//REPORT11 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=89)
//REPORT12 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=72)
//REPORT13 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=264)
//REPORT14 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=141)
//REPORT15 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=274)
//REPORT16 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=274)
//REPORT17 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=274)
//REPORT18 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=274)
//REPORT19 DD  SYSOUT=*
//REPORT20 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=257)
//REPORT21 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=150)
//REPORT22 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=257)
//REPORT23 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=278)
//*

./ ADD NAME=DSNTIJPM
//*********************************************************************
//*  NAME = DSNTIJPM
//*
//*  DESCRIPTIVE NAME = DB2 INSTALL JOB
//*
//*    Licensed Materials - Property of IBM
//*    5650-DB2
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 12
//*
//*  FUNCTION = RUN THIS JOB ON DB2 VERSION 11 PRIOR TO MIGRATION TO
//*             DB2 VERSION 12.  IT QUERIES THE DB2 CATALOG TO IDENTIFY
//*             CONDITIONS THAT WILL NEED TO BE REMEDIED BEFORE YOU
//*             ATTEMPT TO MIGRATE TO DB2 VERSION 12 OR THAT NEED TO BE
//*             ATTENDED TO AFTER YOU HAVE MIGRATED TO DB2 VERSION 12.
//*
//*  PSEUDOCODE =
//*    DSNTJU04 STEP     EXECUTE DSNJU004
//*    DSNTGEN  STEP     COPY DSNTPMQ EXEC TO A TEMP PDS
//*    DSNTPMQ  STEP     CALL DSNTPMQ TO GENERATE PREMIGRATION REPORTS
//*
//*     NOTES = THE JCL REQUIRES DB2 REXX IN THE DB2 ENVIRONMENT YOU
//*             ARE MIGRATING FROM.
//*
//*             THE FOLLOWING MANUAL TAILORING IS REQUIRED:
//*             1. ADD A VALID JOB CARD.
//*             2. LOCATE AND CHANGE ALL OCCURRENCES OF THE FOLLOWING
//*                STRINGS AS INDICATED:
//*                A. '§BSDSNAME§' TO THE NAME OF THE BOOTSTRAP DATA
//*                   SET OF THE DB2 SUBSYSTEM YOU ARE PREPARING TO
//*                   MIGRATE. ENSURE THAT THE BSDS NAME SPECIFIED
//*                   IS NOT THE BSDS OF A SUBSYSTEM THAT HAS BEEN
//*                   QUIESCED.  ALSO ENSURE THAT THE SUBSYSTEM'S
//*                   DSNMSTR ADDRESS SPACE ALLOCATES THE BSDS
//*                   FOR REUSE (DISP=SHR), NOT EXCLUSIVE USE
//*                   (DISP=OLD).
//*                B. '§DSN§' TO THE NAME OF THE DB2 SUBSYSTEM YOU ARE
//*                   PREPARING TO MIGRATE.
//*                C. 'DSN§§0' TO THE PREFIX OF THE DB2 TARGET
//*                   LIBRARIES FOR THE DB2 SUBSYSTEM YOU ARE
//*                   PREPARING TO MIGRATE.
//*                D. '§SYSADM§' TO THE AUTHORIZATION ID TO BE USED
//*                   BY DB2 QUERIES IN THIS JOB.
//*             3. In job step DSNTJU04, the SYSPRINT DD allocates
//*                a data set for the print log map output. If
//*                necessary, increase the space allocated to the
//*                SYSPRINT DD.
//*
//* CHANGE ACTIVITY =
//*   2013/10/18 Update for DB2 12             pl160_inst1 pl160 n17984
//*   2014/01/27 Add REPORT19 (extraneous text in               PI09041
//*              SYSIBM.SYSTRIGGERS TEXT column)
//*   2014/02/22 Convert REPORT04 (user-defined indexes  PI11316 DM1800
//*              on the DB2 catalog that reside on user-managed
//*              storage) to report all user-defined indexes on
//*              the DB2 catalog that are not in the DB2 catalog
//*              space.  Discontinue REPORT05 (user-defined
//*              indexes on the DB2 catalog that reside on DB2-
//*              managed storage).
//*   2014/10/03 Update REPORT08 to mention    s2791_inst1 n17831 s2791
//*              INVALIDONLY option of FREE PACKAGE
//*   2014/08/18 Single-phase migration             s21938_inst1 s21938
//*   2014/10/29 Remove plan-oriented reports            d174783 s21938
//*              and reclaim unused report numbers               175140
//*   2014/08/26 Add REPORT14 (re:SYSPROC.DSNUTILU) s20128_inst1 s20128
//*   2014/11/20 Add REPORT15 and REPORT16        ss22919_inst1 ss22919
//*   2015/01/14 Adjust REPORT15                        d175788 ss22919
//*   2015/04/04 Fix typos in prolog text                       d175972
//*   2015/04/27 Fix REPORT06 FETCH                             d177742
//*   2015/07/23 Remove REPORT14 (re:SYSPROC.DSNUTILU)   d179171 DP1891
//*              and rename REPORT15 to REPORT14          179294 s25173
//*              and rename REPORT16 to REPORT15
//*   2015/09/19 Add report for obsolete RLSTs       dp1887_inst dp1887
//*   2015/10/20 Add report for invalidated plans              td180959
//*   2015/08/24 Add report for UNLOAD privilege    s20166_inst2 s20166
//*   2015/11/16 Update EXPLAIN table query                      181358
//*   2015/12/26 Note ADMIN_EXPLAIN_MAINT in report 3            177631
//*   2016/01/29 IFCID 403->404 in Report 18                     182269
//*   2016/03/03 Add report for SQLCODE -905 00C900E3           pi55114
//*   2017/07/17 Remove HV4 HV5 HV6 from output of REPORT07     pi81016
//*   2017/11/10 Add REPORT20 (tables that have an OBID of 1)   PI88793
//*   2017/11/10 Add REPORT21 (foreign key constraints that     PI87444
//*              have a Db2 catalog table as a parent)
//*   2017/12/15 Add REPORT22 (expression-based indexes         PI91332
//*              created in Db2 9)
//*   2018/01/24 Fix REPORT08 query                             PI91667
//*   2018/10/11 Add additional info in REPORT22 comment        PH03421
//*   2019/02/04 Add REPORT23 (native SQL procedures and        PH07660
//*              compiled SQL scalar functions created in Db2 9
//*   2019/04/29 Add REPORT24 (active log data sets greater     PH11514
//*              than 4 GB in size)
//*   2019/09/05 Add instruction in prolog for user to          PH12364
//*              increase the space allocated to the
//*              SYSPRINT DD in job step DSNTJU04 if
//*              necessary
//*              generateReport24:
//*              - Remove trailing blanks from active log
//*                data set name
//*              - Do not abort if LISTCAT failed or
//*                HI-A-RBA cannot be determined
//*   2020/03/19 Change REPORT08 informational text             PH20086
//*
//*********************************************************************
//*
//JOBLIB  DD  DSN=DSN§§0.SDSNEXIT,DISP=SHR
//        DD  DSN=DSN§§0.SDSNLOAD,DISP=SHR
//*
//*
//DSNTJU04 EXEC PGM=DSNJU004
//GROUP    DD DISP=SHR,DSN=§BSDSNAME§
//SYSPRINT DD  DSN=&&TEMPPDS2(JU004PRT),
//             DISP=(,PASS),
//             UNIT=SYSDA,SPACE=(TRK,(25,5,5),RLSE)
//SYSIN    DD *
           MEMBER *
//*
//DSNTGEN EXEC PGM=IEBGENER,COND=(4,LT)
//SYSIN    DD  DUMMY
//SYSPRINT DD  SYSOUT=*
//SYSUT2   DD  DSN=&&TEMPPDS(DSNTPMQ),
//             DISP=(,PASS),
//             UNIT=SYSDA,SPACE=(TRK,(1,1,1),RLSE),
//             DCB=(RECFM=FB,LRECL=80)
//SYSUT1   DD *
  /** REXX ** DSNTPMQ ************************************************/
  PARSE UPPER ARG ssid authid

  ssid = STRIP(ssid)
  authid = STRIP(authid)
  high_rc = 0

  CALL validateArgs ssid,
                    authid

  ADDRESS TSO "SUBCOM DSNREXX"           /* HOST CMD ENV AVAILABLE?   */
  IF rc THEN                             /* NO, LET'S MAKE ONE        */
    S_rc = RXSUBCOM('ADD','DSNREXX','DSNREXX') /* ADD HOST CMD ENV    */

  ADDRESS DSNREXX "CONNECT" ssid
  IF SQLCODE ç= 0 THEN CALL errsqlca 'CONNECT'

  CALL setAuthId authid

  CALL generateReport01

  CALL generateReport02

  CALL generateReport03

  CALL generateReport04

  CALL generateReport05

  CALL generateReport06

  CALL generateReport07

  CALL generateReport08

  CALL generateReport09

  CALL generateReport10

  CALL generateReport11

  CALL generateReport12

  CALL generateReport13

  CALL generateReport14

  CALL generateReport15

  CALL generateReport16

  CALL generateReport17

  CALL generateReport18

  CALL generateReport19

  CALL generateReport20

  CALL generateReport21

  CALL generateReport22

  CALL generateReport23

  CALL generateReport24

  ADDRESS DSNREXX "EXECSQL COMMIT"
  ADDRESS DSNREXX "DISCONNECT"

  EXIT Finis() /* end DSNTPMQ */

  /*==================================================================*/
  /* Begin subroutines                                                */
  /*==================================================================*/
  validateArgs: PROCEDURE
    /*****************************************************************/
    /* Print a welcome message and then validate the parameters      */
    /*****************************************************************/
    PARSE ARG   ssid                  /* DB2 Subsystem ID            */,
                authid                /* Authorization ID for work   */

    CALL IntMsg,
        'DSNTPMQ entry:'
    CALL IntMsg,
        '  Subsystem ID ............................................. ',
        ssid
    CALL IntMsg,
        '  Authorization ID ......................................... ',
        authid
    CALL IntMsg ''

    digits     = "0123456789"
    dquote     = '"'
    letters    = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    nationals  = "à£$"
    quote      = "'"
    underscore = "_"

    /******************************************************************
    * Validate the argument for parameter 1, ssid                     *
    * Rules: 1-4 characters starting with A-Z or à, £, or $.          *
    *        Remaining characters must be A-Z, 0-9, à, £, or $        *
    ******************************************************************/
    IF (LENGTH(ssid) < 1 ! LENGTH(ssid) > 4),
     ! (VERIFY(ssid, letters!!nationals) = 1),
     ! (VERIFY(ssid, letters!!digits!!nationals) > 0) THEN
      DO
      CALL IntMsg,
          'Error: The argument for parameter 1, SUBSYSTEM ',
          'ID, must be 1 to 4 char-'
      CALL IntMsg,
          '               acters and begin with A-Z, à, £, or $.  ',
          'The other characters must'
      CALL IntMsg,
          '               be A-Z, 0-9, à, £, or $.'
      CALL abort 54
    END

    /******************************************************************
    * Validate the argument for parameter 2, authid                   *
    * Rules: 1-8 characters starting with A-Z or à, £, or $.          *
    *        Remaining characters must be A-Z, 0-9, à, £, or $        *
    ******************************************************************/
    IF (LENGTH(authid) < 1 ! LENGTH(authid) > 8),
     ! (VERIFY(authid, letters!!nationals) = 1),
     ! (VERIFY(authid, letters!!digits!!nationals) > 0) THEN
      DO
        CALL IntMsg,
            'Error: The argument for parameter 2, AUTHORIZA',
            'TION ID, must be 1 to 8'
        CALL IntMsg,
            '               characters and begin with A-Z, à, £, or $.',
            '  The other characters'
        CALL IntMsg,
            '               must be A-Z, 0-9, à, £, or $.'
        CALL abort 54
      END
    RETURN /* end validateArgs */

  setAuthId: PROCEDURE
    /*****************************************************************/
    /* Set the current authorization id                              */
    /*****************************************************************/
    PARSE ARG authid                  /* Authorization id to use     */

    SQLSTMT = "SET CURRENT SQLID = '" !! authid !! "'"
    ADDRESS DSNREXX EXECSQL SQLSTMT
    IF sqlcode <> 0 THEN
       CALL errsqlca "SET CURRENT SQLID"

    RETURN /* end setAuthId */


  generateReport01: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 1:                               */
    /*   Reports existence of the previous-release sample database   */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT01 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT01 OPEN rc=' rc

    TEMP.1  = "=== REPORT 1" COPIES('=',59)
    TEMP.2  = "= Existence of the DB2 11 sample database           ",
                "                  ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The following lists the DB2 11",
                "sample database, DSN8D11A.  This      ="
    TEMP.5  = "= database is needed for verifying",
                "migration to DB2 12.  If DSN8D11A   ="
    TEMP.6  = "= is not listed below, you are",
                "recommended to recreate it before       ="
    TEMP.7  = "= commencing migration to DB2 12. ",
                "Run DB2 11 IVP job DSNTEJ1 to       ="
    TEMP.8  = "= recreate it.  You should also run",
                "one or more of the phase 2 and     ="
    TEMP.9  = "= phase 3 IVP jobs in DB2 11.  See",
                "the DB2 11 Installation Guide, the  ="
    TEMP.10 = "= chapter on Verifying with Sample",
                "Applications for more information.  ="
    TEMP.11 = COPIES('=',72)
    TEMP.12 = "NAME"
    TEMP.13 = "----------"

    'EXECIO' 13 'DISKW REPORT01 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT01 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT= "SELECT '""' !! NAME !! '""'",
               "FROM SYSIBM.SYSDATABASE",
              "WHERE NAME IN( 'DSN8D11A' )"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :TEMP"
    DO WHILE SQLCODE = 0
      TEMP.1 = TEMP
      'EXECIO' 1 'DISKW REPORT01 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT01 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :TEMP"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP.
    'EXECIO 0 DISKW REPORT01 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT01 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 1 completed'

    RETURN /* end generateReport01 */


  generateReport02: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 2:                              */
    /*   Report simple table spaces                                  */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT02 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT02 OPEN rc=' rc

    TEMP.1  = "=== REPORT 2" COPIES('=',59)
    TEMP.2  = "= Existence of simple table spaces                  ",
                "                  ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Each table space listed below is a simple",
                "table space, meaning that  ="
    TEMP.5  = "= it is neither partitioned nor segmented. ",
                "Although DB2 12 can use    ="
    TEMP.6  = "= existing simple table spaces and allows you",
                "to alter data, update    ="
    TEMP.7  = "= data, or retrieve data from them, it does not",
                "allow you to create    ="
    TEMP.8  = "= them.  If you accidentally drop a simple table",
                "space in 12, you      ="
    TEMP.9  = "= will be unable to recreate it.  Therefore, before",
                "migrating to 12,   ="
    TEMP.10 = "= convert each table space listed below to a preferred",
                "type of table   ="
    TEMP.11 = "= space.                                          ",
                 "                    ="
    TEMP.12 = COPIES('=',72)
    TEMP.13 = "DBNAME.TSNAME"
    TEMP.14 = COPIES('-',49)

    'EXECIO' 14 'DISKW REPORT02 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT02 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT STRIP(TS.DBNAME)",
          "!! '.'",
          "!! STRIP(TS.NAME)",
        "FROM SYSIBM.SYSTABLESPACE TS",
       "WHERE TS.PARTITIONS = 0",
         "AND TS.SEGSIZE = 0",
         "AND TS.TYPE   <> 'O'",
         "AND TS.DBNAME NOT IN ('DSNDB01', 'DSNDB06')",
         "AND TS.DBNAME NOT IN",
              "( SELECT DB.NAME",
                  "FROM SYSIBM.SYSDATABASE DB",
                 "WHERE DB.TYPE = 'W'",
              ")",
         "AND TS.DBNAME NOT LIKE 'DSN8%'",
    "ORDER BY TS.DBNAME, TS.NAME"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1"
    DO WHILE SQLCODE = 0
      TEMP.1 = HV1
      'EXECIO' 1 'DISKW REPORT02 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT02 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT02 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT02 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 2 completed'
  RETURN /* end GenerateReport02 */


  generateReport03: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 3:                              */
    /*   Reports explain tables that are not in current-release fmt  */
    /*****************************************************************/
    "EXECIO 0 DISKW Report03 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT03 OPEN rc=' rc

    TEMP.1  = "=== REPORT 3" COPIES('=',59)
    TEMP.2  = "= EXPLAIN tables that need to be updated to",
                "DB2 11 format              ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The EXPLAIN tables listed below are not in",
                "current-release format,   ="
    TEMP.5  = "= meaning that one or more columns available",
                "in the current release    ="
    TEMP.6  = "= (DB2 11) is missing or has a different length",
                "than found.  Use of    ="
    TEMP.7  = "= such EXPLAIN tables is deprecated and support",
                "for them may be        ="
    TEMP.8  = "= removed in a future release of DB2.  Use DB2",
                "sample job DSNTIJXA or  ="
    TEMP.9  = "= DB2-supplied stored procedure",
                "SYSPROC.ADMIN_EXPLAIN_MAINT to alter   ="
    TEMP.10 = "= all tables in a specified schema to current",
                "release format.          ="
    TEMP.11 = COPIES('=',72)
    TEMP.12 = "CREATOR.NAME" COPIES(' ',244)
    TEMP.13 = COPIES('-',257)

    'EXECIO' 13 'DISKW REPORT03 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT03 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    /*****************************************************************/
    /* The following CTE consists of 2 parts separated by UNIONs:    */
    /* Part 1: Finds EXPLAIN tables that have missing columns        */
    /* Part 2: Finds EXPLAIN tables that have unexpected column lens */
    /*****************************************************************/
    SQLSTMT =,
      "WITH OLD_FORMAT_EXPLAIN_TABLES (FULL_NAME) AS",
      "( SELECT STRIP(TBCREATOR) !! '.' !! STRIP(TBNAME)",
          "FROM SYSIBM.SYSCOLUMNS",
         "WHERE TBNAME IN( 'DSN_COLDIST_TABLE'",
                        ", 'DSN_DETCOST_TABLE'",
                        ", 'DSN_FILTER_TABLE'",
                        ", 'DSN_FUNCTION_TABLE'",
                        ", 'DSN_KEYTGTDIST_TABLE'",
                        ", 'DSN_PGRANGE_TABLE'",
                        ", 'DSN_PGROUP_TABLE'",
                        ", 'DSN_PREDICAT_TABLE'",
                        ", 'DSN_PREDICATE_SELECTIVITY'",
                        ", 'DSN_PROFILE_HISTORY'",
                        ", 'DSN_PROFILE_TABLE'",
                        ", 'DSN_PTASK_TABLE'",
                        ", 'DSN_QUERY_TABLE'",
                        ", 'DSN_QUERYINFO_TABLE'",
                        ", 'DSN_SORT_TABLE'",
                        ", 'DSN_SORTKEY_TABLE'",
                        ", 'DSN_STAT_FEEDBACK'",
                        ", 'DSN_STATEMENT_CACHE_TABLE'",
                        ", 'DSN_STATEMNT_TABLE'",
                        ", 'DSN_STRUCT_TABLE'",
                        ", 'DSN_VIEWREF_TABLE'",
                        ", 'DSN_VIRTUAL_INDEXES'",
                        ", 'DSN_VIRTUAL_KEYTARGETS'",
                        ", 'PLAN_TABLE'",
                        ")",
          "GROUP BY TBCREATOR, TBNAME",
          "HAVING (TBNAME = 'DSN_COLDIST_TABLE'",
                  "AND MAX(COLNO) <  21)",
              "OR (TBNAME = 'DSN_DETCOST_TABLE'",
                  "AND MAX(COLNO) < 136)",
              "OR (TBNAME = 'DSN_FILTER_TABLE'",
                  "AND MAX(COLNO) <  18)",
              "OR (TBNAME = 'DSN_FUNCTION_TABLE'",
                  "AND MAX(COLNO) <  20)",
              "OR (TBNAME = 'DSN_KEYTGTDIST_TABLE'",
                  "AND MAX(COLNO) <  21)",
              "OR (TBNAME = 'DSN_PGRANGE_TABLE'",
                  "AND MAX(COLNO) <  15)",
              "OR (TBNAME = 'DSN_PGROUP_TABLE'",
                  "AND MAX(COLNO) <  42)",
              "OR (TBNAME = 'DSN_PREDICAT_TABLE'",
                  "AND MAX(COLNO) <  42)",
              "OR (TBNAME = 'DSN_PREDICATE_SELECTIVITY'",
                  "AND MAX(COLNO) <  16)",
              "OR (TBNAME = 'DSN_PROFILE_HISTORY'",
                  "AND MAX(COLNO) <  15)",
              "OR (TBNAME = 'DSN_PROFILE_TABLE'",
                  "AND MAX(COLNO) <  15)",
              "OR (TBNAME = 'DSN_PTASK_TABLE'",
                  "AND MAX(COLNO) <  25)",
              "OR (TBNAME = 'DSN_QUERY_TABLE'",
                  "AND MAX(COLNO) <  16)",
              "OR (TBNAME = 'DSN_QUERYINFO_TABLE'",
                  "AND MAX(COLNO) <  18)",
              "OR (TBNAME = 'DSN_SORT_TABLE'",
                  "AND MAX(COLNO) <  16)",
              "OR (TBNAME = 'DSN_SORTKEY_TABLE'",
                  "AND MAX(COLNO) <  21)",
              "OR (TBNAME = 'DSN_STATEMENT_CACHE_TABLE'",
                  "AND MAX(COLNO) <  79)",
              "OR (TBNAME = 'DSN_STATEMNT_TABLE'",
                  "AND MAX(COLNO) <  16)",
              "OR (TBNAME = 'DSN_STRUCT_TABLE'",
                  "AND MAX(COLNO) <  20)",
              "OR (TBNAME = 'DSN_VIEWREF_TABLE'",
                  "AND MAX(COLNO) <  13)",
              "OR (TBNAME = 'DSN_VIRTUAL_INDEXES'",
                  "AND MAX(COLNO) < 150)",
              "OR (TBNAME = 'DSN_VIRTUAL_KEYTARGETS'",
                  "AND MAX(COLNO) < 16)",
              "OR (TBNAME = 'PLAN_TABLE'",
                  "AND MAX(COLNO) <  66)",
        "UNION",
        "SELECT STRIP(TBCREATOR) !! '.' !! STRIP(TBNAME)",
          "FROM SYSIBM.SYSCOLUMNS",
         "WHERE TBNAME IN( 'DSN_DETCOST_TABLE'",
                        ", 'DSN_FILTER_TABLE'",
                        ", 'DSN_FUNCTION_TABLE'",
                        ", 'DSN_PGRANGE_TABLE'",
                        ", 'DSN_PGROUP_TABLE'",
                        ", 'DSN_PREDICAT_TABLE'",
                        ", 'DSN_PROFILE_HISTORY'",
                        ", 'DSN_PROFILE_TABLE'",
                        ", 'DSN_PTASK_TABLE'",
                        ", 'DSN_QUERY_TABLE'",
                        ", 'DSN_SORT_TABLE'",
                        ", 'DSN_SORTKEY_TABLE'",
                        ", 'DSN_STATEMENT_CACHE_TABLE'",
                        ", 'DSN_STATEMENT_RUNTIME_INFO'",
                        ", 'DSN_STATEMNT_TABLE'",
                        ", 'DSN_STRUCT_TABLE'",
                        ", 'DSN_VIEWREF_TABLE'",
                        ", 'DSN_VIRTUAL_INDEXES'",
                        ", 'PLAN_TABLE'",
                        ")",
           "AND (    (NAME = 'ACCESSCREATOR'    AND LENGTH <> 128)",
                 "OR (NAME = 'ACCESSNAME'       AND LENGTH <> 128)",
                 "OR (NAME = 'APPLNAME'         AND LENGTH <> 24)",
                 "OR (NAME = 'COLLID'           AND LENGTH <> 128)",
                 "OR (NAME = 'CORRELATION_NAME' AND LENGTH <> 128)",
                 "OR (NAME = 'CREATOR'          AND LENGTH <> 128)",
                 "OR (NAME = 'FUNCTION_NAME'    AND LENGTH <> 128)",
                 "OR (NAME = 'FUNCTION_TEXT'    AND LENGTH <> 1500)",
                 "OR (NAME = 'GROUP_MEMBER'     AND LENGTH <> 24)",
                 "OR (NAME = 'HINTUSED'         AND LENGTH <> 128)",
                 "OR (NAME = 'OPTHINT'          AND LENGTH <> 128)",
                 "OR (NAME = 'PATH'             AND LENGTH <> 2048)",
                 "OR (NAME = 'PLANNAME'         AND LENGTH <> 24)",
                 "OR (NAME = 'PROGNAME'         AND LENGTH <> 128)",
                 "OR (NAME = 'REMARKS'          AND LENGTH <> 762)",
                 "OR (NAME = 'SCHEMA_NAME'      AND LENGTH <> 128)",
                 "OR (NAME = 'SPEC_FUNC_NAME'   AND LENGTH <> 128)",
                 "OR (NAME = 'TNAME'            AND LENGTH <> 128)",
                 "OR (NAME = 'VERSION'          AND LENGTH <> 122)",
                 "OR (NAME = 'VIEW_CREATOR'     AND LENGTH <> 128)",
                 "OR (NAME = 'VIEW_NAME'        AND LENGTH <> 128)",
               ")",
      ")",
      "SELECT DISTINCT(FULL_NAME)",
        "FROM OLD_FORMAT_EXPLAIN_TABLES",
       "ORDER BY FULL_NAME"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :HV1"
    DO WHILE SQLCODE = 0
      TEMP.1 = HV1
      'EXECIO' 1 'DISKW REPORT03 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT03 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :HV1"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT03 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT03 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 3 completed'

    RETURN /* end generateReport03 */


  generateReport04: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 4:                              */
    /*   Reports user-defined indexes on the DB2 catalog that        */
    /*   do not reside in the DB2 catalog space.               DM1800*/
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT04 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT04 OPEN rc=' rc

    TEMP.1  = "=== REPORT 4" COPIES('=',59)
    TEMP.2  = "= User indexes on the DB2 catalog that",
                "are not in the DB2 catalog space="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The indexes listed below are user-defined",
                "indexes on the DB2 catalog ="
    TEMP.5  = "= that do not reside in the data space used",
                "by the DB2 catalog and     ="
    TEMP.6  = "= directory.  IBM recommends that, before you",
                "begin migration to the   ="
    TEMP.7  = "= next release of DB2, you drop and recreate",
                "these indexes to move     ="
    TEMP.8  = "= them into the DB2 catalog space.",
                "                                    ="
    TEMP.9  = COPIES('=',72)
    TEMP.10 = "CREATOR.NAME"
    TEMP.11 = COPIES('-',257)

    'EXECIO' 11 'DISKW REPORT04 (STEM TEMP.'

    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT04 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT RTRIM(IX.CREATOR)",
           ", RTRIM(IX.NAME)",
        "FROM SYSIBM.SYSINDEXES   IX",
           ", SYSIBM.SYSINDEXPART IXP",
        "WHERE IX.CREATOR   = IXP.IXCREATOR",
          "AND IX.NAME      = IXP.IXNAME",
          "AND IX.DBID      = 6",
          "AND (    IX.OBID BETWEEN 400 AND 599",
                "OR IX.OBID BETWEEN 900 AND 1699",
              ")",
          "AND IXP.STORNAME <> '00000001'",
      "ORDER BY IX.CREATOR, IX.NAME"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2"
    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 !! "." !! HV2
      'EXECIO' 1 'DISKW REPORT04 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT04 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2
    'EXECIO 0 DISKW REPORT04 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT04 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 4 completed'

    RETURN /* end generateReport04 */


  generateReport05: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 5:                              */
    /*   Reports package copies that are not support in DB2 12       */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT05 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT05 OPEN rc=' rc

    TEMP.1  = "=== REPORT 5" COPIES('=',59)
    TEMP.2  = "= Package copies that are not supported after",
                "migration                ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The following is a list of package copies",
                "that were last bound prior ="
    TEMP.5  = "= to DB2 10. DB2 12 will not execute package",
                "copies bound prior to DB2 ="
    TEMP.6  = "= 10. If ABIND is YES or COEXIST, upon initial",
                "execution of the CURRENT="
    TEMP.7  = "= package copy, DB2 12 will automatically rebind",
                "the package. If ABIND ="
    TEMP.8  = "= is set to 'NO', DB2 12 will return SQLCODE -908",
                "(SQLSTATE 23510) for ="
    TEMP.9  = "= all attempts to use any such package until it is",
                "explicitly rebound. ="
    TEMP.10 = "= To avoid the autobinds or outages from SQLCODE",
                "-908, you should      ="
    TEMP.11 = "= rebind CURRENT package copies that will be invalid",
                "before migration  ="
    TEMP.12 = "= to DB2 12.  DB2 12 will block a REBIND SWITCH to",
                "a package copy that ="
    TEMP.13 = "= is invalid or was bound before DB2 10.  After",
                "migration and before   ="
    TEMP.14 = "= initial REBIND on DB2 12, you can remove inactive,",
                "invalid package   ="
    TEMP.15 = "= copies using FREE PACKAGE PLANMGMTSCOPE(INACTIVE)",
                "INVALIDONLY(YES).  ="
    TEMP.16 = "= By freeing inactive, invalid package copies before",
                "the initial       ="
    TEMP.17 = "= REBIND on DB2 12, the ORIGINAL slot can be populated",
                "with a copy     ="
    TEMP.18 = "= that is valid and more recent.                      ",
                "                ="
    TEMP.19 = COPIES('=',72)
    TEMP.20 = "Last Used  Copy     Collection-ID.Package-name.(Version)"
    TEMP.21 = "---------- --------" COPIES('-',382)

    'EXECIO' 21 'DISKW REPORT05 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT05 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "  SELECT LASTUSED ",
      "       , 'CURRENT ' AS PKGCOPY ",
      "       , RTRIM(COLLID) !! '.' !! ",
      "         RTRIM(NAME) !! '.(' !! ",
      "         RTRIM(VERSION) !! ')' ",
      "         AS RESULT ",
      "    FROM SYSIBM.SYSPACKAGE ",
      "   WHERE RELBOUND <= 'M' ",
      "  UNION ALL ",
      "  SELECT LASTUSED ",
      "       , CASE WHEN COPYID = 1 THEN 'PREVIOUS' ",
      "              WHEN COPYID = 2 THEN 'ORIGINAL' ",
      "              ELSE 'ERROR' ",
      "         END AS PKGCOPY ",
      "       , RTRIM(COLLID) !! '.' !! ",
      "         RTRIM(NAME) !! '.(' !! ",
      "         RTRIM(VERSION) !! ')' ",
      "         AS RESULT ",
      "    FROM SYSIBM.SYSPACKCOPY ",
      "   WHERE RELBOUND <= 'M' ",
      "ORDER BY RESULT, PKGCOPY ",
      "  FOR FETCH ONLY WITH UR "

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2, :HV3"
    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 HV2 HV3
      'EXECIO' 1 'DISKW REPORT05 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT05 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2, :HV3"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2 HV3
    'EXECIO 0 DISKW REPORT05 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT05 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 5 completed'

    RETURN /* end generateReport05 */


  generateReport06: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 6:                              */
    /*   Reports packages that are autobind candidates in DB2 12     */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT06 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT06 OPEN rc=' rc

    TEMP.1  = "=== REPORT 6" COPIES('=',59)
    TEMP.2  = "= Packages that are not supported",
                "after migration to DB2 12            ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The following is a list of packages",
                "that were last bound prior to    ="
    TEMP.5  = "= DB2 10.  Such packages are not",
                "supported after migration to DB2 12   ="
    TEMP.6  = "= and will be automatically rebound",
                "the first time used if the ABIND   ="
    TEMP.7  = "= subsystem parameter is set to 'YES'",
                "or 'COEXIST'.  If ABIND is set   ="
    TEMP.8  = "= to 'NO', DB2 12 will return SQLCODE",
                "-908 (SQLSTATE 23510) for all    ="
    TEMP.9  = "= attempts to use any such package",
                "until it is explicitly rebound.     ="
    TEMP.10 = "= To avoid the autobinds or outages",
                "from SQLCODE -908, you should      ="
    TEMP.11 = "= rebind these packages before you",
                "begin migration to DB2 12.          ="
    TEMP.12 = COPIES('=',72)
    TEMP.13 = "Valid Operative LastUsed   PLANMGMT APREUSE",
              "Collection-ID.Package-name.Hex-contoken"
    TEMP.14 = "----- --------- ---------- -------- -------",
               COPIES('-',278)

    'EXECIO' 14 'DISKW REPORT06 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT06 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "  SELECT RPAD(VALID, 5, ' ') ",
      "       , RPAD(OPERATIVE, 9, ' ') ",
      "       , LASTUSED ",
      "       , CASE PLANMGMT ",
      "           WHEN 'B' THEN 'BASIC   ' ",
      "           WHEN 'E' THEN 'EXTENDED' ",
      "           ELSE          'OFF     ' ",
      "         END ",
      "       , CASE APREUSE ",
      "           WHEN 'E' THEN 'ERROR  ' ",
      "           WHEN 'W' THEN 'WARN   ' ",
      "           ELSE          'NONE   ' ",
      "         END ",
      "       , RTRIM( '""' !! RTRIM(COLLID)  !! '""' ) ",
      "         !! '.'",
      "         !! RTRIM( '""' !! RTRIM(NAME)    !! '""' ) ",
      "         !! '.'",
      "         !! HEX(CONTOKEN) ",
      "         AS RESULT",
      "    FROM SYSIBM.SYSPACKAGE ",
      "   WHERE RELBOUND IN( ' ',  'K', 'L', 'M' ) ",
      "ORDER BY RESULT "

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2, :HV3, :HV4,",
                                          ":HV5, :HV6"
    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 HV2 HV3 HV4 HV5 HV6
      'EXECIO' 1 'DISKW REPORT06 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT06 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2, :HV3, :HV4,",
                                            ":HV5, :HV6"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2 HV3 HV4 HV5 HV6
    'EXECIO 0 DISKW REPORT06 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT06 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 6 completed'

    RETURN /* end generateReport06 */


  generateReport07: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 7:                              */
    /*   Reports plans that are autobind candidates in DB2 12        */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT07 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT07 OPEN rc=' rc

    TEMP.1  = "=== REPORT 7" COPIES('=',59)
    TEMP.2  = "= Plans that are not supported",
                "after migration to DB2 12               ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The following is a list of plans",
                "that were last bound prior to       ="
    TEMP.5  = "= DB2 10.  Such plans are not",
                "supported after migration to DB2 12      ="
    TEMP.6  = "= and will be automatically rebound",
                "the first time used if the ABIND   ="
    TEMP.7  = "= subsystem parameter is set to 'YES'",
                "or 'COEXIST'.  If ABIND is set   ="
    TEMP.8  = "= to 'NO', DB2 12 will return SQLCODE",
                "-908 (SQLSTATE 23510) for all    ="
    TEMP.9  = "= attempts to use any such plan",
                "until it is explicitly rebound.        ="
    TEMP.10 = "= To avoid the autobinds or outages",
                "from SQLCODE -908, you should      ="
    TEMP.11 = "= rebind these plans before you",
                "begin migration to DB2 12.             ="
    TEMP.12 = COPIES('=',72)
    TEMP.13 = "Valid Operative Plan-Name/Creator"
    TEMP.14 = "----- ---------" COPIES('-',261)

    'EXECIO' 14 'DISKW REPORT07 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT07 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "  SELECT RPAD(VALID, 5, ' ') ",
      "       , RPAD(OPERATIVE, 9, ' ') ",
      "       , RTRIM( '""' !! RTRIM(NAME) !! '""' )",
      "         !! '/'",
      "         !! RTRIM( '""' !! RTRIM(CREATOR) !! '""' )",
      "         AS RESULT",
      "    FROM SYSIBM.SYSPLAN ",
      "   WHERE RELBOUND IN( ' ',  'K', 'L', 'M' ) ",
      "ORDER BY RESULT "

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2, :HV3"
    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 HV2 HV3
      'EXECIO' 1 'DISKW REPORT07 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT06 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2, :HV3"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2 HV3
    'EXECIO 0 DISKW REPORT07 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT07 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 7 completed'

    RETURN /* end generateReport07 */


  generateReport08: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 8:                              */
    /*   Report package dependencies on Db2 catalog and directory    */
    /*   objects affected by migration to Db2 12                     */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT08 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT08 OPEN rc=' rc

    TEMP.1  = "=== REPORT 8" COPIES('=',59)
    TEMP.2  = "= Packages that will be invalidated",
                "during migration to Db2 12         ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The packages listed below will be",
                "invalidated by job DSNTIJTC during ="
    TEMP.5  = "= migration to Db2 12 because they",
                "contain references (as indicated)   ="
    TEMP.6  = "= to one or more of the Db2 catalog",
                "and directory objects that are     ="
    TEMP.7  = "= affected by migration processing.",
                "                                   ="
    TEMP.8  = "=                                  ",
                "                                   ="
    TEMP.9  = "= Db2 will automatically rebind the",
                "identified (invalidated) packages  ="
    TEMP.10 = "= on next use provided the ABIND",
                "subsystem parameter is set to         ="
    TEMP.11 = "= 'COEXIST' or 'YES'.  If ABIND is set",
                "to 'NO', Db2 will return        ="
    TEMP.12 = "= SQLCODE -908 (SQLSTATE 23510)",
                "for each attempt to use the package    ="
    TEMP.13 = "= until it is explicitly rebound.    ",
                "                                 ="
    TEMP.14 = "=                                  ",
                "                                   ="
    TEMP.15 = "= Recommendation: Explicitly REBIND the",
                "identified (invalidated)       ="
    TEMP.16 = "=                 packages after migration",
                "to Db2 12 to avoid          ="
    TEMP.17 = "=                 automatic rebind",
                "processing.                         ="
    TEMP.18 = COPIES('=',72)

    TEMP.19 = "Reference         ",
              "Collection-ID.Package-name.Hex-contoken"
    TEMP.20 = "------------------" COPIES('-',265)

    'EXECIO' 20 'DISKW REPORT08 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT08 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT DISTINCT SUBSTR(STRIP(BNAME) !! '  ', 1, 18)",
           ", STRIP(DCOLLID) !! '.' !! STRIP(DNAME) !! '.' !!",
              "HEX(DCONTOKEN)",
        "FROM SYSIBM.SYSPACKDEP",
       "WHERE ( BTYPE = 'I'",
               "AND BQUALIFIER = 'SYSIBM'",
               "AND BNAME IN ( 'DSNOTX01', 'DSNATX02' )",
             ")",
          "OR ( BTYPE = 'T'",
               "AND BQUALIFIER = 'SYSIBM'",
               "AND BNAME IN( 'SYSCONTROLS', 'SYSENVIRONMENT'",
                           ", 'SYSINDEXES', 'SYSKEYS'",
                           ", 'SYSPACKAGE', 'SYSPACKCOPY'",
                           ", 'SYSROUTINES', 'SYSTABLES'",
                           ", 'SYSTRIGGERS'",
                           ")",
             ")",
      "ORDER BY 1, 2"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2"

    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 !! ' ' !! HV2
      'EXECIO' 1 'DISKW REPORT08 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT08 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT08 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT08 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 8 completed'

    RETURN /* end generateReport08 */


  generateReport09: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 9:                              */
    /*   Report problem with catalog table space version numbers.    */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT09 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT09 OPEN rc=' rc

    TEMP.1  = "=== REPORT 9" COPIES('=',59)
    TEMP.2  = "= DB2 table spaces with unexpected versioning",
                "                         ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Following is a list of DB2 catalog",
                "table spaces for which the oldest ="
    TEMP.5  = "= version is greater than the current",
                "version. Such table spaces may   ="
    TEMP.6  = "= cause migration to DB2 12 to fail",
                "during execution of job DSNTIJTC   ="
    TEMP.7  = "= (catalog tailoring). Before beginning",
                "your migration use MODIFY      ="
    TEMP.8  = "= RECOVERY followed by REORG to correct",
                "the versioning of all these    ="
    TEMP.9  = "= table spaces. See the Utility Guide for",
                "information about these      ="
    TEMP.10 = "= utilities.                             ",
                "                             ="
    TEMP.11 = COPIES('=',72)

    TEMP.12 = "CREATOR.NAME.OLDEST_VERSION.CURRENT_VERSION"
    TEMP.13 = COPIES('-',72)

    'EXECIO' 13 'DISKW REPORT09 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT09 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "  SELECT STRIP(CREATOR),",
      "         SUBSTR(NAME, 1, 8),",
      "         OLDEST_VERSION,",
      "         CURRENT_VERSION",
      "    FROM SYSIBM.SYSTABLESPACE",
      "   WHERE DBID = 6",
      "     AND (CURRENT_VERSION < OLDEST_VERSION)"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2, :HV3, :HV4"

    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 !! '.' !! HV2 !! '.' !! HV3 !! '.' !! HV4
      'EXECIO' 1 'DISKW REPORT09 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT09 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2, :HV3, :HV4"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT09 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT09 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 9 completed'

    RETURN /* end generateReport09 */


  generateReport10: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 10:                             */
    /*   Report inconsistent version numbers in the DB2 catalog      */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT10 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT10 OPEN rc=' rc

    TEMP.1  = "=== REPORT 10" COPIES('=',58)
    TEMP.2  = "= DB2 tables with unexpected versioning             ",
                "                  ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Below is a list of tables which have",
                "inconsistent version numbers in ="
    TEMP.5  = "= the DB2 catalog.  The inconsistencies",
                "do not affect normal DB2       ="
    TEMP.6  = "= operations but may interfere with",
                "migration processing.  Therefore,  ="
    TEMP.7  = "= before beginning migration to DB2",
                 "12, contact IBM Service for        ="
    TEMP.8  = "= assistance to get them resolved.",
                 "                                    ="
    TEMP.9  = COPIES('=',72)

    'EXECIO' 9 'DISKW REPORT10 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT10 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT TB.CREATOR",
           ", TB.NAME",
           ", TB.DBNAME",
           ", TB.TSNAME",
           ", TB.DBID",
           ", TB.OBID",
           ", TB.VERSION",
           ", TS.OBID",
           ", TS.PSID",
           ", TS.OLDEST_VERSION",
           ", TS.CURRENT_VERSION",
        "FROM SYSIBM.SYSTABLES     TB",
           ", SYSIBM.SYSTABLESPACE TS",
       "WHERE TB.DBNAME = TS.DBNAME",
         "AND TB.TSNAME = TS.NAME",
         "AND TB.TYPE = 'T'",
         "AND TS.OLDEST_VERSION = 0",
         "AND TS.CURRENT_VERSION = 0",
         "AND TB.VERSION <> 0"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2, :HV3, :HV4,",
                                  ":HV5, :HV6, :HV7, :HV8,",
                                  ":HV9, :HV10, :HV11"

    DO WHILE SQLCODE = 0
      TEMP.1  = COPIES('-',148)
      TEMP.2  = "TB.CREATOR        :" HV1
      TEMP.3  = "TB.NAME           :" HV2
      TEMP.4  = "TB.DBNAME         :" HV3
      TEMP.5  = "TB.TSNAME         :" HV4
      TEMP.6  = "TB.DBID           :" HV5
      TEMP.7  = "TB.OBID           :" HV6
      TEMP.8  = "TB.VERSION        :" HV7
      TEMP.9  = "TS.OBID           :" HV8
      TEMP.10 = "TS.PSID           :" HV9
      TEMP.11 = "TS.OLDEST_VERSION :" HV10
      TEMP.12 = "TS.CURRENT_VERSION:" HV11

      'EXECIO' 12 'DISKW REPORT10 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT10 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2, :HV3, :HV4,",
                                    ":HV5, :HV6, :HV7, :HV8,",
                                    ":HV9, :HV10, :HV11"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT10 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT10 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 10 completed'

    RETURN /* end generateReport10 */


  generateReport11: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 11:                             */
    /*   Report DB2 system page discrepancies for SYSTABLES          */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT11 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT11 OPEN rc=' rc

    TEMP.1  = "=== REPORT 11" COPIES('=',58)
    TEMP.2  = "= DB2 system page discrepancies for",
                "SYSTABLES                          ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Queries on the following table",
                "spaces may fail with SQLCODE -904,    ="
    TEMP.5  = "= reason code 00C900E3, because of",
                "internal difference in data that    ="
    TEMP.6  = "= is stored for the SYSIBM.SYSTABLES",
                "table in the DB2 system pages.    ="
    TEMP.7  = "= If any rows are listed below then,",
                "before beginning migration to     ="
    TEMP.8  = "= DB2 12, take the following actions:",
                "                                 ="
    TEMP.9  = "=    1- REORG the DSNDB06.SYSALTER",
                "catalog table space                 ="
    TEMP.10 = "=    2- Run MODIFY RECOVERY for",
                "DSNDB06.SYSALTER as follows:           ="
    TEMP.11 = "=         MODIFY RECOVERY TABLESPACE",
                "DSNDB06.SYSALTER DELETE AGE(*)    ="
    TEMP.12 = "=    3- Take an image copy of the",
                "DSNDB06.SYSALTER table space         ="
    TEMP.13 = "=    4- Run REPAIR CATALOG TABLESPACE",
                "DSNDB06.SYSALTER TEST and        ="
    TEMP.14 = "=       ensure that the retulting",
                "return code is zero.                 ="
    TEMP.15 = COPIES('=',72)

    TEMP.16 = "dbname.tsname      Last REORG or LOAD REPLACE",
                " Oldest Version  Last ALTER DATABASE"
    TEMP.17 = "-----------------  --------------------------",
                " --------------  --------------------------"

    'EXECIO' 17 'DISKW REPORT11 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT11 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
        "SELECT STRIP(P.DBNAME)",
             ", STRIP(P.TSNAME)",
             ", P.REORG_LR_TS",
             ", P.OLDEST_VERSION",
             ", S.ALTEREDTS",
          "FROM SYSIBM.SYSTABLEPART P",
             ", SYSIBM.SYSTABLES S",
         "WHERE S.DBNAME = P.DBNAME",
               "AND S.TSNAME = P.TSNAME",
               "AND S.ALTEREDTS > P.REORG_LR_TS",
               "AND S.DBNAME = 'DSNDB06'",
               "AND S.TSNAME = 'SYSALTER'",
               "AND P.OLDEST_VERSION = 0"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2, :HV3, :HV4, :HV5"

    DO WHILE SQLCODE = 0
      TEMP.1 = SUBSTR( (HV1 !! '.' !! HV2), 1, 17 ) !! '  ',
            !! HV3 !! '  ',
            !! SUBSTR( HV4, 1, 14 ) !! '  ',
            !! HV5
      'EXECIO' 1 'DISKW REPORT11 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT11 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2, :HV3, :HV4, :HV5"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2 HV3 HV4 HV5
    'EXECIO 0 DISKW REPORT11 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT11 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 11 completed'

    RETURN /* end generateReport11 */


  generateReport12: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 12:                             */
    /*   Report orphaned rows in SYSCOPY and SYSOBDS                 */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT12 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT12 OPEN rc=' rc

    TEMP.1  = "=== REPORT 12" COPIES('=',58)
    TEMP.2  = "= Orphaned rows in DB2 catalog tables SYSIBM.SYSCOPY",
                "& SYSIBM.SYSOBDS  ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Listed below are the row IDs of",
              "orphaned rows in DB2 catalog tables  ="
    TEMP.5  = "= SYSIBM.SYSCOPY and SYSIBM.SYSOBDS. ",
              "These rows were left during      ="
    TEMP.6  = "= DB2 10 enabling new-function mode",
              "processing by a problem that was   ="
    TEMP.7  = "= subsequently fixed by APAR PM41956",
              "/ PTF UK70176.  The orphaned rows ="
    TEMP.8  = "= do not affect normal DB2 operations",
              "but may interfere with migration ="
    TEMP.9  = "= processing.  Therefore, before",
              "beginning migration to DB2 12, you    ="
    TEMP.10 = "= need to remove each entry listed below",
              "by running the following      ="
    TEMP.11 = "= with <rid> replaced by the indicated",
              "ROWID value:                    ="
    TEMP.12 = "=   * for the SYSCOPY rows returned:  ",
              "                                ="
    TEMP.13 = "=       REPAIR OBJECT                 ",
              "                                ="
    TEMP.14 = "=         LOCATE TABLESPACE DSNDB06.SYSCOPY",
              "RID X'<rid>' DELETE        ="
    TEMP.15 = "=   * for the SYSOBDS rows returned:  ",
              "                                ="
    TEMP.16 = "=       REPAIR OBJECT                 ",
              "                                ="
    TEMP.17 = "=         LOCATE TABLESPACE DSNDB06.SYSALTER",
              "RID X'<rid>' DELETE       ="
    TEMP.18 = COPIES('=',72)

    TEMP.19 = "TABLE   ROWID"
    TEMP.20 = "------- ----------"

    'EXECIO' 20 'DISKW REPORT12 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT12 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "  SELECT 'SYSCOPY', RIGHT(HEX(RID(C)), 10)",
      "    FROM SYSIBM.SYSCOPY C",
      "   WHERE C.TSNAME = 'DSNVTH01'",
      "     AND C.DBNAME = 'DSNDB06'",
      "     AND NOT EXISTS(SELECT *",
      "                      FROM SYSIBM.SYSINDEXES I",
      "                     WHERE I.CREATOR = 'SYSIBM'",
      "                       AND I.NAME = 'DSNVTH01'",
      "                   )",
      "  UNION",
      "  SELECT 'SYSOBDS', RIGHT(HEX(RID(O)), 10)",
      "    FROM SYSIBM.SYSOBDS O",
      "   WHERE O.DBID = 6 AND O.OBDTYPE = 'R'",
      "     AND NOT EXISTS (SELECT *",
      "                       FROM SYSIBM.SYSTABLESPACE T",
      "                      WHERE T.DBID = O.DBID",
      "                        AND T.PSID = O.PSID",
      "                    )",
      "ORDER BY 1, 2"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2"

    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 !! ' ' !! HV2
      'EXECIO' 1 'DISKW REPORT12 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT12 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT12 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT12 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 12 completed'

    RETURN /* end generateReport12 */


  generateReport13: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 13:                             */
    /*   Report orphaned rows in SYSTABSTATS                         */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT13 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT13 OPEN rc=' rc

    TEMP.1  = "=== REPORT 13" COPIES('=',58)
    TEMP.2  = "= Orphaned rows in DB2 catalog table",
                "SYSIBM.SYSTABSTATS                ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Listed below are orphaned rows in",
                "catalog table SYSIBM.SYSTABSTATS.  ="
    TEMP.5  = "= These rows do not affect normal",
                "DB2 operations but may interfere     ="
    TEMP.6  = "= with migration processing.  Therefore,",
                "after reviewing these rows,   ="
    TEMP.7  = "= delete them before beginning",
                "migration to DB2 12.  For example:      ="
    TEMP.8  = "=   DELETE FROM SYSIBM.SYSTABSTATS A",
                "                                  ="
    TEMP.9  = "=    WHERE NOT EXISTS ( SELECT 1 FROM",
                "SYSIBM.SYSTABLEPART B            ="
    TEMP.10 = "=                               WHERE",
                "A.DBNAME    = B.DBNAME           ="
    TEMP.11 = "=                                 AND",
                "A.TSNAME    = B.TSNAME           ="
    TEMP.12 = "=                                 AND",
                "A.PARTITION = B.PARTITION )      ="
    TEMP.13 = COPIES('=',72)

    TEMP.14 = "OWNER.NAME.PARTITION"
    TEMP.15 = COPIES('-',264)

    'EXECIO' 15 'DISKW REPORT13 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT13 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT A.OWNER",
           ", A.NAME",
           ", A.PARTITION",
        "FROM SYSIBM.SYSTABSTATS A",
        "WHERE NOT EXISTS ( SELECT 1 FROM SYSIBM.SYSTABLEPART B",
                            "WHERE A.DBNAME    = B.DBNAME",
                              "AND A.TSNAME    = B.TSNAME",
                              "AND A.PARTITION = B.PARTITION",
                         ")",
    "ORDER BY A.OWNER, A.NAME, A.PARTITION"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2, :HV3"

    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 !! '.' !! HV2 !! '.' !! HV3
      'EXECIO' 1 'DISKW REPORT13 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT13 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2, :HV3"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT13 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT13 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 13 completed'

    RETURN /* end generateReport13 */


  generateReport14: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 14:                             */
    /*   Report orphaned rows in SYSCOLAUTH                          */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT14 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT14 OPEN rc=' rc

    TEMP.1  = "=== REPORT 14" COPIES('=',58)
    TEMP.2  = "= Orphaned rows in DB2 catalog table",
                "SYSIBM.SYSCOLAUTH                 ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Listed below are orphaned rows in",
                "catalog table SYSIBM.SYSCOLAUTH,   ="
    TEMP.5  = "= which records the UPDATE or REFERENCES",
                "privileges that are held by   ="
    TEMP.6  = "= users on individual columns of a table",
                "or view.  These rows do not   ="
    TEMP.7  = "= affect normal DB2 operations but may",
                "interfere with migration        ="
    TEMP.8  = "= processing.  Therefore, before",
                "beginning migration to DB2 12, you    ="
    TEMP.9  = "= need to remove them using the",
                "REPAIR utility.  The following example ="
    TEMP.10 = "= SQL shows how to generate a",
                "REPAIR control statement that you can    ="
    TEMP.11 = "= use to delete all of the orphaned",
                "rows:                              ="
    TEMP.12 = "=                                          ",
                "                           ="
    TEMP.13 = "=     SELECT 'REPAIR OBJECT LOG YES'       ",
                "                           ="
    TEMP.14 = "=       FROM SYSIBM.SYSDUMMY1              ",
                "                           ="
    TEMP.15 = "=     UNION ALL                            ",
                "                           ="
    TEMP.16 = "=     SELECT DISTINCT                      ",
                "                           ="
    TEMP.17 = "=            '  LOCATE",
                "TABLESPACE DSNDB06.SYSTSFAU '                   ="
    TEMP.18 = "=            !! 'RID(X''' !!",
                "RIGHT(HEX(RID(A)),10) !! ''') DELETE'     ="
    TEMP.19 = "=       FROM SYSIBM.SYSCOLAUTH  A",
                "                                     ="
    TEMP.20 = "=      WHERE NOT EXISTS (SELECT 1 FROM",
                "SYSIBM.SYSCOLUMNS  B            ="
    TEMP.21 = "=                         WHERE A.CREATOR",
                "  = B.TBCREATOR              ="
    TEMP.22 = "=                           AND A.TNAME",
                "    = B.TBNAME                 ="
    TEMP.23 = "=                           AND A.COLNAME",
                "  = B.NAME                   ="
    TEMP.24 = "=               )                        ",
                "                             ="
    TEMP.25 = "=     ORDER BY 1 DESC                    ",
                "                             ="
    TEMP.26 = "=                                        ",
                "                             ="
    TEMP.27 = "= After running the REPAIR operation, review",
                "the output and also check ="
    TEMP.28 = "= the status of table space DSNDB06.SYSTSFAU",
                "for CHECK PENDING status. ="
    TEMP.29 = COPIES('=',72)


    'EXECIO' 29 'DISKW REPORT14 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT14 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT RIGHT(HEX(RID(A)), 10)",
           ", A.GRANTOR",
           ", A.GRANTEE",
           ", CASE A.GRANTEETYPE",
               "WHEN ' ' THEN 'AUTH ID'",
               "WHEN 'L' THEN 'ROLE'",
               "WHEN 'P' THEN 'PLAN OR PACKAGE'",
               "ELSE 'OTHER'",
             "END",
           ", A.CREATOR",
           ", A.TNAME",
           ", A.COLNAME",
           ", A.COLLID",
           ", HEX(A.CONTOKEN)",
           ", CASE A.PRIVILEGE",
               "WHEN ' ' THEN 'UPDATE'",
               "WHEN 'R' THEN 'REFERENCES'",
               "ELSE 'OTHER'",
             "END",
           ", A.GRANTEDTS",
           ", CASE GRANTORTYPE",
               "WHEN ' ' THEN 'AUTH ID'",
               "WHEN 'L' THEN 'ROLE'",
               "ELSE 'OTHER'",
             "END",
        "FROM SYSIBM.SYSCOLAUTH  A",
       "WHERE NOT EXISTS ( SELECT 1 FROM SYSIBM.SYSCOLUMNS  B",
                                  "WHERE A.CREATOR   = B.TBCREATOR",
                                    "AND A.TNAME     = B.TBNAME",
                                    "AND A.COLNAME   = B.NAME",
                        ")",
    "ORDER BY A.CREATOR, A.TNAME, A.COLNAME"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2, :HV3, :HV4,",
                                  ":HV5, :HV6, :HV7, :HV8,",
                                  ":HV9, :HV10, :HV11, :HV12"

    DO WHILE SQLCODE = 0
      TEMP.1  = COPIES('-',141)
      TEMP.2  = "RID        :" HV1
      TEMP.3  = "GRANTOR    :" HV2
      TEMP.4  = "GRANTEE    :" HV3
      TEMP.5  = "GRANTEETYPE:" HV4
      TEMP.6  = "CREATOR    :" HV5
      TEMP.7  = "TNAME      :" HV6
      TEMP.8  = "COLNAME    :" HV7
      TEMP.9  = "COLLID     :" HV8
      TEMP.10 = "CONTOKEN   :" HV9
      TEMP.11 = "PRIVILEGE  :" HV10
      TEMP.12 = "GRANTEDTS  :" HV11
      TEMP.13 = "GRANTORTYPE:" HV12

      'EXECIO' 13 'DISKW REPORT14 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT14 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2, :HV3, :HV4,",
                                    ":HV5, :HV6, :HV7, :HV8,",
                                    ":HV9, :HV10, :HV11, :HV12"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT14 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT14 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 14 completed'

    RETURN /* end generateReport14 */


  generateReport15: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 15:                             */
    /*   Report extraneous text in SYSIBM.SYSTRIGGERS.TEXT           */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT15 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT15 OPEN rc=' rc

    TEMP.1  = "=== REPORT 15" COPIES('=',58)
    TEMP.2  = "= Extraneous text in TEXT column of",
                "SYSIBM.SYSTRIGGERS                 ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= For each trigger listed below, the",
                "TEXT column of SYSIBM.SYSTRIGGERS ="
    TEMP.5  = "= contains additional or extraneous SQL",
                "text after the CREATE TRIGGER  ="
    TEMP.6  = "= statement. Such triggers cannot be",
                "rebuilt by the REPAIR DBD REBUILD ="
    TEMP.7  = "= utility after you migrate to DB2 10. ",
                "In response, drop and recreate ="
    TEMP.8  = "= these triggers before you migrate to",
                "DB2 12.  Note: The extraneous   ="
    TEMP.9  = "= SQL text can result when a create",
                "trigger statement that contains a  ="
    TEMP.10 = "= BEGIN ATOMIC clause is improperly",
                "terminated by a semicolon instead  ="
    TEMP.11 = "= of an alternative statement terminator.",
                " If you recreate a trigger   ="
    TEMP.12 = "= using the CREATE TRIGGER statement in",
                "the TEXT column of SYSIBM.-    ="
    TEMP.13 = "= SYSTRIGGERS, be sure to exclude the",
                "extraneous text.  If the CREATE  ="
    TEMP.14 = "= TRIGGER statement processes with",
                "SQLCODE +098, drop the trigger and  ="
    TEMP.15 = "= reinspect the statement for improper",
                "use of the semicolon.           ="
    TEMP.16 = COPIES('=',72)

    TEMP.17 = "Schema.Name"
    TEMP.18 = COPIES('-',257)

    'EXECIO' 18 'DISKW REPORT15 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT15 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT RTRIM(SCHEMA) !! '.' !! RTRIM(NAME)",
        "FROM SYSIBM.SYSTRIGGERS",
       "WHERE TEXT LIKE '%CREATE TRIGGER % BEGIN ATOMIC %;%END%; %'",
       "ORDER BY SCHEMA, NAME"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1"

    DO WHILE SQLCODE = 0
      TEMP.1 = HV1
      'EXECIO' 1 'DISKW REPORT15 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT15 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT15 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT15 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 15 completed'

    RETURN /* end generateReport15 */


  generateReport16: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 16:                             */
    /*   Report Unicode columns in EBCDIC tables                     */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT16 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT16 OPEN rc=' rc

    TEMP.1  = "=== REPORT 16" COPIES('=',58)
    TEMP.2  = "= Unicode columns in EBCDIC tables           ",
                "                         ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The columns listed below are Unicode columns",
                "that were defined in    ="
    TEMP.5  = "= EBCDIC-encoded tables before activation of new",
                "function in DB2 12.   ="
    TEMP.6  = "= These columns are subject to the DB2 11",
                "restrictions. In DB2 12,     ="
    TEMP.7  = "= after new function is activated, newly-defined",
                "Unicode columns in    ="
    TEMP.8  = "= EBCDIC tables are no longer subject to those",
                "restrictions. Also,     ="
    TEMP.9  = "= support for Unicode columns that were defined",
                "in EBCDIC tables prior ="
    TEMP.10 = "= to DB2 12 new function availability will be",
                "deprecated in the future.="
    TEMP.11 = "= Therefore, use the ALTER TABLE ALTER COLUMN",
                "SET DATA TYPE statement  ="
    TEMP.12 = "= to convert those columns as soon as possible",
                "after migrating to DB2  ="
    TEMP.13 = "= 12 and activating new function.             ",
                "                        ="
    TEMP.14 = "=                                             ",
                "                        ="
    TEMP.15 = "= For a DB2 11 column definition like:        ",
                "                        ="
    TEMP.16 = "=   column-name VARCHAR(length) CCSID 1208    ",
                "                        ="
    TEMP.17 = "= use:                                        ",
                "                        ="
    TEMP.18 = "=   ALTER TABLE creator.table-name            ",
                "                        ="
    TEMP.19 = "=     ALTER COLUMN column-name                ",
                "                        ="
    TEMP.20 = "=     SET DATA TYPE VARCHAR(length)           ",
                "                        ="
    TEMP.21 = "=                                             ",
                "                        ="
    TEMP.22 = "= For a DB2 11 column definition like:        ",
                "                        ="
    TEMP.23 = "=   column-name VARGRAPHIC(length) CCSID 1200 ",
                "                        ="
    TEMP.24 = "= use:                                        ",
                "                        ="
    TEMP.25 = "=   ALTER TABLE creator.table-name            ",
                "                        ="
    TEMP.26 = "=     ALTER COLUMN column-name                ",
                "                        ="
    TEMP.27 = "=     SET DATA TYPE VARGRAPHIC(length)        ",
                "                        ="
    TEMP.28 = "=                                             ",
                "                        ="
    TEMP.29 = "= where the data type and data length must be the",
                "same data type and   ="
    TEMP.30 = "= data length as the existing column, i.e. the",
                "data type and data      ="
    TEMP.31 = "= length cannot be altered.                   ",
                "                        ="
    TEMP.32 = "=                                             ",
                "                        ="
    TEMP.33 = "= Note: ALTER TABLE cannot proceed if there are",
                "other conditions that  ="
    TEMP.34 = "=       exist to prevent the column from being",
                "altered.                ="
    TEMP.35 = "=       For example, an index is defined on the",
                "column, the table is   ="
    TEMP.36 = "=       a clone table, the table is a history",
                "table, the table is a    ="
    TEMP.37 = "=       system-period temporal table, etc. Those",
                "conditions must be    ="
    TEMP.38 = "=       removed before the base table can be",
                "altered.                  ="
    TEMP.39 = "=                                             ",
                "                        ="
    TEMP.40 = COPIES('=',72)

    'EXECIO' 40 'DISKW REPORT16 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT16 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT RTRIM(TBCREATOR) !! '.' !! RTRIM(TBNAME)",
           ", RTRIM(NAME)",
           ", RTRIM(COLTYPE)",
           ", LENGTH",
           ", CCSID",
        "FROM SYSIBM.SYSCOLUMNS",
       "WHERE CCSID IN( 1200, 1208 )",
         "AND COLTYPE = 'VARBIN'",
    "ORDER BY 1"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    HV1_OLD = ''
    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2, :HV3, :HV4, :HV5"

    DO WHILE SQLCODE = 0
      IF HV1 ç= HV1_OLD THEN,
        /*************************************************************/
        /* If the creator.table name changes, add a report break     */
        /*************************************************************/
        DO
          IF HV1_OLD ç= '' THEN,
            /*********************************************************/
            /* Insert a blank line ahead of the break (except for    */
            /* the first auth type)                                  */
            /*********************************************************/
            DO
              TEMP.1 = COPIES('-',140)
              'EXECIO' 1 'DISKW REPORT16 (STEM TEMP.'
              if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                                  , 'EXECIO DISKW REPORT16 rc=' rc
            END
          TEMP.1 = 'CREATOR.TABLE-NAME :' HV1
          'EXECIO' 1 'DISKW REPORT16 (STEM TEMP.'
          if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                              , 'EXECIO DISKW REPORT16 rc=' rc
          HV1_OLD = HV1
        END
      TEMP.1 = 'COLUMN-NAME        :' HV2
      TEMP.2 = 'COLUMN-TYPE(LENGTH):' HV3 !! '(',
                                   !! HV4 !! ') CCSID ',
                                   !! HV5
      TEMP.3 = ''

      'EXECIO' 3 'DISKW REPORT16 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT16 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2, :HV3, :HV4, :HV5"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV1_OLD HV2 HV3 HV4 HV5
    'EXECIO 0 DISKW REPORT16 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT16 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 16 completed'

    RETURN /* end generateReport16 */


  generateReport17: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 17:                             */
    /*   Report indexes on Unicode columns in EBCDIC tables          */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT17 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT17 OPEN rc=' rc

    TEMP.1  = "=== REPORT 17" COPIES('=',58)
    TEMP.2  = "= Indexes on Unicode columns in EBCDIC tables",
                "                         ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The indexes listed below are indexes that were",
                "defined on Unicode    ="
    TEMP.5  = "= columns in EBCDIC tables that were defined",
                "prior to DB2 12 new       ="
    TEMP.6  = "= function availability.  After activating new",
                "function in DB2 12,     ="
    TEMP.7  = "= you need to drop those indexes before you can",
                "alter the column in    ="
    TEMP.8  = "= order to lift the DB2 11 restrictions that are",
                "currently imposed     ="
    TEMP.9  = "= on the column.  After the DB2 11 restrictions",
                "are lifted from        ="
    TEMP.10 = "= the column, you can then recreate the index.",
                "                        ="
    TEMP.11 = COPIES('=',72)

    'EXECIO' 11 'DISKW REPORT17 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT17 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT RTRIM(I.CREATOR) !! '.' !! RTRIM(I.NAME)",
           ", RTRIM(I.TBCREATOR) !! '.' !! RTRIM(I.TBNAME)",
        "FROM SYSIBM.SYSINDEXES I",
           ", SYSIBM.SYSKEYS K",
           ", SYSIBM.SYSCOLUMNS C",
       "WHERE I.NAME = K.IXNAME",
         "AND I.CREATOR = K.IXCREATOR",
         "AND I.TBNAME = C.TBNAME",
         "AND I.TBCREATOR = C.TBCREATOR",
         "AND K.COLNO = C.COLNO",
         "AND C.CCSID IN (1200, 1208)",
         "AND C.COLTYPE = 'VARBIN'",
    "GROUP BY RTRIM(I.CREATOR) !! '.' !! RTRIM(I.NAME)",
           ", RTRIM(I.TBCREATOR) !! '.' !! RTRIM(I.TBNAME)"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2"

    DO WHILE SQLCODE = 0
      TEMP.1 = 'CREATOR.INDEX-NAME:' HV1
      TEMP.2 = 'CREATOR.TABLE-NAME:' HV2
      TEMP.3 = ''
      'EXECIO' 3 'DISKW REPORT17 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT17 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2
    'EXECIO 0 DISKW REPORT17 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT17 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 17 completed'

    RETURN /* end generateReport17 */


  generateReport18: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 18:                             */
    /*   Report obsolete RLSTs                                       */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT18 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT18 OPEN rc=' rc

    TEMP.1  = "=== REPORT 18" COPIES('=',58)
    TEMP.2  = "= Old-format RLSTs that need to be updated",
                "before DB2 12 migration     ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The Resource Limit Specification Tables",
                "(RLSTs) listed below are not ="
    TEMP.5  = "= in a format that is supported in DB2 12. ",
                "In DB2 12, RLSTs must have ="
    TEMP.6  = "= 11 columns and the AUTHID, RLFCOLLN,",
                "and RLFPKG columns must each be ="
    TEMP.7  = "= defined as VARCHAR(128).  Before migrating",
                "to DB2 12, alter these    ="
    TEMP.8  = "= tables to comply with this format:        ",
                "                          ="
    TEMP.9  = "=                                           ",
                "                          ="
    TEMP.10 = "=   CREATE TABLE DSNRLSTxx                  ",
                "                          ="
    TEMP.11 = "=         ( AUTHID          VARCHAR(128) NOT",
                "NULL WITH DEFAULT         ="
    TEMP.12 = "=         , PLANNAME        CHAR(8)      NOT",
                "NULL WITH DEFAULT         ="
    TEMP.13 = "=         , ASUTIME         INTEGER,        ",
                "                          ="
    TEMP.14 = "=         , LUNAME          CHAR(8)      NOT",
                "NULL WITH DEFAULT         ="
    TEMP.15 = "=         , RLFFUNC         CHAR(1)      NOT",
                "NULL WITH DEFAULT         ="
    TEMP.16 = "=         , RLFBIND         CHAR(1)      NOT",
                "NULL WITH DEFAULT         ="
    TEMP.17 = "=         , RLFCOLLN        VARCHAR(128) NOT",
                "NULL WITH DEFAULT         ="
    TEMP.18 = "=         , RLFPKG          VARCHAR(128) NOT",
                "NULL WITH DEFAULT         ="
    TEMP.19 = "=         , RLFASUERR       INTEGER         ",
                "                          ="
    TEMP.20 = "=         , RLFASUWARN      INTEGER         ",
                "                          ="
    TEMP.21 = "=         , RLF_CATEGORY_B  CHAR(1)      NOT",
                "NULL WITH DEFAULT         ="
    TEMP.22 = "=         )                                 ",
                "                          ="
    TEMP.23 = COPIES('=',72)
    TEMP.24 = "RLST CREATOR.NAME"
    TEMP.25 = COPIES('-',72)

    'EXECIO' 25 'DISKW REPORT18 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT18 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
        "WITH OLD_FORMAT_RLST_TABLES (FULL_NAME) AS",
          "(  /***** detecting v2r3 rlst table format *****/",
               "SELECT STRIP(TBCREATOR) !! '.' !! STRIP(TBNAME)",
                 "FROM SYSIBM.SYSCOLUMNS",
                "WHERE TBNAME LIKE 'DSNRLST__'",
             "GROUP BY TBCREATOR, TBNAME",
               "HAVING (MAX(COLNO) < 11)",
           "UNION",
             "/***** detecting v6/7 rlst table format *****/",
               "SELECT STRIP(TBCREATOR) !! '.' !! STRIP(TBNAME)",
                 "FROM SYSIBM.SYSCOLUMNS",
                "WHERE TBNAME LIKE 'DSNRLST__'",
                  "AND(    (NAME = 'AUTHID'    AND LENGTH <> 128)",
                       "OR (NAME = 'RLFCOLLN'  AND LENGTH <> 128)",
                       "OR (NAME = 'RLFPKG'    AND LENGTH <> 128)",
                     ")",
          ")",
          "/***** select from expression *****/",
          "SELECT DISTINCT(FULL_NAME)",
            "FROM OLD_FORMAT_RLST_TABLES",
        "ORDER BY FULL_NAME"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1"

    DO WHILE SQLCODE = 0
      TEMP.1 = HV1
      'EXECIO' 1 'DISKW REPORT18 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT18 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1
    'EXECIO 0 DISKW REPORT18 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT18 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 18 completed'

    RETURN /* end generateReport18 */

  generateReport19: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 19:                             */
    /*   Report process for converting to UNLOAD privilege           */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT19 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT19 OPEN rc=' rc

    TEMP.1  = "=== REPORT 19" COPIES('=',58)
    TEMP.2  = "= Authorization change for the DB2 UNLOAD utility",
                "                     ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= DB2 12 introduces a new authorization privilege,",
                "UNLOAD, that        ="
    TEMP.5  = "= replaces the SELECT privilege for controlling who",
                "can use the DB2    ="
    TEMP.6  = "= UNLOAD utility to unload data from a table. You",
                "can grant the UNLOAD ="
    TEMP.7  = "= privilege to a user prior to activation of DB2 12",
                "new function but   ="
    TEMP.8  = "= it does not become effective until new function is",
                "activated. To     ="
    TEMP.9  = "= avoid disrupting users of the UNLOAD utility,",
                "follow these steps     ="
    TEMP.10 = "= when migrating to DB2 12:                      ",
                "                     ="
    TEMP.11 = "= (1) Set the DB2 AUTH_COMPATIBILITY parameter to",
                    "include option       ="
    TEMP.12 = "=     SELECT_FOR_UNLOAD.  This option disables",
                    "UNLOAD privilege        ="
    TEMP.13 = "=     checking and retains the traditional use of",
                    "the SELECT           ="
    TEMP.14 = "=     privilege for UNLOAD.                      ",
                    "                     ="
    TEMP.15 = "= (2) Activate serviceability trace IFCID 404 to",
                    "audit the usage of    ="
    TEMP.16 = "=     the SELECT privilege for UNLOAD utility",
                    "access.                  ="
    TEMP.17 = "= (3) Grant the UNLOAD privilege to users on",
                    "objects identified by     ="
    TEMP.18 = "=     the IFCID 404 trace.  IDs that are granted",
                    "the UNLOAD privilege  ="
    TEMP.19 = "=     will continue to use SELECT access for",
                    "UNLOAD utility access     ="
    TEMP.20 = "=     until you remove the SELECT_FOR_UNLOAD",
                    "option from the DB2       ="
    TEMP.21 = "=     AUTH_COMPATIBILITY parameter.  However,",
                    "these IDs will no longer ="
    TEMP.22 = "=     be flagged by IFCID 404.                  ",
                    "                      ="
    TEMP.23 = "= (4) After the access switchover has been",
                    "completed, remove the       ="
    TEMP.24 = "=     SELECT_FOR_UNLOAD option from the DB2",
                    "AUTH_COMPATIBILITY         ="
    TEMP.25 = "=     parameter to enable use of the UNLOAD",
                    "privilege for UNLOAD       ="
    TEMP.26 = "=     utility access.                            ",
                "                     ="
    TEMP.27 = "=                                                ",
                "                     ="
    TEMP.28 = "= NOTE: Because SELECT authorization can be",
                "granted for many reasons   ="
    TEMP.29 = "=       other than access to the UNLOAD utility,",
                "this report does not  ="
    TEMP.30 = "=       include a list of IDs that have SELECT",
                "authorization.  It is   ="
    TEMP.31 = "=       advisory only.                           ",
                "                     ="
    TEMP.32 = COPIES('=',72)

    'EXECIO' 32 'DISKW REPORT19 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT19 rc=' rc

    drop TEMP.
    'EXECIO 0 DISKW REPORT19 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT19 CLOSE rc=' rc

    CALL IntMsg,
        '  Report 19 completed'

    RETURN /* end generateReport19 */


  generateReport20: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 20:                             */
    /*   Report tables that have an OBID of 1                        */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT20 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT20 OPEN rc=' rc

    TEMP.1  = "=== REPORT 20" COPIES('=',58)
    TEMP.2  = "= Tables that have an OBID of 1            ",
                "                           ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Following is a list of tables that were created",
                "with an OBID of 1.   ="
    TEMP.5  = "= Use of OBID 1 in the CREATE TABLE statement was",
                "disallowed by APAR   ="
    TEMP.6  = "= PM61352.  This APAR also directed that all",
                "existing tables having an ="
    TEMP.7  = "= OBID of 1 be dropped and recreated with a",
                "different OBID.            ="
    TEMP.8  = "=                                    ",
                "                                 ="
    TEMP.9  = "= A subsequent APAR, PI88793, enforces the OBID",
                "restriction during:    ="
    TEMP.10 = "= - conversion from non-UTS to UTS table space",
                "types                   ="
    TEMP.11 = "= - table space versioning",
                "                                            ="
    TEMP.12 = "= - adding a check constraint to a table",
                "                              ="
    TEMP.13 = "= - creating or altering an index to include",
                "a row change timestamp    ="
    TEMP.14 = "=   column                       ",
                "                                     ="
    TEMP.15 = "= - creating an index with the DEFINE NO",
                "option                        ="
    TEMP.16 = "= Such requests will fail with SQLCODE -736 for",
                "tables that have an    ="
    TEMP.17 = "= OBID of 1.  To avoid this error, you need to",
                "drop each table listed  ="
    TEMP.18 = "= below and recreate it with a different OBID.",
                "                        ="
    TEMP.19 = "=                                    ",
                "                                 ="
    TEMP.20 = "= You need to complete this work before beginning",
                "migration to the     ="
    TEMP.21 = "= next release of Db2.               ",
                "                                 ="
    TEMP.22 = COPIES('=',72)
    TEMP.23 = "CREATOR.NAME"
    TEMP.24 = COPIES('-',257)

    'EXECIO'  24 'DISKW REPORT20 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT20 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT STRIP(CREATOR)",
           ", STRIP(NAME)",
        "FROM SYSIBM.SYSTABLES",
        "WHERE OBID = 1",
          "AND (  TYPE = 'T'",
              "OR TYPE = 'M'",
              "OR TYPE = 'H'",
              "OR TYPE = 'R'  )"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2"
    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 !! "." !! HV2
      'EXECIO' 1 'DISKW REPORT20 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT20 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2
    'EXECIO 0 DISKW REPORT20 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT20 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 20 completed'

    RETURN /* end generateReport20 */


  generateReport21: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 21:                             */
    /*   Report foreign key constraints that have a Db2 catalog      */
    /*   table as a parent                                           */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT21 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT21 OPEN rc=' rc

    TEMP.1  = "=== REPORT 21" COPIES('=',58)
    TEMP.2  = "= Foreign key constraints that have a Db2 catalog",
                "table as a parent    ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Following is a list of foreign key constraints",
                "that have a Db2       ="
    TEMP.5  = "= catalog table as a parent.  Such constraints",
                "can cause failures when ="
    TEMP.6  = "= used by the LOAD DATA utility or by processing",
                "of a DROP TABLESPACE  ="
    TEMP.7  = "= request.  Executing other statements or utilities",
                "that use the       ="
    TEMP.8  = "= constraint may result in unexpected behavior.",
                " APAR PI87444 modifies ="
    TEMP.9  = "= Db2 to prevent establishing such relationships",
                "but does not resolve  ="
    TEMP.10 = "= existing foreign key constraints where a catalog",
                "table is the parent.="
    TEMP.11 = "= These foreign key constraints, listed below, need",
                "to be dropped.     ="
    TEMP.12 = "=                                    ",
                "                                 ="
    TEMP.13 = "= To avoid Db2 catalog migration errors,",
                "you need to remove them       ="
    TEMP.14 = "= before beginning migration to the next",
                "release of Db2.               ="
    TEMP.15 = COPIES('=',72)

    'EXECIO'  15 'DISKW REPORT21 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT21 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT STRIP(REL.RELNAME)        AS CONSTRAINT_NAME",
           ", STRIP(TAB_CHILD.CREATOR)  AS CHILD_TABLECREATOR",
           ", STRIP(TAB_CHILD.NAME)     AS CHILD_TABLENAME",
           ", STRIP(TAB_PARENT.CREATOR) AS PARENT_TABLECREATOR",
           ", STRIP(TAB_PARENT.NAME)    AS PARENT_TABLENAME",
        "FROM SYSIBM.SYSTABLES TAB_CHILD",
           ", SYSIBM.SYSRELS   REL",
           ", SYSIBM.SYSTABLES TAB_PARENT",
        "WHERE TAB_CHILD.CREATOR  = REL.CREATOR",
          "AND TAB_CHILD.NAME     = REL.TBNAME",
          "AND TAB_CHILD.DBID    <> 6",
          "AND TAB_PARENT.CREATOR = REL.REFTBCREATOR",
          "AND TAB_PARENT.NAME    = REL.REFTBNAME",
          "AND TAB_PARENT.DBID    = 6"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1",
                             "INTO :HV1, :HV2, :HV3, :HV4, :HV5"
    DO WHILE SQLCODE = 0
      TEMP.1  = COPIES('-',150)
      TEMP.2  = "CONSTRAINT NAME     :" HV1
      TEMP.3  = "CHILD TABLE CREATOR :" HV2
      TEMP.4  = "CHILD TABLE NAME    :" HV3
      TEMP.5  = "PARENT TABLE CREATOR:" HV4
      TEMP.6  = "PARENT TABLE NAME   :" HV5

      'EXECIO' 6 'DISKW REPORT21 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT21 rc=' rc
      address DSNREXX "EXECSQL FETCH C1",
                               "INTO :HV1, :HV2, :HV3, :HV4, :HV5"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2 HV3 HV4 HV5
    'EXECIO 0 DISKW REPORT21 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT21 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 21 completed'

    RETURN /* end generateReport21 */


  generateReport22: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 22:                             */
    /*   Report expression-based indexes created in Db2 9            */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT22 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT22 OPEN rc=' rc

    TEMP.1  = "=== REPORT 22" COPIES('=',58)
    TEMP.2  = "= Indexes created in Db2 9 for z/OS that",
                "are expression-based indexes  ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= Following is a list of indexes that were created as",
                "                 ="
    TEMP.5  = "= expression-based indexes in Db2 9.",
                "                                  ="
    TEMP.6  = "=                                    ",
                "                                 ="
    TEMP.7 = "= If an expression-based index was created in Db2 9,",
               "its runtime       ="
    TEMP.8 = "= structure cannot be executed on Db2 12, thus Db2 12",
               "will implicitly  ="
    TEMP.9 = "= alter regenerate the index when it is referenced",
               "in an SQL statement ="
    TEMP.10 = "= as an access path. To avoid the implicit alter",
                "regenerate activity   ="
    TEMP.11 = "= for DML applications that run on Db2 12 later,",
                "you must explicitly   ="
    TEMP.12 = "= alter regenerate each expression-based index",
                "listed in the report    ="
    TEMP.13 = "= below.                                      ",
                "                        ="
    TEMP.14 = "=                                    ",
                "                                 ="
    TEMP.15 = "= If you expect to run applications on Db2 11 data",
                "sharing members     ="
    TEMP.16 = "= during migration to Db2 12, alter regenerate these",
                "indexes before    ="
    TEMP.17 = "= you begin migration to Db2 12. Otherwise, complete",
                "the migration to  ="
    TEMP.18 = "= Db2 12 first. Then explicitly alter regenerate the",
                "expression-based  ="
    TEMP.19 = "= indexes listed below, after migration to Db2 12 is",
                "complete.         ="
    TEMP.20 = "=                                    ",
                "                                 ="
    TEMP.21 = "= If you alter regenerate the indexes in Db2 12, you",
                "can check the     ="
    TEMP.22 = "= SYSINDEXES.REGENERATETS value to confirm that the",
                "index regeneration ="
    TEMP.23 = "= succeeded.                                        ",
                "                  ="
    TEMP.24 = "=                                    ",
                "                                 ="
    TEMP.25 = "= The following example SQL shows how to alter",
                "regenerate an index:    ="
    TEMP.26 = "=   ALTER INDEX index-name REGENERATE",
                "                                 ="
    TEMP.27 = "=                                    ",
                "                                 ="
    TEMP.28 = "= After running the alter index regenerate operation,",
                "check the status ="
    TEMP.29 = "= of the index for REBUILD-pending (RBDP) status.",
                " This operation      ="
    TEMP.30 = "= might also invalidate packages that depend on",
                "the index, or packages ="
    TEMP.31 = "= that depend on related objects through cascading",
                "effects.            ="
    TEMP.32 = "=                                    ",
                "                                 ="
    TEMP.33 = "= Note: REPORT22 continues to identify all",
                "expression-based indexes    ="
    TEMP.34 = "=       created in Db2 9, regardless of whether",
                "the alter index        ="
    TEMP.35 = "=       regenerate is complete.",
                "                                       ="
    TEMP.36 = COPIES('=',72)
    TEMP.37 = "CREATOR.NAME"
    TEMP.38 = COPIES('-',257)

    'EXECIO'  38 'DISKW REPORT22 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT22 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT STRIP(CREATOR)",
           ", STRIP(NAME)",
        "FROM SYSIBM.SYSINDEXES",
        "WHERE (IX_EXTENSION_TYPE = 'S'",
          "OR  IX_EXTENSION_TYPE = 'T')",
          "AND RELCREATED = 'M'"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2"
    DO WHILE SQLCODE = 0
      TEMP.1 = HV1 !! "." !! HV2
      'EXECIO' 1 'DISKW REPORT22 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT22 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2
    'EXECIO 0 DISKW REPORT22 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT22 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 22 completed'

    RETURN /* end generateReport22 */


  generateReport23: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 23:                             */
    /*   Report native SQL procedures and compiled SQL scalar        */
    /*   functions created in V9                                     */
    /*****************************************************************/
    "EXECIO 0 DISKW REPORT23 (OPEN"
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT23 OPEN rc=' rc

    TEMP.1  = "=== REPORT 23" COPIES('=',58)
    TEMP.2  = "= Native SQL procedures and compiled",
      "SQL scalar functions created in   ="
    TEMP.3  = "= Db2 9 for z/OS                     ",
      "                                 ="
    TEMP.4  = COPIES('=',72)
    TEMP.5  = "= Following is a list of native SQL procedures and",
      "compiled SQL        ="
    TEMP.6  = "= scalar functions created in Db2 9 for z/OS.",
      "                         ="
    TEMP.7  = "=                                    ",
      "                                 ="
    TEMP.8  = "= If a native SQL procedure or a compiled SQL",
      "scalar function was      ="
    TEMP.9  = "= created in Db2 9 and runs on Db2 12, Db2 will",
      "implicitly alter       ="
    TEMP.10 = "= regenerate the routine. To avoid the implicit",
      "alter regenerate       ="
    TEMP.11 = "= activity, you must explicity alter regenerate",
      "each routine listed    ="
    TEMP.12 = "= in the report below.               ",
      "                                 ="
    TEMP.13 = "=                                    ",
      "                                 ="
    TEMP.14 = "= If you expect to run these routines on Db2 11",
      "data sharing members   ="
    TEMP.15 = "= during migration to Db2 12, alter regenerate",
      "these routines before   ="
    TEMP.16 = "= you begin migration to Db2 12. Otherwise, complete",
      "the migration to  ="
    TEMP.17 = "= Db2 12 first. Then explicitly alter regenerate the",
      "routines listed   ="
    TEMP.18 = "= below, after migration to Db2 12 is complete.",
      "                       ="
    TEMP.19 = "=                                    ",
      "                                 ="
    TEMP.20 = "= If you alter regenerate the routines in Db2 12, you",
      "can check the    ="
    TEMP.21 = "= SYSROUTINES.REGENERATETS value to confirm that the",
      "routine           ="
    TEMP.22 = "= regeneration succeeded.            ",
      "                                 ="
    TEMP.23 = "=                                    ",
      "                                 ="
    TEMP.24 = "= The following example SQL shows how to alter",
      "regenerate a native     ="
    TEMP.25 = "= SQL procedure:                     ",
      "                                 ="
    TEMP.26 = "=   ALTER PROCEDURE schema.name      ",
      "                                 ="
    TEMP.27 = "=   REGENERATE VERSION version-id    ",
      "                                 ="
    TEMP.28 = "=                                    ",
      "                                 ="
    TEMP.29 = "= The following example SQL shows how to alter",
      "regenerate a compiled   ="
    TEMP.30 = "= SQL scalar function:               ",
      "                                 ="
    TEMP.31 = "=   ALTER SPECIFIC FUNCTION schema.specificname",
      "                       ="
    TEMP.32 = "=   REGENERATE VERSION version-id    ",
      "                                 ="
    TEMP.33 = "=                                    ",
      "                                 ="
    TEMP.34 = "= Note: REPORT23 continues to identify all native",
      "SQL procedures and   ="
    TEMP.35 = "=       compiled SQL scalar functions created in",
      "Db2 9, regardless     ="
    TEMP.36 = "=       of whether the alter routine regenerate is",
      "already done.       ="
    TEMP.37  = COPIES('=',72)

    'EXECIO' 37 'DISKW REPORT23 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT23 rc=' rc

    SQLSTMT = "DECLARE C1 CURSOR FOR S1"
    address DSNREXX EXECSQL SQLSTMT
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'

    SQLSTMT =,
      "SELECT CASE ROUTINETYPE",
      "         WHEN 'F' THEN 'FUNCTION'",
      "         ELSE 'PROCEDURE'",
      "       END",
      "     , RTRIM(SCHEMA) !! '.' !! RTRIM(NAME)",
      "     , RTRIM(SCHEMA) !! '.' !! RTRIM(SPECIFICNAME)",
      "     , RTRIM(VERSION)",
      "  FROM SYSIBM.SYSROUTINES",
      " WHERE RELCREATED = 'M'",
      "   AND (ORIGIN = 'N'",
      "    OR (ORIGIN = 'Q' AND INLINE='N'))",
      " ORDER BY ROUTINETYPE, SCHEMA, SPECIFICNAME"

    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"

    address DSNREXX "EXECSQL OPEN C1"
    if sqlcode<>0 then call errsqlca "OPEN C1"

    address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2, :HV3, :HV4"

    DO WHILE SQLCODE = 0
      TEMP.1  = COPIES('-',278)
      TEMP.2  = "ROUTINETYPE        :" HV1
      IF HV1 = 'PROCEDURE' THEN
        TEMP.3  = "SCHEMA.NAME        :" HV2
      ELSE
        TEMP.3  = "SCHEMA.SPECIFICNAME:" HV3
      TEMP.4  = "VERSION-ID         :" HV4

      'EXECIO' 4 'DISKW REPORT23 (STEM TEMP.'
      if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                          , 'EXECIO DISKW REPORT23 rc=' rc
      address DSNREXX "EXECSQL FETCH C1 INTO :HV1, :HV2, :HV3, :HV4"
    END

    if sqlcode<>100 then call errsqlca "FETCH FROM C1"

    drop TEMP. HV1 HV2 HV3 HV4

    'EXECIO 0 DISKW REPORT23 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT23 CLOSE rc=' rc

    address DSNREXX "EXECSQL CLOSE C1"
    if sqlcode<>0 then call errsqlca "CLOSE C1"

    CALL IntMsg,
        '  Report 23 completed'

    RETURN /* end generateReport23 */


  generateReport24: PROCEDURE
    /*****************************************************************/
    /* Generates premigration report 24:                             */
    /*   Report active log data sets greater than 4 GB in size       */
    /*****************************************************************/
    ctr = 0
    ctr2 = 0
    numLogs = 0
    haveActiveLogCopy1 = false
    haveActiveLogCopy2 = false
    haveData = false
    haveAllocation = false
    haveHiARba = false
    mbrnam = "        "
    grpnam = "        "
    EOF=0;

    NUMERIC DIGITS 18

    'EXECIO 0 DISKW REPORT24 (OPEN'
    if rc<>0 then call Dsn_Error 'Write_source_dsn',
                               , 'EXECIO DISKW REPORT24 OPEN rc=' rc

    TEMP.1  = "=== REPORT 24" COPIES('=',58)
    TEMP.2  = "= Existence of oversized active log data sets    ",
      "                     ="
    TEMP.3  = COPIES('=',72)
    TEMP.4  = "= The data sets listed below are active log data",
      "sets for this Db2     ="
    TEMP.5  = "= subsystem or data sharing group that are defined",
      "with more than 4 GB ="
    TEMP.6  = "= of space, or the size of the active log data set",
      "cannot be           ="
    TEMP.7  = "= determined.",
      "                                                         ="
    TEMP.8  = "=                                              ",
      "                       ="
    TEMP.9  = "= Based on the value of the LISTCAT_RESULT column",
      "in this report,      ="
    TEMP.10 = "= proceed as follows:",
      "                                                 ="
    TEMP.11 = "=                                              ",
      "                       ="
    TEMP.12 = "= 1. If the LISTCAT_RESULT column value is",
      "'RC=0, Greater than 4 GB':  ="
    TEMP.13 = "=    The LISTCAT command performed on the active",
      "log data set          ="
    TEMP.14 = "=    completed with RC=0 and this data set is",
      "identified as an         ="
    TEMP.15 = "=    oversized data set that is defined with",
      "more than 4 GB of space.  ="
    TEMP.16 = "=    The space above 4 GB is ignored by Db2 11",
      "but causes Db2 12 to    ="
    TEMP.17 = "=    fail startup before new function activation.",
      "Therefore, before    ="
    TEMP.18 = "=    migrating to Db2 12, stop Db2 and use the",
      "REPRO command to copy   ="
    TEMP.19 = "=    these oversized data sets to new data sets",
      "that are defined with  ="
    TEMP.20 = "=    a size of 4 GB or less.",
      "                                          ="
    TEMP.21 = "=                                              ",
      "                       ="
    TEMP.22 = "=    When defining the new active log data sets,",
      "ensure that the       ="
    TEMP.23 = "=    primary quantity does not exceed the",
      "following values, and a      ="
    TEMP.24 = "=    secondary quantity of 0.",
      "                                         ="
    TEMP.25 = "=                                              ",
      "                       ="
    TEMP.26 = "=      For 3390-9 volumes:",
      "                                            ="
    TEMP.27 = "=          87375 tracks, if allocated in units of",
      "tracks               ="
    TEMP.28 = "=          5825 cylinders, if allocated in units of",
      "cylinders          ="
    TEMP.29 = "=                                              ",
      "                       ="
    TEMP.30 = "=      For 3390-A volumes:",
      "                                            ="
    TEMP.31 = "=          5817 cylinders. 3390-A volumes are extended",
      "address volumes ="
    TEMP.32 = "=          (EAV), for which the space allocation unit",
      "can be 21        ="
    TEMP.33 = "=          cylinders, instead of one cylinder.",
      "                        ="
    TEMP.34 = "=                                              ",
      "                       ="
    TEMP.35 = "=    After the REPRO operation is complete, use the",
      "LISTCAT command to ="
    TEMP.36 = "=    verify that the high allocated RBA of each new",
      "data set does not  ="
    TEMP.37 = "=    exceed 4 GB.  Rename the new log data sets to",
      "their old data set  ="
    TEMP.38 = "=    names then start Db2 with the new active log",
      "data sets before     ="
    TEMP.39 = "=    migrating to Db2 12.",
      "                                             ="
    TEMP.40 = "=                                              ",
      "                       ="
    TEMP.41 = "=    Attention: After new function activation, Db2",
      "12 supports an      ="
    TEMP.42 = "=               active log data set size of up to 768",
      "GB of space.     ="
    TEMP.43 = "=               Special setup is required for data",
      "sets that are       ="
    TEMP.44 = "=               defined with more than 4 GB.  See the",
      "'Active log      ="
    TEMP.45 = "=               data sets storage requirements'",
      "section of the         ="
    TEMP.46 = "=               Db2 12 for z/OS Installation and",
      "Migration Guide for   ="
    TEMP.47 = "=               more information about using active",
      "log data sets in   ="
    TEMP.48 = "=               Db2 12 after activation of new",
      "function.               ="
    TEMP.49 = "=                                              ",
      "                       ="
    TEMP.50 = "=    Sample REPRO JCL:                             ",
      "                   ="
    TEMP.51 = "=      //STEP1    EXEC PGM=IDCAMS                  ",
      "                   ="
    TEMP.52 = "=      //SYSPRINT DD SYSOUT=*                      ",
      "                   ="
    TEMP.53 = "=      //SYSUDUMP DD SYSOUT=*                      ",
      "                   ="
    TEMP.54 = "=      //INDS     DD DSN=old_dsname,DISP=SHR       ",
      "                   ="
    TEMP.55 = "=      //SYSIN    DD *                             ",
      "                   ="
    TEMP.56 = "=         REPRO           -                        ",
      "                   ="
    TEMP.57 = "=           INFILE(INDS)  -                        ",
      "                   ="
    TEMP.58 = "=           OUTDATASET(new_dsname)                 ",
      "                   ="
    TEMP.59 = "=      //*                                         ",
      "                   ="
    TEMP.60 = "=                                               ",
      "                      ="
    TEMP.61 = "=    Sample LISTCAT JCL:                           ",
      "                   ="
    TEMP.62 = "=      //STEP1    EXEC PGM=IDCAMS                  ",
      "                   ="
    TEMP.63 = "=      //SYSPRINT DD SYSOUT=*                      ",
      "                   ="
    TEMP.64 = "=      //SYSUDUMP DD SYSOUT=*                      ",
      "                   ="
    TEMP.65 = "=      //SYSIN    DD *                             ",
      "                   ="
    TEMP.66 = "=         LISTCAT ENTRIES(new_dsname) -            ",
      "                   ="
    TEMP.67 = "=                 DATA -                           ",
      "                   ="
    TEMP.68 = "=                 ALLOCATION                       ",
      "                   ="
    TEMP.69 = "=      //*                                         ",
      "                   ="
    TEMP.70 = "=                                               ",
      "                      ="
    TEMP.71 = "=    Sample ALTER JCL to rename a new data set to its",
      "                 ="
    TEMP.72 = "=    old data set name:",
      "                                               ="
    TEMP.73 = "=      //STEP1    EXEC PGM=IDCAMS                  ",
      "                   ="
    TEMP.74 = "=      //SYSPRINT DD SYSOUT=*                      ",
      "                   ="
    TEMP.75 = "=      //SYSUDUMP DD SYSOUT=*                      ",
      "                   ="
    TEMP.76 = "=      //SYSIN    DD *                             ",
      "                   ="
    TEMP.77 = "=         ALTER -                                  ",
      "                   ="
    TEMP.78 = "=             old_dsname                   -       ",
      "                   ="
    TEMP.79 = "=             NEWNAME(save_dsname)                 ",
      "                   ="
    TEMP.80 = "=         ALTER -                                  ",
      "                   ="
    TEMP.81 = "=             old_dsname.DATA              -       ",
      "                   ="
    TEMP.82 = "=             NEWNAME(save_dsname.DATA)            ",
      "                   ="
    TEMP.83 = "=                                               ",
      "                      ="
    TEMP.84 = "=         ALTER -                                  ",
      "                   ="
    TEMP.85 = "=             new_dsname                   -       ",
      "                   ="
    TEMP.86 = "=             NEWNAME(old_dsname)                  ",
      "                   ="
    TEMP.87 = "=         ALTER -                                  ",
      "                   ="
    TEMP.88 = "=             new_dsname.DATA              -       ",
      "                   ="
    TEMP.89 = "=             NEWNAME(old_dsname.DATA)             ",
      "                   ="
    TEMP.90 = "=      //*                                         ",
      "                   ="
    TEMP.91 = "=                                               ",
      "                      ="
    TEMP.92 = "= 2. If the LISTCAT_RESULT column value is not",
      "RC=0                    ="

    TEMP.93 = "=    or is 'RC=0, HI-A-RBA Not Found':",
      "                                ="
    TEMP.94 = "=    The LISTCAT command for the active log data",
      "set did not           ="
    TEMP.95 = "=    complete with RC=0 or it completed with RC=0",
      "but the HI-A-RBA     ="
    TEMP.96 = "=    of the data set is not found in the LISTCAT",
      "output. Therefore,    ="
    TEMP.97 = "=    it cannot be determined if the active log data",
      "set is an          ="
    TEMP.98 = "=    oversized data set with a size greater than",
      "4 GB.                 ="
    TEMP.99  = "=                                               ",
      "                      ="
    TEMP.100 = "=    If the LISTCAT command did not complete",
      "successfully, the         ="
    TEMP.101 = "=    LISTCAT return code is shown in the",
      "corresponding LISTCAT_RESULT  ="
    TEMP.102 = "=    column.",
      "                                                          ="
    TEMP.103 = "=                                               ",
      "                      ="
    TEMP.104 = "=    Otherwise, if the LISTCAT command",
      "completed successfully          ="
    TEMP.105 = "=    but the HI-A-RBA is not found in the LISTCAT",
      "output, the message  ="
    TEMP.106 = "=    'RC=0, HI-A-RBA Not Found' is shown in the",
      "corresponding          ="
    TEMP.107 = "=    LISTCAT_RESULT column.",
      "                                           ="
    TEMP.108 = "=                                               ",
      "                      ="
    TEMP.109 = "=    In both cases, run a LISTCAT command",
      "on the active log data       ="
    TEMP.110 = "=    set to determine the cause of the error.",
      "                         ="
    TEMP.111 = "=                                               ",
      "                      ="
    TEMP.112 = COPIES('=',72)
    TEMP.113 = "GROUP    MEMBER  ",
      "ACTIVE LOG DATA SET NAME                    ",
      "LISTCAT_RESULT"
    TEMP.114 = "======== ========",
      "============================================",
      "=============="

    'EXECIO' 114 'DISKW REPORT24 (STEM TEMP.'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                                 , 'EXECIO DISKW REPORT24 rc=' rc

    /*****************************************************************/
    /* Process DSNJU004 output to get the names of the active log    */
    /* data sets (copy 1 and copy2) for all members, as well as      */
    /* their respective group and member names.                      */
    /*****************************************************************/
    'EXECIO 0 DISKR JU004PRT (FINIS'
    if rc <> 0 then call Dsn_Error 'Read_source_dsn',
                                 , 'EXECIO DISKR JU004PRT CLOSE rc=' rc

    'EXECIO 0 DISKR JU004PRT (OPEN'
    if rc <> 0 then call Dsn_Error 'Read_source_dsn',
                                 , 'EXECIO DISKR JU004PRT OPEN rc=' rc

    do until EOF                                      /* read loop   */
      /* Set all possible compound variables whose names begin with  */
      /* stem TEMP to nulls                                          */
      TEMP. = ''

      'EXECIO 100 DISKR JU004PRT (OPEN STEM TEMP.'    /* block fetch */
      if rc <> 0 then
        do
          EOF=1;
          if rc <> 2 then call Dsn_Error 'Read_source_dsn',
                                       , 'EXECIO DISKR JU004PRT rc=' rc
        end /* EOF */

      /***************************************************************/
      /* Get the active log data set names and their respective      */
      /* group and member names from the DSNJU004 report.            */
      /* Save the info in the stem variables LOG.n.DSN, LOG.n.GROUP, */
      /* and LOG.n.MEMBER.                                           */
      /***************************************************************/
      do ctr=1 to TEMP.0;
        if INDEX(TEMP.ctr, ,
                 'LOG MAP OF THE BSDS DATA SET BELONGING TO MEMBER') ,
                 > 0 then
          do
            parse var TEMP.ctr . "'" mbrnam "'" . "'" grpnam "'"
            haveActiveLogCopy1 = false
            haveActiveLogCopy2 = false
          end

        if INDEX(TEMP.ctr, 'ACTIVE LOG COPY 1 DATA SETS') > 0 then
          haveActiveLogCopy1 = true
        if INDEX(TEMP.ctr, 'ARCHIVE LOG COPY 1 DATA SETS') > 0 then
          haveActiveLogCopy1 = false
        if INDEX(TEMP.ctr, 'ACTIVE LOG COPY 2 DATA SETS') > 0 then
          haveActiveLogCopy2 = true
        if INDEX(TEMP.ctr, 'ARCHIVE LOG COPY 2 DATA SETS') > 0 then
          haveActiveLogCopy2 = false

        if LENGTH(TEMP.ctr) > 66 then
          do
            if ((haveActiveLogCopy1 = true & ,
                 INDEX(TEMP.ctr, 'DSN=', 63) > 0) ! ,
                (haveActiveLogCopy2 = true & ,
                 INDEX(TEMP.ctr, 'DSN=', 63) > 0)) then
              do
                ctr2 = ctr2 + 1
                startPos = INDEX(TEMP.ctr, 'DSN=') + 4
                LOG.ctr2.GROUP = grpnam
                LOG.ctr2.MEMBER = mbrnam
                LOG.ctr2.DSN = STRIP(SUBSTR(TEMP.ctr, startPos))
                LOG.ctr2.ALLOC = 0
                LOG.ctr2.LCATRES = "RC=0"
              end
          end
      end  /* do ctr loop */
    end  /* end: until EOF fetch loop */

    'EXECIO 0 DISKR JU004PRT (FINIS'
    if rc <> 0 then call Dsn_Error 'Read_source_dsn',
                                 , 'EXECIO DISKR JU004PRT CLOSE rc=' rc
    numLogs = ctr2

    /*****************************************************************/
    /* For each active log data set, issue LISTCAT command and       */
    /* get the size of each active log data set from the HI-A-RBA    */
    /* setting in the LISTCAT report.                                */
    /*****************************************************************/
    do ctr2=1 to numLogs;
      TEMP. = ''
      haveData = false
      haveAllocation = false
      haveHiARba = false

      x="OUTTRAP"('TEMP.')
      Address TSO "LISTCAT ENTRIES('"LOG.ctr2.DSN"') DATA ALLOCATION"
      x="OUTTRAP"('OFF')
      LOG.ctr2.LCATRES = "RC="rc
      if rc <> 0 then
        iterate

      /***************************************************************/
      /* Parse the LISTCAT report to extract high allocated RBA.     */
      /***************************************************************/
      do ctr=1 to TEMP.0;
        if INDEX(TEMP.ctr, 'DATA ------- ') > 0 then
          haveData = true
        if haveData = true & INDEX(TEMP.ctr, 'ALLOCATION') > 0 then
          haveAllocation = true
        if haveData = true & haveAllocation = true & ,
           INDEX(TEMP.ctr, 'HI-A-RBA-') > 0 then
          do
            /*********************************************************/
            /* Extract the high allocated RBA value from the         */
            /* HI-A-RBA setting in the LISTCAT report                */
            /* Example HI-A-RBA setting:  HI-A-RBA--------20643840   */
            /*********************************************************/
            haveHiARba = true
            startPos = INDEX(TEMP.ctr, 'HI-A-RBA-') + 8
            hiARba = SUBSTR(TEMP.ctr, startPos)
            hiARbaLen = LENGTH(hiARba)
            rbapos = 1

            do while rbapos <= hiARbaLen
              rbaCurVAL = SUBSTR(hiARba, rbapos, 1)
              if VERIFY(rbaCurVal, "0123456789") = 0 then
                do
                  LOG.ctr2.ALLOC = SUBSTR(hiARba, rbapos)

                  LEAVE  /* skip parsing rest of HI-A-RBA setting */
                end  /* VERIFY */
              rbapos = rbapos + 1
            end  /* do while */

            LEAVE  /* skip the rest of the LISTCAT report */
          end  /* HI-A-RBA found */
      end  /* do ctr loop (scan LISTCAT report) */
      if haveHiARba = false then
        LOG.ctr2.LCATRES = "RC=0, HI-A-RBA Not Found"
    end  /* do ctr2 loop (process all active log data sets) */

    /*****************************************************************/
    /* Print active log data sets with size over 4 GB or             */
    /* whose size cannot be determined.                              */
    /*****************************************************************/
    do ctr2=1 to numLogs;
      if (LOG.ctr2.ALLOC > 4294967295),
       ! (LOG.ctr2.LCATRES <> "RC=0") then
        do
          if (LOG.ctr2.ALLOC > 4294967295) then
            LOG.ctr2.LCATRES = "RC=0, Greater than 4 GB"
          TEMP.1 = LOG.ctr2.GROUP LOG.ctr2.MEMBER ,
                   LEFT(LOG.ctr2.DSN, 44) LOG.ctr2.LCATRES
          'EXECIO' 1 'DISKW REPORT24 (STEM TEMP.'
          if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                                  , 'EXECIO DISKW REPORT24 rc=' rc
        end
    end  /* do ctr2 loop */

    drop TEMP. LOG.                     /* release block             */

    'EXECIO 0 DISKW REPORT24 (FINIS'
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',
                        , 'EXECIO DISKW REPORT24 CLOSE rc=' rc

    CALL IntMsg,
        '  Report 24 completed'

  RETURN /* end generateReport24 */


  IntMsg: PROCEDURE expose debug ownmsg.; TRACE O
    PARSE ARG msg
    SAY msg
    RETURN /* end IntMsg */


  /********************************************************************/
  /* Got a dataset allocation or I/O error, print out message & abort.*/
  /********************************************************************/
  Dsn_Error:
    if debug<3 then trace O
    /* "ARG"(1) is the code section name, "ARG"(2) the event text.    */
    call IntMsg 'I/O error occurred in "'"ARG"(1)'". Event:' "ARG"(2)
    call Abort 23
    return /* end Dsn_Error */


  /********************************************************************/
  /* Got a failure SQLCODE, write diagnostics to result set and abort.*/
  /********************************************************************/
  ERRSQLCA:
    IF debug<3 THEN TRACE O

    CALL IntMsg '** Error SQL statement -' "ARG"(1)
    /* If this is a CREATE, show the statement we are working with.  */
    IF "WORD"("ARG"(1),1) = 'CREATE' THEN DO
      CALL IntMsg 'SQL statement follows:'
      CALL IntMsg sqlstmt
    END

    CALL IntMsg 'SQLCODE ='SQLCODE
    CALL IntMsg 'SQLERRMC='!!"TRANSLATE"(SQLERRMC,';','FF'x)
    CALL IntMsg 'SQLERRP ='SQLERRP
    CALL IntMsg 'SQLERRD ='SQLERRD.1','SQLERRD.2','SQLERRD.3,
                      !!','SQLERRD.4','SQLERRD.5','SQLERRD.6

    CALL IntMsg 'SQLWARN ='SQLWARN.0','SQLWARN.1','SQLWARN.2,
                      !!','SQLWARN.3','SQLWARN.4','SQLWARN.5,
                      !!','SQLWARN.6','SQLWARN.7','SQLWARN.8,
                      !!','SQLWARN.9','SQLWARN.10
    CALL IntMsg 'SQLSTATE='SQLSTATE

    ADDRESS DSNREXX "EXECSQL ROLLBACK"

    CALL Abort 27
    RETURN /* end ERRSQLCA */


  /********************************************************************/
  /* Got a bad enough error to stop processing.  Put an error message */
  /* into the result set and terminate with RC>=8.                    */
  /********************************************************************/
  Abort:
    IF aborting=1 THEN RETURN; ELSE aborting=1
    IF debug<3 THEN TRACE O
    IF debug>0 THEN SAY 'Subroutine: Abort'

    PARSE ARG errorid .
    SELECT                                                /* errorid */
      WHEN errorid=23 THEN DO
        CALL IntMsg 'Aborting due to I/O errors.'
        high_rc = 8
      END
      WHEN errorid=27 THEN DO
        CALL IntMsg 'Aborting due to unexpected SQLCODE.'
        high_rc = 8
      END
      WHEN errorid=44 THEN DO
        CALL IntMsg 'Aborting due to more table spaces requested than',
                 !! 'could be added.'
        high_rc = 8
      END
      WHEN errorid=54 THEN DO
        CALL IntMsg 'Aborting due to unexpected parameter setting.'
        high_rc = 8
      END
      OTHERWISE DO
        CALL IntMsg 'ABORT: invalid error id' errorid
        high_rc = 999
        END
    END /* SELECT errorid */

    IF "WORDPOS"( high_rc, '0 4 8 999' ) > 0 /* An expected value ?..*/
      THEN high_rc = 8                     /* Yes, normal abort rc=8 */
      ELSE high_rc = 999                   /* No, force internal err */

    EXIT Finis() /* end Abort */


  /********************************************************************/
  /* Do clean up processing and exit. Put all internally generated    */
  /* messages into global temp table for result set.  Open the result */
  /* set cursor.  Set the highest return code.  Close all files and   */
  /* exit                                                             */
  /********************************************************************/
  Finis:
      SAY '*** End   RC='high_rc
      RETURN high_rc  /* normal end of DSNTPMQ */

//*
//DSNTPMQ EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSEXEC  DD  DSN=&&TEMPPDS,DISP=(OLD,DELETE)
//JU004PRT DD  DSN=&&TEMPPDS2(JU004PRT),DISP=(OLD,DELETE)
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
  DSNTPMQ §DSN§ §SYSADM§
//REPORT01 DD  SYSOUT=*
//REPORT02 DD  SYSOUT=*
//REPORT03 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=274)
//REPORT04 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=274)
//REPORT05 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=402)
//REPORT06 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=322)
//REPORT07 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=277)
//REPORT08 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=284)
//REPORT09 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=72)
//REPORT10 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=148)
//REPORT11 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=89)
//REPORT12 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=72)
//REPORT13 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=264)
//REPORT14 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=141)
//REPORT15 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=274)
//REPORT16 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=274)
//REPORT17 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=274)
//REPORT18 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=274)
//REPORT19 DD  SYSOUT=*
//REPORT20 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=257)
//REPORT21 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=150)
//REPORT22 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=257)
//REPORT23 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=278)
//REPORT24 DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=87)
//*

./ ADD NAME=DSNTIJRF
//********************************************************************* 00000100
//* JOB NAME = DSNTIJRF                                                 00000200
//*                                                                     00000300
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM                          00000400
//*                                                                     00000500
//*                                                                     00000600
//*    STATUS = Version 11                                              00000700
//*                                                                     00000800
//* FUNCTION = Create the DB2 HTTP/REST consumer functions              00000900
//*                                                                     00001000
//* PSEUDOCODE =                                                        00001100
//*   TIJRFS01 STEP     Drop existing DB2 HTTP/REST consumer functions  00001200
//*   TIJRFS02 STEP     Create the DB2 HTTP/REST consumer functions     00001300
//*   TIJRFS03 STEP     Grant access on the DB2 HTTP/REST consumer      00001400
//*                     functions                                       00001500
//*                                                                     00001600
//* NOTES =                                                             00001700
//*   Java Version:                                                     00001800
//*     The DB2 HTTP/REST consumer functions are implemented in         00001900
//*     Java. The minimum JDK level required is 5.0.  See the           00002000
//*     DB2 Programming for Java reference for information about        00002100
//*     setting up a Java WLM environment.                              00002200
//*                                                                     00002300
//*   Internet connectivity:                                            00002400
//*     You system needs proper TCP/IP setup for the REST UDFs to       00002500
//*     work.                                                           00002600
//*                                                                     00002700
//*   Customizing this job for your system:                             00002800
//*     The following manual tailoring is required:                     00002900
//*     1. Add a valid job card.                                        00003000
//*     2. Locate and change all occurrences of the following           00003100
//*        strings as indicated:                                        00003200
//*        A. '§DSN§' to the name of your DB2 subsystem                 00003300
//*        B. 'DSN§§0' to the prefix of the SMP/E target libraries for  00003400
//*           your DB2 subsytem.                                        00003500
//*        C. 'DSNTIA§§' to the plan name for DSNTIAD                   00003600
//*        D. '§SYSADM§' to the authorization ID for creating the       00003700
//*            functions.                                               00003800
//*        E. 'CEE.V§R§M§' to prefix of the SMP/E target libraries for  00003900
//*           IBM Language Environment.                                 00004000
//*                                                                     00004100
//*   See member DSN8RFTX for examples of using the DB2 HTTP/REST       00004200
//*   functions.                                                        00004300
//*                                                                     00004400
//* CHANGE ACTIVITY =                                                   00004500
//*   10/20/2012 ADDED                              N0074/N0074R7_REST1 00004600
//*                                                                     00004700
//********************************************************************* 00004800
//*                                                                     00004900
//JOBLIB  DD  DISP=SHR,DSN=DSN§§0.SDSNEXIT                              00005000
//        DD  DISP=SHR,DSN=DSN§§0.SDSNLOAD                              00005100
//        DD  DISP=SHR,DSN=CEE.V§R§M§.SCEERUN                           00005200
//        DD  DISP=SHR,DSN=DSN§§0.RUNLIB.LOAD                           00005300
//*                                                                     00005400
//*  //**************************************************************** 00005500
//*  //* Drop existing DB2 HTTP/REST consumer functions                 00005600
//*  //**************************************************************** 00005700
//*  //TIJRFS01 EXEC PGM=IKJEFT01,DYNAMNBR=20                           00005800
//*  //SYSTSPRT DD SYSOUT=*                                             00005900
//*  //SYSTSIN  DD *                                                    00006000
//*   DSN SYSTEM(§DSN§)                                                 00006100
//*   RUN PROGRAM(DSNTIAD)          -                                   00006200
//*       PLAN(DSNTIA§§)            -                                   00006300
//*       LIB('DSN§§0.RUNLIB.LOAD') -                                   00006400
//*       PARM('RC0')                                                   00006500
//*  //SYSPRINT DD SYSOUT=*                                             00006600
//*  //SYSUDUMP DD SYSOUT=*                                             00006700
//*  //SYSIN    DD *                                                    00006800
//*    SET CURRENT SQLID = '§SYSADM§';                                  00006900
//*    DROP SPECIFIC FUNCTION DB2XML.httpGetBlob     RESTRICT;          00007000
//*    DROP SPECIFIC FUNCTION DB2XML.httpGetBlobFile RESTRICT;          00007100
//*    DROP SPECIFIC FUNCTION DB2XML.httpGetClob     RESTRICT;          00007200
//*    DROP SPECIFIC FUNCTION DB2XML.httpGetClobFile RESTRICT;          00007300
//*    DROP SPECIFIC FUNCTION DB2XML.httpPutBlob     RESTRICT;          00007400
//*    DROP SPECIFIC FUNCTION DB2XML.httpPutClob     RESTRICT;          00007500
//*    DROP SPECIFIC FUNCTION DB2XML.httpPostBlob    RESTRICT;          00007600
//*    DROP SPECIFIC FUNCTION DB2XML.httpPostClob    RESTRICT;          00007700
//*    DROP SPECIFIC FUNCTION DB2XML.httpDeleteClob  RESTRICT;          00007800
//*    DROP SPECIFIC FUNCTION DB2XML.httpDeleteBlob  RESTRICT;          00007900
//*    DROP SPECIFIC FUNCTION DB2XML.httpHead        RESTRICT;          00008000
//*    DROP SPECIFIC FUNCTION DB2XML.httpBlob        RESTRICT;          00008100
//*    DROP SPECIFIC FUNCTION DB2XML.httpClob        RESTRICT;          00008200
//*    DROP SPECIFIC FUNCTION DB2XML.urlEncode       RESTRICT;          00008300
//*    DROP SPECIFIC FUNCTION DB2XML.urlDecode       RESTRICT;          00008400
//*    DROP SPECIFIC FUNCTION DB2XML.base64Encode    RESTRICT;          00008500
//*    DROP SPECIFIC FUNCTION DB2XML.base64Decode    RESTRICT;          00008600
//*                                                                     00008700
//********************************************************************* 00008800
//* Create the DB2 HTTP/REST consumer functions                         00008900
//********************************************************************* 00009000
//TIJRFS02 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                    00009100
//SYSTSPRT DD SYSOUT=*                                                  00009200
//SYSTSIN  DD *                                                         00009300
 DSN SYSTEM(§DSN§)                                                      00009400
 RUN PROGRAM(DSNTIAD)          -                                        00009500
     PLAN(DSNTIA§§)            -                                        00009600
     LIB('DSN§§0.RUNLIB.LOAD')                                          00009700
//SYSPRINT DD SYSOUT=*                                                  00009800
//SYSUDUMP DD SYSOUT=*                                                  00009900
//SYSIN    DD *                                                         00010000
  SET CURRENT SQLID = '§SYSADM§';                                       00010100
                                                                        00010200
  CREATE FUNCTION DB2XML.urlEncode                                      00010300
    ( value      VARCHAR(2048)                                          00010400
    , encoding   VARCHAR(20)                                            00010500
    )                                                                   00010600
    RETURNS VARCHAR(4096)                                               00010700
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.urlEncode'            00010800
    LANGUAGE JAVA                                                       00010900
    PARAMETER STYLE JAVA                                                00011000
    PARAMETER CCSID UNICODE                                             00011100
    NOT VARIANT                                                         00011200
    CALLED ON NULL INPUT                                                00011300
    NO SQL                                                              00011400
    WLM ENVIRONMENT DSNWLM_JAVA                                         00011500
    PROGRAM TYPE SUB;                                                   00011600
                                                                        00011700
  CREATE FUNCTION DB2XML.urlDecode                                      00011800
    ( value      VARCHAR(2048)                                          00011900
    , encoding   VARCHAR(20)                                            00012000
    )                                                                   00012100
    RETURNS VARCHAR(4096)                                               00012200
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.urlDecode'            00012300
    LANGUAGE JAVA                                                       00012400
    PARAMETER STYLE JAVA                                                00012500
    PARAMETER CCSID UNICODE                                             00012600
    NOT VARIANT                                                         00012700
    CALLED ON NULL INPUT                                                00012800
    NO SQL                                                              00012900
    WLM ENVIRONMENT DSNWLM_JAVA                                         00013000
    PROGRAM TYPE SUB;                                                   00013100
                                                                        00013200
  CREATE FUNCTION DB2XML.base64Encode                                   00013300
    (in          VARCHAR(2732) FOR BIT DATA                             00013400
    )                                                                   00013500
    RETURNS VARCHAR(4096)                                               00013600
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.base64Encode'         00013700
    LANGUAGE JAVA                                                       00013800
    PARAMETER STYLE JAVA                                                00013900
    PARAMETER CCSID UNICODE                                             00014000
    NOT VARIANT                                                         00014100
    CALLED ON NULL INPUT                                                00014200
    NO SQL                                                              00014300
    WLM ENVIRONMENT DSNWLM_JAVA                                         00014400
    PROGRAM TYPE SUB;                                                   00014500
                                                                        00014600
  CREATE FUNCTION DB2XML.base64Decode                                   00014700
    (in          VARCHAR(4096)                                          00014800
    )                                                                   00014900
    RETURNS VARCHAR(2732) FOR BIT DATA                                  00015000
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.base64Decode'         00015100
    LANGUAGE JAVA                                                       00015200
    PARAMETER STYLE JAVA                                                00015300
    PARAMETER CCSID UNICODE                                             00015400
    NOT VARIANT                                                         00015500
    CALLED ON NULL INPUT                                                00015600
    NO SQL                                                              00015700
    WLM ENVIRONMENT DSNWLM_JAVA                                         00015800
    PROGRAM TYPE SUB;                                                   00015900
                                                                        00016000
  CREATE FUNCTION DB2XML.httpHead                                       00016100
    ( url        VARCHAR(2048)                                          00016200
    , httpHeader CLOB (10K)                                             00016300
    )                                                                   00016400
    RETURNS CLOB(10K)                                                   00016500
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.httpHead'             00016600
    LANGUAGE JAVA                                                       00016700
    PARAMETER STYLE JAVA                                                00016800
    PARAMETER CCSID UNICODE                                             00016900
    CALLED ON NULL INPUT                                                00017000
    NO SQL                                                              00017100
    WLM ENVIRONMENT DSNWLM_JAVA                                         00017200
    PROGRAM TYPE SUB;                                                   00017300
                                                                        00017400
  CREATE FUNCTION DB2XML.httpGetBlob                                    00017500
    ( url        VARCHAR(2048)                                          00017600
    , httpHeader CLOB (10K)                                             00017700
    )                                                                   00017800
    RETURNS BLOB(5M)                                                    00017900
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.httpGetBlob'          00018000
    LANGUAGE JAVA                                                       00018100
    PARAMETER STYLE JAVA                                                00018200
    PARAMETER CCSID UNICODE                                             00018300
    CALLED ON NULL INPUT                                                00018400
    NO SQL                                                              00018500
    WLM ENVIRONMENT DSNWLM_JAVA                                         00018600
    PROGRAM TYPE SUB;                                                   00018700
                                                                        00018800
  CREATE FUNCTION DB2XML.httpGetBlobFile                                00018900
    ( url        VARCHAR(2048)                                          00019000
    , httpHeader CLOB(10K)                                              00019100
    )                                                                   00019200
    RETURNS VARCHAR(2048)                                               00019300
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.httpGetBlobFile'      00019400
    LANGUAGE JAVA                                                       00019500
    PARAMETER STYLE JAVA                                                00019600
    PARAMETER CCSID UNICODE                                             00019700
    CALLED ON NULL INPUT                                                00019800
    NO SQL                                                              00019900
    WLM ENVIRONMENT DSNWLM_JAVA                                         00020000
    PROGRAM TYPE SUB;                                                   00020100
                                                                        00020200
  CREATE FUNCTION DB2XML.httpGetClob                                    00020300
    ( url        VARCHAR(2048)                                          00020400
    , httpHeader CLOB (10K)                                             00020500
    )                                                                   00020600
    RETURNS CLOB(5M)                                                    00020700
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.httpGetClob'          00020800
    LANGUAGE JAVA                                                       00020900
    PARAMETER STYLE JAVA                                                00021000
    PARAMETER CCSID UNICODE                                             00021100
    CALLED ON NULL INPUT                                                00021200
    NO SQL                                                              00021300
    WLM ENVIRONMENT DSNWLM_JAVA                                         00021400
    PROGRAM TYPE SUB;                                                   00021500
                                                                        00021600
  CREATE FUNCTION DB2XML.httpGetClobFile                                00021700
    ( url        VARCHAR(2048)                                          00021800
    , httpHeader CLOB(10K)                                              00021900
    )                                                                   00022000
    RETURNS VARCHAR(2048)                                               00022100
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.httpGetClobFile'      00022200
    LANGUAGE JAVA                                                       00022300
    PARAMETER STYLE JAVA                                                00022400
    PARAMETER CCSID UNICODE                                             00022500
    CALLED ON NULL INPUT                                                00022600
    NO SQL                                                              00022700
    WLM ENVIRONMENT DSNWLM_JAVA                                         00022800
    PROGRAM TYPE SUB;                                                   00022900
                                                                        00023000
  CREATE FUNCTION DB2XML.httpPutBlob                                    00023100
    ( url        VARCHAR(2048)                                          00023200
    , httpHeader CLOB (10K)                                             00023300
    , requestMsg BLOB(5M)                                               00023400
    )                                                                   00023500
    RETURNS BLOB(5M)                                                    00023600
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.httpPutBlob'          00023700
    LANGUAGE JAVA                                                       00023800
    PARAMETER STYLE JAVA                                                00023900
    PARAMETER CCSID UNICODE                                             00024000
    CALLED ON NULL INPUT                                                00024100
    NO SQL                                                              00024200
    WLM ENVIRONMENT DSNWLM_JAVA                                         00024300
    PROGRAM TYPE SUB;                                                   00024400
                                                                        00024500
  CREATE FUNCTION DB2XML.httpPutClob                                    00024600
    ( url        VARCHAR(2048)                                          00024700
    , httpHeader CLOB (10K)                                             00024800
    , requestMsg CLOB(5M)                                               00024900
    )                                                                   00025000
    RETURNS CLOB(5M)                                                    00025100
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.httpPutClob'          00025200
    LANGUAGE JAVA                                                       00025300
    PARAMETER STYLE JAVA                                                00025400
    PARAMETER CCSID UNICODE                                             00025500
    CALLED ON NULL INPUT                                                00025600
    NO SQL                                                              00025700
    WLM ENVIRONMENT DSNWLM_JAVA                                         00025800
    PROGRAM TYPE SUB;                                                   00025900
                                                                        00026000
  CREATE FUNCTION DB2XML.httpPostBlob                                   00026100
    ( url        VARCHAR(2048)                                          00026200
    , httpHeader CLOB (10K)                                             00026300
    , requestMsg BLOB(5M)                                               00026400
    )                                                                   00026500
    RETURNS BLOB(5M)                                                    00026600
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.httpPostBlob'         00026700
    LANGUAGE JAVA                                                       00026800
    PARAMETER STYLE JAVA                                                00026900
    PARAMETER CCSID UNICODE                                             00027000
    CALLED ON NULL INPUT                                                00027100
    NO SQL                                                              00027200
    WLM ENVIRONMENT DSNWLM_JAVA                                         00027300
    PROGRAM TYPE SUB;                                                   00027400
                                                                        00027500
  CREATE FUNCTION DB2XML.httpPostClob                                   00027600
    ( url        VARCHAR(2048)                                          00027700
    , httpHeader CLOB (10K)                                             00027800
    , requestMsg CLOB(5M)                                               00027900
    )                                                                   00028000
    RETURNS CLOB(5M)                                                    00028100
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.httpPostClob'         00028200
    LANGUAGE JAVA                                                       00028300
    PARAMETER STYLE JAVA                                                00028400
    PARAMETER CCSID UNICODE                                             00028500
    CALLED ON NULL INPUT                                                00028600
    NO SQL                                                              00028700
    WLM ENVIRONMENT DSNWLM_JAVA                                         00028800
    PROGRAM TYPE SUB;                                                   00028900
                                                                        00029000
  CREATE FUNCTION DB2XML.httpDeleteBlob                                 00029100
    ( url        VARCHAR(2048)                                          00029200
    , httpHeader CLOB (10K)                                             00029300
    )                                                                   00029400
    RETURNS BLOB(5M)                                                    00029500
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.httpDeleteBlob'       00029600
    LANGUAGE JAVA                                                       00029700
    PARAMETER STYLE JAVA                                                00029800
    PARAMETER CCSID UNICODE                                             00029900
    CALLED ON NULL INPUT                                                00030000
    NO SQL                                                              00030100
    WLM ENVIRONMENT DSNWLM_JAVA                                         00030200
    PROGRAM TYPE SUB;                                                   00030300
                                                                        00030400
  CREATE FUNCTION DB2XML.httpDeleteClob                                 00030500
    ( url        VARCHAR(2048)                                          00030600
    , httpHeader CLOB (10K)                                             00030700
    )                                                                   00030800
    RETURNS CLOB(5M)                                                    00030900
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.httpDeleteClob'       00031000
    LANGUAGE JAVA                                                       00031100
    PARAMETER STYLE JAVA                                                00031200
    PARAMETER CCSID UNICODE                                             00031300
    CALLED ON NULL INPUT                                                00031400
    NO SQL                                                              00031500
    WLM ENVIRONMENT DSNWLM_JAVA                                         00031600
    PROGRAM TYPE SUB;                                                   00031700
                                                                        00031800
  CREATE FUNCTION DB2XML.httpBlob                                       00031900
    ( url        VARCHAR(2048)                                          00032000
    , httpMethod VARCHAR(128)                                           00032100
    , httpHeader CLOB (10K)                                             00032200
    , requestMsg BLOB(5M)                                               00032300
    )                                                                   00032400
    RETURNS BLOB(5M)                                                    00032500
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.httpBlob'             00032600
    LANGUAGE JAVA                                                       00032700
    PARAMETER STYLE JAVA                                                00032800
    PARAMETER CCSID UNICODE                                             00032900
    CALLED ON NULL INPUT                                                00033000
    NO SQL                                                              00033100
    WLM ENVIRONMENT DSNWLM_JAVA                                         00033200
    PROGRAM TYPE SUB;                                                   00033300
                                                                        00033400
  CREATE FUNCTION DB2XML.httpClob                                       00033500
    ( url        VARCHAR(2048)                                          00033600
    , httpMethod VARCHAR(128)                                           00033700
    , httpHeader CLOB (10K)                                             00033800
    , requestMsg CLOB(5M)                                               00033900
    )                                                                   00034000
    RETURNS CLOB(5M)                                                    00034100
    EXTERNAL NAME 'com.ibm.db2.rest.DB2UDFWrapper.httpClob'             00034200
    LANGUAGE JAVA                                                       00034300
    PARAMETER STYLE JAVA                                                00034400
    PARAMETER CCSID UNICODE                                             00034500
    CALLED ON NULL INPUT                                                00034600
    NO SQL                                                              00034700
    WLM ENVIRONMENT DSNWLM_JAVA                                         00034800
    PROGRAM TYPE SUB;                                                   00034900
/*                                                                      00035000
//*                                                                     00035100
//********************************************************************* 00035200
//* Grant access on the DB2 HTTP/REST consumer functions                00035300
//********************************************************************* 00035400
//TIJRFS03 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                    00035500
//SYSTSPRT DD SYSOUT=*                                                  00035600
//SYSTSIN  DD *                                                         00035700
 DSN SYSTEM(§DSN§)                                                      00035800
 RUN PROGRAM(DSNTIAD)          -                                        00035900
     PLAN(DSNTIA§§)            -                                        00036000
     LIB('DSN§§0.RUNLIB.LOAD')                                          00036100
//SYSPRINT DD SYSOUT=*                                                  00036200
//SYSUDUMP DD SYSOUT=*                                                  00036300
//SYSIN    DD *                                                         00036400
  SET CURRENT SQLID = '§SYSADM§';                                       00036500
                                                                        00036600
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.httpGetBlob                 00036700
    TO PUBLIC;                                                          00036800
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.httpGetBlobFile             00036900
    TO PUBLIC;                                                          00037000
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.httpGetClob                 00037100
    TO PUBLIC;                                                          00037200
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.httpGetClobFile             00037300
    TO PUBLIC;                                                          00037400
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.httpPutBlob                 00037500
    TO PUBLIC;                                                          00037600
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.httpPutClob                 00037700
    TO PUBLIC;                                                          00037800
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.httpPostBlob                00037900
    TO PUBLIC;                                                          00038000
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.httpPostClob                00038100
    TO PUBLIC;                                                          00038200
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.httpDeleteClob              00038300
    TO PUBLIC;                                                          00038400
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.httpDeleteBlob              00038500
    TO PUBLIC;                                                          00038600
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.httpHead                    00038700
    TO PUBLIC;                                                          00038800
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.httpBlob                    00038900
    TO PUBLIC;                                                          00039000
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.httpClob                    00039100
    TO PUBLIC;                                                          00039200
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.urlEncode                   00039300
    TO PUBLIC;                                                          00039400
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.urlDecode                   00039500
    TO PUBLIC;                                                          00039600
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.base64Encode                00039700
    TO PUBLIC;                                                          00039800
  GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.base64Decode                00039900
    TO PUBLIC;                                                          00040000
/*                                                                      00040100

./ ADD NAME=DSNTIJRS
//*********************************************************************
//* JOB NAME = DSNTIJRS
//*
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM
//*
//*    Licensed Materials - Property of IBM
//*    5650-DB2
//*    (C) COPYRIGHT 2016 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 12
//*
//* FUNCTION = CREATE RESTful SERVICES DATABASE OBJECTS.
//*            NOTE THAT IN ORDER TO ENABLE RESTful SERVICES
//*            VERSIONING SUPPORT, JOB DSNTIJR2 MUST ALSO BE
//*            RUN AFTER SUCCESSFUL EXECUTION OF THIS JOB.
//*
//* PSEUDOCODE =
//*   DSNTICU  STEP     Optional: DROP the RESTful services database
//*   DSNTIAC  STEP     Create the RESTful services database
//*
//* DEPENDENCIES =
//*
//* NOTES =
//*    PRIOR TO RUNNING THIS JOB, customize it for your system:
//*    (1) Review the buffer pool settings in the CREATE TABLESPACE
//*        statements processed by this job.  Update the values as
//*        necessary.
//*    (2) Add a valid job card.
//*    (3) Change all occurrences of the following strings:
//*        (A) Change the subsystem name '§DSN§' to the SSID of your
//*            DB2.
//*        (B) Change 'DSN§§0' to the prefix of the target library
//*            for DB2.
//*        (C) Change 'DSNTIA§§' to the plan name for DSNTIAD on your
//*            DB2.
//*    (4) This job must run successfully before REST service
//*        versioning support can be enabled.  REST service versioning
//*        is enabled by running install job DSNTIJR2.  See DSNTIJR2
//*        for additional information.
//*
//* CHANGE LOG =
//*   07/20/16 Added
//*   05/01/18 Added REST service versioning support comments
//*
//*********************************************************************
//JOBLIB  DD  DISP=SHR,
//            DSN=DSN§§0.SDSNLOAD
//*
//*  //****************************************************************
//*  //* Optional: Drop the RESTful services databases
//*  //****************************************************************
//*  //DSNTICU EXEC PGM=IKJEFT01,DYNAMNBR=20
//*  //SYSTSPRT DD  SYSOUT=*
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSTSIN  DD  *
//*    DSN SYSTEM(§DSN§)
//*    RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) PARM('RC0') -
//*         LIBRARY('DSN§§0.RUNLIB.LOAD')
//*    END
//*  //SYSIN    DD  *
//*    DROP DATABASE DSNSVCDB;
//*  /*
//*
//*********************************************************************
//* Create the RESTful services database
//*********************************************************************
//DSNTIAC EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
  DSN SYSTEM(§DSN§)
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) -
       LIBRARY('DSN§§0.RUNLIB.LOAD')
  END
//SYSIN    DD  *
  CREATE DATABASE DSNSVCDB
         CCSID UNICODE;

  CREATE TABLESPACE DSNSVCTS IN DSNSVCDB
         SEGSIZE 4
         LOCKSIZE ROW
         MAXPARTITIONS 1
         USING STOGROUP SYSDEFLT
         PRIQTY 80
         CLOSE NO
         CCSID UNICODE
         FREEPAGE 0
         PCTFREE 10
         BUFFERPOOL BP0;

  CREATE TABLE "SYSIBM"."DSNSERVICE"
         ( "NAME"        VARCHAR(128) NOT NULL
         , "COLLID"      VARCHAR(128) NOT NULL
         , "CONTOKEN"    CHAR(8) FOR BIT DATA NOT NULL
         , "ENABLED"     CHAR(1) NOT NULL WITH DEFAULT 'Y'
                         CHECK(ENABLED = 'Y' OR ENABLED = 'N')
         , "CREATEDTS"   TIMESTAMP NOT NULL
         , "ALTEREDTS"   TIMESTAMP NOT NULL GENERATED BY DEFAULT
                         FOR EACH ROW ON UPDATE AS ROW CHANGE
                         TIMESTAMP
         , "DESCRIPTION" VARCHAR(250) )
         IN DSNSVCDB.DSNSVCTS
         CCSID UNICODE
         WITH RESTRICT ON DROP;

  CREATE UNIQUE INDEX SYSIBM.DSNSVC01
         ON "SYSIBM"."DSNSERVICE"
         ( "COLLID"     ASC,
           "NAME"       ASC)
         FREEPAGE 0 PCTFREE 10
         CLUSTER BUFFERPOOL BP0
         CLOSE NO;
/*

./ ADD NAME=DSNTIJRT
//*********************************************************************
//* JOB NAME = DSNTIJRT
//*
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM
//*
//*    Licensed Materials - Property of IBM
//*    5650-DB2
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 12
//*
//* FUNCTION = Install and configure DB2-supplied routines
//*
//* PSEUDOCODE =
//*   DSNTRIN  STEP      Install and configure DB2-supplied routines
//*
//* NOTES =
//*
//*   Before running this job, verify that the configuration control
//*   statements contain the desired settings for each routine.
//*
//*   RECOMMENDATION: Run this job with a user ID that has       s24922
//*   primary or secondary authorization as DB2 Installation     s24922
//*   System Administrator or DB2 Installation System Operator.  s24922
//*   See the explanation of the AUTHID and DEFPKOWN parameters  s24922
//*   for additional requirements when running with              s24922
//*   Installation System Operator authority.                    s24922
//*
//*   See further below for an explanation of the parameters and DD
//*   statements used by the DSNTRIN program.
//*
//*   =================================================================
//*   !          THE FOLLOWING NOTICES ARE FOR ALL CUSTOMERS          !
//*   =================================================================
//*
//*   -----------------------------------------------------------------
//*   If you want to use the DB2 ODBC and JDBC MetaData methods to
//*   get information about a remote ALIAS, you need to bind a pack-
//*   age called DSNACLRU on the locaL DB2 for z/OS system where the
//*   alias resides and also on the remote DB2 for z/OS server where
//*   the base table or view for the alias resides.  Running this job
//*   binds the local package for DSNACLRU.  Use a command like the
//*   following to bind DSNACLRU on the remote system:
//*
//*     BIND PACKAGE(<RTLOCB>.DSNASPCC) MEMBER(DSNACLRU) -
//*          ACTION(REPLACE) ISOLATION(UR) -
//*          RELEASE(COMMIT) ENCODING(UNICODE) -
//*          LIBRARY('<PREFIX>.SDSNDBRM')
//*
//*   where <RTLOCB> is the location name of the DB2 for z/OS server
//*   where the base table of view for the remote alias resides, and
//*   <PREFIX> is the data set name prefix of the SDSNDBRM library.
//*   -----------------------------------------------------------------
//*
//*   The authorization ID that owns the package for stored procedure
//*   SYSPROC.DSNAHVPM needs to have authority to access the catalog
//*   tables SYSIBM.SYSPACKSTMT and SYSIBM.SYSSTMT: Ensure that the
//*   PKGOWNER option of the configuration control statement for
//*   SYSPROC.DSNAHVPM specifies an authorization ID with the required
//*   authority.
//*   -----------------------------------------------------------------
//*
//*   For native SQL procedures and compiled SQL scalar functions,
//*   DSNTRIN recognizes only the routine's V1 version as the official
//*   DB2-supplied routine. Versions other than V1 are each reported
//*   by error message DSNT058I and cause DSNTRIN to terminate
//*   with return code 12 before other processing occurs.
//*   -----------------------------------------------------------------
//*
//*   The DB2XML.SOAPHTTPV and DB2XML.SOAPHTTPC Web Services Consumer
//*   UDFs require different external modules depending on the version
//*   of the XML Toolkit for z/OS you use:
//*
//*                !               ! External name required
//*                !               ! by XML Toolkit for z/OS
//*        UDF     !   Specific    !-------------------------
//*        name    !   name        ! V1.8, V1.9 !   V1.10
//*      ----------+---------------+-------------------------
//*      SOAPHTTPC ! SOAPHTTPCICO  !  DSNASHCC  !  DSNASJCC
//*      SOAPHTTPC ! SOAPHTTPVICO  !  DSNASHVC  !  DSNASJVC
//*      SOAPHTTPV ! SOAPHTTPCIVO  !  DSNASHCV  !  DSNASJCV
//*      SOAPHTTPV ! SOAPHTTPVIVO  !  DSNASHVV  !  DSNASJVV
//*
//*   DSNTRIN does not check or modify the external names of existing
//*   instances of these functions.  However, when creating them, it
//*   assigns the DSNASJxx modules required by XML Toolkit V1.10.
//*   Therefore, if you use a previous version of the XML Toolkit
//*   then, after you run DSNTRIN to create these functions, you need
//*   alter them to use the DSNASHxx external names.
//*
//*   -----------------------------------------------------------------
//*
//*   The DSNTRIN batch program accepts the following parameters:
//*     - DB2SSN  : Specifies the name of the DB2 subsystem
//*
//*     - MODE    : Specifies the processing mode:
//*                 - INSTALL
//*                     Creates, binds, and grants access to the
//*                     DB2-supplied routines and related objects.
//*                     Existing objects are not replaced except as
//*                     discussed above under special notices.
//*                 - INSTALL-PREVIEW
//*                     Same as INSTALL mode except that no changes
//*                     are processed.  Generated JCL is outputted to
//*                     the JCLOUT DD.
//*                 - REINSTALL
//*                     Similar to INSTALL mode, except that existing
//*                     DB2-supplied routines and CGTTs are first
//*                     dropped.  Existing related databases, table
//*                     spaces, tables, and indexes are not dropped
//*                     except as discussed under special notices.
//*                 - REINSTALL-PREVIEW
//*                     Same as REINSTALL mode except that no changes
//*                     are processed.  Generated JCL is outputted to
//*                     the JCLOUT DD.
//*                 - REINITIALIZE
//*                     Similar to REINSTALL mode, except that
//*                     existing related databases, table spaces,
//*                     tables, and indexes are first dropped.
//*                 - REINITIALIZE-PREVIEW
//*                     Same as REINITIALIZE mode except that no changes
//*                     are processed.  Generated JCL is outputted to
//*                     the JCLOUT DD.
//*
//*     - AUTHID  : Specifies the CURRENT SQLID setting to be used to
//*                 create and configure most DB2-supplied routines
//*                 and related objects.  Also, the default OWNER for
//*                 binding packages for these routines when     s24922
//*                 the DEFPKOWN parameter is not specified.     s24922
//*                 -> Specify SYSINSTL here when using DB2      s24922
//*                    Installation System Operator authority    s24922
//*                    to execute this job.                      s24922
//*
//*     - SECDEFID: Specifies the CURRENT SQLID setting to be used to
//*                 create and configure DB2-supplied routines that
//*                 use SECURITY DEFINER.  This ID must be a logonable
//*                 ID because it will be used by WLM to execute such
//*                 routines.
//*                 -> Specify SYSINSTL here when using DB2      s24922
//*                    Installation System Operator authority    s24922
//*                    to execute this job.                      s24922
//*
//*     - DEFPKOWN: Specifies the default OWNER for binding the  s24922
//*                 package for a DB2-supplied routine when one
//*                 is not specified explicity via the PKOWNER
//*                 parameter of the routine's configuration
//*                 control statement.
//*                 -> This parameter is required only when the  s24922
//*                    AUTHID parameter is set to SYSINSTL.      s24922
//*                 -> Specify an installation system            s24922
//*                    administrator ID when using DB2 System    s24922
//*                    Operator authority to execute this job    s24922
//*                    for DB2 installation.                     s24922
//*                 -> Specify an authorization ID that has      s24922
//*                    been granted system DBADM and DATAACCESS  s24922
//*                    authorities when using DB2 System         s24922
//*                    Operator authority to execute this job    s24922
//*                    for DB2 migration.                        s24922
//*
//*   The DSNTRIN batch program allocates the following DD statements:
//*   * Input DDs used by DSNTRIN:
//*     - DBRMLIB : For DB2-supplied DBRMs (SDSNDBRM target library)
//*
//*     - DB2OPT  : For optional configuration preferences:
//*                 - STOGROUP
//*                     The name of the STOGROUP for databases and
//*                     table spaces created by DSNTRIN.  SYSDEFLT is
//*                     used if this parameter is not specified.
//*                 - INDEXSTOG
//*                     The name of the STOGROUP for indexes     DM1679
//*                     created by DSNTRIN.  SYSDEFLT is
//*                     used if this parameter is not specified.
//*                 - BP4K
//*                     The name of the 4-KB page size buffer pool for
//*                     table spaces created by DSNTRIN.  BP0 is used
//*                     if this parameter is not specified.
//*                 - BP8K
//*                     The name of the 8-KB page size buffer pool for
//*                     table spaces created by DSNTRIN.  BP8K0 is used
//*                     if this parameter is not specified.
//*                 - BP16K
//*                     The name of the 16-KB page size buffer pool for
//*                     table spaces created by DSNTRIN. BP16K0 is used
//*                     if this parameter is not specified.
//*                 - BP32K
//*                     The name of the 32-KB page size buffer pool for
//*                     table spaces created by DSNTRIN. BP32K is used
//*                     if this parameter is not specified.
//*                 - LOBBP8K
//*                     The name of the 8-KB page size buffer pool for
//*                     LOB table spaces created by DSNTRIN.  BP8K0 is
//*                     used if this parameter is not specified.
//*                 - LOBBP16K
//*                     The name of the 16-KB page size buffer pool for
//*                     LOB table spaces created by DSNTRIN.  BP16K0 is
//*                     used if this parameter is not specified.
//*                 - LOBBP32K
//*                     The name of the 32-KB page size buffer pool for
//*                     LOB table spaces created by DSNTRIN.  BP32K is
//*                     used if this parameter is not specified.
//*                 - IMS_SECURITY
//*                     The SECURITY type (DB2, DEFINER, or USER) for
//*                     the DB2-supplied IMS routines.  SECURITY DB2
//*                     is assumed when this keyword is not specified.
//*                     -> Existing DB2-supplied IMS routines will be
//*                        altered if needed to conform with the
//*                        SECURITY type specified here.
//*                 - MQ_SECURITY
//*                     The SECURITY type (DB2, DEFINER, or USER) for
//*                     the DB2-supplied MQ routines.  SECURITY DB2
//*                     is assumed when this keyword is not specified.
//*                     -> Existing DB2-supplied MQ routines will be
//*                        altered if needed to conform with the
//*                        SECURITY type specified here.
//*                 - SOAP_SECURITY
//*                     The SECURITY type (DB2, DEFINER, or USER) for
//*                     the DB2-supplied SOAP routines.  SECURITY DB2
//*                     is assumed when this keyword is not specified.
//*                     -> Existing DB2-supplied SOAP routines will be
//*                        altered if needed to conform with the
//*                        SECURITY type specified here.
//*                 NOTE: DSNTRIN does not create or activate the
//*                   storage group or buffer pools specified here.
//*
//*     - CFIGIN  : For configuration control statements for the
//*                 DB2-supplied routines, using these parameters:
//*                 - WLMENV
//*                     Required: The name of the WLM environment for
//*                     running the routine.  Note: This parameter is
//*                     not required for the following routines:
//*                     - SYSIBMADM.CREATE_WRAPPED
//*                     - SYSPROC.SET_MAINT_MODE_RECORD_NO_TEMPORAL-
//*                       HISTORY
//*                     - SYSTOOLS.REGSP
//*                     - SYSTOOLS.REG_MATCHES
//*                     - SYSTOOLS.REG_MATCHES_NOFLAGS
//*                 - GRANTTO
//*                     Required: A list of authorization IDs to be
//*                     granted access to the routine
//*                 - PKGOWNER
//*                     Optional: The authorization ID to be specified
//*                     as OWNER when binding a package for the
//*                     routine.  If not given, the package owner is
//*                     given by the DSNTRIN DEFPKOWN parameter  s24922
//*                     (if specified) or by the DSNTRIN AUTHID  s24922
//*                     parameter (otherwise).                   s24922
//*
//* * Work DDs used by DSNTRIN:
//*     - SYSUT1  : For internal bind processing
//*
//* * Output DDs used by DSNTRIN:
//*     - SYSPRINT: For DSNTRIN messages and reports
//*
//*     - SYSTSPRT: For internal bind processing
//*
//*     - CFIGOUT : For configuration control statements
//*
//*     - SQLOUT  : For SQL statements generated by DSNTRIN
//*
//*     - BINDOUT : For BIND commands generated by DSNTRIN
//*
//*     - JCLOUT  : For JCL generated by DSNTRIN in MODE(xxxx-PREVIEW)
//*                 By default this DD allocates member DSNTRINO of
//*                 DSN=DSN§§0.SRCLIB.DATA
//*
//*   -----------------------------------------------------------------
//*   To ensure consistency between the user-managed XSR database
//*   (DSNXSR) and the XSR database in the DB2 catalog, DSNTRIN creates
//*   the following tables with RESTRICT ON DROP or alters them to ADD
//*   RESTRICT ON DROP (if it is not already in effect):
//*     - SYSIBM.XSRANNOTATIONINFO
//*     - SYSIBM.XSROBJECTCOMPONENTS
//*     - SYSIBM.XSROBJECTHIERARCHIES
//*     - SYSIBM.XSROBJECTS
//*   In MODE(REINITIALIZE), the DROP DATABASE DSNXSR request will fail
//*   with SQLCODE -672 and DSNTRIN will end with return code 12 when
//*   RESTRICT ON DROP is in effect for these tables.  To drop these
//*   tables intentionally, first alter them to remove the RESTRICT ON
//*   DROP.  You must also remove all registered XML objects from DB2
//*   or the request will fail with SQLCODE -616 and DSNTRIN will end
//*   with return code 12.
//*
//*   To ensure recoverability, you should create regular backup copies
//*   of these tables.
//*   -----------------------------------------------------------------
//*
//*
//* CHANGE LOG =
//*   09/19/2011 Remove obsolete AMI-based MQ functions  DM1548/PM48451
//*              ffdm1548
//*   12/07/2011 Add note regarding dropping of AMI-     DM1548/PM48451
//*              based and XML MQ routines                      PM47246
//*   12/26/2011 Add SYSPROC.SYSTS_ALTER                 DK1594/PM55239
//*   08/08/2011 Add SYSIBM.SQLPSEUDOCOLUMNS           DK1559 / PM41083
//*                                                             pm63574
//*   08/22/2012 Add INDEXSTOG option                    DM1679/PM70897
//*   10/06/2012 Remove SYSPROC.DSNAEXP                 DM1290 / 161046
//*   09/20/2012 Add ADMIN_UPDATE_SYSPARM                DK1557/PM71114
//*   10/15/2012 Add proc SYSPROC.SET_PLAN_HINT          DM1662/PM66047
//*              and LOBBP32K option
//*   11/29/2012 Add SYSPROC.ADMIN_COMMAND_MVS                   DN1682
//*   04/19/2012 Add proc                              DM1541 / PM61811
//*                  SYSPROC.SET_MAINT_MODE_RECORD_NO_TEMPORALHISTORY
//*   08/26/2013 Add SYSFUN.XSLTRANSFORM               DM1737 / PM90866
//*   06/21/2013 Add JSON UDFs                         DM1727 / PM98357
//*   01/03/2014 Add SYSPROC.ADMIN_EXPLAIN_MAINT       DN1801 / PI05200
//*   03/18/2014 JSON fixes and additions                 171264 DM1727
//*   06/21/2013 Add JSON UDFs                         DM1727 / PI10521
//*   07/26/2014 Add notice for DSNUTILU recreate   s20128_inst1 s20128
//*   01/24/2014 Remove extraneous JSON support                  176043
//*   05/11/2015 Document dependency of SOAPHTTPV      PI30443 / DM1848
//*              and SOAPHTTPC functions on XML                  DM1848
//*              Toolkit V1.10                                   DM1848
//*   07/15/2015 Add SYSPROC.DSNUTILV               s25173_inst2 s25173
//*   10/02/2015 Installation w/o SYSADM            s24922_inst1 s24922
//*   10/27/2015 Add proc SYSIBMADM.CREATE_WRAPPED  s25900_inst1 s25900
//*   01/15/2016 Add DB2OPT options IMS_SECURITY,        PI56913 DN1955
//*              MQ_SECURITY, and SOAP_SECURITY                  DN1955
//*   02/15/2016 Long data set names                            PI42601
//*   08/21/2018 Tolerate creation of deprecated TSs    s81673 / t81374
//*              - remove support for SYSPROC.DSNACCOR
//*   10/22/2019 Add SYSPROC.ADMIN_INFO_IFCID                   PH18225
//*   05/21/2019 Add BLOCKING_THREADS                            e39301
//*
//*********************************************************************
//*
//JOBLIB   DD DISP=SHR,DSN=DSN§§0.SDSNEXIT
//         DD DISP=SHR,DSN=DSN§§0.SDSNLOAD
//         DD DISP=SHR,DSN=CEE.V§R§M§.SCEERUN
//*
//*   DSNTRIN : Install and configure DB2-supplied routines
//*
//DSNTRIN EXEC PGM=DSNTRIN,COND=(4,LT),
//             PARM=('DB2SSN(§DSN§) MODE(INSTALL)',
//             ' AUTHID(§AUTHID§) SECDEFID(§SECDEFID§)',
//             ' DEFPKOWN(§DEFPKOWN§)')
//DBRMLIB  DD DISP=SHR,DSN=DSN§§0.SDSNDBRM
//SYSUT1   DD UNIT=SYSDA,SPACE=(27930,(10,5)),
//            DCB=(RECFM=FB,LRECL=133)
//SYSPRINT DD SYSOUT=*,DCB=(RECFM=FB,LRECL=133)
//SYSTSPRT DD SYSOUT=*
//CFIGOUT  DD SYSOUT=*
//SQLOUT   DD SYSOUT=*
//BINDOUT  DD SYSOUT=*
//JCLOUT   DD DISP=SHR,
//         DSN=DSN§§0.SRCLIB.DATA(DSNTRINO)
//DB2OPT   DD  *
  STOGROUP(SYSDEFLT)
  INDEXSTOG(SYSDEFLT)
  BP4K(BP0)
  BP8K(BP8K0)
  BP16K(BP16K0)
  BP32K(BP32K)
  LOBBP8K(BP8K0)
  LOBBP16K(BP16K0)
  LOBBP32K(BP32K)
  IMS_SECURITY(DB2)
  MQ_SECURITY(DB2)
  SOAP_SECURITY(DB2)
//CFIGIN   DD *
*
* The statements below are used by PGM=DSNTRIN to customize
* DB2-supplied stored procedures and UDFs on this DB2.
*
* Rules:
* (1) All statements are required - do not remove any.
* (2) Statements must be separated by an all-blank line
* (3) Lines that contain '*' in column 1 are comment lines
* (4) Each statement specifies the WLM ENVIRONMENT (WLMENV) and
*     execute access list (GRANTTO) for the indicated routine.
*     WLMENV and GRANTTO are required parameters but you can modify
*     the settings.
* (5) Some statements also specify the package owner (PKGOWNER)
*     for the routine.  PKGOWNER is optional.  It is ignored if
*     specified for a routine that does not have a package.
* (6) Do not use embedded blanks in values specified for WLMENV,
*     GRANTTO, or PKGOWNER
*
*
***********************************************************************
** Trace formatting routines
***********************************************************************
  SYSPROC.DSNWSPM
    WLMENV(DSNWLM_NUMTCB1)
    GRANTTO(PUBLIC)

  SYSPROC.DSNWZP
    WLMENV(DSNWLM_NUMTCB1)
    GRANTTO(PUBLIC)

***********************************************************************
** Utility invocation routines
***********************************************************************
  SYSPROC.DSNUTILS
    WLMENV(DSNWLM_UTILS)
    GRANTTO(PUBLIC)

  SYSPROC.DSNUTILU
    WLMENV(DSNWLM_UTILS)
    GRANTTO(PUBLIC)

  SYSPROC.DSNUTILV
    WLMENV(DSNWLM_UTILS)
    GRANTTO(PUBLIC)

***********************************************************************
** SYSIBM.USERNAMES encryption routine
***********************************************************************
  SYSPROC.DSNLEUSR
    WLMENV(DSNWLM_NUMTCB1)
    GRANTTO(PUBLIC)

***********************************************************************
** SQL procedure processing routines
***********************************************************************
  SYSIBMADM.CREATE_WRAPPED
    GRANTTO(PUBLIC)

  SYSPROC.DSNTBIND
    WLMENV(DSNWLM_REXX)
    GRANTTO(PUBLIC)

  SYSPROC.DSNTPSMP
    WLMENV(DSNWLM_REXX)
    GRANTTO(PUBLIC)

  SYSPROC.WLM_REFRESH
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

***********************************************************************
** Java procedure processing routines
***********************************************************************
  SQLJ.ALTER_JAVA_PATH
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SQLJ.DB2_INSTALL_JAR
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SQLJ.DB2_REMOVE_JAR
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SQLJ.DB2_REPLACE_JAR
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SQLJ.DB2_UPDATEJARINFO
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SQLJ.INSTALL_JAR
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SQLJ.REMOVE_JAR
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SQLJ.REPLACE_JAR
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

***********************************************************************
** Unified debugger for SQL and Java routines
***********************************************************************
  DB2DEBUG.CREATE_SESSION
    WLMENV(DSNWLM_DEBUGGER)
    GRANTTO(PUBLIC)

  DB2DEBUG.DEBUGGERLEVEL
    WLMENV(DSNWLM_DEBUGGER)
    GRANTTO(PUBLIC)

  DB2DEBUG.DESTROY_SESSION
    WLMENV(DSNWLM_DEBUGGER)
    GRANTTO(PUBLIC)

  DB2DEBUG.GET_REPORT
    WLMENV(DSNWLM_DEBUGGER)
    GRANTTO(PUBLIC)

  DB2DEBUG.LIST_SESSION
    WLMENV(DSNWLM_DEBUGGER)
    GRANTTO(PUBLIC)

  DB2DEBUG.PUT_COMMAND
    WLMENV(DSNWLM_DEBUGGER)
    GRANTTO(PUBLIC)

  DB2DEBUG.QUERY_SESSION
    WLMENV(DSNWLM_DEBUGGER)
    GRANTTO(PUBLIC)

  SYSPROC.DBG_ENDSESSIONMANAGER
    WLMENV(DSNWLM_DEBUGGER)
    GRANTTO(PUBLIC)

  SYSPROC.DBG_INITIALIZECLIENT
    WLMENV(DSNWLM_DEBUGGER)
    GRANTTO(PUBLIC)

  SYSPROC.DBG_LOOKUPSESSIONMANAGER
    WLMENV(DSNWLM_DEBUGGER)
    GRANTTO(PUBLIC)

  SYSPROC.DBG_PINGSESSIONMANAGER
    WLMENV(DSNWLM_DEBUGGER)
    GRANTTO(PUBLIC)

  SYSPROC.DBG_RECVCLIENTREPORTS
    WLMENV(DSNWLM_DEBUGGER)
    GRANTTO(PUBLIC)

  SYSPROC.DBG_RUNSESSIONMANAGER
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.DBG_SENDCLIENTCOMMANDS
    WLMENV(DSNWLM_DEBUGGER)
    GRANTTO(PUBLIC)

  SYSPROC.DBG_SENDCLIENTREQUESTS
    WLMENV(DSNWLM_DEBUGGER)
    GRANTTO(PUBLIC)

  SYSPROC.DBG_TERMINATECLIENT
    WLMENV(DSNWLM_DEBUGGER)
    GRANTTO(PUBLIC)

***********************************************************************
** XML schema processing routines
***********************************************************************
  SYSFUN.XSLTRANSFORM
    WLMENV(DSNWLM_JAVA)
    GRANTTO(PUBLIC)

  SYSPROC.XSR_ADDSCHEMADOC
    WLMENV(DSNWLM_XML)
    GRANTTO(PUBLIC)

  SYSPROC.XSR_COMPLETE
    WLMENV(DSNWLM_JAVA)
    GRANTTO(PUBLIC)

  SYSPROC.XSR_REGISTER
    WLMENV(DSNWLM_XML)
    GRANTTO(PUBLIC)

  SYSPROC.XSR_REMOVE
    WLMENV(DSNWLM_XML)
    GRANTTO(PUBLIC)

***********************************************************************
** IBM Text Search routines
***********************************************************************
  SYSPROC.SYSTS_ALTER
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.SYSTS_CREATE
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.SYSTS_DROP
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSFUN.SYSTS_ENCRYPT
    WLMENV(DSNWLM_JAVA)
    GRANTTO(PUBLIC)

  SYSPROC.SYSTS_RESTORE
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.SYSTS_START
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.SYSTS_STOP
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.SYSTS_TAKEOVER
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.SYSTS_UPDATE
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

***********************************************************************
** Database MetaData routines
***********************************************************************
  SYSIBM.SQLCAMESSAGE
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSIBM.SQLCOLPRIVILEGES
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSIBM.SQLCOLUMNS
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSIBM.SQLFOREIGNKEYS
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSIBM.SQLFUNCTIONCOLS
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSIBM.SQLFUNCTIONS
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSIBM.SQLGETTYPEINFO
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSIBM.SQLPRIMARYKEYS
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSIBM.SQLPROCEDURECOLS
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSIBM.SQLPROCEDURES
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSIBM.SQLPSEUDOCOLUMNS
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSIBM.SQLSPECIALCOLUMNS
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSIBM.SQLSTATISTICS
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSIBM.SQLTABLEPRIVILEGES
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSIBM.SQLTABLES
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSIBM.SQLUDTS
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

***********************************************************************
** Administrative Scheduler and Administrative Enablement routines
***********************************************************************
  SYSPROC.ADMIN_COMMAND_DB2
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_COMMAND_DSN
    WLMENV(DSNWLM_REXX)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_COMMAND_MVS
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_COMMAND_UNIX
    WLMENV(DSNWLM_PGM_CONTROL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_DS_BROWSE
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_DS_DELETE
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_DS_LIST
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_DS_RENAME
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_DS_SEARCH
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_DS_WRITE
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_EXPLAIN_MAINT
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_INFO_HOST
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_INFO_IFCID
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_INFO_SMS
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_INFO_SQL
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_INFO_SSID
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_INFO_SYSLOG
    WLMENV(DSNWLM_REXX)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_INFO_SYSPARM
    WLMENV(DSNWLM_NUMTCB1)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_JOB_CANCEL
    WLMENV(DSNWLM_PGM_CONTROL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_JOB_FETCH
    WLMENV(DSNWLM_PGM_CONTROL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_JOB_QUERY
    WLMENV(DSNWLM_PGM_CONTROL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_JOB_SUBMIT
    WLMENV(DSNWLM_PGM_CONTROL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_TASK_ADD
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_TASK_CANCEL
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  DSNADM.ADMIN_TASK_LIST
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  DSNADM.ADMIN_TASK_OUTPUT
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_TASK_REMOVE
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  DSNADM.ADMIN_TASK_STATUS
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  DSNADM.ADMIN_TASK_STATUSH
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_TASK_UPDATE
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_UPDATE_SYSPARM
    WLMENV(DSNWLM_REXX)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_UTL_EXECUTE
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_UTL_MODIFY
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_UTL_MONITOR
    WLMENV(DSNWLM_PGM_CONTROL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_UTL_SCHEDULE
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.ADMIN_UTL_SORT
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSIBMADM.BLOCKING_THREADS
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

 SYSPROC.DSN_WLM_APPLENV
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

 SYSPROC.DSNACCOX
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.GET_CONFIG
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.GET_MESSAGE
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.GET_SYSTEM_INFO
    WLMENV(DSNWLM_NUMTCB1)
    GRANTTO(PUBLIC)

  SYSPROC.SET_MAINT_MODE_RECORD_NO_TEMPORALHISTORY
    GRANTTO(§THISID§)

  SYSPROC.SET_PLAN_HINT
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.WLM_SET_CLIENT_INFO
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

***********************************************************************
** DB2 optimization routine
***********************************************************************
  SYSPROC.DSNAHVPM
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(§THISID§)
    PKGOWNER(§THISID§)

***********************************************************************
** CICS and IMS transaction invocation routines
***********************************************************************
  SYSPROC.DSNACICS
    WLMENV(DSNWLM_DSNACICS)
    GRANTTO(PUBLIC)

  SYSPROC.DSNAIMS
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSPROC.DSNAIMS2
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

***********************************************************************
** MQSeries routines
***********************************************************************
* Specific name 1 for UDF DB2MQ.MQREAD:
  DB2MQ.DSN2RD
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 2 for UDF DB2MQ.MQREAD:
  DB2MQ.DSN2RD0
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 3 for UDF DB2MQ.MQREAD:
  DB2MQ.DSN2RD1
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 4 for UDF DB2MQ.MQREAD:
  DB2MQ.DSN2RD2
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 1 for UDF DB2MQ.MQREADALL:
  DB2MQ.DSN2Z
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 2 for UDF DB2MQ.MQREADALL:
  DB2MQ.DSN2Z0
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 3 for UDF DB2MQ.MQREADALL:
  DB2MQ.DSN2Z0R
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 4 for UDF DB2MQ.MQREADALL:
  DB2MQ.DSN2Z1
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 5 for UDF DB2MQ.MQREADALL:
  DB2MQ.DSN2Z1R
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 6 for UDF DB2MQ.MQREADALL:
  DB2MQ.DSN2Z2
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 7 for UDF DB2MQ.MQREADALL:
  DB2MQ.DSN2Z2R
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 8 for UDF DB2MQ.MQREADALL:
  DB2MQ.DSN2Z3
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 1 for UDF DB2MQ.MQREADALLCLOB:
  DB2MQ.DSN2ZC
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 2 for UDF DB2MQ.MQREADALLCLOB:
  DB2MQ.DSN2ZC0
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 3 for UDF DB2MQ.MQREADALLCLOB:
  DB2MQ.DSN2ZC0R
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 4 for UDF DB2MQ.MQREADALLCLOB:
  DB2MQ.DSN2ZC1
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 5 for UDF DB2MQ.MQREADALLCLOB:
  DB2MQ.DSN2ZC1R
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 6 for UDF DB2MQ.MQREADALLCLOB:
  DB2MQ.DSN2ZC2
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 7 for UDF DB2MQ.MQREADALLCLOB:
  DB2MQ.DSN2ZC2R
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 8 for UDF DB2MQ.MQREADALLCLOB:
  DB2MQ.DSN2ZC3
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 1 for UDF DB2MQ.MQREADCLOB:
  DB2MQ.DSN2RDC
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 2 for UDF DB2MQ.MQREADCLOB:
  DB2MQ.DSN2RDC0
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 3 for UDF DB2MQ.MQREADCLOB:
  DB2MQ.DSN2RDC1
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 4 for UDF DB2MQ.MQREADCLOB:
  DB2MQ.DSN2RDC2
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 1 for UDF DB2MQ.MQRECEIVE:
  DB2MQ.DSN2RV
      WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 2 for UDF DB2MQ.MQRECEIVE:
  DB2MQ.DSN2RV0
      WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 3 for UDF DB2MQ.MQRECEIVE:
  DB2MQ.DSN2RV1
      WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 4 for UDF DB2MQ.MQRECEIVE:
  DB2MQ.DSN2RV2
      WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 1 for UDF DB2MQ.MQRECEIVEALL:
  DB2MQ.DSN2X
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 2 for UDF DB2MQ.MQRECEIVEALL:
  DB2MQ.DSN2X0
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 3 for UDF DB2MQ.MQRECEIVEALL:
  DB2MQ.DSN2X0R
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 4 for UDF DB2MQ.MQRECEIVEALL:
  DB2MQ.DSN2X1
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 5 for UDF DB2MQ.MQRECEIVEALL:
  DB2MQ.DSN2X1R
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 6 for UDF DB2MQ.MQRECEIVEALL:
  DB2MQ.DSN2X2
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 7 for UDF DB2MQ.MQRECEIVEALL:
  DB2MQ.DSN2X2R
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 8 for UDF DB2MQ.MQRECEIVEALL:
  DB2MQ.DSN2X3
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 1 for UDF DB2MQ.MQRECEIVEALLCLOB:
  DB2MQ.DSN2XC
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 2 for UDF DB2MQ.MQRECEIVEALLCLOB:
  DB2MQ.DSN2XC0
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 3 for UDF DB2MQ.MQRECEIVEALLCLOB:
  DB2MQ.DSN2XC0R
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 4 for UDF DB2MQ.MQRECEIVEALLCLOB:
  DB2MQ.DSN2XC1
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 5 for UDF DB2MQ.MQRECEIVEALLCLOB:
  DB2MQ.DSN2XC1R
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 6 for UDF DB2MQ.MQRECEIVEALLCLOB:
  DB2MQ.DSN2XC2
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 7 for UDF DB2MQ.MQRECEIVEALLCLOB:
  DB2MQ.DSN2XC2R
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 8 for UDF DB2MQ.MQRECEIVEALLCLOB:
  DB2MQ.DSN2XC3
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 1 for UDF DB2MQ.MQRECEIVECLOB:
  DB2MQ.DSN2RVC
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 2 for UDF DB2MQ.MQRECEIVECLOB:
  DB2MQ.DSN2RVC0
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 3 for UDF DB2MQ.MQRECEIVECLOB:
  DB2MQ.DSN2RVC1
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 4 for UDF DB2MQ.MQRECEIVECLOB:
  DB2MQ.DSN2RVC2
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 1 for UDF DB2MQ.MQSEND:
  DB2MQ.DSN2SD
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 2 for UDF DB2MQ.MQSEND:
  DB2MQ.DSN2SD1
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 3 for UDF DB2MQ.MQSEND:
  DB2MQ.DSN2SD2
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 4 for UDF DB2MQ.MQSEND:
  DB2MQ.DSN2SD3
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 5 for UDF DB2MQ.MQSEND:
  DB2MQ.DSN2SDC
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 6 for UDF DB2MQ.MQSEND:
  DB2MQ.DSN2SDC1
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 7 for UDF DB2MQ.MQSEND:
  DB2MQ.DSN2SDC2
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

* Specific name 8 for UDF DB2MQ.MQSEND:
  DB2MQ.DSN2SDC3
    WLMENV(DSNWLM_MQSERIES)
    GRANTTO(PUBLIC)

***********************************************************************
** Web services/SOAP routines
***********************************************************************
* Specific name 1 for UDF DB2XML.SOAPHTTPC:
  DB2XML.SOAPHTTPCICO
    WLMENV(DSNWLM_WEBSERVICES)
    GRANTTO(PUBLIC)

* Specific name 2 for UDF DB2XML.SOAPHTTPC:
  DB2XML.SOAPHTTPVICO
    WLMENV(DSNWLM_WEBSERVICES)
    GRANTTO(PUBLIC)

* Specific name 1 for UDF DB2XML.SOAPHTTPNC:
  DB2XML.SOAPHTTPNCICO
    WLMENV(DSNWLM_WEBSERVICES)
    GRANTTO(PUBLIC)

* Specific name 2 for UDF DB2XML.SOAPHTTPNC:
  DB2XML.SOAPHTTPNVICO
    WLMENV(DSNWLM_WEBSERVICES)
    GRANTTO(PUBLIC)

* Specific name 1 for UDF DB2XML.SOAPHTTPNV:
  DB2XML.SOAPHTTPNCIVO
    WLMENV(DSNWLM_WEBSERVICES)
    GRANTTO(PUBLIC)

* Specific name 2 for UDF DB2XML.SOAPHTTPNV:
  DB2XML.SOAPHTTPNVIVO
    WLMENV(DSNWLM_WEBSERVICES)
    GRANTTO(PUBLIC)

* Specific name 1 for UDF DB2XML.SOAPHTTPV:
  DB2XML.SOAPHTTPCIVO
    WLMENV(DSNWLM_WEBSERVICES)
    GRANTTO(PUBLIC)

* Specific name 2 for UDF DB2XML.SOAPHTTPV:
  DB2XML.SOAPHTTPVIVO
    WLMENV(DSNWLM_WEBSERVICES)
    GRANTTO(PUBLIC)

***********************************************************************
** JSON routines
***********************************************************************
  SYSTOOLS.BSON2JSON
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSTOOLS.JSON_BINARY
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSTOOLS.JSON_BINARY2
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSTOOLS.JSON_GET_POS_ARR_INDEX
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSTOOLS.JSON_LEN
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSTOOLS.JSON_TABLE
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSTOOLS.JSON_TABLE_BINARY
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSTOOLS.JSON_TYPE
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSTOOLS.JSON_UPDATE
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSTOOLS.JSON2BSON
    WLMENV(DSNWLM_GENERAL)
    GRANTTO(PUBLIC)

  SYSTOOLS.REGSP
    GRANTTO(PUBLIC)

* Specific name 1 for UDF SYSTOOLS.REG_MATCHES:
  SYSTOOLS.REG_MATCHES
    GRANTTO(PUBLIC)

* Specific name 2 for UDF SYSTOOLS.REG_MATCHES:
  SYSTOOLS.REG_MATCHES_NOFLAGS
    GRANTTO(PUBLIC)

./ ADD NAME=DSNTIJRV
//********************************************************************* 00010000
//* JOB NAME = DSNTIJRV                                                 00011000
//*                                                                     00012000
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM                          00013000
//*                                                                     00014000
//*    Licensed Materials - Property of IBM                             00015000
//*    5650-DB2                                                         00016000
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.         00017000
//*                                                                     00018000
//*    STATUS = Version 12                                              00019000
//*                                                                     00020000
//* FUNCTION = Verify the DB2-supplied routines                         00021000
//*                                                                     00022000
//* PSEUDOCODE =                                                        00023000
//*   DSNTRVFY STEP      Verify the DB2-supplied routines               00024000
//*                                                                     00025000
//* NOTES =                                                             00026000
//*                                                                     00027000
//* If the RACF facility class is active and a profile has been         00028000
//* defined for MVSADMIN.WLM.POLICY, then the person submitting         00029000
//* this job require READ access.                                       00030000
//*                                                                     00031000
//* PERMIT MVSADMIN.WLM.POLICY CLASS(FACILITY) ID(user) ACCESS(READ)    00032000
//*                                                                     00033000
//* If the RACF OPERCMDS class is active and a profile has been         00034000
//* defined for MVS.MCSOPER.*, then the person submitting this job      00035000
//* require READ access. Alternatively, you can add a discrete          00036000
//* profile for the console used in this job (console name DSNTRVFY).   00037000
//* To add a discrete profile, the RACF security administrator must:    00038000
//*                                                                     00039000
//* 1. Issue RDEFINE command to establish a discrete profile for        00040000
//*    MVS.MCSOPER.DSNTRVFY                                             00041000
//*                                                                     00042000
//* RDEFINE OPERCMDS MVS.MCSOPER.DSNTRVFY UACC(NONE)                    00043000
//*                                                                     00044000
//* 2. Give the user that submits this job READ access.                 00045000
//*                                                                     00046000
//* PERMIT MVS.MCSOPER.DSNTRVFY CLASS(OPERCMDS) ID(user) ACCESS(READ)   00047000
//*                                                                     00048000
//* 3. Issue the SETROPTS RACLIST command to refresh the                00049000
//*    OPERCMDS class.                                                  00050000
//*                                                                     00051000
//* SETROPTS RACLIST(OPERCMDS) REFRESH                                  00052000
//*                                                                     00053000
//*                                                             PM80868 00054000
//* If the DSNTRVFY console is already in use by another instance of    00055000
//* this program, it will retry every 30 seconds for up to 30 minutes   00056000
//* for the console to become available.                                00057000
//*                                                                     00058000
//* RECOMMENDATION: Run this job with a user ID that has         s24922 00059000
//* primary or secondary authorization as DB2 Installation       s24922 00060000
//* System Administrator or DB2 Installation System Operator.    s24922 00061000
//* See the explanation of the AUTHID and PKOWNER parameters     182781 00062000
//* for additional requirements when running with Installation   s24922 00063000
//* System Operator authority.                                   s24922 00064000
//*                                                                     00065000
//********************************************************************  00066000
//*                                                                     00067000
//* The DSNTRVFY batch program accepts the following parameters:        00068000
//*                                                                     00069000
//*   DB2SSN(ssid)                                                      00070000
//*                                                                     00071000
//*   The DB2SSN parameter specifies the DB2 subsystem ID where         00072000
//*   the DB2-supplied routines will be verified.                       00073000
//*                                                                     00074000
//*   AUTHID(authid)                                                    00075000
//*                                                                     00076000
//*   The AUTHID parameter is optional. If specified, this parameter is 00077000
//*   used as the CURRENT SQLID when issuing SQL statements,     s24922 00078000
//*   and as the owner of the package and plan for DSNTRVFY      s24922 00079000
//*   unless the PKOWNER parameter is also specified.            s24922 00080000
//*   -> Specify SYSINSTL here when using DB2 Installation       s24922 00081000
//*      System Operator authority to execute this job.          s24922 00082000
//*                                                                     00083000
//*   PKOWNER(pkowner)                                           s24922 00084000
//*                                                                     00085000
//*   The PKOWNER parameter is optional. If specified, this             00086000
//*   parameter is used as the owner of the package and plan            00087000
//*   for DSNTRVFY.                                                     00088000
//*   -> Specify an authorization ID that has been granted       s24922 00089000
//*      system DBADM and DATAACCESS authorities when using      s24922 00090000
//*      DB2 System Operator authority to execute this job.      s24922 00091000
//*                                                                     00092000
//*   ROUTINE(routine)                                                  00093000
//*                                                                     00094000
//*   The ROUTINE parameter indicates the routine to be verified.       00095000
//*   This parameter supports the following values:                     00096000
//*                                                                     00097000
//*      ALL = The batch program will verify all DB2-supplied           00098000
//*       routines.                                                     00099000
//*                                                                     00100000
//*      DD:SYSIN = The batch program will verify a list of routines    00101000
//*       specified under the SYSIN DD statement.                       00102000
//*                                                                     00103000
//*      schema-name.specific-name = The batch program will verify      00104000
//*       a specific DB2-supplied routine.                              00105000
//*                                                                     00106000
//* If the routine specified is DD:SYSIN, additional input is required  00107000
//* from SYSIN to specify a list of DB2-supplied routines to be         00108000
//* verified. The entries should be in the form of                      00109000
//*                                                                     00110000
//*   schema-name.specific-name                                         00111000
//*                                                                     00112000
//* and each line should only have one routine. For example:            00113000
//*                                                                     00114000
//*   //SYSIN    DD   *                                                 00115000
//*     schema-nameA.specific-nameA                                     00116000
//*     schema-nameB.specific-nameB                                     00117000
//*      :                                                              00118000
//*     schema-nameX.specific-nameX                                     00119000
//*                                                                     00120000
//* CHANGE LOG =                                                        00121000
//*   06/07/2013 Note wait on busy console                      PM80868 00122000
//*   10/02/2015 Installation w/o SYSADM            s24922_inst1 s24922 00123000
//*   02/15/2016 Long data set names                            PI42601 00124000
//*                                                                     00125000
//********************************************************************* 00126000
//*                                                                     00127000
//JOBLIB   DD DISP=SHR,DSN=DSN§§0.SDSNEXIT                              00128000
//         DD DISP=SHR,DSN=DSN§§0.SDSNLOAD                              00129000
//         DD DISP=SHR,DSN=CEE.V§R§M§.SCEERUN                           00130000
//*                                                                     00131000
//*   DSNTRVFY: Verify the DB2-supplied routines                        00132000
//*                                                                     00133000
//DSNTRVFY EXEC PGM=DSNTRVFY,COND=(4,LT),                               00134000
//             PARM=('DB2SSN(§DSN§) AUTHID(§AUTHID§) ',                 00135000
//             'PKOWNER(§PKOWNER§) ROUTINE(ALL)')                       00136000
//DBRMLIB  DD DISP=SHR,DSN=DSN§§0.SDSNDBRM                              00137000
//SYSUT1   DD UNIT=SYSDA,SPACE=(32000,(30,30)),                         00138000
//            DCB=(RECFM=VB,LRECL=133)                                  00139000
//SYSTSPRT DD SYSOUT=*                                                  00140000
//SYSPRINT DD SYSOUT=*                                                  00141000
//SYSIN    DD *                                                         00142000

./ ADD NAME=DSNTIJRW
//********************************************************************* 00010000
//* JOB NAME = DSNTIJRW                                                 00011000
//*                                                                     00012000
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM                          00013000
//*                                                                     00014000
//*    Licensed Materials - Property of IBM                             00015000
//*    5650-DB2                                                         00016000
//*    (C) COPYRIGHT 2010, 2016 IBM Corp.  All Rights Reserved.         00017000
//*                                                                     00018000
//*    STATUS = Version 12                                              00019000
//*                                                                     00020000
//* FUNCTION = Define the core DB2 WLM environments, install the        00021000
//*            definitions and activate using the current active        00022000
//*            service policy                                           00023000
//*                                                                     00024000
//* PSEUDOCODE =                                                        00025000
//*   DSNWLMG  STEP      Add DSNWLM_GENERAL WLM environment             00026000
//*   DSNWLMP  STEP      Add DSNWLM_PGM_CONTROL WLM environment         00027000
//*   DSNWLMU  STEP      Add DSNWLM_UTILS WLM environment               00028000
//*   DSNWLM1  STEP      Add DSNWLM_NUMTCB1 WLM environment             00029000
//*   DSNWLMX  STEP      Add DSNWLM_XML WLM environment                 00030000
//*   DSNWLMJ  STEP      Add DSNWLM_JAVA WLM environment                00031000
//*   DSNWLMR  STEP      Add DSNWLM_REXX WLM environment                00032000
//*   DSNWLMD  STEP      Add DSNWLM_DEBUGGER WLM environment            00033000
//*   DSNWLMC  STEP      Add DSNWLM_DSNACICS WLM environment            00034000
//*   DSNWLMM  STEP      Add DSNWLM_MQSERIES WLM environment            00035000
//*   DSNWLMW  STEP      Add DSNWLM_WEBSERVICES WLM environment         00036000
//*   DSNWLMA  STEP      Activate service policy                        00037000
//*                                                                     00038000
//* NOTES =                                                             00039000
//*                                                                     00040000
//* If the RACF facility class is active and a profile has been         00041000
//* defined for the MVSADMIN.WLM.POLICY facility class, then the        00042000
//* person submitting this job require UPDATE access. Below are         00043000
//* the access level required when using the DSNTWLMB batch             00044000
//* program:                                                            00045000
//*                                                                     00046000
//* ACCESS(READ) for action WLMINFO:                                    00047000
//*                                                                     00048000
//* PERMIT MVSADMIN.WLM.POLICY CLASS(FACILITY) ID(user) ACCESS(READ)    00049000
//*                                                                     00050000
//* ACCESS(UPDATE) for action ADD, ADD_ACTIVATE, ACTIVATE:              00051000
//*                                                                     00052000
//* PERMIT MVSADMIN.WLM.POLICY CLASS(FACILITY) ID(user) ACCESS(UPDATE)  00053000
//*                                                                     00054000
//********************************************************************  00055000
//*                                                                     00056000
//* The DSNTWLMB batch program accepts the following parameters:        00057000
//*                                                                     00058000
//*   ACTION(action-type)                                               00059000
//*                                                                     00060000
//*   The ACTION parameter identifies the type of action to be          00061000
//*   performed. This is a required parameter and supports the          00062000
//*   following values:                                                 00063000
//*                                                                     00064000
//*      ADD: The batch program will install a new WLM application      00065000
//*       environment to an existing WLM service definition without     00066000
//*       activating a service policy. The new WLM application          00067000
//*       environment will be available on the next activation of a     00068000
//*       WLM policy.                                                   00069000
//*                                                                     00070000
//*      ADD_ACTIVATE: The batch program will install a new WLM         00071000
//*       application environment to an existing WLM service            00072000
//*       definition and automatically activate a WLM service           00073000
//*       policy to enable the new WLM application environment.         00074000
//*                                                                     00075000
//*      REMOVE: The batch program will remove a WLM application        00076000
//*       environment from an existing WLM service definition without   00077000
//*       activating a service policy. The new WLM application          00078000
//*       environment will not be available on the next activation      00079000
//*       of a WLM policy.                                              00080000
//*                                                                     00081000
//*      REMOVE_IF_EXISTS: This action is similar to the action REMOVE. 00082000
//*       The only difference is REMOVE_IF_EXISTS will return a return  00083000
//*       code of 4 (instead of 8) when the WLM application             00084000
//*       environment to be removed does not exist.                     00085000
//*                                                                     00086000
//*      REMOVE_ACTIVATE: The batch program will remove a WLM           00087000
//*       application environment from an existing WLM service          00088000
//*       definition and automatically activate a WLM service           00089000
//*       policy.                                                       00090000
//*                                                                     00091000
//*      REMIFEXISTS_ACTIVATE: This action is similar to the action     00092000
//*       REMOVE_ACTIVATE. The only difference is REMIFEXISTS_ACTIVATE  00093000
//*       will return a return code of 4 (instead of 8) when the        00094000
//*       WLM application environment to be removed does not exist.     00095000
//*                                                                     00096000
//*      ACTIVATE: The batch program will activate a WLM service        00097000
//*       policy.                                                       00098000
//*                                                                     00099000
//*      WLMINFO: The batch program will query the existing WLM         00100000
//*       service definition and return basic information.              00101000
//*                                                                     00102000
//*   POLICY(policy-id)                                                 00103000
//*                                                                     00104000
//*   The POLICY parameter identifies the WLM service policy to be      00105000
//*   activated. It can be 1-8 characters long or the word ACTIVE.      00106000
//*   If ACTIVE was specified as the policy ID, then the current        00107000
//*   active service policy is used. This is required if the            00108000
//*   action specified is ADD_ACTIVATE or REMOVE_ACTIVATE or            00109000
//*   REMIFEXISTS_ACTIVATE or ACTIVATE.                                 00110000
//*                                                                     00111000
//* If the action specified is ADD or ADD_ACTIVATE, additional          00112000
//* input is required from SYSIN to provide details on the WLM          00113000
//* application environment to be installed.                            00114000
//*                                                                     00115000
//*   SYSIN PARAMETERS                                                  00116000
//*                                                                     00117000
//*   The additional information required to add a new WLM application  00118000
//*   environment can be entered from the SYSIN DD statement.           00119000
//*   The parameters can be entered on one line (up to 72 characters    00120000
//*   per line) or multiple lines and should be separated by one or     00121000
//*   more spaces. The following parameters are supported under         00122000
//*   SYSIN DD:                                                         00123000
//*                                                                     00124000
//*      WLMNAME(name): The defined name for an application             00125000
//*       environment. It can be 1-32 characters long. It cannot begin  00126000
//*       with the letters SYS. This is a required parameter.           00127000
//*                                                                     00128000
//*      DESCRIPTION(description): A 32-character area describing the   00129000
//*       application environment. This parameter can be set to an      00130000
//*       empty value. For example:                                     00131000
//*                                                                     00132000
//*         DESCRIPTION()                                               00133000
//*                                                                     00134000
//*      PROCNAME(procedure-name): Defines the JCL procedure that WLM   00135000
//*       uses to start server address spaces for the application       00136000
//*       environment. This is a required parameter.                    00137000
//*                                                                     00138000
//*      STARTPARM(start-up-parameters): It contains the parameters     00139000
//*       that WLM will use to start the JCL procedure. The parameters  00140000
//*       can be up to 115 characters. If the parameters include the    00141000
//*       subsystem name, the symbol &IWMSSNM can be used to cause      00142000
//*       WLM to substitute the subsystem name instead of typing the    00143000
//*       subsystem name directly. This is useful since multiple        00144000
//*       instances of the subsystem with different names can use       00145000
//*       the application environment. For example:                     00146000
//*                                                                     00147000
//*         STARTPARM(DB2SSN=&IWMSSNM,APPLENV=WLMENV1,NUMTCB=1)         00148000
//*                                                                     00149000
//*       This parameter can be set to an empty value.                  00150000
//*                                                                     00151000
//*      WLMOPT(WLM_MANAGED!SINGLE_SERVER): It tells WLM to limit the   00152000
//*       number of server address spaces. For example, if a server     00153000
//*       address space requires exclusive use of a resource, only a    00154000
//*       single address space can exist. For DB2 routines, one can     00155000
//*       set a limit of 1 address space per system if required by      00156000
//*       the routine. Note that if there are multiple DB2 subsystems   00157000
//*       on a given system, WLM will create 1 server for each DB2      00158000
//*       subsystem that calls the routines. A limit of 1 address       00159000
//*       space per sysplex does not apply to DB2 routines. This        00160000
//*       parameter can be set to an empty value and will default to    00161000
//*       WLM_MANAGED.                                                  00162000
//*                                                                     00163000
//* If the action specified is REMOVE, REMOVE_IF_EXISTS,                00164000
//* REMOVE_ACTIVATE, or REMIFEXISTS_ACTIVATE, additional input is       00165000
//* required from SYSIN to provide details on the WLM application       00166000
//* environment to be removed.                                          00167000
//*                                                                     00168000
//*   SYSIN PARAMETERS                                                  00169000
//*                                                                     00170000
//*   The additional information required to remove a WLM application   00171000
//*   environment can be entered from the SYSIN DD statement.           00172000
//*   The following parameter is supported under                        00173000
//*   SYSIN DD:                                                         00174000
//*                                                                     00175000
//*      WLMNAME(name): The defined name for an application             00176000
//*       environment. It can be 1-32 characters long. This is a        00177000
//*       required parameter.                                           00178000
//*                                                                     00179000
//* CHANGE LOG =                                                        00180000
//*   07/13/2015 Fix typo in prolog                             d178955 00181000
//*   07/22/2015 Add REMOVE, REMOVE_IF_EXISTS,                  pi42007 00182000
//*                  REMOVE_ACTIVATE, and REMIFEXISTS_ACTIVATE          00183000
//*    02/15/2016 Long data set names                           PI42601 00184000
//*                                                                     00185000
//********************************************************************* 00186000
//*                                                                     00187000
//JOBLIB   DD DISP=SHR,DSN=DSN§§0.SDSNEXIT                              00188000
//         DD DISP=SHR,DSN=DSN§§0.SDSNLOAD                              00189000
//         DD DISP=SHR,DSN=CEE.V§R§M§.SCEERUN                           00190000
//********************************************************************* 00191000
//*   DSNWLMG: Add DSNWLM_GENERAL WLM environment                       00192000
//********************************************************************* 00193000
//DSNWLMG  EXEC PGM=DSNTWLMB,PARM='ACTION(ADD)'                         00194000
//SYSPRINT DD   SYSOUT=*                                                00195000
//SYSIN    DD   *                                                       00196000
  WLMNAME(DSNWLM_GENERAL)                                               00197000
  DESCRIPTION(DB2-SUPPLIED WLM ENVIRONMENT)                             00198000
  PROCNAME(DSNWLMG)                                                     00199000
  STARTPARM(DB2SSN=&IWMSSNM,APPLENV='DSNWLM_GENERAL')                   00200000
  WLMOPT(WLM_MANAGED)                                                   00201000
/*                                                                      00202000
//********************************************************************* 00203000
//*   DSNWLMP: Add DSNWLM_PGM_CONTROL WLM environment                   00204000
//********************************************************************* 00205000
//DSNWLMP  EXEC PGM=DSNTWLMB,PARM='ACTION(ADD)',COND=(4,LT)             00206000
//SYSPRINT DD   SYSOUT=*                                                00207000
//SYSIN    DD   *                                                       00208000
  WLMNAME(DSNWLM_PGM_CONTROL)                                           00209000
  DESCRIPTION(DB2-SUPPLIED WLM ENVIRONMENT)                             00210000
  PROCNAME(DSNWLMP)                                                     00211000
  STARTPARM(DB2SSN=&IWMSSNM,APPLENV='DSNWLM_PGM_CONTROL')               00212000
  WLMOPT(WLM_MANAGED)                                                   00213000
/*                                                                      00214000
//********************************************************************* 00215000
//*   DSNWLMU: Add DSNWLM_UTILS WLM environment                         00216000
//********************************************************************* 00217000
//DSNWLMU  EXEC PGM=DSNTWLMB,PARM='ACTION(ADD)',COND=(4,LT)             00218000
//SYSPRINT DD   SYSOUT=*                                                00219000
//SYSIN    DD   *                                                       00220000
  WLMNAME(DSNWLM_UTILS)                                                 00221000
  DESCRIPTION(DB2-SUPPLIED WLM ENVIRONMENT)                             00222000
  PROCNAME(DSNWLMU)                                                     00223000
  STARTPARM(DB2SSN=&IWMSSNM,APPLENV='DSNWLM_UTILS')                     00224000
  WLMOPT(WLM_MANAGED)                                                   00225000
/*                                                                      00226000
//********************************************************************* 00227000
//*   DSNWLM1: Add DSNWLM_NUMTCB1 WLM environment                       00228000
//********************************************************************* 00229000
//DSNWLM1  EXEC PGM=DSNTWLMB,PARM='ACTION(ADD)',COND=(4,LT)             00230000
//SYSPRINT DD   SYSOUT=*                                                00231000
//SYSIN    DD   *                                                       00232000
  WLMNAME(DSNWLM_NUMTCB1)                                               00233000
  DESCRIPTION(DB2-SUPPLIED WLM ENVIRONMENT)                             00234000
  PROCNAME(DSNWLM1)                                                     00235000
  STARTPARM(DB2SSN=&IWMSSNM,APPLENV='DSNWLM_NUMTCB1')                   00236000
  WLMOPT(WLM_MANAGED)                                                   00237000
/*                                                                      00238000
//********************************************************************* 00239000
//*   DSNWLMX: Add DSNWLM_XML WLM environment                           00240000
//********************************************************************* 00241000
//DSNWLMX  EXEC PGM=DSNTWLMB,PARM='ACTION(ADD)',COND=(4,LT)             00242000
//SYSPRINT DD   SYSOUT=*                                                00243000
//SYSIN    DD   *                                                       00244000
  WLMNAME(DSNWLM_XML)                                                   00245000
  DESCRIPTION(DB2-SUPPLIED WLM ENVIRONMENT)                             00246000
  PROCNAME(DSNWLMX)                                                     00247000
  STARTPARM(DB2SSN=&IWMSSNM,APPLENV='DSNWLM_XML')                       00248000
  WLMOPT(WLM_MANAGED)                                                   00249000
/*                                                                      00250000
//********************************************************************* 00251000
//*   DSNWLMJ: Add DSNWLM_JAVA WLM environment                          00252000
//********************************************************************* 00253000
//DSNWLMJ  EXEC PGM=DSNTWLMB,PARM='ACTION(ADD)',COND=(4,LT)             00254000
//SYSPRINT DD   SYSOUT=*                                                00255000
//SYSIN    DD   *                                                       00256000
  WLMNAME(DSNWLM_JAVA)                                                  00257000
  DESCRIPTION(DB2-SUPPLIED WLM ENVIRONMENT)                             00258000
  PROCNAME(DSNWLMJ)                                                     00259000
  STARTPARM(DB2SSN=&IWMSSNM,APPLENV='DSNWLM_JAVA')                      00260000
  WLMOPT(WLM_MANAGED)                                                   00261000
/*                                                                      00262000
//********************************************************************* 00263000
//*   DSNWLMR: Add DSNWLM_REXX WLM environment                          00264000
//********************************************************************* 00265000
//DSNWLMR  EXEC PGM=DSNTWLMB,PARM='ACTION(ADD)',COND=(4,LT)             00266000
//SYSPRINT DD   SYSOUT=*                                                00267000
//SYSIN    DD   *                                                       00268000
  WLMNAME(DSNWLM_REXX)                                                  00269000
  DESCRIPTION(DB2-SUPPLIED WLM ENVIRONMENT)                             00270000
  PROCNAME(DSNWLMR)                                                     00271000
  STARTPARM(DB2SSN=&IWMSSNM,APPLENV='DSNWLM_REXX')                      00272000
  WLMOPT(WLM_MANAGED)                                                   00273000
/*                                                                      00274000
//********************************************************************* 00275000
//*   DSNWLMD: Add DSNWLM_DEBUGGER WLM environment                      00276000
//********************************************************************* 00277000
//DSNWLMD  EXEC PGM=DSNTWLMB,PARM='ACTION(ADD)',COND=(4,LT)             00278000
//SYSPRINT DD   SYSOUT=*                                                00279000
//SYSIN    DD   *                                                       00280000
  WLMNAME(DSNWLM_DEBUGGER)                                              00281000
  DESCRIPTION(DB2-SUPPLIED WLM ENVIRONMENT)                             00282000
  PROCNAME(DSNWLMD)                                                     00283000
  STARTPARM(DB2SSN=&IWMSSNM,APPLENV='DSNWLM_DEBUGGER')                  00284000
  WLMOPT(WLM_MANAGED)                                                   00285000
/*                                                                      00286000
//********************************************************************* 00287000
//*   DSNWLMC: Add DSNWLM_DSNACICS WLM environment                      00288000
//********************************************************************* 00289000
//DSNWLMC  EXEC PGM=DSNTWLMB,PARM='ACTION(ADD)',COND=(4,LT)             00290000
//SYSPRINT DD   SYSOUT=*                                                00291000
//SYSIN    DD   *                                                       00292000
  WLMNAME(DSNWLM_DSNACICS)                                              00293000
  DESCRIPTION(DB2-SUPPLIED WLM ENVIRONMENT)                             00294000
  PROCNAME(DSNWLMC)                                                     00295000
  STARTPARM(DB2SSN=&IWMSSNM,APPLENV='DSNWLM_DSNACICS')                  00296000
  WLMOPT(WLM_MANAGED)                                                   00297000
/*                                                                      00298000
//********************************************************************* 00299000
//*   DSNWLMM: Add DSNWLM_MQSERIES WLM environment                      00300000
//********************************************************************* 00301000
//DSNWLMM  EXEC PGM=DSNTWLMB,PARM='ACTION(ADD)',COND=(4,LT)             00302000
//SYSPRINT DD   SYSOUT=*                                                00303000
//SYSIN    DD   *                                                       00304000
  WLMNAME(DSNWLM_MQSERIES)                                              00305000
  DESCRIPTION(DB2-SUPPLIED WLM ENVIRONMENT)                             00306000
  PROCNAME(DSNWLMM)                                                     00307000
  STARTPARM(DB2SSN=&IWMSSNM,APPLENV='DSNWLM_MQSERIES')                  00308000
  WLMOPT(WLM_MANAGED)                                                   00309000
/*                                                                      00310000
//********************************************************************* 00311000
//*   DSNWLMW: Add DSNWLM_WEBSERVICES WLM environment                   00312000
//********************************************************************* 00313000
//DSNWLMW  EXEC PGM=DSNTWLMB,PARM='ACTION(ADD)',COND=(4,LT)             00314000
//SYSPRINT DD   SYSOUT=*                                                00315000
//SYSIN    DD   *                                                       00316000
  WLMNAME(DSNWLM_WEBSERVICES)                                           00317000
  DESCRIPTION(DB2-SUPPLIED WLM ENVIRONMENT)                             00318000
  PROCNAME(DSNWLMW)                                                     00319000
  STARTPARM(DB2SSN=&IWMSSNM,APPLENV='DSNWLM_WEBSERVICES')               00320000
  WLMOPT(WLM_MANAGED)                                                   00321000
/*                                                                      00322000
//********************************************************************* 00323000
//*   DSNWLMA: Activate service policy                                  00324000
//********************************************************************* 00325000
//DSNWLMA  EXEC PGM=DSNTWLMB,COND=(4,LT),                               00326000
// PARM='ACTION(ACTIVATE) POLICY(ACTIVE)'                               00327000
//SYSPRINT DD   SYSOUT=*                                                00328000
//SYSIN    DD   *                                                       00329000
/*                                                                      00330000

./ ADD NAME=DSNTIJR2
//*********************************************************************
//* JOB NAME = DSNTIJR2
//*
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM
//*
//*    Licensed Materials - Property of IBM
//*    5650-DB2
//*    (C) COPYRIGHT 2016 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 12
//*
//* FUNCTION = ALTER RESTful SERVICES DATABASE OBJECTS TO ENABLE
//*            RESTful SERVICE VERSIONING SUPPORT.  THIS INCLUDES
//*            ADDING NEW VERSIONID AND ISDEFAULT COLUMNS TO THE
//*            RESTful SERVICES TABLE, AND ADDING NEW VERSIONID
//*            COLUMN TO THE RESTful SERVICES INDEX.
//*
//* PSEUDOCODE =
//*   DSNTIAC  STEP     Alter the RESTful services table to add
//*                     columns VERSIONID and ISDEFAULT. Alter the
//*                     RESTful services table index to add column
//*                     VERSIONID.
//*   DSNTICU  STEP     Alter the RESTful services table index to
//*                     add index include columns CONTOKEN, ENABLED,
//*                     and ISDEFAULT.
//*                     NOTE THAT THIS STEP IS OPTIONAL AND WILL
//*                     RESULT IN AN OUTAGE REQUIRING A REBUILD INDEX.
//*
//* DEPENDENCIES =         ** IMPORTANT **
//*                RUN THIS JOB *ONLY AFTER* APAR PI98649,
//*                WHICH PROVIDES REST SERVICES VERSIONING SUPPORT,
//*                HAS BEEN APPLIED TO THE TARGET DB2 SUBSYSTEM(S).
//*
//*                FOR DB2 DATA SHARING CONFIGURATIONS,
//*                RUN THIS JOB *ONLY AFTER* APAR PI98649,
//*                WHICH PROVIDES REST SERVICES VERSIONING SUPPORT,
//*                HAS BEEN APPLIED TO *ALL* DB2 MEMBERS OF THE GROUP.
//*                IF THIS JOB IS RUN AND THERE ARE ANY MEMBERS
//*                THAT DO NOT HAVE THE REQUIRED APAR PI98649 ACTIVE,
//*                THEN THE RESTful SERVICES DATABASE OBJECTS
//*                AND ALL RESTful SERVICES FUNCTIONALITY
//*                WILL BE UNUSABLE BY THOSE DB2 MEMBERS
//*                UNTIL THE REQUIRED APAR PI98649 IS INSTALLED.
//*
//* NOTES =
//*    PRIOR TO RUNNING THIS JOB, customize it for your system:
//*    (1) Add a valid job card.
//*    (2) Change all occurrences of the following strings:
//*        (A) Change the subsystem name '§DSN§' to the SSID of your
//*            DB2.
//*        (B) Change 'DSN§§0' to the prefix of the target library
//*            for DB2.
//*        (C) Change 'DSNTIA§§' to the plan name for DSNTIAD on your
//*            DB2.
//*    (3) RUN THIS JOB ONLY AFTER SUCCESSFUL EXECUTION OF JOB
//*        DSNTIJRS, WHICH CREATES THE REQUIRED RESTful SERVICES
//*        DATABASE OBJECTS, INCLUING THE SYSIBM.DSNSERVICE TABLE.
//*    (4) ** IMPORTANT ** RUN THIS JOB *ONLY AFTER*
//*        REST APAR PI98649, WHICH PROVIDES REST SERVICES VERSIONING
//*        SUPPORT, HAS BEEN APPLIED AND IS ACTIVE ON THE TARGET
//*        DB2 SUBSYSTEM(S), INCLUDING *ALL* DB2 MEMBERS OF THE GROUP.
//*
//* CHANGE LOG =
//*   05/01/18 New part to alter an existing REST services table to
//*            supporting versioning.
//*
//*********************************************************************
//JOBLIB  DD  DISP=SHR,
//            DSN=DSN§§0.SDSNLOAD
//*
//*********************************************************************
//* Alter the RESTful services database and index to add new
//* VERSIONID column
//*********************************************************************
//DSNTIAC EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
  DSN SYSTEM(§DSN§)
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) -
       LIBRARY('DSN§§0.RUNLIB.LOAD')
  END
//SYSIN    DD  *
  ALTER TABLE "SYSIBM"."DSNSERVICE"
        ADD COLUMN VERSIONID VARCHAR(64) NOT NULL WITH DEFAULT ''
        ADD COLUMN ISDEFAULT CHAR(1) NOT NULL WITH DEFAULT 'Y';

  ALTER INDEX SYSIBM.DSNSVC01
        ADD COLUMN (VERSIONID ASC);

/*
//*  //****************************************************************
//*  //* Optional: Alter the index to add existing columns CONTOKEN,
//*  //*           ENABLED, and ISDEFAULT. Performing these ALTERs
//*  //*           may improve access performance to the REST
//*  //*           services database.
//*  //* WARNING:  PERFORMING THE FOLLOWING ALTER STEPS WILL RESULT
//*  //*           IN THE INDEX BEING PLACED INTO REBUILD-PENDING
//*  //*           (PSRBD) STATE. THIS WILL INCUR AN OUTAGE FOR REST
//*  //*           SERVICES UNTIL THE INDEX IS REBUILT USING THE
//*  //*           REBUILD INDEX UTILITY.
//*  //****************************************************************
//*  //DSNTICU EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//*  //SYSTSPRT DD  SYSOUT=*
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SYSTSIN  DD  *
//*    DSN SYSTEM(§DSN§)
//*    RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) -
//*         LIBRARY('DSN§§0.RUNLIB.LOAD')
//*    END
//*  //SYSIN    DD  *
//*    ALTER INDEX SYSIBM.DSNSVC01
//*          ADD INCLUDE COLUMN (CONTOKEN);
//*
//*    ALTER INDEX SYSIBM.DSNSVC01
//*          ADD INCLUDE COLUMN (ENABLED);
//*
//*    ALTER INDEX SYSIBM.DSNSVC01
//*          ADD INCLUDE COLUMN (ISDEFAULT);
//*
//*  /*

./ ADD NAME=DSNTIJSA
//********************************************************************* 00010000
//* JOB NAME = DSNTIJSA                                                 00020000
//*                                                                     00030000
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM                          00040000
//*                                                                     00050000
//*    Licensed Materials - Property of IBM                             00060000
//*    5650-DB2                                                         00070000
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.         00080000
//*                                                                     00090000
//*    STATUS = Version 12                                              00100000
//*                                                                     00110000
//* FUNCTION = START DB2                                                00120000
//*                                                                     00130000
//* PSEUDOCODE =                                                        00140000
//*   DSNTMVSB  STEP  DB2 management                                    00150000
//*                                                                     00160000
//* NOTES = Start DB2                                                   00170000
//*                                                                     00180000
//* Change activity =                                                   00190000
//*   01/30/2016 z/OSMF workflow artifacts generation           s15572  00200000
//*   11/08/2018 ADD SDSNEXIT to JOBLIB DD                     PH04244  00210000
//*                                                                     00220000
//JOBLIB   DD  DSN=DSN§§0.SDSNEXIT,DISP=SHR                             00230000
//         DD  DSN=DSN§§0.SDSNLOAD,DISP=SHR                             00240000
//DSNTMVSB EXEC PGM=DSNTMVSB,COND=(4,LT)                                00250000
//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=133)                        00260000
//CMDOUT   DD  SYSOUT=*                                                 00270000
//CMDOPT   DD  *                                                        00280000
*********************************************************************** 00290000
** START DB2                                                            00300000
*********************************************************************** 00310000
*                                                                       00320000
    TYPE<DB2>                                                           00330000
    COMMAND_PREFIX<MVSSPREF>                                            00340000
    COMMAND<START>                                                      00350000
    PARAMETERS<PARM(DSNZPARM) ACCESS(*)>                                00360000
    SUBPARAMETERS<CONSNAME=CONSNAME>                                    00370000
    WAIT_TIMEOUT<100>                                                   00380000

./ ADD NAME=DSNTIJSD
//*********************************************************************
//*  Name = DSNTIJSD
//*
//*  Descriptive Name =
//*    DB2 Installation Job Stream
//*
//*    Licensed Materials - Property of IBM
//*    5635-DB2
//*    (C) COPYRIGHT 2003, 2006 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 9
//*
//*  Function = Post-install job to create db2 server objects required
//*             when using the UNIFIED Debugger or the SQL Debugger.
//*             The UNIFIED Debugger supports debugging of LANGUAGE SQL	
//*             and LANGUAGE JAVA stored procedures.
//*
//*
//*  Pseudocode =
//*    DSNTICU  Step     Drop debugger objects for cleanup.
//*    DSNTIJS  Step     Create the debugger objects
//*    DSNTIJG  Step     Grant EXECUTE privilege to PUBLIC
//*                      on created debugger objects
//*
//*  Dependencies =
//*
//*  Notes =
//*    Prior to running this job, customize it for your system:
//*    (1) Add a valid job card
//*    (2) Locate and change all occurrences of the following strings
//*        as indicated:
//*        (A) '§DSN§' to the subsystem name of your DB2
//*        (B) 'DSNTIA§§' to the plan name for DSNTIAD on your DB2
//*        (C) '§WLMENV§' to the name of the WLM application
//*            environment for running the Debugger stored procedure
//*            objects. For best performance, this should be
//*            a WLM application environment that is defined
//*            with a NUMTCB parameter greater than 5.
//*        (D) 'DSN§§0' to the prefix of the target library for the
//*            current DB2 release.
//*        (E) '§WLMAPF§' to the name of the WLM application
//*            environment for running the stored procedure
//*              SYSPROC.DBG_RUNSESSIONMANAGER
//*            This stored procedure must run as an authorized program
//*            in an authorized enviroment.
//*
//* Change Activity =
//*
//*********************************************************************
//*
//JOBLIB  DD  DSN=DSN§§0.SDSNEXIT,DISP=SHR
//        DD  DSN=DSN§§0.SDSNLOAD,DISP=SHR
//*
//*        STEP 1: DROP THE DEBUGGER STORED PROCEDURES
//*
//DSNTJCU EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSTSPRT DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSTSIN  DD *
 DSN SYSTEM(§DSN§)
 RUN PROGRAM(DSNTIAD)          -
     PLAN(DSNTIA§§)            -
     LIB('DSN§§0.RUNLIB.LOAD') -
     PARM('RC0')
//SYSIN    DD *
  DROP PROCEDURE  DB2DEBUG.DEBUGGERLEVEL   RESTRICT;
  DROP PROCEDURE  DB2DEBUG.CREATE_SESSION  RESTRICT;
  DROP PROCEDURE  DB2DEBUG.DESTROY_SESSION RESTRICT;
  DROP PROCEDURE  DB2DEBUG.QUERY_SESSION   RESTRICT;
  DROP PROCEDURE  DB2DEBUG.LIST_SESSION    RESTRICT;
  DROP PROCEDURE  DB2DEBUG.PUT_COMMAND     RESTRICT;
  DROP PROCEDURE  DB2DEBUG.GET_REPORT      RESTRICT;
  DROP PROCEDURE  SYSPROC.DBG_INITIALIZECLIENT       RESTRICT;
  DROP PROCEDURE  SYSPROC.DBG_TERMINATECLIENT        RESTRICT;
  DROP PROCEDURE  SYSPROC.DBG_SENDCLIENTREQUESTS     RESTRICT;
  DROP PROCEDURE  SYSPROC.DBG_SENDCLIENTCOMMANDS     RESTRICT;
  DROP PROCEDURE  SYSPROC.DBG_RECVCLIENTREPORTS      RESTRICT;
  DROP PROCEDURE  SYSPROC.DBG_LOOKUPSESSIONMANAGER   RESTRICT;
  DROP PROCEDURE  SYSPROC.DBG_ENDSESSIONMANAGER      RESTRICT;
  DROP PROCEDURE  SYSPROC.DBG_PINGSESSIONMANAGER     RESTRICT;
  DROP PROCEDURE  SYSPROC.DBG_RUNSESSIONMANAGER      RESTRICT;
//*
//*        STEP  2: CREATE THE DEBUGGER STORED PROCEDURES
//*
//DSNTIJS  EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSTSIN  DD *
 DSN SYSTEM(§DSN§)
 RUN PROGRAM(DSNTIAD)          -
     PLAN(DSNTIA§§)            -
     LIB('DSN§§0.RUNLIB.LOAD')
//SYSIN    DD *
  CREATE PROCEDURE DB2DEBUG.DEBUGGERLEVEL
      ( IN  REQUESTXML VARCHAR(4000)
      , OUT REPLYXML   VARCHAR(4000)
      )
    EXTERNAL NAME DSNAGTLV
    LANGUAGE C
    PARAMETER STYLE GENERAL
    PARAMETER CCSID EBCDIC
    NULL CALL
    NO SQL
    NOT DETERMINISTIC
    NO COLLID
    STAY RESIDENT YES
    PROGRAM TYPE SUB
    WLM ENVIRONMENT §WLMENV§
    SECURITY DB2 ;

  CREATE PROCEDURE DB2DEBUG.CREATE_SESSION
      ( IN  SESSIONID INTEGER
      , IN  HOST      VARCHAR(128)
      , IN  PORT      INTEGER
      , OUT RESULT    INTEGER
      )
    EXTERNAL NAME DSNACRSS
    LANGUAGE C
    PARAMETER STYLE GENERAL
    PARAMETER CCSID EBCDIC
    NULL CALL
    NO SQL
    NOT DETERMINISTIC
    NO COLLID
    STAY RESIDENT YES
    PROGRAM TYPE SUB
    WLM ENVIRONMENT §WLMENV§
    SECURITY DB2 ;

  CREATE PROCEDURE DB2DEBUG.DESTROY_SESSION
      ( IN  SESSIONID INTEGER
      , IN  HOST      VARCHAR(128)
      , IN  PORT      INTEGER
      , OUT RESULT    INTEGER
      )
    EXTERNAL NAME DSNADTSS
    LANGUAGE C
    PARAMETER STYLE GENERAL
    PARAMETER CCSID EBCDIC
    NULL CALL
    NO SQL
    NOT DETERMINISTIC
    NO COLLID
    STAY RESIDENT YES
    PROGRAM TYPE SUB
    WLM ENVIRONMENT §WLMENV§
    SECURITY DB2  ;

  CREATE PROCEDURE DB2DEBUG.QUERY_SESSION
      ( IN  SESSIONID INTEGER
      , IN  HOST      VARCHAR(128)
      , IN  PORT      INTEGER
      , OUT QUERESULT INTEGER
      , OUT RESULT    INTEGER
      )
    EXTERNAL NAME DSNAQRSS
    LANGUAGE C
    PARAMETER STYLE GENERAL
    PARAMETER CCSID EBCDIC
    NULL CALL
    NO SQL
    NOT DETERMINISTIC
    NO COLLID
    STAY RESIDENT YES
    PROGRAM TYPE SUB
    WLM ENVIRONMENT §WLMENV§
    SECURITY DB2  ;

  CREATE PROCEDURE DB2DEBUG.LIST_SESSION
      ( IN  HOST    VARCHAR(128)
      , IN  PORT    INTEGER
      , OUT XMLDATA VARCHAR(32000)
      , OUT RESULT  INTEGER
      )
    EXTERNAL NAME DSNALTSS
    LANGUAGE C
    PARAMETER STYLE GENERAL
    PARAMETER CCSID EBCDIC
    NULL CALL
    NO SQL
    NOT DETERMINISTIC
    NO COLLID
    STAY RESIDENT YES
    PROGRAM TYPE SUB
    WLM ENVIRONMENT §WLMENV§
    SECURITY DB2  ;

  CREATE PROCEDURE DB2DEBUG.PUT_COMMAND
      ( IN  SESSIONID INTEGER
      , IN  HOST      VARCHAR(128)
      , IN  PORT      INTEGER
      , IN  XMLDATA   VARCHAR(32000)
      , IN  BINDATA   VARCHAR(32000) FOR BIT DATA
      , OUT RESULT    INTEGER
      )
    EXTERNAL NAME DSNAPTCM
    LANGUAGE C
    PARAMETER STYLE GENERAL
    PARAMETER CCSID EBCDIC
    NULL CALL
    NO SQL
    NOT DETERMINISTIC
    NO COLLID
    STAY RESIDENT YES
    PROGRAM TYPE SUB
    WLM ENVIRONMENT §WLMENV§
    SECURITY DB2 ;

  CREATE PROCEDURE DB2DEBUG.GET_REPORT
      ( IN  SESSIONID INTEGER
      , IN  HOST      VARCHAR(128)
      , IN  PORT      INTEGER
      , OUT XMLDATA   VARCHAR(32000)
      , OUT BINDATA   VARCHAR(32000) FOR BIT DATA
      , IN  WAITTIME  INTEGER
      , OUT MOREDATE  INTEGER
      , OUT RESULT    INTEGER
      )
   EXTERNAL NAME DSNAGTRP
   LANGUAGE C
   PARAMETER STYLE GENERAL WITH NULLS
   PARAMETER CCSID EBCDIC
   NULL CALL
   NO SQL
   NOT DETERMINISTIC
   NO COLLID
   STAY RESIDENT YES
   PROGRAM TYPE SUB
   WLM ENVIRONMENT §WLMENV§
   SECURITY DB2  ;
  CREATE PROCEDURE SYSPROC.DBG_INITIALIZECLIENT
      ( IN    HOST  VARCHAR(128),
        IN    PORT  INT,
        IN    XMLREQUEST BLOB(32K),
        OUT   XMLREPLY BLOB(32K)
       )
   EXTERNAL NAME DSNAINCL
   LANGUAGE C
   PARAMETER STYLE GENERAL
   PARAMETER CCSID EBCDIC
   NULL CALL
   NO SQL
   NOT DETERMINISTIC
   NO COLLID
   STAY RESIDENT YES
   PROGRAM TYPE SUB
   WLM ENVIRONMENT §WLMENV§
   SECURITY DB2 ;
  CREATE PROCEDURE SYSPROC.DBG_TERMINATECLIENT
      ( IN HOST  VARCHAR(128),
        IN    PORT  INT,
        IN    XMLREQUEST BLOB(32K),
        OUT   XMLREPLY BLOB(32K)
      )
   EXTERNAL NAME DSNATRCL
   LANGUAGE C
   PARAMETER STYLE GENERAL
   PARAMETER CCSID EBCDIC
   NULL CALL
   NO SQL
   NOT DETERMINISTIC
   NO COLLID
   STAY RESIDENT YES
   PROGRAM TYPE SUB
   WLM ENVIRONMENT §WLMENV§
   SECURITY DB2 ;
  CREATE PROCEDURE SYSPROC.DBG_SENDCLIENTREQUESTS
      ( IN HOST VARCHAR(128),
        IN    PORT  INT,
        IN    XMLREQUEST BLOB(32K),
        OUT   XMLREPLY BLOB(32K)
       )
   EXTERNAL NAME  DSNASDRQ
   LANGUAGE C
   PARAMETER STYLE GENERAL
   PARAMETER CCSID EBCDIC
   NULL CALL
   NO SQL
   NOT DETERMINISTIC
   NO COLLID
   STAY RESIDENT YES
   PROGRAM TYPE SUB
   WLM ENVIRONMENT §WLMENV§
   SECURITY DB2 ;
   CREATE PROCEDURE SYSPROC.DBG_SENDCLIENTCOMMANDS
       ( IN HOST  VARCHAR(128),
         IN    PORT  INT,
         IN    XMLREQUEST BLOB(32K),
         IN    XMLDATA BLOB(32K),
         IN    BINDATA BLOB(32K),
         OUT   XMLREPLY BLOB(32K)
       )
   EXTERNAL NAME DSNASDCM
   LANGUAGE C
   PARAMETER STYLE GENERAL
   PARAMETER CCSID EBCDIC
   NULL CALL
   NO SQL
   NOT DETERMINISTIC
   NO COLLID
   STAY RESIDENT YES
   PROGRAM TYPE SUB
   WLM ENVIRONMENT §WLMENV§
   SECURITY DB2 ;
  CREATE PROCEDURE SYSPROC.DBG_RECVCLIENTREPORTS
      ( IN HOST  VARCHAR(128),
        IN    PORT  INT,
        IN    XMLREQUEST BLOB(32K),
        OUT   XMLREPLY BLOB(32K),
        OUT   XMLDATA BLOB(32K),
        OUT   BINDATA BLOB(32K)
       )
   EXTERNAL NAME  DSNARCCL
   LANGUAGE C
   PARAMETER STYLE GENERAL
   PARAMETER CCSID EBCDIC
   NULL CALL
   NO SQL
   NOT DETERMINISTIC
   NO COLLID
   STAY RESIDENT YES
   PROGRAM TYPE SUB
   WLM ENVIRONMENT §WLMENV§
   SECURITY DB2 ;
  CREATE PROCEDURE SYSPROC.DBG_ENDSESSIONMANAGER
      ( IN HOST VARCHAR(128),
        IN    PORT  INT,
        OUT   XMLREPLY BLOB(32K)
      )
   EXTERNAL NAME DSNAEMNG
   LANGUAGE C
   PARAMETER STYLE GENERAL
   PARAMETER CCSID EBCDIC
   NULL CALL
   NO SQL
   NOT DETERMINISTIC
   NO COLLID
   STAY RESIDENT YES
   PROGRAM TYPE SUB
   WLM ENVIRONMENT §WLMENV§
   SECURITY DB2 ;
   CREATE PROCEDURE SYSPROC.DBG_PINGSESSIONMANAGER
       ( IN HOST  VARCHAR(128),
         IN    PORT  INT,
         OUT   XMLREPLY BLOB(32K)
       )
   EXTERNAL NAME DSNAPMNG
   LANGUAGE C
   PARAMETER STYLE GENERAL WITH NULLS
   PARAMETER CCSID EBCDIC
   NULL CALL
   NO SQL
   NOT DETERMINISTIC
   NO COLLID
   STAY RESIDENT YES
   PROGRAM TYPE SUB
   WLM ENVIRONMENT §WLMENV§
   SECURITY DB2;
  CREATE PROCEDURE SYSPROC.DBG_LOOKUPSESSIONMANAGER
      ( OUT HOST VARCHAR(128),
        OUT   PORT  INT
      )
   EXTERNAL NAME  DSNALSMG
   LANGUAGE C
   PARAMETER STYLE GENERAL
   PARAMETER CCSID EBCDIC
   NULL CALL
   NO SQL
   NOT DETERMINISTIC
   NO COLLID
   STAY RESIDENT YES
   PROGRAM TYPE SUB
   WLM ENVIRONMENT §WLMENV§
   SECURITY DB2 ;
  CREATE PROCEDURE SYSPROC.DBG_RUNSESSIONMANAGER
      ( IN  PORT         INTEGER,
        IN  IDLETIMEOUT  INTEGER,
        OUT XMLREPLY     BLOB(32K)
      )
    EXTERNAL NAME DSNARNMG
    LANGUAGE C
    PARAMETER STYLE GENERAL
    PARAMETER CCSID EBCDIC
    NULL CALL
    NO SQL
    NOT DETERMINISTIC
    NO COLLID
    STAY RESIDENT YES
    PROGRAM TYPE SUB
    WLM ENVIRONMENT §WLMAPF§
    SECURITY DB2 ;
//*
//*        STEP  3: GRANT EXECUTE ON THE DEBUGGER STORED PROCEDURES
//*
//DSNTIJG  EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSTSIN  DD *
 DSN SYSTEM(§DSN§)
 RUN PROGRAM(DSNTIAD)          -
     PLAN(DSNTIA§§)            -
     LIB('DSN§§0.RUNLIB.LOAD')
//SYSIN    DD *
 GRANT EXECUTE ON PROCEDURE  DB2DEBUG.DEBUGGERLEVEL   TO PUBLIC;
 GRANT EXECUTE ON PROCEDURE  DB2DEBUG.CREATE_SESSION  TO PUBLIC;
 GRANT EXECUTE ON PROCEDURE  DB2DEBUG.DESTROY_SESSION TO PUBLIC;
 GRANT EXECUTE ON PROCEDURE  DB2DEBUG.QUERY_SESSION   TO PUBLIC;
 GRANT EXECUTE ON PROCEDURE  DB2DEBUG.LIST_SESSION    TO PUBLIC;
 GRANT EXECUTE ON PROCEDURE  DB2DEBUG.PUT_COMMAND     TO PUBLIC;
 GRANT EXECUTE ON PROCEDURE  DB2DEBUG.GET_REPORT      TO PUBLIC;
 GRANT EXECUTE ON PROCEDURE  SYSPROC.DBG_INITIALIZECLIENT   TO PUBLIC;
 GRANT EXECUTE ON PROCEDURE  SYSPROC.DBG_TERMINATECLIENT    TO PUBLIC;
 GRANT EXECUTE ON PROCEDURE  SYSPROC.DBG_SENDCLIENTREQUESTS TO PUBLIC;
 GRANT EXECUTE ON PROCEDURE  SYSPROC.DBG_SENDCLIENTCOMMANDS TO PUBLIC;
 GRANT EXECUTE ON PROCEDURE  SYSPROC.DBG_RECVCLIENTREPORTS  TO PUBLIC;
 GRANT EXECUTE ON PROCEDURE  SYSPROC.DBG_ENDSESSIONMANAGER    TO PUBLIC;
 GRANT EXECUTE ON PROCEDURE  SYSPROC.DBG_PINGSESSIONMANAGER   TO PUBLIC;
 GRANT EXECUTE ON PROCEDURE  SYSPROC.DBG_LOOKUPSESSIONMANAGER TO PUBLIC;
 GRANT EXECUTE ON PROCEDURE  SYSPROC.DBG_RUNSESSIONMANAGER    TO PUBLIC;
//*

./ ADD NAME=DSNTIJSG
//********************************************************************* 00010000
//* JOB NAME = DSNTIJSG                                                 00020000
//*                                                                     00030000
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM                          00040000
//*                                                                     00050000
//*    Licensed Materials - Property of IBM                             00060000
//*    5650-DB2                                                         00070000
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.         00080000
//*                                                                     00090000
//*    STATUS = Version 12                                              00100000
//*                                                                     00110000
//* FUNCTION = CREATE USER MAINTAINED TABLES                            00120000
//*                                                                     00130000
//* PSEUDOCODE =                                                        00140000
//*   DSNTICU  STEP     CLEAN UP STEP TO PERMIT RERUNS                  00150000
//*   DSNTIRU  STEP     BIND DCLGEN AND SPUFI                           00160000
//*   DSNTIRL  STEP     CREATE RESOURCE LIMIT FACILITY OBJECTS          00170000
//*   DSNTIJD  STEP     INITIALIZE COMMUNICATIONS DATA BASE             00180000
//*   DSNTIJR  STEP     CREATE DDL REGISTRATION DATA BASE               00190000
//*   DSNTIJQ  STEP     CREATE THE QUERY OPTIMIZATION DATABASE          00200000
//*                       NOTE: TO DROP THE DATABASE AND ITS STORAGE    00210000
//*                             STORAGE GROUP FOR RECREATE, LOCATE      00220000
//*                             AND UNCOMMENT THE FOLLOWING LINE:       00230000
//*                               //*        DD  DDNAME=CLEANUP         00240000
//*   DSNTIJP  STEP     CREATE THE PROGRAM AUTHORIZATION DATABASE       00250000
//*                       NOTE: TO DROP THE DATABASE FOR RECREATE,      00260000
//*                             LOCATE AND UNCOMMENT THE FOLLOWING      00270000
//*                             LINE:                                   00280000
//*                               //*        DD  DDNAME=CLEANUP         00290000
//*                       NOTE: AT THE END OF THE JOB STEP IS A         00300000
//*                             COMMENTED-OUT INSERT STATEMENT          00310000
//*                             THAT IS AN EXAMPLE OF HOW TO            00320000
//*                             POPULATE THE SYSIBM.DSNPROGAUTH         00330000
//*                             TABLE.                                  00340000
//*   DSNTIJG  STEP     PERMIT ACCESS TO NEW OBJECTS, PLANS.            00350000
//*                                                                     00360000
//* DEPENDENCIES =                                                      00370000
//*   RUN THIS JOB WITH RESOURCE LIMIT FACILITY STOPPED                 00380000
//*                                                                     00390000
//* NOTES =                                                             00400000
//*                                                                     00410000
//* Change activity =                                                   00420000
//*   01/22/2015 Update DSNTIJQ and DSNTIJP for DB2 12           176020 00430000
//*   05/20/2015 Add BLOCK_FETCH to DSN_DETCOST_TABLE for DB2 12 s23543 00440000
//*   11/12/2015 Update for DB2 12 explain tables                181358 00450000
//*   10/02/2015 Installation w/o SYSADM            s24922_inst1 s24922 00460000
//*   12/08/2015 Fix typo                                 182061 182008 00470000
//*   09/21/2017 Remove DDLs for obsolete objects in step       PI86450 00480000
//*              DSNTIJQ                                                00490000
//*   08/21/2018 Tolerate creation of deprecated TSs    s81673 / t81374 00491000
//*                                                                     00500000
//********************************************************************* 00510000
//JOBLIB  DD  DISP=SHR,                                                 00520000
//            DSN=DSN§§0.SDSNLOAD                                       00530000
//*                                                                     00540000
//*  //DSNTICU EXEC PGM=IKJEFT01,DYNAMNBR=20                            00550000
//*  //SYSTSPRT DD  SYSOUT=*                                            00560000
//*  //SYSPRINT DD  SYSOUT=*                                            00570000
//*  //SYSUDUMP DD  SYSOUT=*                                            00580000
//*  //SYSTSIN  DD  *                                                   00590000
//*    DSN SYSTEM(DSN)                                                  00600000
//*    RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) PARM('RC0') -               00610000
//*         LIBRARY('DSN§§0.RUNLIB.LOAD')                               00620000
//*    END                                                              00630000
//*  //SYSIN    DD  *                                                   00640000
//*     SET CURRENT SQLID = 'SYSADM';                                   00650000
//*     DROP DATABASE DSNRGFDB;                                         00660000
//*                                                                     00670000
//DSNTIRU EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00680000
//SYSTSPRT DD  SYSOUT=*                                                 00690000
//SYSPRINT DD  SYSOUT=*                                                 00700000
//SYSUDUMP DD  SYSOUT=*                                                 00710000
//SYSTSIN  DD  *                                                        00720000
  DSN SYSTEM(DSN)                                                       00730000
  BIND PACKAGE(DSNTIAP) MEMBER(DSNTIAP) -                               00740000
       ACTION(REPLACE) ENCODING(EBCDIC) -                               00750000
       LIBRARY('DSN§§0.SDSNDBRM')                                       00760000
  BIND PACKAGE(DSNESPCS) MEMBER(DSNESM68) -                             00770000
       ACTION(REPLACE) ISO(CS) CURRENTDATA(YES) ENCODING(EBCDIC) -      00780000
       LIBRARY('DSN§§0.SDSNDBRM')                                       00790000
  BIND PLAN(DSNESPCS) -                                                 00800000
       PKLIST(DSNESPCS.DSNESM68, -                                      00810000
              DSNTIAP.DSNTIAP) -                                        00820000
       ACTION(REPLACE) RETAIN +                                         00830000
       ISO(CS) CURRENTDATA(YES) ENCODING(EBCDIC)                        00840000
  BIND PACKAGE(DSNESPRR) MEMBER(DSNESM68) -                             00850000
       ACTION(REPLACE) ISO(RR) ENCODING(EBCDIC) -                       00860000
       LIBRARY('DSN§§0.SDSNDBRM')                                       00870000
  BIND PLAN(DSNESPRR) -                                                 00880000
       PKLIST(DSNESPRR.DSNESM68, -                                      00890000
              DSNTIAP.DSNTIAP) -                                        00900000
       ACTION(REPLACE) RETAIN +                                         00910000
       ISO(RR) ENCODING(EBCDIC)                                         00920000
  BIND PACKAGE(DSNESPUR) MEMBER(DSNESM68) -                             00930000
       ACTION(REPLACE) ISO(UR) ENCODING(EBCDIC) -                       00940000
       LIBRARY('DSN§§0.SDSNDBRM')                                       00950000
  BIND PLAN(DSNESPUR) -                                                 00960000
       PKLIST(DSNESPUR.DSNESM68, -                                      00970000
              DSNTIAP.DSNTIAP) -                                        00980000
       ACTION(REPLACE) RETAIN +                                         00990000
       ISO(UR) ENCODING(EBCDIC)                                         01000000
  BIND PACKAGE(DSNEDCL) MEMBER(DSNECP68) -                              01010000
       ACTION(REPLACE) ISO(CS) CURRENTDATA(YES) ENCODING(EBCDIC) -      01020000
       LIBRARY('DSN§§0.SDSNDBRM')                                       01030000
  BIND PLAN(DSNEDCL) -                                                  01040000
       PKLIST(DSNEDCL.DSNECP68, -                                       01050000
              DSNTIAP.DSNTIAP) -                                        01060000
       ACTION(REPLACE) RETAIN +                                         01070000
       ISO(CS) CURRENTDATA(YES) ENCODING(EBCDIC)                        01080000
  BIND PACKAGE(DSNUTIL) MEMBER(DSNUGSQL) -                              01090000
       ACTION(REPLACE) ISO(CS) ENCODING(EBCDIC) -                       01100000
       VALIDATE(BIND) CURRENTDATA(NO)  KEEPDYNAMIC(NO) -                01110000
       LIBRARY('DSN§§0.SDSNDBRM')                                       01120000
  BIND PACKAGE(DSNUT§§1) MEMBER(DSNUGSQL) -                             01130000
       ACTION(REPLACE) ISO(CS) ENCODING(EBCDIC) -                       01140000
       VALIDATE(BIND) CURRENTDATA(NO)  KEEPDYNAMIC(NO) -                01150000
       LIBRARY('DSN§§0.SDSNDBRM')                                       01160000
  BIND PACKAGE(DSNTXAZP) MEMBER(DSNTXAZP) -                             01170000
       ACTION(REPLACE) ENCODING(EBCDIC) -                               01180000
       LIBRARY('DSN§§0.SDSNDBRM')                                       01190000
  BIND PLAN(DSNTXAZP) -                                                 01200000
       PKLIST(DSNTXAZP.DSNTXAZP) -                                      01210000
       ACTION(REPLACE) RETAIN +                                         01220000
       ENCODING(EBCDIC)                                                 01230000
  BIND PACKAGE(DSNJAR) MEMBER(DSNX9LDJ) -                               01240000
       ACTION(REPLACE) ISO(CS) CURRENTDATA(YES) ENCODING(EBCDIC) -      01250000
       LIBRARY('DSN§§0.SDSNDBRM')                                       01260000
  END                                                                   01270000
//*                                                                     01280000
//DSNTIRL EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     01290000
//SYSTSPRT DD  SYSOUT=*                                                 01300000
//SYSPRINT DD  SYSOUT=*                                                 01310000
//SYSUDUMP DD  SYSOUT=*                                                 01320000
//SYSTSIN  DD  *                                                        01330000
  DSN SYSTEM(DSN)                                                       01340000
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) -                                01350000
       LIBRARY('DSN§§0.RUNLIB.LOAD')                                    01360000
  END                                                                   01370000
//SYSIN    DD  *                                                        01380000
   SET CURRENT SQLID = 'SYSADM';                                        01390000
   SET CURRENT APPLICATION COMPATIBILITY = 'V11R1';                     01391000
   CREATE DATABASE DSNRLST CCSID EBCDIC;                                01400000
   CREATE TABLESPACE DSNRLS01 IN DSNRLST CLOSE NO CCSID EBCDIC;         01410000
   CREATE TABLE DSNRLST01                                               01420000
         (AUTHID         VARCHAR(128) NOT NULL WITH DEFAULT,            01430000
          PLANNAME       CHAR( 8)     NOT NULL WITH DEFAULT,            01440000
          ASUTIME        INTEGER,                                       01450000
          LUNAME         CHAR( 8)     NOT NULL WITH DEFAULT,            01460000
          RLFFUNC        CHAR( 1)     NOT NULL WITH DEFAULT,            01470000
          RLFBIND        CHAR( 1)     NOT NULL WITH DEFAULT,            01480000
          RLFCOLLN       VARCHAR(128) NOT NULL WITH DEFAULT,            01490000
          RLFPKG         VARCHAR(128) NOT NULL WITH DEFAULT,            01500000
          RLFASUERR      INTEGER,                                       01510000
          RLFASUWARN     INTEGER,                                       01520000
          RLF_CATEGORY_B CHAR( 1)     NOT NULL WITH DEFAULT)            01530000
      IN DSNRLST.DSNRLS01 CCSID EBCDIC;                                 01540000
   CREATE UNIQUE INDEX DSNARL01                                         01550000
      ON DSNRLST01                                                      01560000
         (RLFFUNC, AUTHID DESC, PLANNAME DESC,                          01570000
          RLFCOLLN DESC, RLFPKG DESC, LUNAME DESC)                      01580000
      CLUSTER CLOSE NO;                                                 01590000
//         DD  *                                                        01600000
//**********************************************************************01610000
//* HERE ARE TWO SAMPLE INSERT STATEMENTS FOR INITIALIZING THE          01620000
//* RESOURCE LIMIT FACILITY'S RESOURCE LIMIT SPECIFICATION TABLE (RLST).01630000
//* IF YOU WANT TO INITIALIZE THE RLST, BUILD YOUR OWN INSERTS          01640000
//* AND ADD THEM TO THE BOTTOM OF THE PREVIOUS STEP.                    01650000
//*                                                                     01660000
//*    INSERT INTO DSNRLST01                                            01670000
//*                (LUNAME,     AUTHID,     PLANNAME,   ASUTIME)        01680000
//*         VALUES ('        ', 'MYUSERID', 'MYPLAN',   10);            01690000
//*    INSERT INTO DSNRLST01                                            01700000
//*                (LUNAME,     AUTHID,     PLANNAME,   ASUTIME)        01710000
//*         VALUES ('        ', '        ', 'DEPTPLAN', 30);            01720000
//**********************************************************************01730000
//* USE THE FOLLOWING DDL TO CREATE AN OPTIONAL RLST AND INDEX FOR      01740000
//* RLF GOVERNING BASED ON END-USER ID, APPLICATION NAME, WORKSTATION   01750000
//* ID, AND IP ADDRESS.  SEE THE DB2 PERFORMANCE MONITORING AND TUNING  01760000
//* GUIDE FOR MORE INFORMATION ABOUT THIS TABLE.                        01770000
//*                                                                     01780000
//*   CREATE TABLE DSNRLMT01                                            01790000
//*         (RLFFUNC        CHAR(1)      NOT NULL WITH DEFAULT,         01800000
//*          RLFEUAN        VARCHAR(255) NOT NULL WITH DEFAULT,         01810000
//*          RLFEUID        VARCHAR(128) NOT NULL WITH DEFAULT,         01820000
//*          RLFEUWN        VARCHAR(255) NOT NULL WITH DEFAULT,         01830000
//*          RLFIP          CHAR(254)    NOT NULL WITH DEFAULT,         01840000
//*          ASUTIME        INTEGER,                                    01850000
//*          RLFASUERR      INTEGER,                                    01860000
//*          RLFASUWARN     INTEGER,                                    01870000
//*          RLF_CATEGORY_B CHAR(1)      NOT NULL WITH DEFAULT)         01880000
//*      IN DSNRLST.DSNRLS01;                                           01890000
//*                                                                     01900000
//*   CREATE UNIQUE INDEX DSNMRL01                                      01910000
//*      ON DSNRLMT01                                                   01920000
//*         (RLFFUNC, RLFEUAN DESC, RLFEUID DESC,                       01930000
//*          RLFEUWN DESC, RLFIP DESC)                                  01940000
//*      CLUSTER CLOSE NO;                                              01950000
//**********************************************************************01960000
//*                                                                     01970000
//DSNTIJD EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     01980000
//SYSTSPRT DD  SYSOUT=*                                                 01990000
//SYSPRINT DD  SYSOUT=*                                                 02000000
//SYSUDUMP DD  SYSOUT=*                                                 02010000
//SYSTSIN  DD  *                                                        02020000
  DSN SYSTEM(DSN)                                                       02030000
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) -                                02040000
       LIBRARY('DSN§§0.RUNLIB.LOAD')                                    02050000
  END                                                                   02060000
//SYSIN    DD  *                                                        02070000
   SET CURRENT SQLID = 'SYSADM';                                        02080000
   INSERT INTO SYSIBM.LUNAMES                                           02090000
             (LUNAME) VALUES (' ');                                     02100000
                                                                        02110000
//*                                                                     02120000
//DSNTIJR EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     02130000
//SYSTSPRT DD  SYSOUT=*                                                 02140000
//SYSPRINT DD  SYSOUT=*                                                 02150000
//SYSUDUMP DD  SYSOUT=*                                                 02160000
//SYSTSIN  DD  *                                                        02170000
  DSN SYSTEM(DSN)                                                       02180000
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) -                                02190000
       LIBRARY('DSN§§0.RUNLIB.LOAD')                                    02200000
  END                                                                   02210000
//SYSIN    DD  *                                                        02220000
   SET CURRENT SQLID = 'SYSADM';                                        02230000
   SET CURRENT APPLICATION COMPATIBILITY = 'V11R1';                     02231000
                                                                        02240000
   CREATE DATABASE DSNRGFDB CCSID EBCDIC;                               02250000
                                                                        02260000
   CREATE TABLESPACE DSNRGFTS IN DSNRGFDB                               02270000
          SEGSIZE 4                                                     02280000
          CLOSE NO CCSID EBCDIC;                                        02290000
                                                                        02300000
   CREATE TABLE DSNRGCOL.DSN_REGISTER_APPL                              02310000
         (APPLIDENT          CHAR(18)     NOT NULL WITH DEFAULT,        02320000
          APPLIDENTTYPE      CHAR(1)      NOT NULL WITH DEFAULT,        02330000
          APPLICATIONDESC    VARCHAR(30)  NOT NULL WITH DEFAULT,        02340000
          DEFAULTAPPL        CHAR(1)      NOT NULL WITH DEFAULT,        02350000
          QUALIFIEROK        CHAR(1)      NOT NULL WITH DEFAULT,        02360000
          CREATOR            CHAR(26)     NOT NULL WITH DEFAULT,        02370000
          CREATETIMESTAMP    TIMESTAMP    NOT NULL WITH DEFAULT,        02380000
          CHANGER            CHAR(26)     NOT NULL WITH DEFAULT,        02390000
          CHANGETIMESTAMP    TIMESTAMP    NOT NULL WITH DEFAULT)        02400000
      IN DSNRGFDB.DSNRGFTS CCSID EBCDIC;                                02410000
                                                                        02420000
   CREATE UNIQUE INDEX DSNRGCOL.DSN_REGISTER_APPLI                      02430000
      ON DSNRGCOL.DSN_REGISTER_APPL                                     02440000
         (APPLIDENT, APPLIDENTTYPE, DEFAULTAPPL DESC, QUALIFIEROK DESC) 02450000
      CLUSTER;                                                          02460000
                                                                        02470000
   CREATE TABLE DSNRGCOL.DSN_REGISTER_OBJT                              02480000
         (QUALIFIER          CHAR(8)      NOT NULL WITH DEFAULT,        02490000
          NAME               CHAR(18)     NOT NULL WITH DEFAULT,        02500000
          TYPE               CHAR(1)      NOT NULL WITH DEFAULT,        02510000
          APPLMATCHREQ       CHAR(1)      NOT NULL WITH DEFAULT,        02520000
          APPLIDENT          CHAR(18)     NOT NULL WITH DEFAULT,        02530000
          APPLIDENTTYPE      CHAR(1)      NOT NULL WITH DEFAULT,        02540000
          APPLICATIONDESC    VARCHAR(30)  NOT NULL WITH DEFAULT,        02550000
          CREATOR            CHAR(26)     NOT NULL WITH DEFAULT,        02560000
          CREATETIMESTAMP    TIMESTAMP    NOT NULL WITH DEFAULT,        02570000
          CHANGER            CHAR(26)     NOT NULL WITH DEFAULT,        02580000
          CHANGETIMESTAMP    TIMESTAMP    NOT NULL WITH DEFAULT)        02590000
      IN DSNRGFDB.DSNRGFTS CCSID EBCDIC;                                02600000
                                                                        02610000
   CREATE UNIQUE INDEX DSNRGCOL.DSN_REGISTER_OBJTI                      02620000
      ON DSNRGCOL.DSN_REGISTER_OBJT                                     02630000
         (QUALIFIER, NAME, TYPE )                                       02640000
      CLUSTER;                                                          02650000
                                                                        02660000
//*                                                                     02670000
//********************************************************************* 02680000
//* CREATE THE QUERY OPTIMIZATION DATABASE                              02690000
//*   NOTE: TO DROP THE DATABASE AND ITS STORAGE GROUP FOR RECREATE,    02700000
//*         LOCATE AND UNCOMMENT THE FOLLOWING LINE:                    02710000
//*           //*        DD  DDNAME=CLEANUP                             02720000
//********************************************************************* 02730000
//DSNTIJQ EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     02740000
//SYSTSPRT DD  SYSOUT=*                                                 02750000
//SYSPRINT DD  SYSOUT=*                                                 02760000
//SYSUDUMP DD  SYSOUT=*                                                 02770000
//SYSTSIN  DD  *                                                        02780000
  DSN SYSTEM(DSN)                                                       02790000
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) -                                02800000
       LIBRARY('DSN§§0.RUNLIB.LOAD')                                    02810000
  END                                                                   02820000
//SYSIN    DD  *                                                        02830000
//*        DD  DDNAME=CLEANUP     <- DROP THE QUERY OPT DATABASE        02840000
//         DD  DDNAME=CREATEDB    <- CREATE THE QUERY OPT DATABASE      02850000
//         DD  DDNAME=CREATENT    <- CREATE NEW-RELEASE TABLES          02860000
//*                                                                     02870000
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 02880000
//* OPTIONAL: DROP THE QUERY OPTIMIZATION DATABASE                      02890000
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 02900000
//CLEANUP  DD  *                                                        02910000
  SET CURRENT SQLID = 'SYSADM';                                         02920000
  DROP DATABASE DSNOPTDB;                                               02930000
  DROP STOGROUP DSNOPTSG;                                               02940000
  COMMIT;                                                               02950000
//*                                                                     02960000
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 02970000
//* CREATE THE QUERY OPTIMIZATION DATABASE                              02980000
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 02990000
//CREATEDB DD  *                                                        03000000
  SET CURRENT SQLID = 'SYSADM';                                         03010000
  SET CURRENT APPLICATION COMPATIBILITY = 'V11R1';                      03011000
  CREATE STOGROUP DSNOPTSG                                              03020000
         VOLUMES (DSNV01)                                               03030000
         VCAT DSNC§§0;                                                  03040000
  CREATE DATABASE DSNOPTDB                                              03050000
         STOGROUP DSNOPTSG                                              03060000
         CCSID UNICODE;                                                 03070000
  CREATE TABLESPACE DSNOPTTS                                            03080000
         IN DSNOPTDB                                                    03090000
         LOCKSIZE ROW                                                   03100000
         LOCKMAX SYSTEM                                                 03110000
         CLOSE NO                                                       03120000
         CCSID UNICODE                                                  03130000
         USING STOGROUP DSNOPTSG;                                       03140000
  CREATE TABLE SYSIBM.DSN_PROFILE_TABLE                                 03150000
         ( "AUTHID"                VARCHAR(128)                         03160000
          ,"PLANNAME"              VARCHAR(24)                          03170000
          ,"COLLID"                VARCHAR(128)                         03180000
          ,"PKGNAME"               VARCHAR(128)                         03190000
          ,"LOCATION"              VARCHAR(254)                         03200000
          ,"PROFILEID"             INTEGER       NOT NULL               03210000
                                                 PRIMARY KEY            03220000
                                                 GENERATED BY DEFAULT   03230000
                                                 AS IDENTITY            03240000
          ,"PROFILE_TIMESTAMP"     TIMESTAMP     NOT NULL WITH DEFAULT  03250000
          ,"PROFILE_ENABLED"       CHAR(1)       NOT NULL DEFAULT 'Y'   03260000
          ,"GROUP_MEMBER"          VARCHAR(24)                          03270000
          ,"REMARKS"               VARCHAR(762)                         03280000
          ,"ROLE"                  VARCHAR(128)                         03290000
          ,"PRDID"                 CHAR(8)                              03300000
          ,"CLIENT_APPLNAME"       VARCHAR(255)                         03310000
          ,"CLIENT_USERID"         VARCHAR(255)                         03320000
          ,"CLIENT_WRKSTNNAME"     VARCHAR(255)                         03330000
         )                                                              03340000
         IN DSNOPTDB.DSNOPTTS                                           03350000
         CCSID UNICODE;                                                 03360000
  CREATE UNIQUE INDEX SYSIBM.DSN_PROFILE_TABLE_IX_ALL                   03370000
         ON SYSIBM.DSN_PROFILE_TABLE                                    03380000
         ( "PROFILEID"                                                  03390000
         );                                                             03400000
  CREATE INDEX SYSIBM.DSN_PROFILE_TABLE_IX2_ALL                         03410000
         ON SYSIBM.DSN_PROFILE_TABLE                                    03420000
         ( "PROFILE_ENABLED"                                            03430000
          ,"AUTHID"                                                     03440000
          ,"PLANNAME"                                                   03450000
          ,"COLLID"                                                     03460000
          ,"PKGNAME"                                                    03470000
          ,"LOCATION"                                                   03480000
          ,"PRDID"                                                      03490000
          ,"ROLE"                                                       03500000
          ,"CLIENT_APPLNAME"                                            03510000
          ,"CLIENT_USERID"                                              03520000
          ,"CLIENT_WRKSTNNAME"                                          03530000
          ,"GROUP_MEMBER"                                               03540000
          ,"PROFILE_TIMESTAMP" DESC                                     03550000
         );                                                             03560000
  CREATE TABLE SYSIBM.DSN_PROFILE_HISTORY                               03570000
         ( "AUTHID"                VARCHAR(128)                         03580000
          ,"PLANNAME"              VARCHAR(24)                          03590000
          ,"COLLID"                VARCHAR(128)                         03600000
          ,"PKGNAME"               VARCHAR(128)                         03610000
          ,"LOCATION"              VARCHAR(254)                         03620000
          ,"PROFILEID"             INTEGER       NOT NULL               03630000
          ,"PROFILE_TIMESTAMP"     TIMESTAMP     NOT NULL               03640000
          ,"PROFILE_ENABLED"       CHAR(1)       NOT NULL               03650000
          ,"GROUP_MEMBER"          VARCHAR(24)                          03660000
          ,"STATUS"                VARCHAR(254)                         03670000
          ,"ROLE"                  VARCHAR(128)                         03680000
          ,"PRDID"                 CHAR(8)                              03690000
          ,"CLIENT_APPLNAME"       VARCHAR(255)                         03700000
          ,"CLIENT_USERID"         VARCHAR(255)                         03710000
          ,"CLIENT_WRKSTNNAME"     VARCHAR(255)                         03720000
         )                                                              03730000
         IN DSNOPTDB.DSNOPTTS                                           03740000
         CCSID UNICODE;                                                 03750000
  CREATE TABLE SYSIBM.DSN_PROFILE_ATTRIBUTES                            03760000
         ( "PROFILEID"             INTEGER       NOT NULL               03770000
            REFERENCES SYSIBM.DSN_PROFILE_TABLE                         03780000
            ON DELETE CASCADE                                           03790000
          ,"KEYWORDS"              VARCHAR(128)  NOT NULL               03800000
          ,"ATTRIBUTE1"            VARCHAR(1024)                        03810000
          ,"ATTRIBUTE2"            INTEGER                              03820000
          ,"ATTRIBUTE3"            FLOAT                                03830000
          ,"ATTRIBUTE_TIMESTAMP"   TIMESTAMP     NOT NULL WITH DEFAULT  03840000
          ,"REMARKS"               VARCHAR(762)                         03850000
         )                                                              03860000
         IN DSNOPTDB.DSNOPTTS                                           03870000
         CCSID UNICODE;                                                 03880000
  CREATE UNIQUE INDEX SYSIBM.DSN_PROFILE_ATTRIBUTES_IX_ALL              03890000
         ON SYSIBM.DSN_PROFILE_ATTRIBUTES                               03900000
         ( "PROFILEID"                                                  03910000
          ,"ATTRIBUTE_TIMESTAMP"   DESC                                 03920000
          ,"KEYWORDS"                                                   03930000
          ,"ATTRIBUTE1"                                                 03940000
          ,"ATTRIBUTE2"                                                 03950000
          ,"ATTRIBUTE3"                                                 03960000
         )                                                              03970000
         USING STOGROUP DSNOPTSG;                                       03980000
  CREATE TABLE SYSIBM.DSN_PROFILE_ATTRIBUTES_HISTORY                    03990000
         ( "PROFILEID"             INTEGER       NOT NULL               04000000
          ,"KEYWORDS"              VARCHAR(128)  NOT NULL               04010000
          ,"ATTRIBUTE1"            VARCHAR(1024)                        04020000
          ,"ATTRIBUTE2"            INTEGER                              04030000
          ,"ATTRIBUTE3"            FLOAT                                04040000
          ,"ATTRIBUTE_TIMESTAMP"   TIMESTAMP     NOT NULL               04050000
          ,"STATUS"                VARCHAR(254)                         04060000
         )                                                              04070000
         IN DSNOPTDB.DSNOPTTS                                           04080000
         CCSID UNICODE;                                                 04090000
                                                                        04100000
//*                                                                     04110000
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 04120000
//* CREATE NEW-RELEASE TABLES IN THE QUERY OPTIMIZATION DATABASE        04130000
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 04140000
//CREATENT DD  *                                                        04150000
  SET CURRENT SQLID = 'SYSADM';                                         04160000
//*                                                                     04170000
//********************************************************************* 04180000
//* CREATE THE PROGRAM AUTHORIZATION DATABASE                           04190000
//*   NOTE: TO DROP THE DATABASE FOR RECREATE, LOCATE AND               04200000
//*         UNCOMMENT THE FOLLOWING LINE:                               04210000
//*           //*        DD  DDNAME=CLEANUP                             04220000
//*   NOTE: AT THE END OF THE JOB STEP IS A COMMENTED-OUT INSERT        04230000
//*         STATEMENT THAT IS AN EXAMPLE OF HOW TO POPULATE THE         04240000
//*         SYSIBM.DSNPROGAUTH TABLE.                                   04250000
//********************************************************************* 04260000
//DSNTIJP EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     04270000
//SYSTSPRT DD  SYSOUT=*                                                 04280000
//SYSPRINT DD  SYSOUT=*                                                 04290000
//SYSUDUMP DD  SYSOUT=*                                                 04300000
//SYSTSIN  DD  *                                                        04310000
  DSN SYSTEM(DSN)                                                       04320000
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) -                                04330000
       LIBRARY('DSN§§0.RUNLIB.LOAD')                                    04340000
  END                                                                   04350000
//SYSIN    DD  *                                                        04360000
//*        DD  DDNAME=CLEANUP     <- DROP THE PROG AUTH DATABASE        04370000
//         DD  DDNAME=CREATEDB    <- CREATE THE PROG AUTH DATABASE      04380000
//         DD  DDNAME=CREATENT    <- CREATE NEW-RELEASE TABLES          04390000
//*                                                                     04400000
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 04410000
//* OPTIONAL: DROP THE PROGRAM AUTHORIZATION DATABASE                   04420000
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 04430000
//CLEANUP  DD  *                                                        04440000
  SET CURRENT SQLID = 'SYSADM';                                         04450000
  DROP DATABASE DSNMDCDB;                                               04460000
  COMMIT;                                                               04470000
//*                                                                     04480000
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 04490000
//* CREATE THE PROGRAM AUTHORIZATION DATABASE                           04500000
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 04510000
//CREATEDB DD  *                                                        04520000
  SET CURRENT SQLID = 'SYSADM';                                         04530000
  CREATE DATABASE DSNMDCDB                                              04540000
         STOGROUP SYSDEFLT                                              04550000
         CCSID UNICODE;                                                 04560000
  CREATE TABLESPACE DSNMDCTS                                            04570000
         IN DSNMDCDB                                                    04580000
         BUFFERPOOL BP0                                                 04590000
         LOCKSIZE ROW                                                   04600000
         LOCKMAX SYSTEM                                                 04610000
         CLOSE NO                                                       04620000
         CCSID UNICODE                                                  04630000
         USING STOGROUP SYSDEFLT;                                       04640000
  CREATE TABLE SYSIBM.DSNPROGAUTH                                       04650000
         ( "PROGNAME"              VARCHAR(24)   NOT NULL               04660000
         , "PLANNAME"              VARCHAR(24)   NOT NULL               04670000
         , "PROGMDCVAL"            CHAR(16)      FOR BIT DATA           04680000
                                                 NOT NULL               04690000
                                                 WITH DEFAULT           04700000
                                   X'00000000000000000000000000000000'  04710000
         , "PROGMDCPAD"            CHAR(1)       NOT NULL               04720000
                                                 WITH DEFAULT '2'       04730000
                                                 CHECK(PROGMDCPAD = '2' 04740000
                                                    OR PROGMDCPAD = '4')04750000
         , "CREATOR"               VARCHAR(128)  NOT NULL               04760000
                                                 WITH DEFAULT           04770000
                                                 CURRENT SQLID          04780000
         , "ENABLED"               CHAR(1)       NOT NULL               04790000
                                                 WITH DEFAULT 'N'       04800000
                                                 CHECK(ENABLED = 'Y'    04810000
                                                    OR ENABLED = 'N')   04820000
         , "CREATETS"              TIMESTAMP     NOT NULL WITH DEFAULT  04830000
         , "REMARKS"               VARCHAR(762)                         04840000
         )                                                              04850000
         IN DSNMDCDB.DSNMDCTS                                           04860000
         CCSID UNICODE;                                                 04870000
  CREATE UNIQUE INDEX SYSIBM.DSNPROGAUTH_IDX1                           04880000
         ON SYSIBM.DSNPROGAUTH                                          04890000
         ( "PROGNAME"                                                   04900000
         , "PLANNAME"                                                   04910000
         )                                                              04920000
         BUFFERPOOL BP0                                                 04930000
         CLOSE NO                                                       04940000
         USING STOGROUP SYSDEFLT;                                       04950000
//*                                                                     04960000
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 04970000
//* CREATE NEW-RELEASE TABLES IN THE PROGRAM AUTHORIZATION DATABASE     04980000
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 04990000
//CREATENT DD  *                                                        05000000
  SET CURRENT SQLID = 'SYSADM';                                         05010000
//*                                                                     05020000
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 05030000
//* Here is a sample insert statement for the DSNPROGAUTH table.        05040000
//* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * 05050000
//*  INSERT INTO SYSIBM.DSNPROGAUTH                                     05060000
//*              ( "PROGNAME"                                           05070000
//*              , "PLANNAME"                                           05080000
//*              , "PROGMDCVAL"                                         05090000
//*              , "PROGMDCPAD"                                         05100000
//*              , "CREATOR"                                            05110000
//*              , "ENABLED"                                            05120000
//*              , "CREATETS"                                           05130000
//*              , "REMARKS"                                            05140000
//*              )                                                      05150000
//*        VALUES( 'DSNTIAD'                                            05160000
//*              , 'DSNTIA§§'                                           05170000
//*              , X'00000000000000000000000000000000'                  05180000
//*              , '2'                                                  05190000
//*              , CURRENT SQLID                                        05200000
//*              , 'N'                                                  05210000
//*              , CURRENT TIMESTAMP                                    05220000
//*              , 'EXAMPLE DSNPROGAUTH ENTRY (DISABLED)'               05230000
//*              );                                                     05240000
//*                                                                     05250000
//*                                                                     05260000
//********************************************************************* 05270000
//* GRANT ACCESS ON OBJECTS CREATED BY THIS JOB                         05280000
//********************************************************************* 05290000
//DSNTIJG EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     05300000
//SYSTSPRT DD  SYSOUT=*                                                 05310000
//SYSPRINT DD  SYSOUT=*                                                 05320000
//SYSUDUMP DD  SYSOUT=*                                                 05330000
//SYSTSIN  DD  *                                                        05340000
  DSN SYSTEM(DSN)                                                       05350000
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) -                                05360000
       LIBRARY('DSN§§0.RUNLIB.LOAD')                                    05370000
  END                                                                   05380000
//SYSIN    DD  *                                                        05390000
SET CURRENT SQLID = 'SYSADM';                                           05400000
GRANT EXECUTE ON PLAN DSNESPCS                                          05410000
      TO PUBLIC;                                                        05420000
GRANT EXECUTE ON PLAN DSNESPRR                                          05430000
      TO PUBLIC;                                                        05440000
GRANT EXECUTE ON PLAN DSNESPUR                                          05450000
      TO PUBLIC;                                                        05460000
GRANT EXECUTE ON PLAN DSNEDCL                                           05470000
      TO PUBLIC;                                                        05480000
GRANT EXECUTE ON PLAN DSNTXAZP                                          05490000
      TO PUBLIC;                                                        05500000
GRANT EXECUTE ON PACKAGE DSNTXAZP.DSNTXAZP                              05510000
      TO PUBLIC;                                                        05520000
GRANT EXECUTE ON PACKAGE DSNUTIL.DSNUGSQL                               05530000
      TO PUBLIC;                                                        05540000
GRANT EXECUTE ON PACKAGE DSNUT§§1.DSNUGSQL                              05550000
      TO PUBLIC;                                                        05560000
GRANT EXECUTE ON PACKAGE DSNJAR.DSNX9LDJ                                05570000
      TO PUBLIC;                                                        05580000

./ ADD NAME=DSNTIJSO
//********************************************************************* 00010000
//* JOB NAME = DSNTIJSO                                                 00020000
//*                                                                     00030000
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM                          00040000
//*                                                                     00050000
//*    Licensed Materials - Property of IBM                             00060000
//*    5650-DB2                                                         00070000
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.         00080000
//*                                                                     00090000
//*    STATUS = Version 12                                              00100000
//*                                                                     00110000
//* FUNCTION = START DB2                                                00120000
//*                                                                     00130000
//* PSEUDOCODE =                                                        00140000
//*   DSNTMVSB  STEP  DB2 management                                    00150000
//*                                                                     00160000
//* NOTES = Start DB2                                                   00170000
//*                                                                     00180000
//* Change activity =                                                   00190000
//*   01/30/2016 z/OSMF workflow artifacts generation           s15572  00200000
//*   11/08/2018 ADD SDSNEXIT to JOBLIB DD                     PH04244  00210000
//*                                                                     00220000
//JOBLIB   DD  DSN=DSN§§0.SDSNEXIT,DISP=SHR                             00230000
//         DD  DSN=DSN§§0.SDSNLOAD,DISP=SHR                             00240000
//DSNTMVSB EXEC PGM=DSNTMVSB,COND=(4,LT)                                00250000
//SYSPRINT DD  SYSOUT=*,DCB=(RECFM=FB,LRECL=133)                        00260000
//CMDOUT   DD  SYSOUT=*                                                 00270000
//CMDOPT   DD  *                                                        00280000
*********************************************************************** 00290000
** STOP DB2                                                             00300000
*********************************************************************** 00310000
*                                                                       00320000
    TYPE<DB2>                                                           00330000
    COMMAND_PREFIX<MVSSPREF>                                            00340000
    COMMAND<STOP>                                                       00350000
    PARAMETERS<MODE(QUIESCE) CASTOUT(YES)>                              00360000
    SUBPARAMETERS<CONSNAME=CONSNAME,IRLMPROC=IRLMPROC>                  00370000
    WAIT_TIMEOUT<180>                                                   00380000

./ ADD NAME=DSNTIJSS
//********************************************************************* 00010000
//*  NAME = DSNTIJSS                                                    00020000
//*                                                                     00030000
//*  DESCRIPTIVE NAME =                                                 00040000
//*    DB2 INSTALLATION JOB STREAM                                      00050000
//*                                                                     00060000
//*    LICENSED MATERIALS - PROPERTY OF IBM                             00070000
//*    5615-DB2                                                         00080002
//*    (C) COPYRIGHT 1982, 2013 IBM CORP.  ALL RIGHTS RESERVED.         00090002
//*                                                                     00100000
//*    STATUS = VERSION 11                                              00110002
//*                                                                     00120000
//*  FUNCTION = CREATE A SAMPLE SMS ENVIRONMENT FOR THE DB2 CATALOG     00130000
//*             AND DIRECTORY DATA SETS.  THE ENVIRONMENT INCLUDES:     00140000
//*             - AN SMS SOURCE CONTROL DATA SET (SCDS) FOR STORING     00150000
//*               THE BASE CONFIGURATION                                00160000
//*             - AN SMS STORAGE GROUP                                  00170000
//*             - AN SMS STORAGE CLASS WITH 3 ENABLED VOLUMES           00180000
//*             - AN SMS DATA CLASS FOR ALLOCATING DATA SETS IN         00190000
//*               EXTENDED FORMAT AND TO USE EXTENDED ADDRESSABILITY    00200000
//*             - SMS AUTOMATIC CLASS SELECTION (ACS) ROUTINES FOR      00210000
//*               MANAGING THE DB2 CATALOG AND DIRECTORY DATA SETS IN   00220000
//*               THE STORAGE GROUP, STORAGE CLASS, AND DATA CLASS      00230000
//*                                                                     00240000
//*  PSEUDOCODE =                                                       00250000
//*    STEP010  STEP     DELETE ISMF PROFILE FOR DB2 CAT/DIR DATA SETS  00260000
//*                      (OPTIONAL)                                     00270000
//*    STEP021  STEP     CREATE A DATA SET FOR SAVING ISMF TABLES       00280000
//*    STEP023  STEP     ALLOCATE A SCDS                                00290000
//*    STEP025  STEP     DEFINE A BASE CONFIGURATION                    00300000
//*    STEP027  STEP     DISPLAY THE BASE CONFIGURATION.                00310000
//*    STEP031  STEP     SET UP A DEFINE FOR A STORAGE GROUP            00320000
//*    STEP035  STEP     PROCESS THE ABOVE SETUP REQUEST                00330000
//*    STEP041  STEP     SET UP AN ADD VOLUME(S) TO STORAGE GROUP(S)    00340000
//*    STEP045  STEP     PROCESS THE ABOVE SETUP REQUEST                00350000
//*    STEP051  STEP     DEFINE A STORAGE CLASS IN THE SCDS             00360000
//*    STEP055  STEP     DISPLAY A STORAGE CLASS IN THE SCDS            00370000
//*    STEP061  STEP     DEFINE A DATA CLASS IN THE SCDS                00380000
//*    STEP065  STEP     DISPLAY A DATA CLASS IN THE SCDS               00390000
//*    STEP071  STEP     GENERATE STATEMENTS FOR ACS ROUTINES           00400000
//*    STEP075  STEP     TRANSLATE ACS ROUTINES.                        00410000
//*    STEP077  STEP     PRINT OUT THE TRANSLATION LISTINGS             00420000
//*    STEP081  STEP     VALIDATE THE UPDATED SCDS                      00430000
//*    STEP085  STEP     PRINT THE SCDS VALIDATION RESULT               00440000
//*                                                                     00450000
//*  DEPENDENCIES =                                                     00460000
//*    DISK VOLUMES NEED TO BE INITIALIZED FOR SMS BEFORE YOU ADD THEM  00470000
//*    TO AN SMS STORAGE GROUP.                                         00480000
//*                                                                     00490000
//*  NOTES =                                                            00500000
//*  - THE ENVIRONMENT CREATED BY THIS JOB IS ONLY FOR DB2 CATALOG AND  00510000
//*    DIRECTORY DATA SETS, WHICH MUST BE SMS-MANAGED.                  00520000
//*    OTHER DB2 SUBSYSTEM DATA SETS SUCH AS LOGS AND THE BSDS ARE NOT  00530000
//*    ACCOUNTED FOR IN THIS ENVIRONMENT.                               00540000
//*  - THIS JOB SHOWS HOW TO CREATE A STAND-ALONE SMS ENVIRONMENT FOR   00550000
//*    THE DB2 CATALOG AND DIRECTORY DATA SETS.  IT IS DESIGNED FOR USE 00560000
//*    ON SYSTEMS THAT DO NOT ALREADY HAVE A SMS ENVIRONMENT, BUT IT    00570000
//*    CAN ALSO BE USED AS A REFERENCE FOR ADAPTING AN EXISTING ONE.    00580000
//*    IN PARTICULAR, JOB STEP STEP061 SHOWS AN EXAMPLE OF DEFINING A   00590000
//*    DATA CLASS WITH THE EXTENDED ADDRESSABILITY ATTRIBUTE, AND JOB   00600000
//*    STEP STEP071 SHOWS EXAMPLE ACS ROUTINES THAT ASSOCIATE THE DB2   00610000
//*    CATALOG AND DIRECTORY DATA SETS WITH THE DATA CLASS AND A        00620000
//*    STORAGE CLASS.                                                   00630000
//*  - REFERENCES:                                                      00640000
//*    - Z/OS DFSMS INTRODUCTION                                        00650000
//*    - Z/OS DFSMS IMPLEMENTING SYSTEM-MANAGED STORAGE                 00660000
//*    - Z/OS DFSMS STORAGE ADMINISTRATION REFERENCE (FOR DFSMSDFP,     00670000
//*      DFSMSD, DFSMSHSM)                                              00680000
//*    - REDBOOK: MAINTAINING YOUR SMS ENVIRONMENT                      00690000
//*  - PRIOR TO RUNNING THIS JOB, CUSTOMIZE IT FOR YOUR SYSTEM:         00700000
//*    (1) ADD A VALID JOB CARD                                         00710000
//*    (2) LOCATE AND CHANGE ALL OCCURRENCES OF THE FOLLOWING STRINGS   00720000
//*        AS INDICATED:                                                00730000
//*        (A) DSNC§§0 TO THE FIRST-LEVEL QUALIFIER OF THE CATALOG      00740000
//*            ALIAS FOR DB2 CATALOG AND DIRECTORY DATA SETS.  THIS IS  00750000
//*            ALSO THE SETTING OF THE DSN6SPRM.CATALOG SYSPARM.        00760000
//*        (B) §DSN§ TO THE PREFIX FOR THE SMS PROFILE DATA SETS FOR    00770000
//*            DB2:                                                     00780000
//*            - §DSN§.DSNSMS.SCDS ............. SOURCE CONTROL DATA    00790000
//*                                              SET FOR BASE CONFIG    00800000
//*            - §DSN§.DSNSMS.ISPTABL .......... SAVED ISMF TABLES      00810000
//*            - §DSN§.DSNSMS.STORGRP.LISTING .. SMS STORAGE GROUP LIST 00820000
//*            - §DSN§.DSNSMS.STORCLAS.LISTING . SMS STORAGE CLASS LIST 00830000
//*            - §DSN§.DSNSMS.DATACLAS.LISTING . SMS DATA CLASS LIST    00840000
//*            - §DSN§.DSNSMS.VALIDATE.LISTING . SCDS VALIDATION LIST   00850000
//*            - §DSN§.DSNSMS.ACS.LIBRARY ...... SMS ACCESS CONTROL     00860000
//*                                              STATEMENTS             00870000
//*        (C) §DGT§ TO THE PREFIX FOR ISMF/NAVIQUEST DATA SETS         00880000
//*        (D) §ISP§ TO THE PREFIX FOR ISPF DATA SETS                   00890000
//*        (E) §DSNV01§ TO THE VOLUME FOR THE SAVED ISMF TABLE LIB      00900000
//*        (F) §SYS§ TO THE NAME OF ONE OR MORE Z/OS SYSTEMS THAT       00910000
//*            WILL USE THE SCDS DEFINED IN JOB STEP STEP025.  SEPAR-   00920000
//*            ATE NAMES WITH A COMMA.  EXAMPLE:                        00930000
//*              ADDSYS(SYS1,SYS2,SYS3)                                 00940000
//*            IF YOU BYPASS JOB STEP STEP025 AND USE AN EXISTING       00950000
//*            SCDS THEN YOU DO NOT NEED TO UPDATE THIS SETTING.        00960000
//*        (G) §SGRP§ TO THE NAME OF ONE OR MORE Z/OS SYSTEM GROUPS     00970000
//*            THAT WILL USE THE SCDS DEFINED IN JOB STEP STEP025.      00980000
//*            SEPARATE NAMES WITH A COMMA.  EXAMPLE:                   00990000
//*              ADDGRP(SGRP1,SGRP2,SGRP3)                              01000000
//*            IF YOU BYPASS JOB STEP STEP025 AND USE AN EXISTING       01010000
//*            SCDS THEN YOU DO NOT NEED TO UPDATE THIS SETTING.        01020000
//*        (H) §STORGRP§ TO THE NAME OF THE SMS STORAGE GROUP FOR DB2   01030000
//*            CATALOG AND DIRECTORY DATA SETS.                         01040000
//*        (I) §SMSVOL1§, §SMSVOL2§, §SMSVOL3§ TO THE NAMES OF THREE    01050000
//*            DISK VOLUMES TO BE ENABLED IN THE SMS STORAGE GROUP      01060000
//*            NAMED CALLED §STORGRP§.  USE THE VOLADD STATEMENTS FOR   01070000
//*            THESE VOLUMES AS A MODEL FOR ENABLING ADDITIONAL VOLUMES 01080000
//*        (J) §STCNAME§ TO THE NAME OF AN SMS STORAGE CLASS TO BE      01090000
//*            DEFINED IN THE SCDS FOR THE DB2 CATALOG AND DIRECTORY    01100000
//*            DATA SETS.                                               01110000
//*        (K) §DACNAME§ TO THE NAME OF AN SMS DATA CLASS TO BE         01120000
//*            DEFINED IN THE SCDS FOR THE DB2 CATALOG AND DIRECTORY    01130000
//*            DATA SETS.  THIS DATA CLASS MUST SPECIFY THAT VSAM       01140000
//*            DATA SETS IN ITS CONTROL ARE TO BE ALLOCATED IN EXTENDED 01150000
//*            FORMAT AND USE EXTENDED ADDRESSABILITY.                  01160000
//*                                                                     01170000
//*  - AFTER RUNNING THIS JOB:                                          01180000
//*    (1) USE THIS Z/OS COMMAND TO ACTIVATE THE CHANGES:               01190000
//*          SETSMS SCDS(§DSN§.DSNSMS.SCDS)                             01200000
//*    (2) RUN THE SMS CONVERTV TOOL WITH THE 'TEST' OPTION TO VERIFY   01210000
//*        THAT ALL DATA SETS ON TARGET VOLUMES CAN BE PLACED UNDER     01220000
//*        SMS MANAGEMENT.                                              01230000
//*                                                                     01240000
//*        EXAMPLE OF RUNNING CONVERTV WITH THE 'TEST' OPTION:          01250000
//*                                                                     01260000
//*          //CONVRTV EXEC PGM=ADRDSSU,REGION=5M                       01270000
//*          //SYSPRINT DD SYSOUT=*                                     01280000
//*          //DD1      DD UNIT=SYSALLDA,VOL=SER=TARGVOL1,DISP=OLD      01290000
//*          //DD2      DD UNIT=SYSALLDA,VOL=SER=TARGVOL2,DISP=OLD      01300000
//*          //SYSIN    DD *                                            01310000
//*            CONVERTV DDNAME(DD1) SMS TEST CATALOG                    01320000
//*            CONVERTV DDNAME(DD2) SMS TEST CATALOG                    01330000
//*          /*                                                         01340000
//*                                                                     01350000
//*    (3) WHEN CONVERTV 'TEST' REPORTS THAT ALL DATA SETS ON THE       01360000
//*        TARGET VOLUMES CAN BE PLACED UNDER SMS MANAGEMENT, RERUN     01370000
//*        CONVERTV WITHOUT THE 'TEST' OPTION TO CONVERT THEM.          01380000
//*        DO NOT RUN CONVERTV WITHOUT THE 'TEST' OPTION IF ANY DATA    01390000
//*        SETS CANNOT BE CONVERTED.  YOU MUST EITHER CREATE ADDITIONAL 01400000
//*        ACS ROUTINES TO MANAGE THESE DATA SETS OR MOVE THEM TO       01410000
//*        DIFFERENT (NON-SMS) VOLUMES.                                 01420000
//*                                                                     01430000
//*  CHANGE ACTIVITY =                                                  01440000
//*    04/17/2013 CLARIFY SCOPE                                 PM86654 01450000
//*                                                                     01460000
//*-------------------------------------------------------------------- 01470000
//* ACBJBAOB: IN-STREAM PROCEDURE FOR CREATING AN ISMF INVIRONMENT      01480000
//*-------------------------------------------------------------------- 01490000
//ACBJBAOB PROC CLIST1='§DGT§.DGTCLIB',            /* ISMF CLIST LIB */ 01500000
//             PLIB1='§DGT§.DGTPLIB',              /* ISMF PANEL LIB */ 01510000
//             LOAD1='§DGT§.DGTLLIB',              /* ISMF LOAD LIB  */ 01520000
//             MLIB1='§DGT§.DGTMLIB',              /* ISMF MSG LIB   */ 01530000
//             TABL2='§DSN§.DSNSMS.ISPTABL'        /* SAVED ISMF TBLS*/ 01540000
//*                                                                     01550000
//ISMF     EXEC PGM=IKJEFT01,                                           01560000
//             COND=(4,LT),                                             01570000
//             DYNAMNBR=50,REGION=(6144K),TIME=(300)                    01580000
//STEPLIB   DD DISP=SHR,DSN=&LOAD1                                      01590000
//          DD DISP=SHR,DSN=§ISP§.SISPLOAD                              01600000
//ISPPLIB   DD DISP=SHR,DSN=&PLIB1,BLKSIZE=0       /* NVQUEST PANELS */ 01610000
//          DD DISP=SHR,DSN=§ISP§.SISPPENU         /* ISPF PANELS    */ 01620000
//ISPMLIB   DD DISP=SHR,DSN=&MLIB1,BLKSIZE=0       /* NVQUEST MSGS   */ 01630000
//          DD DISP=SHR,DSN=§ISP§.SISPMENU         /* ISPF MESSAGES  */ 01640000
//ISPSLIB   DD DISP=SHR,DSN=§ISP§.SISPSENU,        /* ISPF SKELETONS */ 01650000
//             BLKSIZE=0                                                01660000
//          DD DISP=SHR,DSN=§DGT§.DGTSLIB          /* ISMF SKELETONS */ 01670000
//ISPTLIB   DD DSN=&&TEMP,                                              01680000
//             DISP=NEW,                                                01690000
//             UNIT=SYSDA,SPACE=(TRK,(1,1,1)),                          01700000
//             DCB=(§ISP§.SISPTENU)                                     01710000
//          DD DISP=SHR,DSN=&TABL2                                      01720000
//          DD DISP=SHR,DSN=§ISP§.SISPTENU          /* ISPF TABLES   */ 01730000
//          DD DISP=SHR,DSN=§DGT§.DGTTLIB           /* ISMF TABLES   */ 01740000
//SYSPROC   DD DISP=SHR,DSN=&CLIST1,                                    01750000
//             BLKSIZE=0                                                01760000
//          DD DISP=SHR,DSN=§ISP§.SISPCLIB          /* ISPF CLISTS   */ 01770000
//ISPTABL   DD DISP=SHR,DSN=&TABL2,BLKSIZE=0                            01780000
//SYSPRINT  DD SYSOUT=*                                                 01790000
//SYSUDUMP  DD SYSOUT=*                                                 01800000
//SYSTSPRT  DD SYSOUT=(,),OUTLIM=20000                                  01810000
//ISPLOG    DD SYSOUT=(,),DCB=(LRECL=125,BLKSIZE=129,RECFM=VA)          01820000
//ISPPROF   DD DSN=&&PROF,                                              01830000
//             DISP=(NEW,DELETE,DELETE),                                01840000
//             DCB=(§ISP§.SISPTENU),SPACE=(TRK,(1,1,1)),UNIT=SYSDA      01850000
//         PEND                                                         01860000
//*                                                                     01870000
//*-------------------------------------------------------------------- 01880000
//* STEP010 (OPTIONAL): DELETE ISMF PROFILE FOR DB2 CAT/DIR DATA SETS   01890000
//*-------------------------------------------------------------------- 01900000
//*  //STEP010  EXEC PGM=IDCAMS                                         01910000
//*  //SYSPRINT  DD SYSOUT=*                                            01920000
//*  //SYSIN     DD *                                                   01930000
//*      DELETE §DSN§.DSNSMS.ISPTABL PURGE                              01940000
//*      DELETE §DSN§.DSNSMS.DATACLAS.LISTING PURGE                     01950000
//*      DELETE §DSN§.DSNSMS.STORCLAS.LISTING PURGE                     01960000
//*      DELETE §DSN§.DSNSMS.STORGRP.LISTING PURGE                      01970000
//*      DELETE §DSN§.DSNSMS.VALIDATE.LISTING PURGE                     01980000
//*      DELETE §DSN§.DSNSMS.ACS.LIBRARY PURGE                          01990000
//*      DELETE §DSN§.DSNSMS.SCDS PURGE                                 02000000
//*      SET MAXCC=0                                                    02010000
//*      SET LASTCC=0                                                   02020000
//*                                                                     02030000
//*-------------------------------------------------------------------- 02040000
//* STEP021: CREATE A DATA SET FOR SAVING ISMF TABLES                   02050000
//*-------------------------------------------------------------------- 02060000
//STEP021 EXEC PGM=IEFBR14,COND=(4,LT)                                  02070000
//ISPTABL  DD DSN=§DSN§.DSNSMS.ISPTABL,                                 02080000
//            DISP=(NEW,CATLG),                                         02090000
//            UNIT=SYSDA,SPACE=(CYL,(2,5,20)),                          02100000
//            LIKE=§DGT§.DGTTLIB                                        02110000
//*                                                                     02120000
//*-------------------------------------------------------------------- 02130000
//* STEP023: ALLOCATE A SCDS TO STORE THE BASE CONFIGURATION            02140000
//*-------------------------------------------------------------------- 02150000
//STEP023 EXEC PGM=IDCAMS,COND=(4,LT)                                   02160000
//SYSPRINT DD SYSOUT=*                                                  02170000
//SYSIN    DD *                                                         02180000
   DEFINE CLUSTER                             -                         02190000
         ( NAME(§DSN§.DSNSMS.SCDS)            -                         02200000
           LINEAR                             -                         02210000
           VOL(§DSNV01§)                      -                         02220000
           TRK(36 36)                         -                         02230000
           SHAREOPTIONS(2 3) )                -                         02240000
       DATA                                   -                         02250000
         ( NAME(§DSN§.DSNSMS.SCDS.DATA) )                               02260000
//*                                                                     02270000
//*-------------------------------------------------------------------- 02280000
//* STEP025: DEFINE A BASE CONFIGURATION                                02290000
//*-------------------------------------------------------------------- 02300000
//STEP025 EXEC ACBJBAOB,COND=(4,LT)                                     02310000
//SYSUDUMP DD  SYSOUT=*                                                 02320000
//SYSTSIN  DD *                                                         02330000
  ISPSTART +                                                            02340000
    CMD(ACBQBAB1 DEFINE +                                               02350000
        SCDS('§DSN§.DSNSMS.SCDS') +                                     02360000
        DESCR(SCDS FOR DB2 CATALOG AND DIRECTORY DATA SETS) +           02370000
        DEFMC() +                                                       02380000
        DEFUNIT() +                                                     02390000
        BYTPTRK(56664) +                                                02400000
        TRKPCYL(15) +                                                   02410000
        DSSEPPL() +                                                     02420000
        ADDSYS(§SYS§) +                                                 02430000
        ADDGRP(§SGRP§) +                                                02440000
        UPDHLVLSCDS(Y) +                                                02450000
       ) +                                                              02460000
    BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)               02470000
//*                                                                     02480000
//*-------------------------------------------------------------------- 02490000
//* STEP027: DISPLAY THE BASE CONFIGURATION.                            02500000
//*-------------------------------------------------------------------- 02510000
//STEP027 EXEC ACBJBAOB,COND=(4,LT)                                     02520000
//SYSUDUMP DD  SYSOUT=*                                                 02530000
//SYSTSIN  DD *                                                         02540000
  ISPSTART +                                                            02550000
    CMD(ACBQBAB1 DISPLAY +                                              02560000
        SCDS('§DSN§.DSNSMS.SCDS') +                                     02570000
       ) +                                                              02580000
    BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(999999)               02590000
//*                                                                     02600000
//*-------------------------------------------------------------------- 02610000
//* STEP031: SET UP A DEFINE FOR A STORAGE GROUP                        02620000
//*-------------------------------------------------------------------- 02630000
//STEP031 EXEC ACBJBAOB,COND=(4,LT)                                     02640000
//SYSUDUMP DD SYSOUT=*                                                  02650000
//TEMPFILE DD DSN=&&TEMPFILE,                                           02660000
//            DISP=(,PASS),                                             02670000
//            UNIT=SYSDA,SPACE=(TRK,(1,1)),                             02680000
//            DCB=(LRECL=300,RECFM=F,BLKSIZE=300)                       02690000
//SYSTSIN  DD *                                                         02700000
  ISPSTART +                                                            02710000
    CMD(ACBQBAJ2 DEFINE +                                               02720000
        SCDS('§DSN§.DSNSMS.SCDS') +                                     02730000
        STORGRP(§STORGRP§) +                                            02740000
        DESCR(STORAGE GROUP FOR DB2 CATALOG AND DIRECTORY DATA SETS) +  02750000
        AUTOMIG() +                                                     02760000
        MIGSYSNM() +                                                    02770000
        AUTOBKUP() +                                                    02780000
        BKUPSYS() +                                                     02790000
        AUTODUMP() +                                                    02800000
        DMPSYSNM() +                                                    02810000
        OVRFLOW() +                                                     02820000
        EXTSGNM() +                                                     02830000
        DUMPCLAS() +                                                    02840000
        HIGHTHRS(85) +                                                  02850000
        LOWTHRS(30) +                                                   02860000
        GUARBKFR(NOLIMIT) +                                             02870000
        SGSTATUS() +                                                    02880000
        UPDHLVLSCDS(Y) +                                                02890000
       )                                                                02900000
//*                                                                     02910000
//*-------------------------------------------------------------------- 02920000
//* STEP035: PROCESS THE ABOVE SETUP REQUEST                            02930000
//*-------------------------------------------------------------------- 02940000
//STEP035 EXEC ACBJBAOB,COND=(4,LT)                                     02950000
//SYSUDUMP DD SYSOUT=*                                                  02960000
//SYSTSIN  DD DSN=&&TEMPFILE,DISP=(OLD,DELETE)                          02970000
//*                                                                     02980000
//*-------------------------------------------------------------------- 02990000
//* STEP041: SET UP AN ADD VOLUME(S) TO STORAGE GROUP(S)                03000000
//*-------------------------------------------------------------------- 03010000
//STEP041 EXEC ACBJBAOB,COND=(4,LT)                                     03020000
//SYSUDUMP DD SYSOUT=*                                                  03030000
//TEMPFILE DD DSN=&&VOLADDS,                                            03040000
//            DISP=(,PASS),                                             03050000
//            UNIT=SYSDA,SPACE=(TRK,(1,1)),                             03060000
//            DCB=(LRECL=80,RECFM=F,BLKSIZE=80)                         03070000
//SYSTSIN  DD *                                                         03080000
  ISPSTART +                                                            03090000
    CMD(ACBQBAI9) +                                                     03100000
    BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)             03110000
//VOLADD   DD *                                                         03120000
  UPDHLVLSCDS(Y)                                                        03130000
  SCDSNAME('§DSN§.DSNSMS.SCDS') +                                       03140000
    VOL(§SMSVOL1§) SG(§STORGRP§) STATUS(ENABLE)                         03150000
  SCDSNAME('§DSN§.DSNSMS.SCDS') +                                       03160000
    VOL(§SMSVOL2§) SG(§STORGRP§) STATUS(ENABLE)                         03170000
  SCDSNAME('§DSN§.DSNSMS.SCDS') +                                       03180000
    VOL(§SMSVOL3§) SG(§STORGRP§) STATUS(ENABLE)                         03190000
//VOLALT   DD *                                                         03200000
//VOLDEL   DD *                                                         03210000
//*                                                                     03220000
//*-------------------------------------------------------------------- 03230000
//* STEP045: PROCESS THE ABOVE SETUP REQUEST                            03240000
//*-------------------------------------------------------------------- 03250000
//STEP045   EXEC ACBJBAOB,COND=(4,LT)                                   03260000
//SYSUDUMP DD SYSOUT=*                                                  03270000
//SYSTSIN  DD DSN=&&VOLADDS,DISP=(OLD,DELETE)                           03280000
//*                                                                     03290000
//*-------------------------------------------------------------------- 03300000
//* STEP051: DEFINE A STORAGE CLASS IN THE SCDS                         03310000
//*-------------------------------------------------------------------- 03320000
//STEP051 EXEC ACBJBAOB,COND=(4,LT)                                     03330000
//SYSUDUMP DD SYSOUT=*                                                  03340000
//SYSTSIN  DD *                                                         03350000
  ISPSTART +                                                            03360000
    CMD(ACBQBAS1 DEFINE +                                               03370000
        SCDS('§DSN§.DSNSMS.SCDS') +                                     03380000
        STCNAME(§STCNAME§) +                                            03390000
        DESCR(STORAGE CLASS FOR DB2 CATALOG AND DIRECTORY DATA SETS) +  03400000
        DMSRESP() +                                                     03410000
        DRTBIAS() +                                                     03420000
        SEQMSRES() +                                                    03430000
        SEQBIAS() +                                                     03440000
        INIARESS() +                                                    03450000
        SUSDTRT() +                                                     03460000
        AVALBTY() +                                                     03470000
        ACCSBTY(C) +                                                    03480000
        GURNTSPC() +                                                    03490000
        GUASYNWR() +                                                    03500000
        MULTITSG() +                                                    03510000
        CFCACSTN() +                                                    03520000
        CFDTWGHT() +                                                    03530000
        CFSEQWHT() +                                                    03540000
        UPDHLVLSCDS(Y) +                                                03550000
        )                                                               03560000
//*                                                                     03570000
//*-------------------------------------------------------------------- 03580000
//* STEP055: DISPLAY A STORAGE CLASS IN THE SCDS                        03590000
//*-------------------------------------------------------------------- 03600000
//STEP055 EXEC ACBJBAOB,COND=(4,LT)                                     03610000
//SYSUDUMP DD SYSOUT=*                                                  03620000
//SYSTSIN  DD *                                                         03630000
  ISPSTART +                                                            03640000
    CMD(ACBQBAS1 DISPLAY +                                              03650000
        SCDS('§DSN§.DSNSMS.SCDS') +                                     03660000
        STCNAME(§STCNAME§) +                                            03670000
        )                                                               03680000
//*                                                                     03690000
//*-------------------------------------------------------------------- 03700000
//* STEP061: DEFINE A DATA CLASS IN THE SCDS                            03710000
//*-------------------------------------------------------------------- 03720000
//STEP061 EXEC ACBJBAOB,COND=(4,LT)                                     03730000
//SYSUDUMP DD SYSOUT=*                                                  03740000
//SYSTSIN  DD *                                                         03750000
  ISPSTART +                                                            03760000
    CMD(ACBQBAD1 DEFINE +                                               03770000
        SCDS('§DSN§.DSNSMS.SCDS') +                                     03780000
        DCNAME(§DACNAME§) +                                             03790000
        DESCR(DATA CLASS FOR DB2 CATALOG AND DIRECTORY DATA SETS) +     03800000
        RECORG() +                                                      03810000
        RECFM() +                                                       03820000
        LRECL() +                                                       03830000
        KEYLEN() +                                                      03840000
        KEYOFF() +                                                      03850000
        SPCAVREC() +                                                    03860000
        SPCAVVAL() +                                                    03870000
        SPCPRM() +                                                      03880000
        SPCSEC() +                                                      03890000
        SPCDIR() +                                                      03900000
        REXPPDT() +                                                     03910000
        VOLCNT() +                                                      03920000
        ADDVOLAM() +                                                    03930000
        CISZDATA() +                                                    03940000
        FRSPCCI() +                                                     03950000
        FRSPCCA() +                                                     03960000
        SHRXREG() +                                                     03970000
        SHRXSYS() +                                                     03980000
        COMPTN() +                                                      03990000
        MDTYPE() +                                                      04000000
        RECTECH() +                                                     04010000
        DSNMTYP(EXT) +                                                  04020000
        IFEXT(R) +                                                      04030000
        EXTADDRS(Y) +                                                   04040000
        RECACCB(U) +                                                    04050000
        REUSE() +                                                       04060000
        INILOAD() +                                                     04070000
        SPANONSP() +                                                    04080000
        BWO() +                                                         04090000
        LOG() +                                                         04100000
        LOGSTID() +                                                     04110000
        SPCCONRL() +                                                    04120000
        REDSPCUT() +                                                    04130000
        MAXVOL() +                                                      04140000
        UPDHLVLSCDS(Y) +                                                04150000
       ) +                                                              04160000
    BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)             04170000
//*                                                                     04180000
//*-------------------------------------------------------------------- 04190000
//* STEP065: DISPLAY A DATA CLASS IN THE SCDS                           04200000
//*-------------------------------------------------------------------- 04210000
//STEP065 EXEC ACBJBAOB,COND=(4,LT)                                     04220000
//SYSUDUMP DD SYSOUT=*                                                  04230000
//SYSTSIN  DD *                                                         04240000
  ISPSTART +                                                            04250000
    CMD(ACBQBAD1 DISPLAY +                                              04260000
        SCDS('§DSN§.DSNSMS.SCDS') +                                     04270000
        DCNAME(§DACNAME§) +                                             04280000
        )                                                               04290000
//*                                                                     04300000
//*-------------------------------------------------------------------- 04310000
//* STEP071: GENERATE STATEMENTS FOR ACS ROUTINES                       04320000
//*-------------------------------------------------------------------- 04330000
//STEP071 EXEC PGM=IEBGENER,COND=(4,LT)                                 04340000
//SYSPRINT DD SYSOUT=A                                                  04350000
//SYSUT2   DD DSN=§DSN§.DSNSMS.ACS.LIBRARY,                             04360000
//            DISP=(NEW,CATLG),                                         04370000
//            UNIT=SYSDA,SPACE=(TRK,(5,1,10)),                          04380000
//            DCB=(RECFM=FB,LRECL=80,BLKSIZE=800)                       04390000
//SYSIN    DD *                                                         04400000
     GENERATE   MAXNAME=4,MAXGPS=3                                      04410000
       MEMBER   NAME=DATACLAS                                           04420000
GROUP1 RECORD   IDENT=(3,'END',1)                                       04430000
       MEMBER   NAME=STORCLAS                                           04440000
GROUP3 RECORD   IDENT=(3,'END',1)                                       04450000
       MEMBER   NAME=STORGRP                                            04460000
/*                                                                      04470000
//SYSUT1   DD *                                                         04480000
PROC 1 DATACLAS                           /* DATACLASS START */         04490000
IF &DSN(1) = 'DSNC§§0' THEN                                             04500000
  DO                                                                    04510000
    IF &DSN(2) = 'DSNDBC' THEN                                          04520000
      DO                                                                04530000
        IF &DSN(3) = 'DSNDB01' THEN                                     04540000
          DO                                                            04550000
            SET &DATACLAS='§DACNAME§'                                   04560000
          END                                                           04570000
        IF &DSN(3) = 'DSNDB06' THEN                                     04580000
          DO                                                            04590000
            SET &DATACLAS='§DACNAME§'                                   04600000
          END                                                           04610000
      END                                                               04620000
    IF &DSN(2) = 'DSNDBD' THEN                                          04630000
      DO                                                                04640000
        IF &DSN(3) = 'DSNDB01' THEN                                     04650000
          DO                                                            04660000
            SET &DATACLAS='§DACNAME§'                                   04670000
          END                                                           04680000
        IF &DSN(3) = 'DSNDB06' THEN                                     04690000
          DO                                                            04700000
            SET &DATACLAS='§DACNAME§'                                   04710000
          END                                                           04720000
      END                                                               04730000
  END                                                                   04740000
END                                       /* DATACLASS END  */          04750000
PROC 1 STORCLAS                           /* STORCLASS START */         04760000
IF &DSN(1) = 'DSNC§§0' THEN                                             04770000
  DO                                                                    04780000
    IF &DSN(2) = 'DSNDBC' THEN                                          04790000
      DO                                                                04800000
        IF &DSN(3) = 'DSNDB01' THEN                                     04810000
          DO                                                            04820000
            SET &STORCLAS='§STCNAME§'                                   04830000
          END                                                           04840000
        IF &DSN(3) = 'DSNDB06' THEN                                     04850000
          DO                                                            04860000
            SET &STORCLAS='§STCNAME§'                                   04870000
          END                                                           04880000
      END                                                               04890000
    IF &DSN(2) = 'DSNDBD' THEN                                          04900000
      DO                                                                04910000
        IF &DSN(3) = 'DSNDB01' THEN                                     04920000
          DO                                                            04930000
            SET &STORCLAS='§STCNAME§'                                   04940000
          END                                                           04950000
        IF &DSN(3) = 'DSNDB06' THEN                                     04960000
          DO                                                            04970000
            SET &STORCLAS='§STCNAME§'                                   04980000
          END                                                           04990000
      END                                                               05000000
  END                                                                   05010000
END                                       /* STORCLASS END  */          05020000
PROC 1 STORGRP                            /* STORGRP START  */          05030000
IF &STORCLAS = '§STCNAME§' THEN                                         05040000
  DO                                                                    05050000
    SET &STORGRP = '§STORGRP§'                                          05060000
  END                                                                   05070000
END                                       /* STORGRP END    */          05080000
/*                                                                      05090000
//*-------------------------------------------------------------------- 05100000
//* STEP075: TRANSLATE ACS ROUTINES.                                    05110000
//*-------------------------------------------------------------------- 05120000
//STEP075 EXEC ACBJBAOB,COND=(4,LT)                                     05130000
//DCLISTNG DD DSN=§DSN§.DSNSMS.DATACLAS.LISTING,                        05140000
//            DISP=(NEW,CATLG),                                         05150000
//            UNIT=SYSDA,SPACE=(CYL,(1,1)),                             05160000
//            DCB=(DSORG=PS,RECFM=FBA,LRECL=133,BLKSIZE=2660)           05170000
//SCLISTNG DD DSN=§DSN§.DSNSMS.STORCLAS.LISTING,                        05180000
//            DISP=(NEW,CATLG),                                         05190000
//            UNIT=SYSDA,SPACE=(CYL,(1,1)),                             05200000
//            DCB=(DSORG=PS,RECFM=FBA,LRECL=133,BLKSIZE=2660)           05210000
//SGLISTNG DD DSN=§DSN§.DSNSMS.STORGRP.LISTING,                         05220000
//            DISP=(NEW,CATLG),                                         05230000
//            UNIT=SYSDA,SPACE=(CYL,(1,1)),                             05240000
//            DCB=(DSORG=PS,RECFM=FBA,LRECL=133,BLKSIZE=2660)           05250000
//SYSTSIN  DD *                                                         05260000
  ISPSTART +                                                            05270000
    CMD(ACBQBAO1 +                                                      05280000
        ACSSRC('§DSN§.DSNSMS.ACS.LIBRARY') +                            05290000
        MEMBER(DATACLAS) +                                              05300000
        SCDSNAME('§DSN§.DSNSMS.SCDS') +                                 05310000
        LISTNAME('§DSN§.DSNSMS.DATACLAS.LISTING') +                     05320000
        UPDHLVLSCDS(Y) +                                                05330000
       ) +                                                              05340000
    NEWAPPL(DGT) +                                                      05350000
    BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)             05360000
  ISPSTART +                                                            05370000
    CMD(ACBQBAO1 +                                                      05380000
        ACSSRC('§DSN§.DSNSMS.ACS.LIBRARY') +                            05390000
        MEMBER(STORCLAS) +                                              05400000
        SCDSNAME('§DSN§.DSNSMS.SCDS') +                                 05410000
        LISTNAME('§DSN§.DSNSMS.STORCLAS.LISTING') +                     05420000
        UPDHLVLSCDS(Y) +                                                05430000
       ) +                                                              05440000
    NEWAPPL(DGT) +                                                      05450000
    BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)             05460000
  ISPSTART +                                                            05470000
    CMD(ACBQBAO1 +                                                      05480000
        ACSSRC('§DSN§.DSNSMS.ACS.LIBRARY') +                            05490000
        MEMBER(STORGRP) +                                               05500000
        SCDSNAME('§DSN§.DSNSMS.SCDS') +                                 05510000
        LISTNAME('§DSN§.DSNSMS.STORGRP.LISTING') +                      05520000
        UPDHLVLSCDS(Y) +                                                05530000
       ) +                                                              05540000
    NEWAPPL(DGT) +                                                      05550000
    BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)             05560000
/*                                                                      05570000
//*-------------------------------------------------------------------- 05580000
//* STEP077: PRINT OUT THE TRANSLATION LISTINGS                         05590000
//*-------------------------------------------------------------------- 05600000
//STEP077 EXEC PGM=IEBGENER,COND=(4,LT)                                 05610000
//SYSIN    DD DUMMY                                                     05620000
//SYSPRINT DD SYSOUT=*                                                  05630000
//SYSUT1   DD DSN=§DSN§.DSNSMS.DATACLAS.LISTING,                        05640000
//            DISP=(OLD,DELETE)                                         05650000
//         DD DSN=§DSN§.DSNSMS.STORCLAS.LISTING,                        05660000
//            DISP=(OLD,DELETE)                                         05670000
//         DD DSN=§DSN§.DSNSMS.STORGRP.LISTING,                         05680000
//            DISP=(OLD,DELETE)                                         05690000
//SYSUT2   DD SYSOUT=*                                                  05700000
//*                                                                     05710000
//*-------------------------------------------------------------------- 05720000
//* STEP081: VALIDATE THE UPDATED SCDS                                  05730000
//*-------------------------------------------------------------------- 05740000
//STEP081 EXEC ACBJBAOB,COND=(4,LT)                                     05750000
//VALISTNG DD DSN=§DSN§.DSNSMS.VALIDATE.LISTING,                        05760000
//            DISP=(,CATLG),                                            05770000
//            UNIT=SYSDA,SPACE=(CYL,(1,1)),                             05780000
//            DCB=(DSORG=PS,RECFM=FBA,LRECL=133)                        05790000
//SYSTSIN  DD *                                                         05800000
  ISPSTART +                                                            05810000
    CMD(ACBQBAO2 +                                                      05820000
        SCDSNAME('§DSN§.DSNSMS.SCDS') +                                 05830000
        TYPE(*) +                                                       05840000
        LISTNAME('§DSN§.DSNSMS.VALIDATE.LISTING') +                     05850000
        UPDHLVLSCDS(Y) +                                                05860000
       ) +                                                              05870000
    NEWAPPL(DGT) +                                                      05880000
    BATSCRW(132) BATSCRD(27) BREDIMAX(3) BDISPMAX(99999999)             05890000
//*                                                                     05900000
//*-------------------------------------------------------------------- 05910000
//* STEP085: PRINT THE SCDS VALIDATION RESULT                           05920000
//*-------------------------------------------------------------------- 05930000
//STEP085 EXEC PGM=IEBGENER,COND=(4,LT)                                 05940000
//SYSIN    DD DUMMY                                                     05950000
//SYSPRINT DD SYSOUT=*                                                  05960000
//SYSUT1   DD DSN=§DSN§.DSNSMS.VALIDATE.LISTING,                        05970000
//            DISP=SHR                                                  05980000
//SYSUT2   DD SYSOUT=*                                                  05990000
//*                                                                     06000000

./ ADD NAME=DSNTIJTC
//*********************************************************************
//* JOB NAME = DSNTIJTC
//*
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM
//*
//*    LICENSED MATERIALS - PROPERTY OF IBM
//*    5650-DB2
//*    (C) COPYRIGHT 1982, 2016 IBM CORP.  ALL RIGHTS RESERVED.
//*
//*    STATUS = VERSION 12
//*
//* FUNCTION = TAILOR CATALOG BY ADDING TABLE SPACES, TABLES,
//*            INDEXES, COLUMNS, TABLE CHECK CONSTRAINTS,
//*            REFERENTIAL INTEGRITY, etc.
//*
//* PSEUDOCODE =
//*   DSNTITC  STEP      INVOKE CATMAINT TO TAILOR CATALOG (DDL)
//*   CHKTITC  STEP      CHECK CATMAINT RETURN CODE AND DO ADDITIONAL
//*                      PROCESSING IF NOT SUCCESSFUL
//*   DSNTIRI  STEP      CLEAN UP AFTER ABNORMAL TERMINATION
//*   DSNTITD  STEP      RUN DISPLAY BLOCKERS COMMAND
//*
//* NOTES =
//*   STEP DSNTITC  CANNOT BE RERUN AFTER A SUCCESSFUL RUN (RC=0).
//*
//* CHANGE LOG =
//*   06/17/2013 Add job step DSNTIRI                   166811 / DN1767
//*   04/28/2016 Add CATMAINT UPDATE LEVEL keyword               183579
//*              s27418 - f184263                                183791
//*   08/01/2019 Add DISPLAY BLOCKERS command for error situations.
//*
//*********************************************************************
//JOBLIB  DD  DISP=SHR,
//            DSN=DSN§§0.SDSNLOAD
//*
//*********************************************************************
//* UPDATE CATALOG FOR NEW RELEASE OR FUNCTION LEVEL
//*********************************************************************
//DSNTITC  EXEC PGM=DSNUTILB,REGION=0M,
//          PARM='DSN,RELODCAT'
//SYSPRINT DD   SYSOUT=*
//UTPRINT  DD   SYSOUT=*
//SYSUDUMP DD   SYSOUT=*
//SYSIN    DD  *
   CATMAINT UPDATE LEVEL V12R1M500
//*
//*********************************************************************
//* PERFORM CLEAN UP AND GATHER ADDITIONAL DIAGNOSTICS IF THE
//* PREVIOUS JOB STEP TERMINATES ABNORMALLY
//*********************************************************************
//CHKTITC IF ABEND=TRUE OR RC GE 8 THEN
//*********************************************************************
//*
//*********************************************************************
//* REBUILD ANY CATALOG INDEXES THAT ARE IN REBUILDING PENDING
//*********************************************************************
//DSNTIRI EXEC PGM=DSNUTILB,REGION=0M,
//             PARM='DSN,DSNTIRI'
//SYSPRINT DD  SYSOUT=*
//UTPRINT  DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSIN    DD  *
   CATMAINT UPDATE UNLDDN REBLDIDX
//*
//*********************************************************************
//* RUN DISPLAY BLOCKERS COMMAND FOR CATALOG AND DIRECTORY DATABASES
//*********************************************************************
//DSNTITD EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD *
 DSN SYSTEM(DSN)
 -DIS BLOCKERS (DSNDB06,DSNDB01) DETAIL
 END
//*
//CHKTITC ENDIF
//*

./ ADD NAME=DSNTIJTM
//********************************************************************* 00010000
//*                                                                     00011000
//* JOB NAME = DSNTIJTM                                                 00012000
//*                                                                     00013000
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM                          00014000
//*                                                                     00015000
//*    Licensed Materials - Property of IBM                             00016000
//*    5650-DB2                                                         00017000
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.         00018000
//*                                                                     00019000
//*    STATUS = Version 12                                              00020000
//*                                                                     00021000
//* FUNCTION = CREATE WORK FILE DATABASE AND TABLE SPACES FOR DB2       00022000
//*                                                                     00023000
//* PSEUDOCODE =                                                        00024000
//*   DSNTIAD  STEP      PRECOMPILE, ASSEMBLE, LINKEDIT                 00025000
//*                            DYNAMIC SQL PROGRAM                      00026000
//*   DSNTIAB  STEP      DEFINE BUFFERPOOL SIZES                        00027000
//*                            WITH ALTER BUFFERPOOL COMMANDS           00028000
//*   DSNTIAS  STEP      DROP WORK FILE DATA BASE (DSNDB07)             00029000
//*                            ALSO BIND DYNAMIC SQL PROGRAM            00030000
//*   DSNTICR  STEP      CREATE WORK FILE DATA BASE                     00031000
//*                            AND DEFAULT STORAGE GROUP (SYSDEFLT)     00032000
//*   DSNTIRX  STEP      BIND DB2 REXX LANGUAGE SUPPORT                 00033000
//*   DSNTIST  STEP      CREATE WORK FILE TABLE SPACES                  00034000
//*                                                                     00035000
//* CHANGE ACTIVITY =                                                   00036000
//*   05/16/2011 SORT WORK FILE support                  DK1516/PM17336 00037000
//*   11/07/2012 Add RETAIN to BIND PLAN stmts    dn1651_inst1 / dn1651 00038000
//*              Add SET CURRENT SQLID                                  00039000
//*   05/15/2013 Precompile DSNTIAD with VERSION(AUTO)    90698_040_678 00040000
//*   10/02/2015 Installation w/o SYSADM            s24922_inst1 s24922 00041000
//*   02/15/2016 Long data set names                            PI42601 00042000
//*                                                                     00043000
//********************************************************************* 00044000
//JOBLIB  DD  DISP=SHR,                                                 00045000
//            DSN=DSN§§0.SDSNLOAD                                       00046000
//*                                                                     00047000
//DSNTIAD EXEC DSNHASM,MEM=DSNTIAD,                                     00048000
//             PARM.PC='HOST(ASM),STDSQL(NO),VERSION(AUTO)'             00049000
//PC.DBRMLIB   DD DISP=SHR,                                             00050000
//         DSN=DSN§§0.DBRMLIB.DATA(DSNTIAD)                             00051000
//PC.SYSLIB    DD DSN=DSN§§0.SDSNSAMP,                                  00052000
//             DISP=SHR                                                 00053000
//PC.SYSIN     DD DISP=SHR,                                             00054000
//         DSN=DSN§§0.SDSNSAMP(DSNTIAD)                                 00055000
//ASM.SYSLIB   DD                                                       00056000
//             DD DISP=SHR,                                             00057000
//             DSN=DSN§§0.SDSNSAMP                                      00058000
//LKED.SYSLMOD DD DISP=SHR,                                             00059000
//         DSN=DSN§§0.RUNLIB.LOAD(DSNTIAD)                              00060000
//LKED.SYSIN   DD *                                                     00061000
  INCLUDE SYSLIB(DSNELI)                                                00062000
  NAME DSNTIAD(R)                                                       00063000
//*                                                                     00064000
//DSNTIAB EXEC PGM=IKJEFT01,DYNAMNBR=20                                 00065000
//SYSTSPRT DD  SYSOUT=*                                                 00066000
//SYSPRINT DD  SYSOUT=*                                                 00067000
//SYSUDUMP DD  SYSOUT=*                                                 00068000
//SYSTSIN  DD  *                                                        00069000
  DSN SYSTEM(DSN)                                                       00070000
  -ALTER BUFFERPOOL (BP0) VPSIZE(20000)                                 00071000
  -ALTER BUFFERPOOL (BP8K0) VPSIZE(2000)                                00072000
  -ALTER BUFFERPOOL (BP16K0) VPSIZE(500)                                00073000
  -ALTER BUFFERPOOL (BP32K) VPSIZE(250)                                 00074000
//*                                                                     00075000
//DSNTIAS EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00076000
//SYSTSPRT DD  SYSOUT=*                                                 00077000
//SYSPRINT DD  SYSOUT=*                                                 00078000
//SYSUDUMP DD  SYSOUT=*                                                 00079000
//SYSTSIN  DD  *                                                        00080000
  DSN SYSTEM(DSN)                                                       00081000
  BIND PACKAGE(DSNTIA§§) MEM(DSNTIAD) -                                 00082000
       ACT(REP) ISO(CS) CURRENTDATA(YES) ENCODING(EBCDIC) -             00083000
       LIB('DSN§§0.DBRMLIB.DATA')                                       00084000
  BIND PLAN(DSNTIA§§) PKLIST(DSNTIA§§.DSNTIAD) -                        00085000
       ACTION(REPLACE) RETAIN +                                         00086000
       ISO(CS) CURRENTDATA(YES) ENCODING(EBCDIC)                        00087000
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) PARM('RC0') -                    00088000
       LIB('DSN§§0.RUNLIB.LOAD')                                        00089000
  END                                                                   00090000
//SYSIN    DD  *                                                        00091000
   SET CURRENT SQLID = 'SYSADM';                                        00092000
   DROP DATABASE DSNDB07;                                               00093000
//*                                                                     00094000
//DSNTICR EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00095000
//SYSTSPRT DD  SYSOUT=*                                                 00096000
//SYSPRINT DD  SYSOUT=*                                                 00097000
//SYSUDUMP DD  SYSOUT=*                                                 00098000
//SYSTSIN  DD  *                                                        00099000
  DSN SYSTEM(DSN)                                                       00100000
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) -                                00101000
       LIB('DSN§§0.RUNLIB.LOAD')                                        00102000
  END                                                                   00103000
//SYSIN    DD  *                                                        00104000
   SET CURRENT SQLID = 'SYSADM';                                        00105000
   CREATE STOGROUP SYSDEFLT                                             00106000
          VOLUMES (DSNV01)                                              00107000
          VCAT    DSNC§§0;                                              00108000
   CREATE DATABASE DSNDB07;                                             00109000
   GRANT EXECUTE ON PLAN DSNTIA§§                                       00110000
         TO PUBLIC;                                                     00111000
   GRANT CREATETAB, CREATETS ON DATABASE DSNDB04                        00112000
         TO PUBLIC;                                                     00113000
   GRANT USE OF BUFFERPOOL BP0                                          00114000
         TO PUBLIC;                                                     00115000
   GRANT USE OF STOGROUP SYSDEFLT                                       00116000
         TO PUBLIC;                                                     00117000
   GRANT USE OF TABLESPACE DSNDB04.SYSDEFLT                             00118000
         TO PUBLIC;                                                     00119000
//*                                                                     00120000
//DSNTIRX EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00121000
//SYSTSPRT DD  SYSOUT=*                                                 00122000
//SYSPRINT DD  SYSOUT=*                                                 00123000
//SYSUDUMP DD  SYSOUT=*                                                 00124000
//SYSTSIN  DD  *                                                        00125000
  DSN SYSTEM(DSN)                                                       00126000
  BIND PACKAGE(DSNREXX) MEMBER(DSNREXX)  ACTION(REPLACE) ISO(CS)-       00127000
       LIBRARY('DSN§§0.SDSNDBRM')-                                      00128000
       VALIDATE(BIND) CURRENTDATA(NO)-                                  00129000
       ENCODING(EBCDIC)                                                 00130000
  BIND PACKAGE(DSNREXUR) MEMBER(DSNREXX) ACTION(REPLACE) ISO(UR)-       00131000
       LIBRARY('DSN§§0.SDSNDBRM')-                                      00132000
       VALIDATE(BIND)-                                                  00133000
       ENCODING(EBCDIC)                                                 00134000
  BIND PACKAGE(DSNREXCS) MEMBER(DSNREXX) ACTION(REPLACE) ISO(CS)-       00135000
       LIBRARY('DSN§§0.SDSNDBRM')-                                      00136000
       VALIDATE(BIND) CURRENTDATA(NO)-                                  00137000
       ENCODING(EBCDIC)                                                 00138000
  BIND PACKAGE(DSNREXRS) MEMBER(DSNREXX) ACTION(REPLACE) ISO(RS)-       00139000
       LIBRARY('DSN§§0.SDSNDBRM')-                                      00140000
       VALIDATE(BIND)-                                                  00141000
       ENCODING(EBCDIC)                                                 00142000
  BIND PACKAGE(DSNREXRR) MEMBER(DSNREXX) ACTION(REPLACE) ISO(RR)-       00143000
       LIBRARY('DSN§§0.SDSNDBRM')-                                      00144000
       VALIDATE(BIND)-                                                  00145000
       ENCODING(EBCDIC)                                                 00146000
  BIND PLAN(DSNREXX) -                                                  00147000
       PKLIST(*.DSNREXX.DSNREXX, -                                      00148000
              *.DSNREXUR.DSNREXX, -                                     00149000
              *.DSNREXCS.DSNREXX, -                                     00150000
              *.DSNREXRS.DSNREXX, -                                     00151000
              *.DSNREXRR.DSNREXX) -                                     00152000
       ACTION(REPLACE) RETAIN +                                         00153000
       ISO(CS) CURRENTDATA(YES) SQLRULES(DB2) -                         00154000
       ENCODING(EBCDIC)                                                 00155000
  RUN PROGRAM(DSNTIAD)  PLAN(DSNTIA§§) -                                00156000
       LIB('DSN§§0.RUNLIB.LOAD')                                        00157000
  END                                                                   00158000
//SYSIN    DD  *                                                        00159000
  SET CURRENT SQLID = 'SYSADM';                                         00160000
  GRANT EXECUTE ON PACKAGE DSNREXX.DSNREXX                              00161000
        TO PUBLIC;                                                      00162000
  GRANT EXECUTE ON PACKAGE DSNREXUR.DSNREXX                             00163000
        TO PUBLIC;                                                      00164000
  GRANT EXECUTE ON PACKAGE DSNREXCS.DSNREXX                             00165000
        TO PUBLIC;                                                      00166000
  GRANT EXECUTE ON PACKAGE DSNREXRS.DSNREXX                             00167000
        TO PUBLIC;                                                      00168000
  GRANT EXECUTE ON PACKAGE DSNREXRR.DSNREXX                             00169000
        TO PUBLIC;                                                      00170000
  GRANT EXECUTE ON PLAN    DSNREXX                                      00171000
        TO PUBLIC;                                                      00172000
//*                                                                     00173000
//* DSNTWFG: ADD 4-KB AND 32-KB TABLE SPACES IN THE WORK FILE DB        00174000
//*   PARAMETERS:                                                       00175000
//*     DB2SSN          : LOCAL DB2 SSID                                00176000
//*     AUTHID          : AUTHORIZATION ID TO PERFORM THE WORK          00177000
//*     WFDBNAME        : NAME OF THE DB2 WORK FILE DATABASE            00178000
//*                                                                     00179000
//*     TEMP4K_QTY      : NUMBER OF 4-KB TYPE TABLE SPACES TO BE ADDED  00180000
//*                       FOR TEMPORARY (DGTT) WORK                     00181000
//*     TEMP4K_MAXPARTS : THE MAXPARTITIONS PER 4-KB TYPE TEMP WORK     00182000
//*                       FILE PBG TABLE SPACE.                         00183000
//*                       * IF SPECIFIED AND NOT NULL, THE              00184000
//*                         TEMP4K_DSSIZE PARAMETER ALSO MUST           00185000
//*                         BE SPECIFIED AND NOT NULL; AND THE          00186000
//*                         TEMP4K_PRIQTY PARAMETER MUST BE             00187000
//*                         NULL OR NOT SPECIFIED.                      00188000
//*                       * IF NULL OR NOT SPECIFIED, THE               00189000
//*                         TEMP4K_DSSIZE PARAMETER ALSO MUST           00190000
//*                         BE NULL OR NOT SPECIFIED; AND THE           00191000
//*                         TEMP4K_PRIQTY PARAMETER MUST BE             00192000
//*                         SPECIFIED AND NOT NULL.                     00193000
//*     TEMP4K_DSSIZE   : THE MAXIMUM GB PER PARTITION (DSSIZE) PER     00194000
//*                       4-KB TYPE TEMP WORK FILE PBG TABLE SPACE.     00195000
//*                       * IF SPECIFIED AND NOT NULL, THE              00196000
//*                         TEMP4K_MAXPARTS PARAMETER ALSO MUST         00197000
//*                         BE SPECIFIED AND NOT NULL; AND THE          00198000
//*                         TEMP4K_PRIQTY PARAMETER MUST BE             00199000
//*                         NULL OR NOT SPECIFIED                       00200000
//*                       * IF NULL OR NOT SPECIFIED, THE               00201000
//*                         TEMP4K_MAXPARTS PARAMETER ALSO MUST         00202000
//*                         BE NULL OR NOT SPECIFIED; AND THE           00203000
//*                         TEMP4K_PRIQTY PARAMETER MUST BE             00204000
//*                         SPECIFIED AND NOT NULL.                     00205000
//*     TEMP4K_PRIQTY   : PRIMARY SPACE IN MB FOR EACH 4-KB TYPE TEMP   00206000
//*                       WORK FILE SEGMENTED TABLE SPACE               00207000
//*                       * IF SPECIFIED AND NOT NULL, THE              00208000
//*                         TEMP4K_MAXPARTS AND TEMP4K_DSSIZE           00209000
//*                         PARAMETERS MUST BE NULL OR NOT SPECIFIED.   00210000
//*                       * IF NULL OR NOT SPECIFIED, THE               00211000
//*                         TEMP4K_MAXPARTS AND TEMP4K_DSSIZE           00212000
//*                         PARAMETERS MUST BE SPECIFIED AND NOT        00213000
//*                         NULL.                                       00214000
//*     TEMP4K_SEGSIZE  : SEGMENT TYPE FOR 4-KB TYPE TEMP WORK TS'S     00215000
//*     TEMP4K_BPOOL    : DB2 BUFFERPOOL FOR 4-KB TYPE TEMP WORK TS'S   00216000
//*     TEMP4K_STOGROUP : DB2 STOGROUP FOR 4-KB TYPE TEMP WORK TS'S     00217000
//*                                                                     00218000
//*     TEMP32K_QTY     : NUMBER OF 32-KB TYPE TABLE SPACES TO BE ADDED 00219000
//*                       FOR TEMPORARY (DGTT) WORK                     00220000
//*     TEMP32K_MAXPARTS: THE MAXPARTITIONS PER 32-KB TYPE TEMP WORK    00221000
//*                       FILE PBG TABLE SPACE.                         00222000
//*                       * IF SPECIFIED AND NOT NULL, THE              00223000
//*                         TEMP32K_DSSIZE PARAMETER ALSO MUST          00224000
//*                         BE SPECIFIED AND NOT NULL; AND THE          00225000
//*                         TEMP32K_PRIQTY PARAMETER MUST BE            00226000
//*                         NULL OR NOT SPECIFIED.                      00227000
//*                       * IF NULL OR NOT SPECIFIED, THE               00228000
//*                         TEMP32K_DSSIZE PARAMETER ALSO MUST          00229000
//*                         BE NULL OR NOT SPECIFIED; AND THE           00230000
//*                         TEMP32K_PRIQTY PARAMETER MUST BE            00231000
//*                         SPECIFIED AND NOT NULL                      00232000
//*     TEMP32K_DSSIZE  : THE MAXIMUM GB PER PARTITION (DSSIZE) PER     00233000
//*                       32-KB TYPE TEMP WORK FILE PBG TABLE SPACE.    00234000
//*                       * IF SPECIFIED AND NOT NULL, THE              00235000
//*                         TEMP32K_MAXPARTS PARAMETER ALSO MUST        00236000
//*                         BE SPECIFIED AND NOT NULL; AND THE          00237000
//*                         TEMP32K_PRIQTY PARAMETER MUST BE            00238000
//*                         NULL OR NOT SPECIFIED                       00239000
//*                       * IF NULL OR NOT SPECIFIED, THE               00240000
//*                         TEMP32K_MAXPARTS PARAMETER ALSO MUST        00241000
//*                         BE NULL OR NOT SPECIFIED; AND THE           00242000
//*                         TEMP32K_PRIQTY PARAMETER MUST BE            00243000
//*                         SPECIFIED AND NOT NULL                      00244000
//*     TEMP32K_PRIQTY  : PRIMARY SPACE IN MB FOR EACH 32-KB TYPE TEMP  00245000
//*                       WORK FILE SEGMENTED TABLE SPACE               00246000
//*                       * IF SPECIFIED AND NOT NULL, THE              00247000
//*                         TEMP32K_MAXPARTS AND TEMP32K_DSSIZE         00248000
//*                         PARAMETERS MUST BE NULL OR NOT SPECIFIED.   00249000
//*                       * IF NULL OR NOT SPECIFIED, THE               00250000
//*                         TEMP32K_MAXPARTS AND TEMP32K_DSSIZE         00251000
//*                         PARAMETERS MUST BE SPECIFIED AND NOT        00252000
//*                         NULL.                                       00253000
//*     TEMP32K_SEGSIZE : SEGMENT TYPE FOR 32-KB TYPE TEMP WORK TS'S    00254000
//*     TEMP32K_BPOOL   : DB2 BUFFERPOOL FOR 32-KB TYPE TEMP WORK TS'S  00255000
//*     TEMP32K_STOGROUP: DB2 STOGROUP FOR 32-KB TYPE TEMP WORK TS'S    00256000
//*                                                                     00257000
//*     SORT4K_QTY      : NUMBER OF 4-KB TYPE TABLE SPACES TO BE ADDED  00258000
//*                       FOR SORT WORK                                 00259000
//*     SORT4K_PRIQTY   : PRIMARY SPACE IN MB FOR EACH 4-KB TYPE SORT   00260000
//*                       WORK TABLE SPACE                              00261000
//*     SORT4K_SEGSIZE  : SEGMENT TYPE FOR 4-KB TYPE SORT WORK TS'S     00262000
//*     SORT4K_BPOOL    : DB2 BUFFERPOOL FOR 4-KB TYPE SORT WORK TS'S   00263000
//*     SORT4K_STOGROUP : DB2 STOGROUP FOR 4-KB TYPE SORT WORK TS'S     00264000
//*                                                                     00265000
//*     SORT32K_QTY     : NUMBER OF 32-KB TYPE TABLE SPACES TO BE ADDED 00266000
//*                       FOR SORT WORK                                 00267000
//*     SORT32K_PRIQTY  : PRIMARY SPACE IN MB FOR EACH 32-KB TYPE SORT  00268000
//*                       WORK TABLE SPACE                              00269000
//*     SORT32K_SEGSIZE : SEGMENT TYPE FOR 32-KB TYPE SORT WORK TS'S    00270000
//*     SORT32K_BPOOL   : DB2 BUFFERPOOL FOR 32-KB TYPE SORT WORK TS'S  00271000
//*     SORT32K_STOGROUP: DB2 STOGROUP FOR 32-KB TYPE SORT WORK TS'S    00272000
//*                                                                     00273000
//DSNTIST EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00274000
//SYSEXEC  DD DISP=SHR,DSN=DSN§§0.SDSNCLST                              00275000
//SYSTSPRT DD  SYSOUT=*                                                 00276000
//SYSPRINT DD  SYSOUT=*                                                 00277000
//SYSUDUMP DD  SYSOUT=*                                                 00278000
//SYSTSIN  DD  *                                                        00279000
  DSNTWFG +                                                             00280000
    DB2SSN(DSN) +                                                       00281000
    AUTHID(SYSADM) +                                                    00282000
    WFDBNAME(DSNDB07) +                                                 00283000
    +                                                                   00284000
    TEMP4K_QTY(1) +                                                     00285000
    TEMP4K_MAXPARTS() +                                                 00286000
    TEMP4K_DSSIZE() +                                                   00287000
    TEMP4K_PRIQTY(20) +                                                 00288000
    TEMP4K_SEGSIZE(16) +                                                00289000
    TEMP4K_BPOOL(BP0) +                                                 00290000
    TEMP4K_STOGROUP(SYSDEFLT) +                                         00291000
    +                                                                   00292000
    TEMP32K_QTY(1) +                                                    00293000
    TEMP32K_MAXPARTS() +                                                00294000
    TEMP32K_DSSIZE() +                                                  00295000
    TEMP32K_PRIQTY(20) +                                                00296000
    TEMP32K_SEGSIZE(16) +                                               00297000
    TEMP32K_BPOOL(BP32K) +                                              00298000
    TEMP32K_STOGROUP(SYSDEFLT) +                                        00299000
    +                                                                   00300000
    SORT4K_QTY(1) +                                                     00301000
    SORT4K_PRIQTY(20) +                                                 00302000
    SORT4K_SEGSIZE(16) +                                                00303000
    SORT4K_BPOOL(BP0) +                                                 00304000
    SORT4K_STOGROUP(SYSDEFLT) +                                         00305000
    +                                                                   00306000
    SORT32K_QTY(1) +                                                    00307000
    SORT32K_PRIQTY(20) +                                                00308000
    SORT32K_SEGSIZE(16) +                                               00309000
    SORT32K_BPOOL(BP32K) +                                              00310000
    SORT32K_STOGROUP(SYSDEFLT)                                          00311000
//*                                                                     00312000

./ ADD NAME=DSNTIJUZ
//*********************************************************************
//* JOB NAME = DSNTIJUZ
//*
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM
//*
//*    Licensed Materials - Property of IBM
//*    5650-DB2
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.
//*
//*    STATUS = Version 12
//*
//* FUNCTION = DSNZPARM UPDATES
//*
//* PSEUDOCODE =
//*   DSNTIZA  STEP  ASSEMBLE DSN6.... MACROS, CREATE DSNZPARM
//*   DSNTIZL  STEP  LINK EDIT DSNZPARM
//*   DSNTIMQ  STEP  SMP/E PROCESSING FOR DSNZPARM (OPTIONAL)
//*
//* NOTES = STEP DSNTIMQ MUST BE CUSTOMIZED FOR SMP.  SEE THE NOTES
//*         PRECEDING STEP DSNTIMQ BEFORE RUNNING THIS JOB.
//*
//* Change activity =
//*   09/11/2013 Add DSN6SPRM.ACCELMODEL               DM1761 / PM96478
//*   10/15/2013 Remove EDMPOOL            pl160_inst1 / pl160 / n17984
//*   03/08/2014 Add option V12R1 to APPLCOMPAT     s19928_inst1 s19928
//*   05/21/2014 Change NEWFUN default to V12                    171968
//*   02/18/2014 Add RLFENABLE, RLFERRSTC,          s20000_inst2 s20000
//*              and RLFERRDSTC
//*   02/18/2004 Add DSN6SPRM.PAGESET_PAGENUM               e203_s20176
//*   03/18/2014 Add SUPPRESS_HINT_SQLCODE_DYN         PI13724 / DM1814
//*   01/09/2014 Add ALTERNATE_CP, UTIL_DBBSG,      n18023 s12997_inst1
//*              and UTIL_LGBSG  s12997
//*   09/02/2011 Remove LOBVALA, LOBVALS,         s22058_inst1 / s22058
//*                     XMLVALA, XMLVALS
//*   10/04/2014 Add REMOTE_COPY_SW_ACCEL              PI25747 / DM1834
//*   01/06/2015 Add DSN6GRP.PEER_RECOVERY                       dp1857
//*   03/07/2015 Add DSN6SPRM.COPY_FASTREPLICATION  s23187_inst1 s23187
//*   01/12/2015 Add DSN6SPRM.RENAMETABLE              PI32291 / DN1840
//*   03/17/2015 Add DSN6SPRM.RETRY_STOPPED_OBJECTS    PI36922 / DM1851
//*   05/07/2015 Add DSN6SPRM.UTILS_HSM_MSGDS_HLQ   s17863_inst1 s17863
//*   03/30/2015 Add DEFAULT_INSERT_ALGORITHM       s17836_inst1 s17836
//*   07/14/2015 Add DSN6SPRM.STATFDBK_PROFILE      s24345_inst1 s24345
//*   01/06/2015                     s2593_install / s2600_s18668 s2593
//*              Remove REORG_IGNORE_FREESPACE                    s2593
//*   09/17/2015 Add PROFILE_AUTOSTART                    s20059 dp1897
//*   10/01/2015 Add PAGEABLE_1MB_FOR_THREADS       s25942_inst1 s25942
//*   07/27/2015 Add AUTH_COMPATIBILITY              s20166_inst s20166
//*   05/15/2015                                    s17830_inst1 s17830
//*              Add DSN6SPRM.CACHEDYN_STABILIZATION
//*   04/28/2015 Add DSN6SPRM.DDL_MATERIALIZATION n22751_inst1 / n22751
//*   10/02/2015 Remove obsolete parms              dp1831_inst1 dp1831
//*                - DSN6ARVP.ALCUNIT                            dp1831
//*                - DSN6ARVP.CATALOG                            dp1831
//*                - DSN6SPRM.CACHE_DEP_TRACK_STOR_LIM           dp1831
//*                - DSN6SPRM.CACHEDYN_FREELOCAL                 dp1831
//*                - DSN6SPRM.CHECK_SETCHKP                      dp1831
//*                - DSN6SPRM.CONTSTOR                           dp1831
//*                - DSN6SPRM.DB2SORT                            dp1831
//*                - DSN6SPRM.INDEX_IO_PARALLELISM               dp1831
//*                - DSN6SPRM.LEMAX                              dp1831
//*                - DSN6SPRM.MINSTOR                            dp1831
//*                - DSN6SPRM.RRF                                dp1831
//*                - DSN6SPRM.UTSORTAL                           dp1831
//*              Change defaults as indicated                    dp1831
//*                - DSN6ARVP.PRIQTY                             dp1831
//*                    from 4320 (blocks) to 125 (cylinders)     dp1831
//*                - DSN6ARVP.SECQTY                             dp1831
//*                    from 540 (blocks) to 15 (cylinders)       dp1831
//*                - DSN6SPRM.EDM_SKELETON_POOL                  dp1831
//*                    from 10240 to 51200                       dp1831
//*                - DSN6SPRM.PREVENT_NEW_IXCTRL_PART            dp1831
//*                    from NO to YES                            dp1831
//*                - DSN6SYSP.SMFACCT                            dp1831
//*                    from '1' to '1,2,3,7,8'                   dp1831
//*   06/01/2015 Add DSN6SPRM.COMPRESS_DIRLOB       s10853_inst1 s10853
//*                                                      ss19510 s10853
//*   02/06/2015 Add INDEX_MEMORY_CONTROL   pl155_zparmf2 n17840_s19906
//*   01/12/2016 Change ACCELMODEL default to YES  pi39062_part2 DM1861
//*   10/29/2015 Add DSN6SPRM.MATERIALIZE_NODET_SQLTUDF  PI46932 DM1912
//*   02/15/2016 Long data set names                            PI42601
//*   04/13/2016 Remove PAGEABLE_1MB_FOR_THREADS                 183360
//*                                                             PI59531
//*   03/16/2016 Add SQLINTRP, INLISTP, MAX_OPT_STOR,           PI58414
//*                  MXTBJOIN, OPTXQB, SECADM1_INPUT_STYLE,     PI58414
//*                  SECADM2_INPUT_STYLE, UNION_COLNAME_7,      PI58414
//*                  PTASKROL, REVOKE_DEP_PRIVILEGES,           PI58414
//*                  SECADM1_TYPE, SECADM2_TYPE,                PI58414
//*                  SECADM1, SECADM2, SEPARATE_SECURITY        PI58414
//*   04/14/2016 Add SQLLEVEL                        s27418inst2 s27418
//*   04/29/2016 Remove NEWFUN                       s27418inst4 s27418
//*   02/11/2016 Add DSN6SPRM.MOVE_TO_ARCHIVE_DEFAULT  PI56767 / DN1934
//*   08/05/2016 Add DSN6SPRM.DISALLOW_SEL_INTO_UNION    PI67611 DM1946
//*   06/06/2017 Add DSN6SPRM.ZHYPERLINK                         S51617
//*   09/21/2017 Add QUERY_ACCEL_WAITFORDATA                     s63349
//*   06/24/2017 Add DSN6SPRM.STATCLGSRT                 PI76730 E36963
//*   08/07/2017 Split up DSNTIJUZ                     s64075 / PI85767
//*               - DSNTIJUZ: For DSNZPARM
//*               - DSNTIJUA: For DSNHDECP
//*               - DSNTIJUM: For DSNHMCID
//*               - DSNTIJUL: For BSDS / Change log inventory
//*   03/18/2017 Add ENCRYPTION_KEYLABEL                         E26155
//*   06/21/2018 Remove references to ADSNLOAD           PI98672/s77957
//*   02/16/2017 Add DSN6SPRM.TS_COMPRESSION_TYPE         S49659 E38875
//*   05/20/2018 Add DSN6LOGP.CDDS_MODE                  PI97992/s77487
//*              and DSN6LOGP.CDDS_PREFIX
//*   09/17/2018 Add DSN6SPRM.FLASHCOPY_XRCP             PH01728/s22693
//*   12/10/2018 Add DSN6SPRM.REORG_TS_NOPAD_DEFAULT     PH00317/s88820
//*   10/16/2018 Add DSN6SPRM.STATPGSAMP                 PH07220/s83939
//*   07/26/2019 Add DSN6SPRM.DISALLOW_SSARAUTH          PH16579/e83611
//*   10/11/2019 Add DSN6SPRM.UTILS_BLOCK_FOR_CDC        PH14363/e75390
//*   01/09/2020 Change the PCLOSET default from 10 to 45  PH21370/e491
//*              Change the CHKFREQ default from 5 to 3    PH21370/e491
//*              Change the MAXRBLK default from 400000    PH21370/e491
//*                 to 1000000
//*              Change the NPGTHRSH default from 0 to 1   PH21370/e491
//*              Change the INLISTP default from 50 to 1000     PH21370
//*              Remove continuation char at the end of         PH21370
//*                 XML_RANDOMIZE_DOCID
//*   02/03/2020 Avoid GIM40501E in DSNTIMQ                     PH20105
//*   02/06/2020 Add DSN6SYSP.STATIME_MAIN          PH18658 / E293-S325
//*   03/05/2020 Remove COMPRESS_SPT01                     PH24358/e491
//*              Remove SPT01_INLINE_LENGTH                PH24358/e491
//*   04/22/2020 Remove OBJECT_CREATE_FORMAT               PH26317/e491
//*              Remove UTILITY_OBJECT_CONVERSION          PH26317/e491
//*   07/02/2020 Add DSN6SPRM.MFA_AUTHCACHE_UNUSED_TIME    PH21341/e886
//*   07/23/2020 Change the default from 2 to 1           PH27822/e6317
//*              for DEFAULT_INSERT_ALGORITHM
//*   07/09/2020 Add DSN6SPRM.LOAD_RO_OBJECTS           PH26131 / e5738
//*   07/06/2020 Add DSN6SPRM.ALLOW_UPD_DEL_INS_WITH_UR         PH14791
//*   08/06/2020 Add DSN6SPRM.UTILS_USE_ZSORT             PH28183/e4192
//*   05/28/2020 Remove CACHEPAC and CACHERAC              PH28280/e491
//*              Remove IRLMAUT and IRLMSWT                PH28280/e491
//*              Remove CHGDC and EDPROP                   PH28280/e491
//*              Remove PCLOSEN and MGEXTSZ                PH28280/e491
//*   01/29/2021 Add DSN6SPRM.REORG_INDEX_NOSYSUT1        PH25217/e4191
//*   11/05/2020 Add DSN6SPRM.FTB_NON_UNIQUE_INDEX        PH30978/e7890
//*   03/11/2021 Add DSN6SPRM.REORG_IC_LIMIT_DASD         PI75518/e1548
//*              and DSN6SPRM.REORG_IC_LIMIT_TAPE         PI75518/e1548
//*   05/12/2021 Add DSN6SPRM.SUBSTR_COMPATIBILITY        PH36071/e8565
//*   06/14/2021 Add DSN6SPRM.LOAD_DEL_IMPLICIT_SCALE           PH36908
//*
//*********************************************************************
//*
//DSNTIZA EXEC PGM=ASMA90,PARM='OBJECT,NODECK'
//STEPLIB  DD DISP=SHR,DSN=DSN§§0.SDSNLOAD
//SYSLIB   DD  DISP=SHR,
//         DSN=DSN§§0.SDSNMACS
//         DD  DISP=SHR,
//         DSN=SYS1.MACLIB
//SYSLIN   DD  DSN=&&LOADSET(DSNTILMM),
//             DISP=(NEW,PASS),
//             UNIT=SYSDA,SPACE=(800,(50,50,2)),
//             DCB=(BLKSIZE=800)
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSUT1   DD  UNIT=SYSDA,SPACE=(800,(50,50),,,ROUND)
//SYSUT2   DD  UNIT=SYSDA,SPACE=(800,(50,50),,,ROUND)
//SYSUT3   DD  UNIT=SYSDA,SPACE=(800,(50,50),,,ROUND)
//SYSIN    DD  *
    DSN6SPRM   RESTART,                                                X
               ALL,                                                    X
               ABEXP=YES,                                              X
               ABIND=YES,                                              X
               ACCEL=NO,                                        àLI1006X
               ACCELMODEL=YES,                                   DM1861X
               ADMTPROC=DSNADMT,                                  DK235X
               AEXITLIM=10,                                            X
               ALLOW_UPD_DEL_INS_WITH_UR=NO,                    PH14791X
               ALTERNATE_CP=,                                    S12997X
               APPLCOMPAT=V12R1M500,                             s27814X
               AUTH=YES,                                               X
               AUTH_COMPATIBILITY=,                              s20166X
               AUTHCACH=3072,                                          X
               AUTHEXIT_CACHEREFRESH=NONE,                      N0290R5X
               AUTHEXIT_CHECK=PRIMARY,                          N0290R4X
               BIF_COMPATIBILITY=CURRENT,                        DM1519X
               BINDNV=BINDADD,                                         X
               BMPTOUT=4,                                              X
               CACHEDYN=YES,                                           X
               CACHEDYN_STABILIZATION=BOTH,                      s17830X
               CATALOG=DSNC§§0,                                        X
               CATDDACL=,                                         LI845X
               CATDMGCL=,                                         LI845X
               CATDSTCL=,                                         LI845X
               CATXDACL=,                                         LI845X
               CATXMGCL=,                                         LI845X
               CATXSTCL=,                                         LI845X
               CDSSRDEF=1,                                             X
               CHECK_FASTREPLICATION=REQUIRED,                   DK1446X
               COMCRIT=NO,                                        DJ335X
               COMPRESS_DIRLOB=NO,                               s10853X
               COPY_FASTREPLICATION=PREFERRED,                   s23187X
               DBACRVW=NO,                                             X
               DDL_MATERIALIZATION=ALWAYS_IMMEDIATE,             n22751X
               DDLTOX=1,                                         DK1505X
               DECDIV3=NO,                                             X
               DEFAULT_INSERT_ALGORITHM=1,                      PH27822X
               DEFLTID=IBMUSER,                                        X
               DESCSTAT=YES,                                           X
               DISABLE_EDMRTS=NO,                                DM1533X
               DISALLOW_SEL_INTO_UNION=YES,                      DM1946X
               DISALLOW_SSARAUTH=NO,                             e83611X
               DLITOUT=6,                                              X
               DSMAX=20000,                                      DM1269X
               EDMDBDC=23400,                                    DM1269X
               EDMSTMTC=113386,                                  DM1269X
               EDM_SKELETON_POOL=51200,                          dp1831X
               ENCRYPTION_KEYLABEL=,                             E26155X
               EN_PJSJ=OFF,                                      DM1418X
               EVALUNC=NO,                                             X
               FCCOPYDDN=HLQ.&&DB..&&SN..N&&DSNUM..&&UQ.,         LI872X
               FLASHCOPY_COPY=NO,                                DM1445X
               FLASHCOPY_LOAD=NO,                                DM1445X
               FLASHCOPY_PPRC=REQUIRED,                          DM1464X
               FLASHCOPY_REORG_TS=NO,                            DM1445X
               FLASHCOPY_REBUILD_INDEX=NO,                       DM1445X
               FLASHCOPY_REORG_INDEX=NO,                         DM1445X
               FLASHCOPY_XRCP=YES,                               s22693X
               FTB_NON_UNIQUE_INDEX=NO,                           E7890X
               GET_ACCEL_ARCHIVE=NO,                            n4629r5X
               HONOR_KEEPDICTIONARY=NO,                           DK176X
               IGNSORTN=NO,                                       DJ410X
               INDEX_CLEANUP_THREADS=10,                        n0010r5X
               INDEX_MEMORY_CONTROL=AUTO,                        e19906X
               INLISTP=1000,                                       e491X
               IRLMPRC=IRLMPROC,                                       X
               IRLMSID=IRLM,                                           X
               IRLMRWT=30,                                       DM1269X
               IX_TB_PART_CONV_EXCLUDE=YES,                DK1555DK1750X
               LIKE_BLANK_INSIGNIFICANT=NO,                    n16093r7X
               LOAD_DEL_IMPLICIT_SCALE=NO,                      PH36908X
               LOAD_RO_OBJECTS=NO,                              PH26131X
               LRDRTHLD=10,                                      DM1269X
               MAINTYPE=SYSTEM,                                        X
               MATERIALIZE_NODET_SQLTUDF=NO,                     DM1912X
               MAXRBLK=1000000,                                    e491X
               MAXKEEPD=5000,                                          X
               MAX_CONCURRENT_PKG_OPS=10,                         DK164X
               MAX_NUM_CUR=500,                                        X
               MAX_OPT_STOR=40,                                 PI58414X
               MAX_ST_PROC=2000,                                       X
               MAXSORT_IN_MEMORY=1000,                          n4504r5X
               MAXTEMPS=0,                                        LI612X
               MAXTEMPS_RID=NOLIMIT,                             DM1386X
               MFA_AUTHCACHE_UNUSED_TIME=0,                     PH21341X
               MINDVSCL=NONE,                                          X
               MOVE_TO_ARCHIVE_DEFAULT=N,                        DN1934X
               MXDTCACH=20,                                       LI670X
               MXTBJOIN=225,                                    PI58414X
               NPGTHRSH=1,                                         e491X
               NUMLKTS=2000,                                     DM1269X
               NUMLKUS=10000,                                          X
               OPTHINTS=NO,                                            X
               OPTXQB=ON,                                       PI58414X
               OPT1ROWBLOCKSORT=DISABLE,                         DM1632X
               PADIX=NO,                                               X
               PAGESET_PAGENUM=ABSOLUTE,                         s15411X
               PARA_EFF=50,                                      DK1439X
               PARAMDEG=0,                                             X
               PARAMDEG_DPSI=0,                                  n231r5X
               PARAMDEG_UTIL=99,                                 dn1673X
               PCTFREE_UPD=0,                                   n4504r7X
               PKGREL_COMMIT=YES,                               N0194R4X
               PLANMGMT=EXTENDED,                                DM1123X
               PLANMGMTSCOPE=STATIC,                              LI865X
               PREVENT_ALTERTB_LIMITKEY=NO,                      DM1770X
               PREVENT_NEW_IXCTRL_PART=YES,                      dp1831X
               QUERY_ACCELERATION=NONE,                           n0109X
               QUERY_ACCEL_OPTIONS=NONE,                         n109r5X
               QUERY_ACCEL_WAITFORDATA=0,                        s50418X
               REALSTORAGE_MANAGEMENT=AUTO,                      DM1470X
               REALSTORAGE_MAX=NOLIMIT,                          DM1470X
               REC_FASTREPLICATION=PREFERRED,                    DM1464X
               RECALL=YES,                                             X
               RECALLD=120,                                            X
               REFSHAGE=0,                                             X
               RENAMETABLE=DISALLOW_DEP_VIEW_SQLTUDF,            DN1840X
               REORG_DROP_PBG_PARTS=DISABLE,                     n239r5X
               REORG_IC_LIMIT_DASD=0,                           PI75518X
               REORG_IC_LIMIT_TAPE=0,                           PI75518X
               REORG_INDEX_NOSYSUT1=NO,                         PH25217X
               REORG_LIST_PROCESSING=PARALLEL,                   DK1566X
               REORG_MAPPING_DATABASE=,                         N0239R3X
               REORG_PART_SORT_NPSI=AUTO,                         N0239X
               REORG_TS_NOPAD_DEFAULT=YES,                      PH00317X
               RESTORE_RECOVER_FROMDUMP=NO,                       LI619X
               RESTORE_TAPEUNITS=NOLIMIT,                         LI619X
               RESTRICT_ALT_COL_FOR_DCC=NO,                      DK1588X
               RETLWAIT=0,                                             X
               RETRY_STOPPED_OBJECTS=NO,                         DM1851X
               REVOKE_DEP_PRIVILEGES=SQLSTMT,                   PI58414X
               RGFCOLID=DSNRGCOL,                                      X
               RGFDBNAM=DSNRGFDB,                                      X
               RGFDEDPL=NO,                                            X
               RGFDEFLT=ACCEPT,                                        X
               RGFESCP=,                                               X
               RGFFULLQ=YES,                                           X
               RGFINSTL=NO,                                            X
               RGFNMORT=DSN_REGISTER_OBJT,                             X
               RGFNMPRT=DSN_REGISTER_APPL,                             X
               RRULOCK=YES,                                      DM1269X
               SECADM1_INPUT_STYLE=CHAR,                        PI58414X
               SECADM1_TYPE=AUTHID,                             PI58414X
               SECADM1=SECADM,                                  PI58414X
               SECADM2_INPUT_STYLE=CHAR,                        PI58414X
               SECADM2_TYPE=AUTHID,                             PI58414X
               SECADM2=SECADM,                                  PI58414X
               SECLCACH=255,                                           X
               SEPARATE_SECURITY=NO,                            PI58414X
               SIMULATED_CPU_COUNT=OFF,                         pm26475X
               SIMULATED_CPU_SPEED=OFF,                         pm26475X
               SITETYP=LOCALSITE,                                      X
               SJTABLES=10,                                            X
               SKIPUNCI=NO,                                            X
               SRTPOOL=10000,                                     LI909X
               STARJOIN=DISABLE,                                       X
               STATCLGSRT=10,                                    E36963X
               STATFDBK_PROFILE=YES,                             s24345X
               STATFDBK_SCOPE=ALL,                             n11059r6X
               STATHIST=NONE,                                          X
               STATPGSAMP=SYSTEM,                                s83939X
               STATROLL=YES,                                     DM1269X
               STATSINT=30,                                            X
               SUBQ_MIDX=ENABLE,                                 DK1691X
               SUBSTR_COMPATIBILITY=PREVIOUS,                   PH36071X
               SUPERRS=YES,                                            X
               SUPPRESS_HINT_SQLCODE_DYN=NO,                     DM1814X
               SYSADM=SYSADM,                                          X
               SYSADM2=SYSADM,                                         X
               SYSOPR1=SYSOPR,                                         X
               SYSOPR2=SYSOPR,                                         X
               SYSTEM_LEVEL_BACKUPS=NO,                           LI619X
               TEMPLATE_TIME=UTC,                                n240r6X
               TRKRSITE=NO,                                            X
               TS_COMPRESSION_TYPE=FIXED_LENGTH,                 E38875X
               UNION_COLNAME_7=NO,                              PI58414X
               UTIL_DBBSG=,                                      S12997X
               UTIL_LGBSG=,                                      S12997X
               UTIL_TEMP_STORCLAS=,                               DK292X
               UTILS_BLOCK_FOR_CDC=NO,                          PH14363X
               UTILS_DUMP_CLASS_NAME=,                            LI619X
               UTILS_HSM_MSGDS_HLQ=,                             s17863X
               UTILS_USE_ZSORT=NO,                              PH28183X
               UTIMOUT=6,                                              X
               VOLTDEVT=SYSDA,                                         X
               WFDBSEP=NO,                                       DK1323X
               WFSTGUSE_AGENT_THRESHOLD=0,                       n202r7X
               WFSTGUSE_SYSTEM_THRESHOLD=90,                     n202r7X
               XLKUPDLT=NO,                                            X
               XML_RESTRICT_EMPTY_TAG=NO,                        DM1764X
               ZHYPERLINK=DISABLE,                               S51617X
               ZOSMETRICS=NO                                     DJ1065
    DSN6ARVP   ARCWRTC=(1,3,4),                                        X
               ARCWTOR=YES,                                            X
               ARCPFX1=DSNC§§0.ARCHLOG1,                               X
               ARCPFX2=DSNC§§0.ARCHLOG2,                               X
               ARCRETN=9999,                                           X
               BLKSIZE=24576,                                          X
               COMPACT=NO,                                             X
               PRIQTY=125,                                       dp1831X
               PROTECT=NO,                                             X
               QUIESCE=5,                                              X
               SECQTY=15,                                        dp1831X
               SVOLARC=NO,                                             X
               TSTAMP=NO,                                              X
               UNIT=TAPE,                                              X
               UNIT2=
    DSN6LOGP   DEALLCT=(0000),                                         X
               MAXARCH=10000,                                     DK076X
               MAXRTU=2,                                               X
               OUTBUFF=4000,                                           X
               REMOTE_COPY_SW_ACCEL=DISABLE,                     DM1834X
               TWOACTV=YES,                                            X
               TWOARCH=YES,                                            X
               CDDS_MODE=NONE,                                   s77487X
               CDDS_PREFIX=DSNCAT,                               s77487X
               ARC2FRST=NO
    DSN6SYSP   ACCESS_CNTL_MODULE=DSNXàXAC,                      DM1033X
               ACCUMACC=10,                                            X
               ACCUMUID=0,                                             X
               AUDITST=NO,                                             X
               BACKODUR=5,                                             X
               CHKFREQ=3,                                          e491X
               CHKLOGR=NOTUSED,                                  DM1094X
               CHKMINS=NOTUSED,                                  DM1094X
               CHKTYPE=SINGLE,                                   DM1094X
               CONDBAT=10000,                                          X
               CTHREAD=200,                                            X
               DEL_CFSTRUCTS_ON_RESTART=NO,                      DM1449X
               DLDFREQ=ON,                                       DM1269X
               DPSEGSZ=32,                                       DM1438X
               DSSTIME=5,                                              X
               DSVCI=YES,                                              X
               EXTRAREQ=100,                                           X
               EXTRASRV=100,                                           X
               EXTSEC=YES,                                             X
               IDAUTH_MODULE=DSN3àATH,                           DM1033X
               IDBACK=50,                                              X
               IDFORE=50,                                              X
               IDXBPOOL=BP0,                                           X
               IMPDSDEF=YES,                                      LI665X
               IMPDSSIZE=4,                                      DM1234X
               IMPTKMOD=YES,                                     DM1234X
               IMPTSCMP=NO,                                       LI665X
               IXQTY=0,                                                X
               LBACKOUT=AUTO,                                          X
               LOB_INLINE_LENGTH=0,                               LI848X
               MAXDBAT=200,                                            X
               MAXOFILR=100,                                      LI637X
               MON=NO,                                                 X
               MONSIZE=1048576,                                  DM1373X
               PCLOSET=45,                                         e491X
               PROFILE_AUTOSTART=NO,                             DP1897X
               PTASKROL=YES,                                    PI58414X
               RLF=NO,                                                 X
               RLFENABLE=DYNAMIC,                                s20000X
               RLFERR=NOLIMIT,                                         X
               RLFERRSTC=NOLIMIT,                                s20000X
               RLFAUTH=SYSIBM,                                         X
               RLFTBL=01,                                              X
               ROUTCDE=(1),                                            X
               SIGNON_MODULE=DSN3àSGN,                           DM1033X
               SMFACCT=(1,2,3,7,8),                              dp1831X
               SMFCOMP=OFF,                                      DM1373X
               SMFSTAT=YES,                                            X
               SMF89=NO,                                               X
               STATIME=1,                                        DM1269X
               STATIME_MAIN=60,                               E293-S325X
               STORMXAB=0,                                             X
               STORTIME=180,                                           X
               SYNCVAL=NO,                                             X
               TBSBPOOL=BP0,                                           X
               TBSBP8K=BP8K0,                                     LI665X
               TBSBP16K=BP16K0,                                   LI665X
               TBSBP32K=BP32K,                                    LI665X
               TBSBPLOB=BP0,                                      DK251X
               TBSBPXML=BP16K0,                                   DK251X
               TRACSTR=NO,                                             X
               TRACTBL=16,                                             X
               TSQTY=0,                                                X
               UIFCIDS=NO,                                             X
               URCHKTH=5,                                        DM1269X
               URLGWTH=10,                                       DM1269X
               WLMENV=,                                                X
               XML_RANDOMIZE_DOCID=NO                            DM1518
    DSN6FAC    DDF=NO,                                                 X
               DDF_COMPATIBILITY=,                               DM1626X
               CMTSTAT=INACTIVE,                                       X
               IDTHTOIN=120,                                           X
               MAXCONQN=OFF,                                     DK1592X
               MAXCONQW=OFF,                                     DK1592X
               RESYNC=2,                                               X
               RLFERRD=NOLIMIT,                                        X
               RLFERRDSTC=NOLIMIT,                               s20000X
               SQLINTRP=ENABLE,                                 PI58414X
               TCPALVER=NO,                                            X
               MAXTYPE1=0,                                             X
               TCPKPALV=120,                                           X
               POOLINAC=120,                                           X
               PRIVATE_PROTOCOL=NO
    DSN6GRP    DSHARE=NO,                                              X
               GRPNAME=,                                               X
               MEMBNAME=,                                              X
               IMMEDWRI=NO,                                            X
               PEER_RECOVERY=NONE,                               DP1857X
               RANDOMATT=YES
    END
//*********************************************************************
//* LINK EDIT THE NEW DSNZPARM MEMBER.  PUT LOAD MODULE IN SDSNEXIT.
//*********************************************************************
//DSNTIZL EXEC PGM=IEWL,PARM='LIST,XREF,LET,RENT',
//             COND=(4,LT)
//DSNLOAD  DD  DISP=SHR,
//         DSN=DSN§§0.SDSNLOAD
//SYSPUNCH DD  DSN=&&LOADSET(DSNTILMM),DISP=(OLD,DELETE)
//SYSLMOD  DD  DISP=SHR,
//         DSN=DSN§§0.SDSNEXIT
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSUT1   DD  UNIT=SYSDA,SPACE=(1024,(50,50))
//SYSLIN   DD  *
   INCLUDE SYSPUNCH(DSNTILMM)
   INCLUDE DSNLOAD(DSNZPARM)
   ORDER DSNAA
   INCLUDE DSNLOAD(DSNAA)
   ENTRY   DSNZMSTR
   MODE    AMODE(31),RMODE(ANY)
   NAME    DSNZPARM(R)
//*
//*********************************************************************
//* OPTIONAL DO SMP/E PROCESSING TO TRACK DSNZPARM CHANGES.
//*
//*  This job step defines SMP/E JCLIN processing for DB2.  Advanced
//*  SMP/E skills are recommended.  Before enabling this job step,
//*  be aware that:
//*   * Any changes you make to this job may affect current or future
//*     SMP/E processing for DB2.
//*   * Any changes made to the low level qualifier of any data sets
//*     used here may result in new DDDEFs being required.
//*   * You may need to define a DDDEF for the system MACLIB in the
//*     target zone of the CSI used for DB2, and add it to the
//*     DDDEF(SYSLIB) concatenation.
//*
//*  Contact the IBM Support Center for further information.
//*
//* NOTE: THIS STEP MUST BE CUSTOMIZED AS FOLLOWS FOR SMP:
//* 1. UNCOMMENT THE STEP
//* 2. LOCATE AND CHANGE THE FOLLOWING STRINGS TO THE VALUES YOU
//*    SPECIFIED FOR THEM IN JOB DSNTIJAE:
//*    A.'?SMPPRE?' TO THE PREFIX OF YOUR SMP LIBRARY NAME.
//*    B.'?SMPMLQ?' TO THE MIDDLE LEVEL QUALIFIER OF YOUR SMP CSI
//* 3. UPDATE SYSOUT CLASSES AS DESIRED (DEFAULT IS '*')
//*********************************************************************
//*  //DSNTIMQ EXEC PGM=GIMSMP,PARM='CSI=?SMPPRE?.?SMPMLQ?.CSI',
//*  //             REGION=4096K,COND=(2,LT)
//*  //SYSPRINT DD  SYSOUT=*
//*  //SYSUDUMP DD  SYSOUT=*
//*  //SMPCNTL DD *
//*      SET BDY(DSNTARG).
//*      JCLIN.
//*      SET BDY(DSNTARG).
//*      UCLIN.
//*       REP MOD ( DSNAA ) DISTLIB ( ADSNLOAD ).
//*       REP MOD ( DSNZPARM ) DISTLIB ( ADSNLOAD ).
//*      ENDUCL.
//*  //SMPJCLIN DD DISP=SHR,
//*  //      DSN=DSN§§0.SDSNSAMP(DSNTIJUZ)
//*

./ ADD NAME=DSNTIJVR
//********************************************************************* 00010000
//*  NAME = DSNTIJVR                                                    00011000
//*                                                                     00012000
//*  DESCRIPTIVE NAME = DB2 INSTALL JOB                                 00013000
//*                                                                     00014000
//*    Licensed Materials - Property of IBM                             00015000
//*    5650-DB2                                                         00016000
//*    (C) COPYRIGHT 1982, 2016 IBM Corp.  All Rights Reserved.         00017000
//*                                                                     00018000
//*    STATUS = Version 12                                              00019000
//*                                                                     00020000
//*  FUNCTION = Run this job on DB2 12 after migrating from DB2 11,     00021000
//*             before new function activation.  It checks for views    00022000
//*             that were marked with regeneration errors during the    00023000
//*             migration process and creates ALTER REGENERATE          00024000
//*             statements you can use to correct them.                 00025000
//*                                                                     00026000
//*  PSEUDOCODE =                                                       00027000
//*    DSNTGEN  STEP     Copy DSNTVRQ EXEC to a temp PDS                00028000
//*    DSNTVRQ  STEP     Call DSNTVRQ to scan for gREMIGRATION REPORTS  00029000
//*                                                                     00030000
//*     NOTES = This JCL requires a DB2 REXX environment                00031000
//*                                                                     00032000
//*             The following manual tailoring is required:             00033000
//*             1. Add a valid job card.                                00034000
//*             2. Locate and change all occurrences of the following   00035000
//*                strings as indicated:                                00036000
//*                A. '§DSN§' to the name of the DB2 subsystem          00037000
//*                B. 'DSN§§0' to the prefix of the DB2 target libs     00038000
//*                C. '§SYSADM§' to the authorization id to be used     00039000
//*                   by DB2 queries in this job.                       00040000
//*                                                                     00041000
//* CHANGE ACTIVITY =                                                   00042000
//*   2016/02/20 Born                                            177344 00043000
//*                                                                     00044000
//********************************************************************* 00045000
//*                                                                     00046000
//JOBLIB  DD  DSN=DSN§§0.SDSNLOAD,DISP=SHR                              00047000
//*                                                                     00048000
//*                                                                     00049000
//DSNTGEN EXEC PGM=IEBGENER,COND=(4,LT)                                 00050000
//SYSIN    DD  DUMMY                                                    00051000
//SYSPRINT DD  SYSOUT=*                                                 00052000
//SYSUT2   DD  DSN=&&TEMPPDS(DSNTVRQ),                                  00053000
//             DISP=(,PASS),                                            00054000
//             UNIT=SYSDA,SPACE=(TRK,(1,1,1),RLSE),                     00055000
//             DCB=(RECFM=FB,LRECL=80)                                  00056000
//SYSUT1   DD *                                                         00057000
  /** REXX ** DSNTVRQ ************************************************/ 00058000
  PARSE UPPER ARG ssid authid                                           00059000
                                                                        00060000
  ssid = STRIP(ssid)                                                    00061000
  authid = STRIP(authid)                                                00062000
  high_rc = 0                                                           00063000
                                                                        00064000
  CALL validateArgs ssid,                                               00065000
                    authid                                              00066000
                                                                        00067000
  ADDRESS TSO "SUBCOM DSNREXX"           /* HOST CMD ENV AVAILABLE?   */00068000
  IF rc THEN                             /* NO, LET'S MAKE ONE        */00069000
    S_rc = RXSUBCOM('ADD','DSNREXX','DSNREXX') /* ADD HOST CMD ENV    */00070000
                                                                        00071000
  ADDRESS DSNREXX "CONNECT" ssid                                        00072000
  IF SQLCODE ç= 0 THEN CALL errsqlca 'CONNECT'                          00073000
                                                                        00074000
  CALL setAuthId authid                                                 00075000
                                                                        00076000
  CALL CheckForViewRegenerationErrors                                   00077000
                                                                        00078000
  ADDRESS DSNREXX "EXECSQL COMMIT"                                      00079000
  ADDRESS DSNREXX "DISCONNECT"                                          00080000
                                                                        00081000
  EXIT Finis() /* end DSNTVRQ */                                        00082000
                                                                        00083000
  /*==================================================================*/00084000
  /* Begin subroutines                                                */00085000
  /*==================================================================*/00086000
  validateArgs: PROCEDURE                                               00087000
    /*****************************************************************/ 00088000
    /* Print a welcome message and then validate the parameters      */ 00089000
    /*****************************************************************/ 00090000
    PARSE ARG   ssid                  /* DB2 Subsystem ID            */,00091000
                authid                /* Authorization ID for work   */ 00092000
                                                                        00093000
    CALL IntMsg,                                                        00094000
        'DSNTVRQ entry:'                                                00095000
    CALL IntMsg,                                                        00096000
        '  Subsystem ID ............................................. ',00097000
        ssid                                                            00098000
    CALL IntMsg,                                                        00099000
        '  Authorization ID ......................................... ',00100000
        authid                                                          00101000
    CALL IntMsg ''                                                      00102000
                                                                        00103000
    digits     = "0123456789"                                           00104000
    dquote     = '"'                                                    00105000
    letters    = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"                           00106000
    nationals  = "à£$"                                                  00107000
    quote      = "'"                                                    00108000
    underscore = "_"                                                    00109000
                                                                        00110000
    /****************************************************************** 00111000
    * Validate the argument for parameter 1, ssid                     * 00112000
    * Rules: 1-4 characters starting with A-Z or à, £, or $.          * 00113000
    *        Remaining characters must be A-Z, 0-9, à, £, or $        * 00114000
    ******************************************************************/ 00115000
    IF (LENGTH(ssid) < 1 ! LENGTH(ssid) > 4),                           00116000
     ! (VERIFY(ssid, letters!!nationals) = 1),                          00117000
     ! (VERIFY(ssid, letters!!digits!!nationals) > 0) THEN              00118000
      DO                                                                00119000
      CALL IntMsg,                                                      00120000
          'Error: The argument for parameter 1, SUBSYSTEM ',            00121000
          'ID, must be 1 to 4 char-'                                    00122000
      CALL IntMsg,                                                      00123000
          '               acters and begin with A-Z, à, £, or $.  ',    00124000
          'The other characters must'                                   00125000
      CALL IntMsg,                                                      00126000
          '               be A-Z, 0-9, à, £, or $.'                     00127000
      CALL abort 54                                                     00128000
    END                                                                 00129000
                                                                        00130000
    /****************************************************************** 00131000
    * Validate the argument for parameter 2, authid                   * 00132000
    * Rules: 1-8 characters starting with A-Z or à, £, or $.          * 00133000
    *        Remaining characters must be A-Z, 0-9, à, £, or $        * 00134000
    ******************************************************************/ 00135000
    IF (LENGTH(authid) < 1 ! LENGTH(authid) > 8),                       00136000
     ! (VERIFY(authid, letters!!nationals) = 1),                        00137000
     ! (VERIFY(authid, letters!!digits!!nationals) > 0) THEN            00138000
      DO                                                                00139000
        CALL IntMsg,                                                    00140000
            'Error: The argument for parameter 2, AUTHORIZA',           00141000
            'TION ID, must be 1 to 8'                                   00142000
        CALL IntMsg,                                                    00143000
            '               characters and begin with A-Z, à, £, or $.',00144000
            '  The other characters'                                    00145000
        CALL IntMsg,                                                    00146000
            '               must be A-Z, 0-9, à, £, or $.'              00147000
        CALL abort 54                                                   00148000
      END                                                               00149000
    RETURN /* end validateArgs */                                       00150000
                                                                        00151000
  setAuthId: PROCEDURE                                                  00152000
    /*****************************************************************/ 00153000
    /* Set the current authorization id                              */ 00154000
    /*****************************************************************/ 00155000
    PARSE ARG authid                  /* Authorization id to use     */ 00156000
                                                                        00157000
    SQLSTMT = "SET CURRENT SQLID = '" !! authid !! "'"                  00158000
    ADDRESS DSNREXX EXECSQL SQLSTMT                                     00159000
    IF sqlcode <> 0 THEN                                                00160000
       CALL errsqlca "SET CURRENT SQLID"                                00161000
                                                                        00162000
    RETURN /* end setAuthId */                                          00163000
                                                                        00164000
                                                                        00165000
  CheckForViewRegenerationErrors: PROCEDURE                             00166000
    /*****************************************************************/ 00167000
    /* Generates ALTER REGENERATE statements for views that were     */ 00168000
    /* marked with regeneration errors during migation.              */ 00169000
    /*****************************************************************/ 00170000
    "EXECIO 0 DISKW REPORT01 (OPEN"                                     00171000
    if rc<>0 then call Dsn_Error 'Write_source_dsn',                    00172000
                               , 'EXECIO DISKW REPORT01 OPEN rc=' rc    00173000
                                                                        00174000
    TEMP.1  = "--"COPIES('=',70)                                        00175000
    TEMP.2  = "-- During migration to Version 12,",                     00176000
                 "before activation of new function,"                   00177000
    TEMP.3  = "-- the views referenced in the ALTER",                   00178000
                 "statements below were marked with"                    00179000
    TEMP.4  = "-- view regeneration errors.  You can",                  00180000
                 "use a dynamic SQL processor tool"                     00181000
    TEMP.5  = "-- such as SPUFI or DSNTEP2 to process",                 00182000
                 "these ALTER statements to"                            00183000
    TEMP.6  = "-- regenerate those views again."                        00184000
    TEMP.7  = "--"COPIES('=',70)                                        00185000
                                                                        00186000
    'EXECIO' 7  'DISKW REPORT01 (STEM TEMP.'                            00187000
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',                  00188000
                        , 'EXECIO DISKW REPORT01 rc=' rc                00189000
                                                                        00190000
    SQLSTMT = "DECLARE C1 CURSOR FOR S1"                                00191000
    address DSNREXX EXECSQL SQLSTMT                                     00192000
    if sqlcode <> 0 then call errsqlca 'DECLARE C1 CURSOR FOR S1'       00193000
                                                                        00194000
    SQLSTMT= "SELECT 'ALTER VIEW '",                                    00195000
                       "!! STRIP(CREATOR) !! '.' !! NAME",              00196000
                       "!! ' REGENERATE ;'",                            00197000
               "FROM SYSIBM.SYSTABLES",                                 00198000
                "WHERE TYPE = 'V'",                                     00199000
                "AND STATUS = 'R'",                                     00200000
                "AND TABLESTATUS = 'V'"                                 00201000
                                                                        00202000
    address DSNREXX "EXECSQL PREPARE S1 FROM :SQLSTMT"                  00203000
    if sqlcode<>0 then call errsqlca "PREPARE S1 FROM :SQLSTMT"         00204000
                                                                        00205000
    address DSNREXX "EXECSQL OPEN C1"                                   00206000
    if sqlcode<>0 then call errsqlca "OPEN C1"                          00207000
                                                                        00208000
    address DSNREXX "EXECSQL FETCH C1 INTO :TEMP"                       00209000
                                                                        00210000
    /* Process all rows returned *************************************/ 00211000
    DO WHILE SQLCODE = 0                                                00212000
      /* Output generated SQL statements in 72-byte chunks ***********/ 00213000
      DO UNTIL LENGTH(TEMP) <= 0                                        00214000
        TEMP.1 = SUBSTR(TEMP,1,72)                                      00215000
        TEMP   = SUBSTR(TEMP,73)                                        00216000
        'EXECIO' 1 'DISKW REPORT01 (STEM TEMP.'                         00217000
        if rc <> 0 then call Dsn_Error 'Write_source_dsn',              00218000
                            , 'EXECIO DISKW REPORT01 rc=' rc            00219000
      END                                                               00220000
      /* Get the next row ********************************************/ 00221000
      address DSNREXX "EXECSQL FETCH C1 INTO :TEMP"                     00222000
    END                                                                 00223000
                                                                        00224000
    if sqlcode<>100 then call errsqlca "FETCH FROM C1"                  00225000
                                                                        00226000
    drop TEMP.                                                          00227000
    'EXECIO 0 DISKW REPORT01 (FINIS'                                    00228000
    if rc <> 0 then call Dsn_Error 'Write_source_dsn',                  00229000
                        , 'EXECIO DISKW REPORT01 CLOSE rc=' rc          00230000
                                                                        00231000
    address DSNREXX "EXECSQL CLOSE C1"                                  00232000
    if sqlcode<>0 then call errsqlca "CLOSE C1"                         00233000
                                                                        00234000
    CALL IntMsg,                                                        00235000
        '  Report 1 completed'                                          00236000
                                                                        00237000
    RETURN /* end CheckForViewRegenerationErrors */                     00238000
                                                                        00239000
                                                                        00240000
  IntMsg: PROCEDURE expose debug ownmsg.; TRACE O                       00241000
    PARSE ARG msg                                                       00242000
    SAY msg                                                             00243000
    RETURN /* end IntMsg */                                             00244000
                                                                        00245000
                                                                        00246000
  /********************************************************************/00247000
  /* Got a dataset allocation or I/O error, print out message & abort.*/00248000
  /********************************************************************/00249000
  Dsn_Error:                                                            00250000
    if debug<3 then trace O                                             00251000
    /* "ARG"(1) is the code section name, "ARG"(2) the event text.    */00252000
    call IntMsg 'I/O error occurred in "'"ARG"(1)'". Event:' "ARG"(2)   00253000
    call Abort 23                                                       00254000
    return /* end Dsn_Error */                                          00255000
                                                                        00256000
                                                                        00257000
  /********************************************************************/00258000
  /* Got a failure SQLCODE, write diagnostics to result set and abort.*/00259000
  /********************************************************************/00260000
  ERRSQLCA:                                                             00261000
    IF debug<3 THEN TRACE O                                             00262000
                                                                        00263000
    CALL IntMsg '** Error SQL statement -' "ARG"(1)                     00264000
    /* If this is a CREATE, show the statement we are working with.  */ 00265000
    IF "WORD"("ARG"(1),1) = 'CREATE' THEN DO                            00266000
      CALL IntMsg 'SQL statement follows:'                              00267000
      CALL IntMsg sqlstmt                                               00268000
    END                                                                 00269000
                                                                        00270000
    CALL IntMsg 'SQLCODE ='SQLCODE                                      00271000
    CALL IntMsg 'SQLERRMC='!!"TRANSLATE"(SQLERRMC,';','FF'x)            00272000
    CALL IntMsg 'SQLERRP ='SQLERRP                                      00273000
    CALL IntMsg 'SQLERRD ='SQLERRD.1','SQLERRD.2','SQLERRD.3,           00274000
                      !!','SQLERRD.4','SQLERRD.5','SQLERRD.6            00275000
                                                                        00276000
    CALL IntMsg 'SQLWARN ='SQLWARN.0','SQLWARN.1','SQLWARN.2,           00277000
                      !!','SQLWARN.3','SQLWARN.4','SQLWARN.5,           00278000
                      !!','SQLWARN.6','SQLWARN.7','SQLWARN.8,           00279000
                      !!','SQLWARN.9','SQLWARN.10                       00280000
    CALL IntMsg 'SQLSTATE='SQLSTATE                                     00281000
                                                                        00282000
    ADDRESS DSNREXX "EXECSQL ROLLBACK"                                  00283000
                                                                        00284000
    CALL Abort 27                                                       00285000
    RETURN /* end ERRSQLCA */                                           00286000
                                                                        00287000
                                                                        00288000
  /********************************************************************/00289000
  /* Got a bad enough error to stop processing.  Put an error message */00290000
  /* into the result set and terminate with RC>=8.                    */00291000
  /********************************************************************/00292000
  Abort:                                                                00293000
    IF aborting=1 THEN RETURN; ELSE aborting=1                          00294000
    IF debug<3 THEN TRACE O                                             00295000
    IF debug>0 THEN SAY 'Subroutine: Abort'                             00296000
                                                                        00297000
    PARSE ARG errorid .                                                 00298000
    SELECT                                                /* errorid */ 00299000
      WHEN errorid=23 THEN DO                                           00300000
        CALL IntMsg 'Aborting due to I/O errors.'                       00301000
        high_rc = 8                                                     00302000
      END                                                               00303000
      WHEN errorid=27 THEN DO                                           00304000
        CALL IntMsg 'Aborting due to unexpected SQLCODE.'               00305000
        high_rc = 8                                                     00306000
      END                                                               00307000
      WHEN errorid=44 THEN DO                                           00308000
        CALL IntMsg 'Aborting due to more table spaces requested than', 00309000
                 !! 'could be added.'                                   00310000
        high_rc = 8                                                     00311000
      END                                                               00312000
      WHEN errorid=54 THEN DO                                           00313000
        CALL IntMsg 'Aborting due to unexpected parameter setting.'     00314000
        high_rc = 8                                                     00315000
      END                                                               00316000
      OTHERWISE DO                                                      00317000
        CALL IntMsg 'ABORT: invalid error id' errorid                   00318000
        high_rc = 999                                                   00319000
        END                                                             00320000
    END /* SELECT errorid */                                            00321000
                                                                        00322000
    IF "WORDPOS"( high_rc, '0 4 8 999' ) > 0 /* An expected value ?..*/ 00323000
      THEN high_rc = 8                     /* Yes, normal abort rc=8 */ 00324000
      ELSE high_rc = 999                   /* No, force internal err */ 00325000
                                                                        00326000
    EXIT Finis() /* end Abort */                                        00327000
                                                                        00328000
                                                                        00329000
  /********************************************************************/00330000
  /* Do clean up processing and exit. Put all internally generated    */00331000
  /* messages into global temp table for result set.  Open the result */00332000
  /* set cursor.  Set the highest return code.  Close all files and   */00333000
  /* exit                                                             */00334000
  /********************************************************************/00335000
  Finis:                                                                00336000
      SAY '*** End   RC='high_rc                                        00337000
      RETURN high_rc  /* normal end of DSNTVRQ */                       00338000
                                                                        00339000
//*                                                                     00340000
//DSNTVRQ EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00341000
//SYSEXEC  DD  DSN=&&TEMPPDS,DISP=(OLD,DELETE)                          00342000
//SYSTSPRT DD  SYSOUT=*                                                 00343000
//SYSPRINT DD  SYSOUT=*                                                 00344000
//SYSUDUMP DD  SYSOUT=*                                                 00345000
//SYSTSIN  DD  *                                                        00346000
  DSNTVRQ §DSN§ §SYSADM§                                                00347000
//REPORT01 DD  SYSOUT=*                                                 00348000

./ ADD NAME=DSNTIJWS
//*********************************************************************
//*  NAME = DSNTIJWS
//*
//*  DESCRIPTIVE NAME = REGISTER THE WEB SERVICE CONSUMER UDFS
//*
//*    LICENSED MATERIALS - PROPERTY OF IBM
//*    5625-DB2
//*    (C) COPYRIGHT 1982, 2004 IBM CORP.  ALL RIGHTS RESERVED.
//*
//*    STATUS = VERSION 9
//*  FUNCTION = THIS JCL REGISTERS THE DB2 WEB SERVICE CONSUMER UDFS
//*
//* §§§§§§§§§§§§§§§§§§§§§§§
//* §§ I M P O R T A N T §§
//* §§§§§§§§§§§§§§§§§§§§§§§
//*
//* Dependencies =
//* - The following are required to run the webservices consumer UDFs:
//*   - XML Toolkit for z/OS, C++ Edition V1.8
//*
//*  Pseudocode =
//*    DSNTICU  Step     Drop Web Service Consumer UDFs
//*    DSNTIJS  Step     Create Web Service Consumer UDFs
//*    DSNTIJG  Step     Grant access to Web Service Consumer UDFs
//*
//*  Notes =
//*    Prior to running this job, customize it for your system:
//*    (1) Add a valid job card
//*    (2) Locate and change all occurrences of the following strings
//*        as indicated:
//*        (A) '§DSN§' to the subsystem name of your DB2
//*        (B) 'DSNTIA§§' to the plan name for DSNTIAD on your DB2
//*        (C) The four Web Service Consumer UDF must be defined in
//*            different WLM application environment. Change §WLM1§,
//*            §WLM2§,§WLM3§,§WLM4§ to the name of WLM environment.
//*        (D) 'DSN§§0' to the prefix of the target library for DB2 V8
//*
//* CHANGE ACTIVITY =
//*PARAMETER VARCHAR STRUCTURE
//*********************************************************************
//*
//JOBLIB  DD  DSN=DSN§§0.SDSNEXIT,DISP=SHR
//        DD  DSN=DSN§§0.SDSNLOAD,DISP=SHR
//        DD  DSN=DSN§§0.RUNLIB.LOAD,DISP=SHR
//*
//*        STEP  1: DROP Existing Web Service Consumer UDFs
//*
//DSNTJCU EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
 DSN SYSTEM(§DSN§)
 RUN PROGRAM(DSNTIAD)          -
     PLAN(DSNTIA§§)           -
     LIB('DSN§§0.RUNLIB.LOAD') -
     PARM('RC0')
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSIN    DD *
 DROP SPECIFIC FUNCTION DB2XML.SOAPHTTPVIVO RESTRICT;
 DROP SPECIFIC FUNCTION DB2XML.SOAPHTTPCIVO RESTRICT;
 DROP SPECIFIC FUNCTION DB2XML.SOAPHTTPCICO RESTRICT;
 DROP SPECIFIC FUNCTION DB2XML.SOAPHTTPVICO RESTRICT;
//*
//*        STEP  2: DEFINE Web Service Consumer UDFs TO DB2
//*
//DSNTIJS  EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
 DSN SYSTEM(§DSN§)
 RUN PROGRAM(DSNTIAD)          -
     PLAN(DSNTIA§§)           -
     LIB('DSN§§0.RUNLIB.LOAD')
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSIN    DD *
CREATE FUNCTION DB2XML.SOAPHTTPV (
                ENDPOINT_URL VARCHAR(256),
                SOAP_ACTION VARCHAR(256),
                SOAP_BODY VARCHAR(32672))
       RETURNS VARCHAR(32672)
LANGUAGE C
SPECIFIC SOAPHTTPVIVO
EXTERNAL NAME DSNASHVV
PARAMETER STYLE DB2SQL
PARAMETER CCSID UNICODE
PARAMETER VARCHAR STRUCTURE
SCRATCHPAD
FINAL CALL
FENCED
NOT DETERMINISTIC
CALLED ON NULL INPUT
NO SQL
EXTERNAL ACTION
RUN OPTIONS 'POSIX(ON),XPLINK(ON)'
WLM ENVIRONMENT §WLM1§
DBINFO;

CREATE FUNCTION DB2XML.SOAPHTTPV (
                ENDPOINT_URL VARCHAR(256),
                SOAP_ACTION VARCHAR(256),
                SOAP_BODY CLOB(1M))
       RETURNS VARCHAR(32672)
LANGUAGE C
SPECIFIC SOAPHTTPCIVO
EXTERNAL NAME DSNASHCV
PARAMETER STYLE DB2SQL
PARAMETER CCSID UNICODE
PARAMETER VARCHAR STRUCTURE
SCRATCHPAD
FINAL CALL
FENCED
NOT DETERMINISTIC
CALLED ON NULL INPUT
NO SQL
EXTERNAL ACTION
RUN OPTIONS 'POSIX(ON),XPLINK(ON)'
WLM ENVIRONMENT §WLM2§
DBINFO;

CREATE FUNCTION DB2XML.SOAPHTTPC (
                ENDPOINT_URL VARCHAR(256),
                SOAP_ACTION VARCHAR(256),
                SOAP_BODY CLOB(1M))
       RETURNS CLOB(1M)
LANGUAGE C
SPECIFIC SOAPHTTPCICO
EXTERNAL NAME DSNASHCC
PARAMETER STYLE DB2SQL
PARAMETER CCSID UNICODE
PARAMETER VARCHAR STRUCTURE
SCRATCHPAD
FINAL CALL
FENCED
NOT DETERMINISTIC
CALLED ON NULL INPUT
NO SQL
EXTERNAL ACTION
RUN OPTIONS 'POSIX(ON),XPLINK(ON)'
WLM ENVIRONMENT §WLM3§
DBINFO;

CREATE FUNCTION DB2XML.SOAPHTTPC (
                ENDPOINT_URL VARCHAR(256),
                SOAP_ACTION VARCHAR(256),
                SOAP_BODY VARCHAR(32672))
       RETURNS CLOB(1M)
LANGUAGE C
SPECIFIC SOAPHTTPVICO
EXTERNAL NAME DSNASHVC
PARAMETER STYLE DB2SQL
PARAMETER CCSID UNICODE
PARAMETER VARCHAR STRUCTURE
SCRATCHPAD
FINAL CALL
FENCED
NOT DETERMINISTIC
CALLED ON NULL INPUT
NO SQL
EXTERNAL ACTION
RUN OPTIONS 'POSIX(ON),XPLINK(ON)'
WLM ENVIRONMENT §WLM4§
DBINFO;
//*
//*        STEP  3: GRANT Access To Web Service Consumer UDFs
//*
//DSNTIJG  EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
 DSN SYSTEM(§DSN§)
 RUN PROGRAM(DSNTIAD)          -
     PLAN(DSNTIA§§)            -
     LIB('DSN§§0.RUNLIB.LOAD')
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSIN    DD *
 GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.SOAPHTTPVIVO TO PUBLIC;
 GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.SOAPHTTPCIVO TO PUBLIC;
 GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.SOAPHTTPCICO TO PUBLIC;
 GRANT EXECUTE ON SPECIFIC FUNCTION DB2XML.SOAPHTTPVICO TO PUBLIC;
//*

./ ADD NAME=DSNTIJXA
//********************************************************************* 00000100
//*  NAME = DSNTIJXA                                                    00000200
//*                                                                     00000300
//*  DESCRIPTIVE NAME = DB2 INSTALL JOB                                 00000400
//*                                                                     00000500
//*    Licensed Materials - Property of IBM                             00000600
//*    5615-DB2                                                         00000700
//*    (C) COPYRIGHT 2010, 2013 IBM Corp.  All Rights Reserved.         00000800
//*                                                                     00000900
//*    STATUS = Version 11                                              00001000
//*                                                                     00001100
//*  FUNCTION = RUN THIS JOB TO EXECUTE DB2 REXX EXEC DSNTXTA, WHICH    00001200
//*             CAN BE USED TO BRING ALL DB2 EXPLAIN TABLES IN A        00001300
//*             SPECIFIED SCHEMA INTO CURRENT RELEASE FORMAT.           00001400
//*                                                                     00001500
//*  PSEUDOCODE =                                                       00001600
//*    DSNTXTA  STEP     EXECUTE DSNTXTA                                00001700
//*                                                                     00001800
//*     NOTES = THIS JOB REQUIRES DB2 REXX LANGUAGE SUPPORT             00001900
//*                                                                     00002000
//*             THE DSNTXTA EXEC USES THE SQL ALTER STATEMENT TO ADD    00002100
//*             AND ALTER COLUMNS IN CANDIDATE EXPLAIN TABLES, WHICH    00002200
//*             CAN CAUSE THE CONTAINING TABLE SPACES AND INDEXES       00002300
//*             TO BE PLACED INTO REORG-PENDING OR ADVISORY REORG-      00002400
//*             PENDING STATUS.  AFTER RUNNING THIS JOB, USE THE        00002500
//*             -DISPLAY DATABASE STATEMENT TO IDENTIFY AFFECTED        00002600
//*             TABLE SPACES AND INDEXES, AND USE THE REORG UTILITY     00002700
//*             TO REORGANIZE THEM.                                     00002800
//*                                                                     00002900
//*             THE FOLLOWING MANUAL TAILORING IS REQUIRED:             00003000
//*             1. ADD A VALID JOB CARD.                                00003100
//*             2. LOCATE AND CHANGE ALL OCCURRENCES OF THE FOLLOWING   00003200
//*                STRINGS AS INDICATED:                                00003300
//*                A. '§DSN§' TO THE NAME OF THE DB2 SUBSYSTEM YOU ARE  00003400
//*                   PREPARING TO MIGRATE.                             00003500
//*                B. 'DSN§§0' TO THE PREFIX OF THE SDSNLOAD TARGET     00003600
//*                   LIBRARY NAME FOR THE DB2 SUBSYSTEM YOU ARE        00003700
//*                   PREPARING TO MIGRATE.                             00003800
//*                C. CHANGE §SYSADM§ TO THE AUTHORIZATION ID TO BE     00003900
//*                   USED TO RUN DSNTXTA                               00004000
//*                D. CHANGE §SCHEMA§ TO THE NAME OF THE SCHEMA THAT    00004100
//*                   OWNS THE EXPLAIN TABLES TO BE PUT IN CURRENT      00004200
//*                   RELEASE FORMAT                                    00004300
//*                                                                     00004400
//* CHANGE ACTIVITY =                                                   00004500
//*   07/05/2011 Add REORG notice to job prolog                  PM3767900004600
//**********************************************************************00004700
//*                                                                     00004800
//JOBLIB  DD  DSN=DSN§§0.SDSNLOAD,DISP=SHR                              00004900
//*                                                                     00005000
//*                                                                     00005100
//* DSNTXTA: BRING DB2 EXPLAIN TABLES INTO CURRENT RELEASE FORMAT       00005200
//*   PARMS: 1. LOCAL DB2 SSID                                          00005300
//*          2. AUTHORIZATION ID TO PERFORM THE WORK                    00005400
//*          3. SCHEMA UNDER WHICH THE TABLES RESIDE                    00005500
//DSNTXTA EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00005600
//SYSEXEC  DD  DISP=SHR,DSN=DSN§§0.SDSNCLST                             00005700
//SYSTSPRT DD  SYSOUT=*                                                 00005800
//SYSPRINT DD  SYSOUT=*                                                 00005900
//SYSUDUMP DD  SYSOUT=*                                                 00006000
//SYSTSIN  DD  *                                                        00006100
  DSNTXTA +                                                             00006200
    §DSN§ §SYSADM§ §SCHEMA§                                             00006300
//*                                                                     00006400

./ ADD NAME=DSNTIJXB
//********************************************************************* 00000100
//*  NAME = DSNTIJXB                                                    00000200
//*                                                                     00000300
//*  DESCRIPTIVE NAME = DB2 INSTALL JOB                                 00000400
//*                                                                     00000500
//*    Licensed Materials - Property of IBM                             00000600
//*    5605-DB2                                                         00000700
//*    (C) COPYRIGHT 1982, 2010 IBM Corp.  All Rights Reserved.         00000800
//*                                                                     00000900
//*    STATUS = Version 10                                              00001000
//*                                                                     00001100
//*  FUNCTION = RUN THIS JOB TO EXECUTE DB2 REXX EXEC DSNTXTB, WHICH    00001200
//*             GENERATES DDL AND DB2 CROSS LOADER STATEMENTS THAT      00001300
//*             CAN BE USED TO CREATE UNICODE COPIES OF ALL EBCDIC      00001400
//*             EXPLAIN TABLES IN A SPECIFIED SCHEMA.                   00001500
//*                                                                     00001600
//*  PSEUDOCODE =                                                       00001700
//*    DSNTXTB  STEP     EXECUTE DSNTXTB                                00001800
//*                                                                     00001900
//*     NOTES = THIS JOB REQUIRES DB2 REXX LANGUAGE SUPPORT             00002000
//*                                                                     00002100
//*             THE FOLLOWING MANUAL TAILORING IS REQUIRED:             00002200
//*             1. ADD A VALID JOB CARD.                                00002300
//*             2. LOCATE AND CHANGE ALL OCCURRENCES OF THE FOLLOWING   00002400
//*                STRINGS AS INDICATED:                                00002500
//*                A. '§DSN§' TO THE NAME OF THE DB2 SUBSYSTEM YOU ARE  00002600
//*                   PREPARING TO MIGRATE.                             00002700
//*                B. 'DSN§§0' TO THE PREFIX OF THE SDSNLOAD TARGET     00002800
//*                   LIBRARY NAME FOR THE DB2 SUBSYSTEM YOU ARE        00002900
//*                   PREPARING TO MIGRATE.                             00003000
//*                C. CHANGE §SYSADM§ TO THE AUTHORIZATION ID TO BE     00003100
//*                   USED TO RUN DSNTXTB                               00003200
//*                D. CHANGE §SCHEMA§ TO THE NAME OF THE SCHEMA THAT    00003300
//*                   OWNS THE EBCDIC EXPLAIN TABLES                    00003400
//*                E. CHANGE §TARGET_DATABASE§ TO THE NAME OF THE       00003500
//*                   DATABASE IN WHICH THE UNICODE TABLE SPACES        00003600
//*                   RESIDE OR SHOULD BE CREATED                       00003700
//*                F. CHANGE §TARGET_4K_BASE_TS§ TO THE NAME OF A       00003800
//*                   4-KB PAGE SIZE UNICODE TABLE SPACE IN WHICH       00003900
//*                   THE NEW EXPLAIN TABLES SHOULD BE CREATED.         00004000
//*                   IF THE NAMED TABLE SPACE ALREADY EXISTS, NO       00004100
//*                   STATEMENTS WILL BE GENERATED TO CREATE IT.        00004200
//*                G. CHANGE §TARGET_8K_BASE_TS§ TO THE NAME OF AN      00004300
//*                   8-KB PAGE SIZE UNICODE TABLE SPACE IN WHICH       00004400
//*                   THE NEW EXPLAIN TABLES SHOULD BE CREATED.         00004500
//*                   IF THE NAMED TABLE SPACE ALREADY EXISTS, NO       00004600
//*                   STATEMENTS WILL BE GENERATED TO CREATE IT.        00004700
//*                H. CHANGE §TARGET_16K_BASE_TS§ TO THE NAME OF A      00004800
//*                   16-KB PAGE SIZE UNICODE TABLE SPACE IN WHICH      00004900
//*                   THE NEW EXPLAIN TABLES SHOULD BE CREATED.         00005000
//*                   IF THE NAMED TABLE SPACE ALREADY EXISTS, NO       00005100
//*                   STATEMENTS WILL BE GENERATED TO CREATE IT.        00005200
//*                I. CHANGE §TARGET_8K_LOB_TS§ TO THE NAME OF AN       00005300
//*                   8-KB PAGE SIZE UNICODE LOB TABLE SPACE IN WHICH   00005400
//*                   THE NEW EXPLAIN AUXILIARY TABLES SHOULD BE        00005500
//*                   CREATED.  IF THE NAMED TABLE SPACE ALREADY        00005600
//*                   EXISTS, NO STATEMENTS WILL BE GENERATED TO        00005700
//*                   CREATE IT.                                        00005800
//*                J. CHANGE §TARGET_32K_LOB_TS§ TO THE NAME OF A       00005900
//*                   16-KB PAGE SIZE UNICODE LOB TABLE SPACE IN WHICH  00006000
//*                   THE NEW EXPLAIN AUXILIARY TABLES SHOULD BE        00006100
//*                   CREATED.  IF THE NAMED TABLE SPACE ALREADY        00006200
//*                   EXISTS, NO STATEMENTS WILL BE GENERATED TO        00006300
//*                   CREATE IT.                                        00006400
//*                                                                     00006500
//* CHANGE ACTIVITY =                                                   00006600
//**********************************************************************00006700
//*                                                                     00006800
//JOBLIB  DD  DSN=DSN§§0.SDSNLOAD,DISP=SHR                              00006900
//*                                                                     00007000
//*                                                                     00007100
//* DSNTXTB: BRING DB2 EXPLAIN TABLES INTO CURRENT RELEASE FORMAT       00007200
//*   PARMS: 1. LOCAL DB2 SSID                                          00007300
//*          2. AUTHORIZATION ID TO PERFORM THE WORK                    00007400
//*          3  SCHEMA OWNING THE EXPLAIN TABLES THAT NEED TO           00007500
//*             BE CONVERTED TO UNICODE                                 00007600
//*          4. TARGET DATABASE (FOR THE UNICODE TABLES)                00007700
//*          5. TARGET 4KB PAGE TABLE SPACE                             00007800
//*          6. TARGET 8KB PAGE TABLE SPACE                             00007900
//*          7. TARGET 16KB PAGE TABLE SPACE                            00008000
//*          8. TARGET 8KB PAGE LOB TS                                  00008100
//*          9. TARGET 32KB PAGE LOB TS                                 00008200
//*                                                                     00008300
//DSNTXTB EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)                     00008400
//SYSEXEC  DD  DISP=SHR,DSN=DSN§§0.SDSNCLST                             00008500
//SYSTSPRT DD  SYSOUT=*                                                 00008600
//SYSPRINT DD  SYSOUT=*                                                 00008700
//SYSUDUMP DD  SYSOUT=*                                                 00008800
//SYSTSIN  DD  *                                                        00008900
  DSNTXTB +                                                             00009000
    §DSN§ +                                                             00009100
    §SYSADM§ +                                                          00009200
    §SCHEMA§ +                                                          00009300
    §TARGET_DATABASE§ +                                                 00009400
    §TARGET_4K_BASE_TS§ +                                               00009500
    §TARGET_8K_BASE_TS§ +                                               00009600
    §TARGET_16K_BASE_TS§ +                                              00009700
    §TARGET_8K_LOB_TS§ +                                                00009800
    §TARGET_32K_LOB_TS§                                                 00009900
//XLDOUT   DD  DSN=DSN§§0.DSNTIJXB.§SCHEMA§.XLDOUT,                     00010000
//             DISP=(,CATLG),                                           00010100
//             UNIT=SYSDA,SPACE=(TRK,(10,1),RLSE),                      00010200
//             DCB=(RECFM=FB,LRECL=80)                                  00010300
//DDLOUT   DD  DSN=DSN§§0.DSNTIJXB.§SCHEMA§.DDLOUT,                     00010400
//             DISP=(,CATLG),                                           00010500
//             UNIT=SYSDA,SPACE=(TRK,(10,1),RLSE),                      00010600
//             DCB=(RECFM=FB,LRECL=80)                                  00010700
//*                                                                     00010800

./ ADD NAME=DSNTIJXC
//********************************************************************* 00000100
//*  NAME = DSNTIJXC                                                    00000200
//*                                                                     00000300
//*  DESCRIPTIVE NAME = DB2 INSTALL JOB                                 00000400
//*                                                                     00000500
//*    Licensed Materials - Property of IBM                             00000600
//*    5605-DB2                                                         00000700
//*    (C) COPYRIGHT 1982, 2010 IBM Corp.  All Rights Reserved.         00000800
//*                                                                     00000900
//*    STATUS = Version 10                                              00001000
//*                                                                     00001100
//*  FUNCTION = THIS JOB CAN BE USED TO PROCESS DB2 CROSS LOADER        00001200
//*             CONTROL STATEMENTS GENERATED BY RUNNING JOB DSNTIJXB,   00001300
//*             WHICH ARE FOR CREATING UNICODE COPIES OF THE            00001400
//*             EBCDIC EXPLAIN TABLES UNDER A GIVEN SCHEMA.             00001500
//*                                                                     00001600
//*  PSEUDOCODE =                                                       00001700
//*    DSNXLOAD STEP     CALL THE DB2 UTILITIES CROSS LOADER            00001800
//*                                                                     00001900
//*     NOTES = THIS JOB REQUIRES DB2 UTILITIES CROSS LOADER (EXEC SQL) 00002000
//*             SUPPORT.                                                00002100
//*                                                                     00002200
//*             DO NOT RUN THIS JOB UNTIL YOU HAVE REVIEWED THE         00002300
//*             STATEMENTS GENERATED BY DSNTIJXB, AND MADE ANY          00002400
//*             NECESSARY ADDITIONS OR ADJUSTMENTS.                     00002500
//*                                                                     00002600
//*             THE FOLLOWING MANUAL TAILORING IS REQUIRED:             00002700
//*             1. ADD A VALID JOB CARD.                                00002800
//*             2. LOCATE AND CHANGE ALL OCCURRENCES OF THE FOLLOWING   00002900
//*                STRINGS AS INDICATED:                                00003000
//*                A. '§DSN§' TO THE NAME OF THE DB2 SUBSYSTEM YOU ARE  00003100
//*                   PREPARING TO MIGRATE.                             00003200
//*                B. 'DSN§§0' TO THE PREFIX OF THE SDSNLOAD TARGET     00003300
//*                   LIBRARY NAME FOR THE DB2 SUBSYSTEM YOU ARE        00003400
//*                   PREPARING TO MIGRATE.                             00003500
//*                C. CHANGE §SCHEMA§ TO THE NAME OF THE SCHEMA THAT    00003600
//*                   OWNS THE EBCDIC EXPLAIN TABLES                    00003700
//*                                                                     00003800
//* CHANGE ACTIVITY =                                                   00003900
//**********************************************************************00004000
//*                                                                     00004100
//JOBLIB  DD  DSN=DSN§§0.SDSNLOAD,DISP=SHR                              00004200
//*                                                                     00004300
//*                                                                     00004400
//DSNXLOAD EXEC PGM=DSNUTILB,REGION=0M,                                 00004500
//             PARM='§DSN§,DSNTIJXC.DSNXLD'                             00004600
//SYSPRINT DD  SYSOUT=*                                                 00004700
//UTPRINT  DD  SYSOUT=*                                                 00004800
//SYSUDUMP DD  SYSOUT=*                                                 00004900
//SORTOUT  DD  UNIT=SYSDA,SPACE=(8000,(100,100),,,ROUND)                00005000
//SYSUT1   DD  UNIT=SYSDA,SPACE=(8000,(100,100),,,ROUND)                00005100
//SYSIN    DD  DSN=DSN§§0.DSNTIJXB.§SCHEMA§.XLDOUT,DISP=SHR             00005200
//*                                                                     00005300

./ ADD NAME=DSNTIJXZ
//********************************************************************* 00010000
//* JOB NAME = DSNTIJXZ                                          182206 00020000
//*                                                                     00030000
//* DESCRIPTIVE NAME = INSTALLATION JOB STREAM                          00040000
//*                                                                     00050000
//*    Licensed Materials - Property of IBM                             00060000
//*    5650-DB2                                                         00070000
//*    (C) COPYRIGHT 2010, 2016 IBM Corp.  All Rights Reserved.         00080000
//*                                                                     00090000
//*    STATUS = Version 12                                              00100000
//*                                                                     00110000
//* FUNCTION = CREATE A NEW CLIST DEFAULTS INPUT MEMBER WITH            00120000
//*            THE LATEST ZPARM AND BUFFER POOL SETTINGS                00130000
//*                                                                     00140000
//* PSEUDOCODE =                                                        00150000
//*   DSNTIXZ  STEP      EXECUTE DSNTXAZP TO CREATE A NEW CLIST         00160000
//*                      DEFAULTS MEMBER                                00170000
//*                                                                     00180000
//* NOTES = THE FOLLOWING PARAMETERS ARE REQUIRED:                      00190000
//*                                                                     00200000
//* ssid                                                                00210000
//*                                                                     00220000
//*   THE FIRST PARAMETER IS THE DB2 SUBSYSTEM ID                       00230000
//*                                                                     00240000
//* action-type                                                         00250000
//*                                                                     00260000
//*   THE SECOND PARAMETER SPECIFIES THE TYPE OF ACTION TO BE           00270000
//*   PERFORMED. THE FOLLOWING VALUES ARE SUPPORTED:                    00280000
//*                                                                     00290000
//*     UPDATE_ALL   : THIS ACTION WILL CREATE A NEW CLIST DEFAULTS     00300000
//*                    MEMBER AND UPDATE IT USING THE CURRENT ZPARM     00310000
//*                    AND BUFFER POOL SETTINGS                         00320000
//*                                                                     00330000
//*     UPDATE_BPOOL : THIS ACTION WILL CREATE A NEW CLIST DEFAULTS     00340000
//*                    MEMBER AND UPDATE IT USING THE CURRENT           00350000
//*                    BUFFER POOL SETTINGS ONLY (NO ZPARM)             00360000
//*                                                                     00370000
//*     UPDATE_ZPARM : THIS ACTION WILL CREATE A NEW CLIST DEFAULTS     00380000
//*                    MEMBER AND UPDATE IT USING THE CURRENT           00390000
//*                    ZPARM SETTINGS ONLY (NO BUFFER POOL)             00400000
//*                                                                     00410000
//* THE FOLLOWING DD STATEMENTS ARE USED BY DSNTXAZP:                   00420000
//*                                                                     00430000
//* XAINPUT  : THIS IS USED AS INPUT TO THE DSNTXAZP PROGRAM. IT        00440000
//*            CONTAINS THE CURRENT CLIST DEFAULTS INPUT MEMBER WHICH   00450000
//*            WILL BE USED AS THE SOURCE FOR CREATING A NEW CLIST      00460000
//*            DEFAULTS MEMBER. THE VERSION OF THE MEMBER SHOULD MATCH  00470000
//*            THE VERSION OF THE DB2 SUBSYSTEM SELECTED.               00480000
//*            NOTE: ANY COMMENTS IN THIS INPUT FILE MUST START WITH AN 00480005
//*            '*' AT COLUMN 1.                                         00480006
//*                                                                     00490000
//* XAOUTPUT : THIS IS USED AS OUTPUT BY THE DSNTXAZP PROGRAM. IT       00500000
//*            CONTAINS THE GENERATED CLIST DEFAULTS INPUT MEMBER WITH  00510000
//*            UPDATED ZPARM AND BUFFER POOL SETTINGS. THIS SHOULD BE   00520000
//*            A MEMBER OF A PDS DEFINED WITH RECFM=FB, LRECL=80.       00530000
//*                                                                     00540000
//* SYSPRINT : THIS IS USED AS OUTPUT BY THE DSNTXAZP PROGRAM FOR       00550000
//*            INFORMATIONAL AND ERROR MESSAGES. IT ALSO INCLUDES A     00560000
//*            REPORT ON THE PARAMETERS THAT WERE PROCESSED AND         00570000
//*            MODIFIED.                                                00580000
//*                                                                     00590000
//* PRIOR TO RUNNING THIS JOB, CUSTOMIZE IT FOR YOUR SYSTEM:            00600000
//*  (1) ADD A VALID JOB CARD                                           00610000
//*  (2) LOCATE AND CHANGE ALL OCCURRENCES OF THE FOLLOWING STRINGS     00620000
//*      AS INDICATED:                                                  00630000
//*      (A) '§DSN§' TO THE SUBSYSTEM NAME OF YOUR DB2                  00640000
//*      (B) 'DSN§§0' TO THE PREFIX OF YOUR DB2 SDSNLOAD DATA SET       00650000
//*      (C) 'V§R§M§' TO THE PREFIX OF YOUR SCEERUN DATA SET            00660000
//*      (D) '§INPUT§' TO THE DATA SET NAME OF YOUR INPUT CLIST         00670000
//*          MEMBER                                                     00680000
//*      (E) '§OUTPUT§' TO THE DATA SET NAME OF THE GENERATED CLIST     00690000
//*          INPUT MEMBER                                               00700000
//********************************************************************* 00710000
//JOBLIB   DD  DISP=SHR,DSN=DSN§§0.SDSNLOAD                             00720000
//         DD  DISP=SHR,DSN=CEE.V§R§M§.SCEERUN                          00730000
//********************************************************************* 00740000
//* DSNTIXZ: Execute DSNTXAZP                                           00750000
//********************************************************************* 00760000
//DSNTIXZ  EXEC PGM=DSNTXAZP,PARM='§DSN§ UPDATE_ALL'                    00770000
//XAINPUT  DD   DSN=§INPUT§,DISP=SHR                                    00780000
//XAOUTPUT DD   DSN=§OUTPUT§,DISP=SHR                                   00790000
//SYSPRINT DD   SYSOUT=*                                                00800000
/*                                                                      00810000

./ ADD NAME=DSN1COP
//SYSILEA  JOB 1000,'DSN1COPY   ',MSGLEVEL=(1,1),                       00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE TYPRUN=SCAN                 00002000
//*------------------------------------------------------------*        00002100
//*  CE JCL PERMET DE COPIER UNE IMAGE COPY DANS UN TS                  00002200
//*------------------------------------------------------------*        00002500
//DSN1COPY EXEC PGM=DSN1COPY                                            00002601
//SYSUT1   DD DSN=SYST.DSNDBC.DBSYST01.S2G90U01.I0001.A001,DISP=SHR     00002901
//SYSUT2   DD DSN=SYST.S2G90U01.SEQ,DISP=(,CATLG),                      00003001
//            UNIT=WORKDA,SPACE=(TRK,(10000,1000),RLSE),DCB=(DSCB)      00003101
//SYSPRINT DD SYSOUT=*                                                  00003400

./ ADD NAME=DSN1COPY
//SYSILEA  JOB 1000,'DSN1COPY   ',MSGLEVEL=(1,1),                       00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE TYPRUN=SCAN                 00002000
//*------------------------------------------------------------*        00002100
//*  CE JCL PERMET DE COPIER UNE IMAGE COPY DANS UN TS                  00002200
//*------------------------------------------------------------*        00002500
//DSN1COPY EXEC PGM=DSN1COPY,PARM='OBIDXLAT,FULLCOPY,RESET'             00002604
//SYSUT1   DD DSN=OPG1.JS01SV01.S2G92U01.AV.PG0L12,DISP=SHR             00002910
//SYSUT2   DD DSN=DB2S.DSNDBC.DBSYST02.S2G92U01.I0001.A001,DISP=OLD     00003010
//SYSPRINT DD SYSOUT=*                                                  00003400
//SYSXLAT DD *                                                          00003500
258,265                                                                 00003610
7,1                                                                     00003710
76,3                                                                    00003810
//                                                                      00004000

./ ADD NAME=DSN1DB2I
//SYSILEA  JOB 1000,'DSN1COPY   ',MSGLEVEL=(1,1),                       00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE TYPRUN=SCAN                 00002000
//*------------------------------------------------------------*        00002200
//*  CE JCL PERMET DE COPIER UNE IMAGE COPY DANS UN TS                  00002300
//*------------------------------------------------------------*        00002400
//S1       EXEC PGM=DSN1COPY,PARM='CHECK'                               00002500
//SYSUT1   DD DSN=DB2R.DSNDBC.DSNDB01.DBD01.I0001.A001,DISP=OLD         00002600
//SYSUT2   DD DSN=SCT.DBD01.LUNDI,DISP=(NEW,PASS),                      00002701
//         UNIT=CTAPE,VOL=(,RETAIN,,,SER=MIM041),TRTCH=NOCOMP,          00002800
//         LABEL=(1,SL)                                                 00002900
//SYSPRINT DD SYSOUT=*                                                  00003000
//*                                                                     00003100
//S2       EXEC PGM=DSN1COPY,PARM='CHECK'                               00003200
//SYSUT1   DD DSN=DB2R.DSNDBC.DSNDB06.SYSDBASE.I0001.A001,DISP=OLD      00003300
//SYSUT2   DD DSN=SCT.DSNDB06.LUNDI,DISP=(NEW,PASS),                    00003401
//         UNIT=CTAPE,VOL=(,RETAIN,REF=*.S1.SYSUT2),TRTCH=NOCOMP,       00003500
//         LABEL=(2,SL)                                                 00003600
//SYSPRINT DD SYSOUT=*                                                  00003700
//S3       EXEC PGM=DSN1COPY,PARM='CHECK'                               00003800
//SYSUT1   DD DSN=SYST.DSNDBC.DSNDB01.DBD01.I0001.A001,DISP=OLD         00003900
//SYSUT2   DD DSN=SCT.DSNDB01.DIMANCHE,DISP=(NEW,PASS),                 00004001
//         UNIT=CTAPE,VOL=(,RETAIN,REF=*.S2.SYSUT2),TRTCH=NOCOMP,       00004100
//         LABEL=(3,SL)                                                 00004200
//SYSPRINT DD SYSOUT=*                                                  00004300
//S4       EXEC PGM=DSN1COPY,PARM='CHECK'                               00004400
//SYSUT1   DD DSN=SYST.DSNDBC.DSNDB06.SYSDBASE.I0001.A001,DISP=OLD      00004500
//SYSUT2   DD DSN=SCT.DSNDB06.DIMANCHE,DISP=(NEW,PASS),                 00004601
//         UNIT=CTAPE,VOL=(,RETAIN,REF=*.S3.SYSUT2),TRTCH=NOCOMP,       00004700
//         LABEL=(4,SL)                                                 00004800
//SYSPRINT DD SYSOUT=*                                                  00004900
//                                                                      00005000

./ ADD NAME=DSN1LOGP
//DSN1LOGS JOB 1000,DB2,MSGLEVEL=(1,1),                                 00001006
//         CLASS=S,MSGCLASS=T,NOTIFY=&SYSUID TYPRUN=SCAN                00002006
//*------------------------------------------------------------*        00002100
//*  CE JCL PERMET DE LISTER LE CONTENU DES LOGS ET DU BSDS             00002200
//*  IL FAUT CODER SOIT BSDS, SOIT ACTIVE, SOIT ARCHIVE                 00002300
//*  CET UTILITAIRE EST DOCUMENTE PAGE 293 DES UTILITAIRES              00002400
//*------------------------------------------------------------*        00002500
//DSN1LOGP EXEC PGM=DSN1LOGP,REGION=0M                                  00002607
//SYSSUMRY DD SYSOUT=*                                                  00002800
//*BSDS     DD DSN=DB2S.BSDS01,DISP=SHR                                 00002906
//ARCHIVE  DD DSN=DB2S.ARCHLOG1.B0004505,DISP=SHR                       00003007
//*ACTIVE1  DD DSN=DB2C.LOGCOPY1.DS02,DISP=SHR                          00003105
//*ACTIVE2  DD DSN=DB2C.LOGCOPY1.DS01,DISP=SHR                          00003205
//SYSPRINT DD SYSOUT=*                                                  00003400
//SYSIN DD *                                                            00003500
RBASTART(FE235E4B9)    RBAEND (FE235E4B9)      DATAONLY (YES)           00003608
/*                                                                      00003708
LRSNSTART(HEX-CONSTANT) LRSNEND ( FFFFFFFFFFFFFFFFFFFF )                00003808
SYSCOPY (YES) DBID(HEX-CONSTANT) OBID(HEX-CONSTANT) PAGE(HEX-CONSTANT)  00003908
RID(HEX-CONSTANT) URID(HEX-CONSTANT) PART(HEX-CONSTANT)                 00004008
LUWID(LUWID) TYPE ( HEX-CONSTANT ) SUBTYPE ( HEX-CONSTANT ) VALUE/OFFSET00004108
SUMMARY (NO)                                                            00004208
SUMMARY ( YES ) ONLY FILTER CHECK(DATA)                                 00004308
VALUE/OFFSET VALUE(HEX-CONSTANT) OFFSET(HEX-CONSTANT)                   00004408
  SUMMARY(ONLY)                                                         00004508
//                                                                      00004608
RBASTART(HEX-CONSTANT) RBAEND ( HEX-CONSTANT ) DATAONLY (YES)           00004708
LRSNSTART(HEX-CONSTANT) LRSNEND ( FFFFFFFFFFFFFFFFFFFF )                00004808
SYSCOPY (YES) DBID(HEX-CONSTANT) OBID(HEX-CONSTANT) PAGE(HEX-CONSTANT)  00004908
RID(HEX-CONSTANT) URID(HEX-CONSTANT) PART(HEX-CONSTANT)                 00005008
LUWID(LUWID) TYPE ( HEX-CONSTANT ) SUBTYPE ( HEX-CONSTANT ) VALUE/OFFSET00005108
SUMMARY (NO)                                                            00005208
SUMMARY ( YES ) ONLY FILTER CHECK(DATA)                                 00005308
VALUE/OFFSET VALUE(HEX-CONSTANT) OFFSET(HEX-CONSTANT)                   00005408
  SUMMARY(ONLY)                                                         00005508
//                                                                      00005608
RBASTART(0F1DF4780B46) RBAEND(0F1DF48D07A3) SUMMARY(NO) DATAONLY(YES)   00005708
//                                                                      00005808
RBASTART(000002E00000) SUMMARY(ONLY)                                    00005908
SUMMARY(ONLY)                                                           00006008
//                                                                      00006108
RBASTART(0F1DF4780B46) RBAEND(0F1DF48D07A3) SUMMARY(NO) DATAONLY(YES)   00006208
//                                                                      00006308
RBASTART(000002E00000) SUMMARY(ONLY)                                    00007008

./ ADD NAME=DSN1PRNT
//DSN1PRNT JOB 1000,DB2,MSGLEVEL=(1,1),
//         CLASS=O,MSGCLASS=T,NOTIFY=&SYSUID  TYPRUN=SCAN
//*------------------------------------------------------------*
//*  CE JCL PERMET DE LISTER LE CONTENU D UN FICHIER DB2
//*------------------------------------------------------------*
//DSN1PRNT EXEC PGM=DSN1PRNT,PARM='PRINT(000105C5)'
//*SN1PRNT EXEC PGM=DSN1PRNT,PARM='NUMPARTS(10)'
//SYSUT1   DD DSN=DB2S.DSNDBC.DSNDB01.SYSLGRNX.I0001.A001,
//         DISP=SHR
//SYSPRINT DD SYSOUT=*

./ ADD NAME=EXPLAIN
//SYSILEX  JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=O,NOTIFY=&SYSUID
//*--------------------------------------------------------------------
//*   EXECUTION D'ORDRE DB2 EN BATCH
//*--------------------------------------------------------------------
//ST005   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2S.RUNLIB.LOAD,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2S)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
EXPLAIN ALL SET QUERYNO = 1 FOR
 SELECT A.CDOPE, A.DFAPP,
       A.CDVAL, A.CDEMEA, A.CQCAP, A.NUAHX, A.IDCNT, A.CGPAR, A.CDACT6,
      A.NUEDOX, A.CDORI, A.TYADH, A.QTJPV5, A.DDEFF2, A.CLCRI, A.CQCLT,
      A.CPEXMD, A.UTARI, A.UQTAR, A.VQTAR, A.MQTAR, A.TXRDC, A.CPTIC,
      A.CPEDO, A.CDUTI, A.DICREA, A.HMCRE, A.CDUTIM, A.DMODI, A.HMUMO1,
      A.ZTSTP, A.CAMAJ, A.CDRCG, A.CQDGE, A.RFPAN, A.CPPTA FROM
      SYSILE.T2M25OP A,
      SYSILE.T2M38OP B WHERE A.CDOPE = ? AND
      B.CDVAL = ? AND A.DFAPP >= ?
      AND A.DDEFF2 <= ?
      AND A.QTJPV5 >= ?
      AND A.RFPAN = B.RFPAN AND B.DFAPP >= ?
      AND B.DDEFF2 <= ? ;
 SELECT * FROM SYSILE.PLAN_TABLE WHERE QUERYNO = 1 ;
 SELECT * FROM SYSILE.DSN_STATEMNT_TABLE WHERE QUERYNO = 1 ;

./ ADD NAME=GRANTIBM
//SYSILEX  JOB (0),'DSNTEP2',MSGCLASS=X,MSGLEVEL=(1,1),
//         CLASS=O,NOTIFY=&SYSUID
//*        USER=DVXAZ,PASSWORD=METH
//*--------------------------------------------------------------------
//*   GRANT SELECT SUR LES TABLES DU CATALOGUES
//*--------------------------------------------------------------------
//ST005   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2L.RUNLIB.LOAD,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2L)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
GRANT SELECT
  ON TABLE "SYSIBM".MODESELECT, "SYSIBM".SYSAUXRELS,
           "SYSIBM".SYSCHECKDEP, "SYSIBM".SYSCHECKS,
           "SYSIBM".SYSCOLAUTH, "SYSIBM".SYSCOLDIST,
           "SYSIBM".SYSCOLDISTSTATS, "SYSIBM".SYSCOLSTATS,
           "SYSIBM".SYSCOLUMNS, "SYSIBM".SYSCONSTDEP, "SYSIBM".SYSCOPY,
           "SYSIBM".SYSDATABASE, "SYSIBM".SYSDATATYPES,
           "SYSIBM".SYSDBAUTH, "SYSIBM".SYSDBRM, "SYSIBM".SYSDUMMY1,
           "SYSIBM".SYSFIELDS, "SYSIBM".SYSFOREIGNKEYS,
           "SYSIBM".SYSINDEXES, "SYSIBM".SYSINDEXPART,
           "SYSIBM".SYSINDEXSTATS
  TO PUBLIC                                                            ;
GRANT SELECT
  ON TABLE "SYSIBM".SYSKEYS, "SYSIBM".SYSLINKS, "SYSIBM".SYSLOBSTATS,
           "SYSIBM".SYSPACKAGE, "SYSIBM".SYSPACKAUTH,
           "SYSIBM".SYSPACKDEP, "SYSIBM".SYSPACKLIST,
           "SYSIBM".SYSPACKSTMT, "SYSIBM".SYSPARMS,
           "SYSIBM".SYSPKSYSTEM, "SYSIBM".SYSPLAN, "SYSIBM".SYSPLANAUTH,
           "SYSIBM".SYSPLANDEP, "SYSIBM".SYSPLSYSTEM,
           "SYSIBM".SYSPROCEDURES, "SYSIBM".SYSPSM, "SYSIBM".SYSPSMOPTS,
           "SYSIBM".SYSRELS, "SYSIBM".SYSRESAUTH
  TO PUBLIC                                                            ;
GRANT SELECT
  ON TABLE "SYSIBM".SYSROUTINEAUTH, "SYSIBM".SYSROUTINES,
           "SYSIBM".SYSSCHEMAAUTH, "SYSIBM".SYSSEQUENCES,
           "SYSIBM".SYSSEQUENCESDEP, "SYSIBM".SYSSTMT,
           "SYSIBM".SYSSTOGROUP, "SYSIBM".SYSSTRINGS,
           "SYSIBM".SYSSYNONYMS, "SYSIBM".SYSTABAUTH,
           "SYSIBM".SYSTABLEPART, "SYSIBM".SYSTABLES,
           "SYSIBM".SYSTABLESPACE, "SYSIBM".SYSTABSTATS,
           "SYSIBM".SYSTRIGGERS, "SYSIBM".SYSUSERAUTH,
           "SYSIBM".SYSVIEWDEP, "SYSIBM".SYSVIEWS, "SYSIBM".SYSVLTREE,
           "SYSIBM".SYSVOLUMES, "SYSIBM".SYSVTREE
  TO PUBLIC                                                            ;
GRANT SELECT
  ON TABLE "SYSIBM".USERNAMES, "SYSIBM".IPNAMES, "SYSIBM".LOCATIONS,
           "SYSIBM".LULIST, "SYSIBM".LUMODES, "SYSIBM".LUNAMES
  TO PUBLIC

./ ADD NAME=GRANTTAB
//SYSILEX  JOB (0),'DSNTEP2',MSGCLASS=X,MSGLEVEL=(1,1),
//         CLASS=O,NOTIFY=&SYSUID
//*--------------------------------------------------------------------
//*   EXECUTION D'ORDRE DB2 EN BATCH
//*--------------------------------------------------------------------
//ST005   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2O.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//         DD DSN=SYS2.DB2410.SDSNLOAD,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2O)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
GRANT SELECT ON TABLE    SYSIBM.SYSCHECKDEP      TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSCHECKS        TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSCOLAUTH       TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSCOLDIST       TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSCOLDISTSTATS  TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSCOLSTATS      TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSCOLUMNS       TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSCOPY          TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSDATABASE      TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSDBAUTH        TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSDBRM          TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSFIELDS        TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSFOREIGNKEYS   TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSINDEXES       TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSINDEXPART     TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSINDEXSTATS    TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSKEYS          TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSLINKS         TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.LOCATIONS        TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSLULIST        TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.LUMODES          TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.LUNAMES          TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSMODESELECT    TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSPACKAGE       TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSPACKAUTH      TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSPACKDEP       TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSPACKLIST      TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSPACKSTMT      TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSPKSYSTEM      TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSPLAN          TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSPLANAUTH      TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSPLANDEP       TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSPLSYSTEM      TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSPROCEDURES    TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSRELS          TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSRESAUTH       TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSSTMT          TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSSTOGROUP      TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSSTRINGS       TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSSYNONYMS      TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSTABAUTH       TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSTABLEPART     TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSTABLES        TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSTABLESPACE    TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSTABSTATS      TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSUSERAUTH      TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.USERNAMES        TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSVIEWDEP       TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSVIEWS         TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSVLTREE        TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSVOLUMES       TO PUBLIC ;
GRANT SELECT ON TABLE    SYSIBM.SYSVTREE         TO PUBLIC ;

./ ADD NAME=IDCAMS
//IDCAMS    JOB ACCT£,
//             MVS,
//             NOTIFY=&SYSUID,
//             MSGLEVEL=(1,1)
//*DELETE  EXEC PGM=IEFBR14
//*SYSPRINT DD DSN=&SYSUID..&SYSNAME..LISTCAT,
//* DISP=(MOD,DELETE,DELETE),
//* SPACE=(TRK,(2,2)),
//* DCB=(LRECL=512,RECFM=FB)
//STEP1    EXEC PGM=IDCAMS
//*LISTCAT DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//*SYSPRINT DD DSN=&SYSUID..&SYSNAME..LISTCAT,
//* DISP=(NEW,CATLG,DELETE),
//* SPACE=(CYL,(2,2)),
//* DCB=(LRECL=512,RECFM=FB)
//SYSIN    DD *

./ ADD NAME=IFASMFDP
//IFASMFDP  JOB ACCT£,                                                  00010000
//             MVS,                                                     00020000
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040000
//*DUMP SMF DB2                                                         00041000
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050000
//      SYS019.LP2.DB2,                                                 00060000
//      SYS1.SACBCNTL)                                                  00070000
//STEP1 EXEC PGM=IFASMFDP                                               00080000
//DUMPIN DD DSN=SYS1.MAN1,DISP=SHR                                      00090000
//DUMPOUT DD DSN=SYS5.LP2.SMF.DB2.JOUR(+1),                             00100000
// UNIT=3390,                                                           00110000
// DISP=(NEW,CATLG),                                                    00120000
// SPACE=(CYL,(10,10))                                                  00130000
//*LABEL=(,SL),VOL=SER=serial                                           00140000
//SYSPRINT DD SYSOUT=*                                                  00150000
//SYSIN DD *                                                            00160000
INDD(DUMPIN,OPTIONS(DUMP))                                              00170000
OUTDD(DUMPOUT,TYPE(100:102))                                            00180000
//                                                                      00190000
INDD(DUMPIN,OPTIONS(ALL))                                               00200000
INDD(DUMPIN,OPTIONS(CLEAR))                                             00210000
INDD(INDD1,OPTIONS(ALL))                                                00220000
OUTDD(OUTDD1,TYPE(0,2,10,15:40))                                        00230000
OUTDD(OUTDD3,TYPE(10:255))                                              00240000
DATE(92002,92366)                                                       00250000
SID(308A)                                                               00260000
SID(308B)                                                               00270000

./ ADD NAME=IMAGCOP
//SYSILEA  JOB 1000,'COMPIL     ',MSGLEVEL=(1,1),                       00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE                             00002000
//*--------------------------------------------------------------------
//* PROCEDURE DE SAUVEGARDE DE LA DIRECTORY ET DU CATALOGUE DB2 <= 2.2
//*           SUR BANDE  POUR LE SSID DB2I
//*--------------------------------------------------------------------
//*
//* IMAGCOPY DSNDB01.SCT02
//*--------------------------------------------------------------------
//COPY001 EXEC PGM=DSNUTILB,PARM='DB2I,COPYDIR',
//         REGION=2M,COND=(12,LE)
//SYSPRINT DD SYSOUT=*
//UTPRINT  DD SYSOUT=*
//FIC001   DD UNIT=CTAPE,DISP=(,CATLG,DELETE),
//            LABEL=(001,SL),VOL=(,RETAIN),
//            DSN=PSECJ.SAVEDB2I.SCT02(+1),DCB=(DSCB)
//SYSIN    DD *
   COPY TABLESPACE DSNDB01.SCT02
   DEVT CTAPE
   COPYDDN FIC001
   FULL YES
   SHRLEVEL REFERENCE
//*
//* IMAGCOPY DSNDB06.SYSPLAN
//*
//COPY002 EXEC PGM=DSNUTILB,PARM='DB2I,COPYDIR',
//         REGION=2M,COND=(12,LE)
//SYSPRINT DD SYSOUT=*
//UTPRINT  DD SYSOUT=*
//FIC002   DD UNIT=CTAPE,DISP=(,CATLG,DELETE),
//            LABEL=(002,SL),VOL=(,RETAIN,REF=*.COPY001.FIC001),
//             DSN=PSECJ.SAVEDB2I.SYSPLAN(+1),DCB=(DSCB)
//SYSIN    DD *
   COPY TABLESPACE DSNDB06.SYSPLAN
   DEVT CTAPE
   COPYDDN FIC002
   FULL YES
   SHRLEVEL REFERENCE
//
//*
//* IMAGCOPY DSNDB06.SYSCOPY
//*
//COPY0003 EXEC PGM=DSNUTILB,PARM='DB2I,COPYDIR',
//         REGION=2M,COND=(12,LE)
//SYSPRINT DD SYSOUT=*
//UTPRINT  DD SYSOUT=*
//FIC0003  DD UNIT=CTAPE,DISP=(,CATLG,DELETE),
//            LABEL=(003,SL),VOL=(,RETAIN,REF=*.COPY0002.FIC0002),
//            DSN=PSECJ.SAVEDB2I.SYSCOPY(+1),DCB=(DSCB)
//SYSIN    DD *
   COPY TABLESPACE DSNDB06.SYSCOPY
   DEVT CTAPE
   COPYDDN FIC0003
   FULL YES
   SHRLEVEL REFERENCE

./ ADD NAME=INITSMF
//SYSILEA  JOB 1000,'SYSTEME',REGION=2M,                                JOB07915
//             CLASS=I,MSGCLASS=T,MSGLEVEL=(1,1),NOTIFY=&SYSUID         00020001
//*------------------------------------------------------------         00030003
//CUMRMF   EXEC PGM=IFASMFDP
//SYSPRINT DD  SYSOUT=*
//INDD1    DD  DSN=SAVED.SMF.DB2(0),DISP=SHR
//OUDD1    DD  DSN=PSMF.INIT.DB2,DISP=(,CATLG,DELETE),
//             SPACE=(TRK,(2,2),RLSE),
//             DCB=(RECFM=VBS,LRECL=32760,BLKSIZE=4096)
//SYSIN    DD  *
  INDD(INDD1,OPTIONS(DUMP))
  OUTDD(OUDD1,TYPE(70))
/*

./ ADD NAME=IXDSNATX
//SYSILEA JOB  1,LAPEYRE,MSGLEVEL=(1,1),                                00028700
//             MSGCLASS=T,NOTIFY=SYSILE,TIME=1439                       00028800
//* *************************************************************** */  00010000
//*    CE JCL PERMET D AGRANDIR LES INDEX DSNATX01 ET DSNATX02 DE   */  00020000
//*    LA TABLES SYSTABAUTH                                         */  00030000
//* *************************************************************** */  00370000
//DSNTIC  EXEC PGM=IDCAMS,COND=(2,LT)                                   00420000
//SYSPRINT DD SYSOUT=*                                                  00430000
//SYSUDUMP DD SYSOUT=*                                                  00440000
//DSNTIC  PEND                                                          00450000
//DSNTDBL EXEC DSNTIC                                                   00610000
//SYSIN    DD  *                                                        00620000
   DELETE DB2I.DSNDBC.DSNDB06.DSNATX01.I0001.A001                       04410000
   DEFINE CLUSTER                             -                         04400000
         ( NAME(DB2I.DSNDBC.DSNDB06.DSNATX01.I0001.A001) -              04410000
           LINEAR                             -                         04420000
           REUSE                              -                         04430000
           VOLUMES(SYS1MC)                    -                         04440000
           TRACKS(15 5)                       -                         04470000
           SHAREOPTIONS(3 3) )                -                         04480000
      DATA                                    -                         04490000
         ( NAME(DB2I.DSNDBD.DSNDB06.DSNATX01.I0001.A001) -              04500000
                              )                                         04530000
                                                                        04550000
   DELETE DB2I.DSNDBC.DSNDB06.DSNATX02.I0001.A001                       04410000
   DEFINE CLUSTER                             -                         04560000
         ( NAME(DB2I.DSNDBC.DSNDB06.DSNATX02.I0001.A001) -              04570000
           LINEAR                             -                         04580000
           REUSE                              -                         04590000
           VOLUMES(SYS1MC)                    -                         04600000
           TRACKS(80 5)                       -                         04630000
           SHAREOPTIONS(3 3) )                -                         04640000
      DATA                                    -                         04650000
         ( NAME(DB2I.DSNDBD.DSNDB06.DSNATX02.I0001.A001) -              04660000
                              )                                         04530000
/*
//*------------------------------------------------------------*        00002100
//*  CE JCL PERMET DE REORGANISER LES INDEXS DSNATX02 ET DSNATX01       00002200
//*      (TABLE SYSTABAUTH)                                             00002300
//*------------------------------------------------------------*        00002700
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2I,RECOVER',REGION=6M,COND=(2,LT)   00070000
//UTPRINT  DD SYSOUT=*                                                  00090000
//SYSPRINT DD SYSOUT=*                                                  00100000
//SYSUDUMP DD SYSOUT=*                                                  00110000
//SYSREC   DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00150000
//SYSUT1   DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00150100
//SORTOUT  DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00151000
//SYSIN    DD  *                                                        00153000
 RECOVER INDEX (SYSIBM.DSNATX01)                                        00154302
 RECOVER INDEX (SYSIBM.DSNATX02)                                        00154002
/*                                                                      00154102
//                                                                      00154202

./ ADD NAME=JCMDDB2
//JCMDDB2   JOB ACCT£,                                                  00001000
//             DB2,                                                     00002000
//             NOTIFY=&SYSUID,                                          00003000
//             MSGCLASS=T                                               00004007
//*DSNRTSDB STATISTICS DATABASE, TABLE SPACE, TABLES AND INDEXES.       00004125
//*AMIDB2CA                  ;  SYSTME                                  00004323
//*AMIDB2CM                  ;  SYSTME                                  00004423
//*AMIDB2DB                  ;  SYSTME                                  00004523
//*AMIDB2PF                  ;  SYSTME                                  00004623
//*AMIDB2SU                  ;  SYSTME                                  00004723
//*AMIDB2TS                  ;  SYSTME                                  00004823
//*AMIDB2UT                  ;  SYSTME                                  00004923
//*AOCQTDB                   ;  SYSLHU                                  00005023
//*BMCACADB                  ;  SYSTME                                  00005123
//*BMCACMDB                  ;  SYSTME                                  00005223
//*BMCACTB2                  ;  SYSLHU                                  00005323
//*BMCACTC1                  ;  SYSLHU                                  00005423
//*BMCACTDB                  ;  SYSTME                                  00005523
//*BMCASUDB                  ;  SYSTME                                  00005623
//*BMCATSDB                  ;  SYSTME                                  00005723
//*BMCGUD                    ;  SYSLHU                                  00005823
//*BMCPERDB                  ;  SYSTME                                  00006023
//*BMCPERF                   ;  SYSLHU                                  00006123
//*BMCUTIDB                  ;  SYSTME                                  00006223
//*BS0T0003                  ;  PRODMGT                                 00006323
//*BSADMIN                   ;  PROX96                                  00006423
//*BSBB0001                  ;  PRODMGT                                 00006523
//*BSFF0000                  ;  PRODMGT                                 00006623
//*BSFO0000                  ;  PRODMGT                                 00006723
//*BSFO0001                  ;  PROEXC                                  00006823
//*BSFO0002                  ;  PRODMGT                                 00006923
//*BSFO0008                  ;  PRODMGT                                 00007023
//*BSFO0009                  ;  PRODMGT                                 00007123
//*BSFO000X                  ;  PRODMGT                                 00007223
//*BSFOTOF1                  ;  PRODMGT                                 00007323
//*BSFOTOF2                  ;  PROX96                                  00007423
//*BSFOTOF3                  ;  PRODMGT                                 00007523
//*BSFOTOF4                  ;  PRODMGT                                 00007623
//*BSFU0001                  ;  PRODMGT                                 00007723
//*BSLO000X                  ;  PRODMGT                                 00007823
//*BSPT0001                  ;  SYSLHU                                  00007923
//*BSZZ0001                  ;  RECT                                    00008023
//*CIADB                     ;  SYSLHU                                  00008123
//*DBDB2MQ                   ;  SYSTME                                  00008223
//*DBMETA                    ;  SYSTME                                  00008323
//*DBPLTABL                  ;  SYSLHU                                  00008423
//*DBSYSLHU                  ;  SYSLHU                                  00008523
//*DBSYST01                  ;  SYSILE                                  00008623
//*DBSYST02                  ;  SYSILE                                  00008723
//*DBSYSUTF                  ;  SYSTME                                  00008823
//*DBTADZ                    ;  SYSPMO                                  00008923
//*DBTEST                    ;  SYSLHU                                  00009023
//*DMRPRDB1                  ;  SYSLHU                                  00009123
//*DSN5JSDB                  ;  SYSLHU                                  00070423
//*DSN8D11Z                  ;  SYSTME                                  00070523
//*DSN8D12A                  ;  SYS019                                  00070623
//*DSN8D12P                  ;  SYS019                                  00070723
//*DSN8D12X                  ;  SYS019                                  00070823
//*DSNADMDB                  ;  SYSLHU                                  00070923
//*DSNATPDB                  ;  SYSLHU                                  00071023
//*DSNCV                     ;  SYSILE                                  00071123
//*DSNDB01                   ;  SYSIBM                                  00071223
//*DSNDB04                   ;  SYSIBM                                  00071323
//*DSNDB06                   ;  SYSIBM                                  00071423
//*DSNDB07                   ;  SYSLHU                                  00071523
//*DSNMDCDB                  ;  SYSLHU                                  00071623
//*DSNMQDB                   ;  SYSLHU                                  00071723
//*DSNOPTDB                  ;  SYSLHU                                  00071923
//*DSNRGFDB                  ;  SYSLHU                                  00072023
//*DSNRLST                   ;  SYSILE                                  00072123
//*DSNSVCDB                  ;  SYS015                                  00072223
//*DSNXSR                    ;  SYSLHU                                  00072323
//*DXINFO41                  ;  SYSJFR                                  00072423
//*PTDB                      ;  SYSEXT2                                 00072523
//*SPITEST                   ;  SYSLHU                                  00072623
//*SYSIBMTA                  ;  SYSLHU                                  00072723
//*SYSIBMTS                  ;  SYSLHU                                  00072823
//*TESTUNI                   ;  SYSLHU                                  00072923
//*DELETE  EXEC PGM=IEFBR14                                             00073000
//*SYSPRINT DD DSN=&SYSUID..&SYSNAME..LISTCAT,                          00073100
//* DISP=(MOD,DELETE,DELETE),                                           00073200
//* SPACE=(TRK,(2,2)),                                                  00073300
//* DCB=(LRECL=512,RECFM=FB)                                            00073400
//  EXEC PGM=IKJEFT01                                                   00073500
//*EXEC PGM=ISFAFD,PARM='256,128'                                       00073600
//*LISTCAT DD SYSOUT=*                                                  00073700
//SYSTSPRT DD SYSOUT=*                                                  00073800
//*SYSTSPRT DD DSN=&SYSUID..&SYSNAME..LISTCAT,                          00073900
//* DISP=(NEW,CATLG,DELETE),                                            00074000
//* SPACE=(CYL,(2,2)),                                                  00074100
//* DCB=(LRECL=512,RECFM=FB)                                            00074200
//SYSTSIN  DD *                                                         00074300
//*SYS019.LP2.DB2(DSNTIJTC)                                             00074420
 -DIS BLOCKERS (DSNDB06,DSNDB01) DETAIL                                 00074520
  DSN SYSTEM(DB2S)                                                      00074600
  CHAPTER 4. -ACCESS DATABASE (DB2) . . . . . . . . . . . . . . . . . . 00074701
  CHAPTER 5. -ACTIVATE (DB2). . . . . . . . . . . . . . . . . . . . . . 00074801
  CHAPTER 6. -ALTER BUFFERPOOL (DB2) . . . . . . . . . . . . . . . . . .00074901
  CHAPTER 7. -ALTER GROUPBUFFERPOOL (DB2) . . . . . . . . . . . . . . . 00075001
  CHAPTER 8. -ALTER UTILITY (DB2) . . . . . . . . . . . . . . . . . . . 00075101
  CHAPTER 9.                                                            00075205
  -ARCHIVE LOG                                                          00075305
  CHAPTER 10. BIND PACKAGE (DSN). . . . . . . . . . . . . . . . . . . . 00075401
  CHAPTER 11. BIND PLAN (DSN). . . . . . . . . . . . . . . . . . . . . .00075501
  CHAPTER 12. BIND QUERY (DSN) . . . . . . . . . . . . . . . . . . . . .00075601
  CHAPTER 13. BIND SERVICE (DSN) . . . . . . . . . . . . . . . . . . . .00075701
  CHAPTER 14. BIND AND REBIND OPTIONS FOR PACKAGES, PLANS, AND SERVICES.00075801
  CHAPTER 15. SPECIFICATION OF DB2 FOR Z/OS BIND OPTIONS FROM IBM DATA S00076001
  CHAPTER 16. -CANCEL THREAD (DB2) . . . . . . . . . . . . . . . . . . .00080001
  CHAPTER 17. DCLGEN (DECLARATIONS GENERATOR) (DSN) . . . . . . . . . . 00090001
  CHAPTER 18. -DISPLAY ACCEL (DB2). . . . . . . . . . . . . . . . . . . 00100001
//*DSNX800I  %S DSNX8CMD ACCELERATOR FUNCTION IS NOT AVAILABLE          00100102
  -DIS ACCEL(*)                                                         00101001
  CHAPTER 19. -DISPLAY ARCHIVE (DB2). . . . . . . . . . . . . . . . . . 00110001
NO ARCHIVE READ ACTIVITY                                                00110119
  -DIS ARCHIVE                                                          00111001
  CHAPTER 20. -DISPLAY BUFFERPOOL (DB2) . . . . . . . . . . . . . . . . 00120001
  -DIS BUFFERPOOL                                                       00121001
  CHAPTER 21. -DISPLAY DATABASE (DB2) . . . . . . . . . . . . . . . . . 00130001
  -DIS DB(*)           LIMIT(*)                                         00131009
  -DIS DB(*)                                                            00131115
  -DIS DB(*)                       RESTRICT(ACHKP)                      00131315
  -DIS DB(*)                       RESTRICT(CHKP )                      00131415
  -DIS DB(*)                       RESTRICT(COPY )                      00131515
  -DIS DB(*)                       RESTRICT(GRECP)                      00131615
  -DIS DB(*)                       RESTRICT(LPL  )                      00131715
  -DIS DB(*)                       RESTRICT(PRO  )                      00131815
  -DIS DB(*)                       RESTRICT(RBDP )                      00131915
  -DIS DB(*)                       RESTRICT(RECP )                      00132015
  -DIS DB(*)                       RESTRICT(REORP)                      00132115
  -DIS DB(*)                       RESTRICT(RO   )                      00132215
  -DIS DB(*)                       RESTRICT(RREPL)                      00132315
  -DIS DB(*)                       RESTRICT(STOP )                      00132415
  -DIS DB(*)                       RESTRICT(UT   )                      00132515
  -DIS DB(*)                       RESTRICT(UTRO )                      00132615
  -DIS DB(*)                       RESTRICT(UTRW )                      00132715
  -DIS DB(*)                       RESTRICT(UTUT )                      00132815
  -DIS DB(*)                       RESTRICT(UT*  )                      00132915
  -DIS DB(*)                       RESTRICT(WEPR )                      00133015
  -DIS DB(*) USE                                                        00133215
  -DIS DB(*) CLAIMERS                                                   00133315
  -DIS DB(*) LOCKS                                                      00133415
  -DIS DB(*) LPL                                                        00133515
  -DIS DB(*) WEPR                                                       00133615
  -DIS DB(AMIDB2SU) SPACE                                               00133715
  -DIS DB(SPITEST)  SPACE(S2Z01U01)                                     00133815
  -DIS DB(SPITEST)  SPACE(S2Z32U01)                                     00133915
  -DIS DB(SPITEST)  SPACE(I2Z01IX1)                                     00134015
  -DIS DB(SPITEST)  SPACE(I2Z32IX1)                                     00134115
  CHAPTER 22. -DISPLAY DDF (DB2) . . . . . . . . . . . . . . . . . . . .00140307
  -DIS DDF DETAIL                                                       00141017
  CHAPTER 23. -DISPLAY DYNQUERYCAPTURE (DB2) . . . . . . . . . . . . . .00150001
  CHAPTER 24. -DISPLAY FUNCTION SPECIFIC (DB2). . . . . . . . . . . . . 00160001
  CHAPTER 25. -DISPLAY GROUP (DB2) . . . . . . . . . . . . . . . . . . .00170001
  CHAPTER 26. -DISPLAY GROUPBUFFERPOOL (DB2) . . . . . . . . . . . . . .00180001
  CHAPTER 27. -DISPLAY LOCATION (DB2) . . . . . . . . . . . . . . . . . 00190001
//*DSN9032I  %S REQUESTED FUNCTION IS NOT AVAILABLE                     00190111
  -DIS LOC                                                              00191001
  CHAPTER 28. -DISPLAY LOG (DB2) . . . . . . . . . . . . . . . . . . . .00200001
  -DIS LOG                                                              00201004
//*DISPLAYS THE CURRENT STATUS OF IBM DB2                               00202011
//*DSNX603I  %S DSNXODPM IBM DB2 AI FOR Z/OS HAS NOT BEEN ENABLED       00203013
  CHAPTER 29. -DISPLAY ML (DB2) . . . . . . . . . . . . . . . . . . . . 00210001
  -DIS ML                                                               00211011
//*DISPLAYS STATISTICS ABOUT STORED PROCEDURES                          00212011
  CHAPTER 30. -DISPLAY PROCEDURE (DB2) . . . . . . . . . . . . . . . . .00220001
 PROCEDURE      STATUS ACTIVE QUED MAXQ TIMEOUT FAIL WLM_ENV            00220113
 ADMIN_INFO_SYSPARM                                                     00220213
                STARTED     0    0    1       0    0 DB2SWLM_NUMTCB1    00220313
  -DISPLAY PROCEDURE(*,*) SCOPE(GROUP)                                  00221011
  CHAPTER 31. -DISPLAY PROFILE (DB2) . . . . . . . . . . . . . . . . . .00230001
  CHAPTER 32. -DISPLAY RLIMIT (DB2). . . . . . . . . . . . . . . . . . .00240001
  -DIS RLIMIT                                                           00241012
  CHAPTER 33. -DISPLAY RESTSVC (DB2) . . . . . . . . . . . . . . . . . .00250001
  CHAPTER 34. -DISPLAY STATS (DB2) . . . . . . . . . . . . . . . . . . .00260001
 DSNT781I  %S NO INDEX MEMORY USAGE STATISTICS AVAILABLE                00260116
  -DIS STATS(INDEXMEMORYUSAGE)                                          00260216
  CHAPTER 35. -DISPLAY THREAD (DB2) . . . . . . . . . . . . . . . . . . 00270001
  -DIS THREAD                                                           00271001
  CHAPTER 36. -DISPLAY TRACE (DB2)                                      00280015
  -DIS TRACE(PERFM  ) DEST(GTF)                                         00285014
  -DIS TRACE(ACCTG  ) DEST(SMF)                                         00286014
  -DIS TRACE(STAT   ) DEST(SRV)                                         00287014
  -DIS TRACE(AUDIT  ) DEST(OPN)                                         00288014
  -DIS TRACE(MONITOR)                                                   00289014
  CHAPTER 37. -DISPLAY UTILITY (DB2) . . . . . . . . . . . . . . . . . .00290001
  -DIS UTILITY(*)                                                       00291002
  CHAPTER 38. DSN (TSO) . . . . . . . . . . . . . . . . . . . . . . . . 00300001
  CHAPTER 39. DSNH (TSO CLIST). . . . . . . . . . . . . . . . . . . . . 00310001
  CHAPTER 40. END (DSN) . . . . . . . . . . . . . . . . . . . . . . . . 00320001
  CHAPTER 41. FREE STABILIZED DYNAMIC QUERY (DSN) . . . . . . . . . . . 00330001
  CHAPTER 42. FREE PACKAGE (DSN) . . . . . . . . . . . . . . . . . . . .00340001
  CHAPTER 43. FREE PLAN (DSN) . . . . . . . . . . . . . . . . . . . . . 00350001
  CHAPTER 44. FREE QUERY (DSN) . . . . . . . . . . . . . . . . . . . . .00360001
  CHAPTER 45. FREE SERVICE (DSN) . . . . . . . . . . . . . . . . . . . .00370001
  CHAPTER 46. MODIFY ADMTPROC,APPL=SHUTDOWN . . . . . . . . . . . . . . 00380001
  CHAPTER 47. MODIFY ADMTPROC,APPL=TRACE . . . . . . . . . . . . . . . .00390001
  CHAPTER 48. -MODIFY DDF (DB2) . . . . . . . . . . . . . . . . . . . . 00400001
  CHAPTER 49. MODIFY IRLMPROC,ABEND (Z/OS IRLM) . . . . . . . . . . . . 00410001
  CHAPTER 50. MODIFY IRLMPROC,DIAG (Z/OS IRLM) . . . . . . . . . . . . .00420001
  CHAPTER 51. MODIFY IRLMPROC,PURGE (Z/OS IRLM) . . . . . . . . . . . . 00430001
  CHAPTER 52. MODIFY IRLMPROC,SET (Z/OS IRLM) . . . . . . . . . . . . . 00440001
  CHAPTER 53. MODIFY IRLMPROC,STATUS (Z/OS IRLM) . . . . . . . . . . . .00450001
  CHAPTER 54. -MODIFY TRACE (DB2) . . . . . . . . . . . . . . . . . . . 00460001
  CHAPTER 55. REBIND PACKAGE (DSN). . . . . . . . . . . . . . . . . . . 00470001
  CHAPTER 56. REBIND PLAN (DSN). . . . . . . . . . . . . . . . . . . . .00480001
  CHAPTER 57. REBIND TRIGGER PACKAGE (DSN) . . . . . . . . . . . . . . .00490001
  CHAPTER 58. -RECOVER BSDS (DB2). . . . . . . . . . . . . . . . . . . .00500001
  CHAPTER 59. -RECOVER INDOUBT (DB2) . . . . . . . . . . . . . . . . . .00510001
  CHAPTER 60. -RECOVER POSTPONED (DB2) . . . . . . . . . . . . . . . . .00520001
  CHAPTER 61. -REFRESH DB2,EARLY (DB2) . . . . . . . . . . . . . . . . .00530001
  CHAPTER 62. -RESET GENERICLU (DB2) . . . . . . . . . . . . . . . . . .00540001
  CHAPTER 63. -RESET INDOUBT (DB2) . . . . . . . . . . . . . . . . . . .00550001
  CHAPTER 64. RUN (DSN) . . . . . . . . . . . . . . . . . . . . . . . . 00560001
  CHAPTER 65. -SET ARCHIVE (DB2) . . . . . . . . . . . . . . . . . . . .00570001
  CHAPTER 66. -SET LOG (DB2) . . . . . . . . . . . . . . . . . . . . . .00580001
  SET LOG LOGLOAD(INTEGER)                                              00581006
  (1) CHKTIME(INTEGER)                                                  00582006
  SINGLE CHKTIME(INTEGER)                                               00583006
  BOTH LOGLOAD(INTEGER)                                                 00584006
  SUSPEND                                                               00585006
  RESUME                                                                00586006
  NEWLOG ( DATA-SET-NAME ) COPY ( LOG-COPY )                            00587006
  INITIATE A SYSTEM CHECKPOINT WITHOUT MODIFYING THE CURRENT VALUE.     00588016
  -SET LOG LOGLOAD(0)                                                   00589116
  CHAPTER 67. -SET SYSPARM (DB2) . . . . . . . . . . . . . . . . . . . .00590001
  -SET SYSPARM,LOAD(DSNZPARM)                                           00591018
  CHAPTER 68. SPUFI (DSN) . . . . . . . . . . . . . . . . . . . . . . . 00600001
  CHAPTER 69. -START ACCEL (DB2). . . . . . . . . . . . . . . . . . . . 00610001
  CHAPTER 70. START ADMTPROC . . . . . . . . . . . . . . . . . . . . . .00620001
  CHAPTER 71. -START CDDS (DB2) . . . . . . . . . . . . . . . . . . . . 00630001
  CHAPTER 72. -START DATABASE (DB2). . . . . . . . . . . . . . . . . . .00640001
  -START  DATABASE(AMIDB2SU)                                            00641022
  -START  DATABASE(DSN8D11Z)                                            00642022
  CHAPTER 73. -START DB2 (DB2) . . . . . . . . . . . . . . . . . . . . .00650001
  CHAPTER 74. -START DDF (DB2) . . . . . . . . . . . . . . . . . . . . .00660001
  CHAPTER 75. -START DYNQUERYCAPTURE (DB2) . . . . . . . . . . . . . . .00670001
  CHAPTER 76. -START FUNCTION SPECIFIC (DB2) . . . . . . . . . . . . . .00680001
  CHAPTER 77. START IRLMPROC (Z/OS IRLM) . . . . . . . . . . . . . . . .00690001
  CHAPTER 78. -START ML (DB2) . . . . . . . . . . . . . . . . . . . . . 00700001
  CHAPTER 79. -START PROCEDURE (DB2) . . . . . . . . . . . . . . . . . .00710001
  CHAPTER 80. -START PROFILE (DB2). . . . . . . . . . . . . . . . . . . 00720001
  CHAPTER 81. -START RLIMIT (DB2). . . . . . . . . . . . . . . . . . . .00730001
  CHAPTER 82. -START RESTSVC (DB2) . . . . . . . . . . . . . . . . . . .00740001
  CHAPTER 83. -START TRACE (DB2). . . . . . . . . . . . . . . . . . . . 00750001
  CHAPTER 84. -STOP ACCEL (DB2) . . . . . . . . . . . . . . . . . . . . 00760001
  CHAPTER 85. STOP ADMTPROC (Z/OS ). . . . . . . . . . . . . . . . . . .00770001
  CHAPTER 86. -STOP CDDS (DB2). . . . . . . . . . . . . . . . . . . . . 00780001
  CHAPTER 87. -STOP DATABASE (DB2) FOR AMIDB2.ACTION                    00790007
  -STOP          AMIDB2SU                                               00791022
  -STOP DATABASE(DSN8D11Z) SPACENAM(*.*)                                00791122
  CHAPTER 88. -STOP DB2 (DB2) . . . . . . . . . . . . . . . . . . . . . 00800001
  CHAPTER 89. -STOP DDF (DB2) . . . . . . . . . . . . . . . . . . . . . 00810001
  CHAPTER 90. -STOP DYNQUERYCAPTURE (DB2). . . . . . . . . . . . . . . .00820001
  CHAPTER 91. -STOP FUNCTION SPECIFIC (DB2) . . . . . . . . . . . . . . 00830001
  CHAPTER 92. STOP IRLMPROC (Z/OS IRLM) . . . . . . . . . . . . . . . . 00840001
  CHAPTER 93. -STOP ML (DB2) . . . . . . . . . . . . . . . . . . . . . .00850001
  CHAPTER 94. -STOP PROCEDURE (DB2) . . . . . . . . . . . . . . . . . . 00860001
  CHAPTER 95. -STOP PROFILE (DB2) . . . . . . . . . . . . . . . . . . . 00870001
  CHAPTER 96. -STOP RLIMIT (DB2) . . . . . . . . . . . . . . . . . . . .00880001
  CHAPTER 97. -STOP RESTSVC (DB2) . . . . . . . . . . . . . . . . . . . 00890001
  CHAPTER 98. -STOP TRACE (DB2) . . . . . . . . . . . . . . . . . . . . 00900001
  CHAPTER 99. -TERM UTILITY (DB2). . . . . . . . . . . . . . . . . . . .00910001
//*UTILID = IMAGCOPY                                                    00910110
  -TERM  UTILITY(IMAGCOPY)                                              00911010
  CHAPTER 100. TRACE CT (Z/OS IRLM) . . . . . . . . . . . . . . . . . . 00920001
  PART 2. THE DB2 COMMAND LINE PROCESSOR . . . . . . . . . . . . . . . .00930001
  CHAPTER 101. START SYNTAX FOR THE DB2 COMMAND LINE PROCESSOR. . . . . 00940001
  CHAPTER 102. PROPERTIES FILE FOR THE DB2 COMMAND LINE PROCESSOR. . . .00950001
  CHAPTER 103. HELP FOR THE DB2 COMMAND LINE PROCESSOR . . . . . . . . .00960001
  CHAPTER 104. RUNNING THE DB2 COMMAND LINE PROCESSOR. . . . . . . . . .00970001
  CHAPTER 105. TUTORIAL: USING THE DB2 COMMAND LINE PROCESSOR . . . . . 00980001
  CHAPTER 106. ADD XMLSCHEMA DOCUMENT (DB2 COMMAND LINE PROCESSOR) . . .00990001
  CHAPTER 107. BIND (DB2 COMMAND LINE PROCESSOR) . . . . . . . . . . . .01000001
  CHAPTER 108. CHANGE ISOLATION (DB2 COMMAND LINE PROCESSOR) . . . . . .01010001
  CHAPTER 109. CHANGE MAXCOLUMNWIDTH (DB2 COMMAND LINE PROCESSOR) . . . 01020001
  CHAPTER 110. CHANGE MAXLINESFROMSELECT (DB2 COMMAND LINE PROCESSOR) . 01030001
  CHAPTER 111. COMMIT (DB2 COMMAND LINE PROCESSOR) . . . . . . . . . . .01040001
  CHAPTER 112. COMPLETE XMLSCHEMA (DB2 COMMAND LINE PROCESSOR) . . . . .01050001
  CHAPTER 113. CONNECT (DB2 COMMAND LINE PROCESSOR) . . . . . . . . . . 01060001
  CHAPTER 114. DESCRIBE CALL (DB2 COMMAND LINE PROCESSOR) . . . . . . . 01070001
  CHAPTER 115. DESCRIBE TABLE (DB2 COMMAND LINE PROCESSOR). . . . . . . 01080001
  CHAPTER 116. DISCONNECT (DB2 COMMAND LINE PROCESSOR) . . . . . . . . .01090001
  CHAPTER 117. DISPLAY RESULT SETTINGS (DB2 COMMAND LINE PROCESSOR) . . 01100001
  CHAPTER 118. ECHO (DB2 COMMAND LINE PROCESSOR) . . . . . . . . . . . .01110001
  CHAPTER 119. LIST COMMAND OPTIONS (DB2 COMMAND LINE PROCESSOR) . . . .01120001
  CHAPTER 120. LIST TABLES (DB2 COMMAND LINE PROCESSOR). . . . . . . . .01130001
  CHAPTER 121. REGISTER XMLSCHEMA (DB2 COMMAND LINE PROCESSOR). . . . . 01140001
  CHAPTER 122. REMOVE XMLSCHEMA (DB2 COMMAND LINE PROCESSOR) . . . . . .01150001
  CHAPTER 123. ROLLBACK (DB2 COMMAND LINE PROCESSOR) . . . . . . . . . .01160001
  CHAPTER 124. SQL STATEMENTS (DB2 COMMAND LINE PROCESSOR) . . . . . . .01170001
  CHAPTER 125. TERMINATE (DB2 COMMAND LINE PROCESSOR) . . . . . . . . . 01180001
  CHAPTER 126. Z/OS UNIX SYSTEM SERVICES (DB2 COMMAND LINE PROCESSOR) . 01190001
  CHAPTER 127. UPDATE COMMAND OPTIONS (DB2 COMMAND LINE PROCESSOR) . . .01200001

./ ADD NAME=MAJDDF
//MAJDDF   JOB (0),DB2,MSGCLASS=T,MSGLEVEL=(1,1),                       00010002
//         CLASS=O,NOTIFY=&SYSUID                                       00020002
//*-------------------------------------------------------------------- 00030000
//*   EXECUTION D'ORDRE DB2 EN BATCH                                    00040000
//*-------------------------------------------------------------------- 00050000
//ST005   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M                       00060000
//STEPLIB  DD DSN=DB2S.RUNLIB.LOAD,DISP=SHR                             00070002
//SYSTERM  DD SYSOUT=*                                                  00090000
//SYSTSPRT DD SYSOUT=*                                                  00100000
//SYSUDUMP DD SYSOUT=*                                                  00110000
//SYSPRINT DD SYSOUT=*                                                  00120000
//SYSTSIN  DD *                                                         00130000
DSN SYSTEM(DB2S)                                                        00140002
RUN PROGRAM(DSNTEP2) PLAN(DSNTEP2)                                      00150000
END                                                                     00160000
//SYSIN DD *                                                            00170000
  INSERT INTO SYSIBM.LUNAMES                                            00171000
   VALUES ('ADB2T',' ','A','A','N','N',' ','N','N');                    00172000
  INSERT INTO SYSIBM.LOCATIONS                                          00172100
   VALUES ('RDB2T','ADB2T','N',' ',' ');                                00172201
  SELECT * FROM SYSIBM.LUNAMES ;                                        00172300
  SELECT * FROM SYSIBM.LOCATIONS ;                                      00172400

./ ADD NAME=MODIFY
//SYSILEA  JOB 1000,'COMPIL     ',MSGLEVEL=(1,1),                       00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE                             00002000
//*------------------------------------------------------------*        00002100
//*  CE JCL PERMET DE FAIRE DES MODIFY SUR LA SYSCOPY POUR LES          00002200
//*      BASES DSNDB06 ET DSNDB01 AVANT REORG DE LA SYSCOPY             00002300
//*------------------------------------------------------------*        00002700
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2I,MODIFY',REGION=6M                00070003
//UTPRINT  DD SYSOUT=*                                                  00090000
//SYSPRINT DD SYSOUT=*                                                  00100000
//SYSUDUMP DD SYSOUT=*                                                  00110000
//SYSREC   DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00150000
//SYSUT1   DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00150100
//SORTOUT  DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00151000
//SYSIN    DD  *                                                        00153000
 MODIFY RECOVERY TABLESPACE DSNDB01.SCT02 DELETE DATE(930412)           00154002
 MODIFY RECOVERY TABLESPACE DSNDB06.SYSDBAUT DELETE DATE(930412)        00154102
 MODIFY RECOVERY TABLESPACE DSNDB06.SYSGPAUT DELETE DATE(930412)        00154202
 MODIFY RECOVERY TABLESPACE DSNDB06.SYSPLAN DELETE DATE(930412)         00154302
 MODIFY RECOVERY TABLESPACE DSNDB06.SYSUSER DELETE DATE(930412)         00154402
 MODIFY RECOVERY TABLESPACE DSNDB06.SYSDBASE DELETE DATE(930412)        00154502
 MODIFY RECOVERY TABLESPACE DSNDB06.SYSGROUP DELETE DATE(930412)        00154602
 MODIFY RECOVERY TABLESPACE DSNDB01.SYSLGRNG DELETE DATE(930412)        00154702
 MODIFY RECOVERY TABLESPACE DSNDB06.SYSVIEWS DELETE DATE(930412)        00154802
/*                                                                      00157000

./ ADD NAME=MQDEL
//DVMKLTP2 JOB 'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=E,NOTIFY=&SYSUID
//JOBLIB   DD DSN=SYS2.DB2TEST.DSNLOAD,DISP=SHR
//         DD DSN=DB2T.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//*--------------------------------------------------------------------
//TEP2    EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2T)
RUN PLAN(DSNTEP2) -
    PROGRAM(DSNTEP2)
END
//SYSIN DD  *
 DELETE FROM DEVMGT.V2E60GT1 WHERE PROGE LIKE 'ZZF1%'
  ;
//

./ ADD NAME=PACKDEP
//SYSILEX  JOB (0),'DSNTEP2',MSGCLASS=X,MSGLEVEL=(1,1),                 JOB00197
//         CLASS=O,NOTIFY=&SYSUID
//*        USER=DVXAZ,PASSWORD=METH
//*--------------------------------------------------------------------
//*   TEST DU PB AGIL (PG0J97)
//*--------------------------------------------------------------------
//ST005   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2L.RUNLIB.LOAD,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2L)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT B.COLLID,B.CONTOKEN,B.NAME,B.STMTNO
    FROM SYSIBM.SYSPACKDEP A,
     SYSIBM.SYSPACKSTMT B
    WHERE
    A.BNAME = 'I2B43OZ1' AND A.BTYPE='I'
      AND A.DNAME = B.NAME
      AND B.CONTOKEN = A.DCONTOKEN
      AND B.NAME = 'MROB43'
      ORDER BY B.CONTOKEN,B.COLLID,B.STMTNO ;


./ ADD NAME=PACKDEP1
//SYSILEX  JOB (0),'DSNTEP2',MSGCLASS=X,MSGLEVEL=(1,1),                 JOB00197
//         CLASS=O,NOTIFY=&SYSUID
//*        USER=DVXAZ,PASSWORD=METH
//*--------------------------------------------------------------------
//*   TEST DU PB AGIL (PG0J97)
//*--------------------------------------------------------------------
//ST005   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2L.RUNLIB.LOAD,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2L)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT DISTINCT A.DCOLLID,A.DNAME
    FROM SYSIBM.SYSPACKDEP A
    WHERE
    A.BNAME = 'I2B43OZ1' AND A.BTYPE='I'
      ORDER BY A.DCOLLID,A.DNAME ;


./ ADD NAME=PLI8BND
//SYSILEA   JOB (T002550),'IEBCOPY',                                    00001003
//             NOTIFY=&SYSUID,                                          00004203
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00005003
//BINDNRUN EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//DBRMLIB  DD DISP=SHR,DSN=SYST.DB2PLI8.DBRMLIB
//SYSTSPRT DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//DDLPUN   DD SYSOUT=*
//SQLPUN   DD SYSOUT=*
//COLSTATS DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//DSNTRACE DD SYSOUT=*
//SYSTSIN DD *
 DSN SYSTEM(DB2P)
    BIND PLAN(DB2PLI81) MEMBER(DB2PLI8) ACTION(ADD) ISOLATION(CS)
 END

./ ADD NAME=REBIND
SELECT CHAR('REBIND PACKAGE('!!COLLID!!'.'!!NAME!!                      00010000
       '.('!!MAX(VERSION)!!')) EXPLAIN(ONLY)')                          00020000
FROM SYSIBM.SYSPACKAGE                                                  00030000
WHERE                                                                   00040000
    VALID IN ('Y','A')                                                  00050000
AND OPERATIVE = 'Y'                                                     00060000
AND COLLID LIKE 'C_B____1'                                              00070000
AND COLLID NOT LIKE 'C__ETU__'                                          00080000
AND NAME IN (''                                                         00090000
//         DD DISP=SHR,DSN=&&TEMP0                                      00100000
//         DD *                                                         00110000
)                                                                       00120000
GROUP BY COLLID,NAME                                                    00130000
;                                                                       00140000
//*-------------------------------------------------------------------OC00150000
//* REBIND DES PACKAGES EN EXPLAIN ONLY                                 00160000
//*                                                                     00170000
//REBIND   EXEC PGM=IKJEFT01,DYNAMNBR=20                                00180000
//SYSPRINT DD SYSOUT=*                                                  00190001
//SYSTSIN  DD  *,SYMBOLS=JCLONLY                                        00200001
 DSN SYSTEM(DB2&LENV.)                                                  00210001
//          DD  DISP=SHR,DSN=&&TEMP1                                    00220001
//*                                                                     00230001
//TESTIF   ENDIF --------------------------------------------           00240001
//*                                                                     00250001
//*                                                                     00260001
//*-------------------------------------------------------------------OC00270001
//* EXPLAIN SUR LES NOUVEAUX PACKAGES                                   00280001
//* MISE EN FORME POUR CHARGEMENT DE LA 2Z44.                           00290001
//EXPLAIN  EXEC PGM=IKJEFT01,DYNAMNBR=20                                00300001
//SYSTERM  DD SYSOUT=*                                                  00310001
//SYSTSPRT DD SYSOUT=*                                                  00320001
//SYSUDUMP DD SYSOUT=*                                                  00330001
//SYSPRINT DD SYSOUT=*                                                  00340001
//*YSREC00 DD  SYSOUT=*                                                 00350001
//SYSREC00 DD  DSN=&&TEMP2,                                             00360001
//             UNIT=3390,SPACE=(CYL,(1,1),RLSE),                        00370001
//             DISP=(,PASS,DELETE)                                      00380002
//*            SI MODIFICATION DANS L'UNLOAD DE TEMP2                   00390002
//*            PENSER à MODIFIER LE LRECL ET BLKSIZE DU TEMP3           00400002
//*            POUR EVITER IEC141I 013-20,IGG0191A / S013 - 32          00410002
//*            LORS DE LA CONCATéNATION TEMP2 ET TEMP3                  00420002
//*            DCB=(RECFM=FB,LRECL=293),                                00430002
//*        //* DCB=(RECFM=FBA,LRECL=293,BLKSIZE=27835),                 00440002
//SYSPUNCH DD  DUMMY                                                    00450002
//SYSTSIN  DD *,SYMBOLS=JCLONLY                                         00460002
DSN SYSTEM(DB2&LENV.)                                                   00470002
RUN PROGRAM(DSNTIAUL) LIB('DB2&LENV..RUNLIB.LOAD') PARM('SQL')          00480002
END                                                                     00490002
//SYSIN    DD  *,SYMBOLS=JCLONLY                                        00500002
SELECT SUBSTR(A.PROGNAME,1,10) , CHAR(';')                              00510002
     , CHAR(A.QUERYNO) , CHAR(';')                                      00520002
     , CASE WHEN CHAR(A.METHOD) = '0' THEN CHAR('NORMAL     ')          00530002
            WHEN CHAR(A.METHOD) = '1' THEN CHAR('NESTED_LOOP')          00540002
            WHEN CHAR(A.METHOD) = '2' THEN CHAR('MERGE_SCAN ')          00550002
           WHEN CHAR(A.METHOD) = '3' THEN CHAR('SORT       ')           00560003
           WHEN CHAR(A.METHOD) = '4' THEN CHAR('HYBRID_JOIN')           00570003
           ELSE CHAR('-----------')                                     00580003
      END , CHAR(';')                                                   00590003
    , CASE WHEN CHAR(A.ACCESSTYPE) = '' THEN CHAR('--')                 00600003
           ELSE CHAR(A.ACCESSTYPE) END , CHAR(';')                      00610003
    , CHAR(A.MATCHCOLS) , CHAR(';')                                     00620003
    , CASE WHEN CHAR(A.ACCESSNAME)='' THEN CHAR('----------')           00630003
           ELSE SUBSTR(CHAR(A.ACCESSNAME),1,10) END , CHAR(';')         00640003
    , CASE WHEN CHAR((SELECT CHAR(D.COLCOUNT)                           00650003
       FROM SYSIBM.SYSINDEXES D                                         00660003
       WHERE D.NAME  = A.ACCESSNAME                                     00670003
       AND D.TBCREATOR = A.CREATOR )) IS NULL THEN CHAR('      ')       00680003
       ELSE CHAR((SELECT CHAR(D.COLCOUNT)                               00690003
            FROM SYSIBM.SYSINDEXES D                                    00700003
            WHERE D.NAME  = A.ACCESSNAME                                00710003
            AND D.TBCREATOR = A.CREATOR )) END                          00720003
    , CHAR(';')                                                         00730003
    , CASE WHEN A.TNAME      = '' THEN CHAR('---------------')          00740003

./ ADD NAME=RECOBSDS
//SYSILEA   JOB (T002550),'BSDS',                                       00010003
//             NOTIFY=&SYSUID,COND=(0,LT),                              00020003
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00030001
//*----------------------------------------------------------------     00040001
//*   CE JCL PEUT ETRE UTILISE EN CAS DE PROBLEME SUR UN BSDS           00050001
//*   (DEPHASAGE ENTRE LE BSDS01 ET LE BSDS02 (CODE DSNJ120I AU         00060001
//*   DEMARRAGE DU SOUS SYSTEME).                                       00070001
//*   LA PROCEDURE A SUIVRE EST LA SUIVANTE :                           00080001
//*      - PASSER UN DSNJU004 SUR CHAQUE BSDS AFIN DE RELEVER LE        00090001
//*        BSDS QUI A LE TIME STAMP LE PLUS RECENT                      00100001
//*        (HIGHEST RBA WRITTEN). PAR EXEMPLE, SI BSDS01 A UN           00110001
//*         HIGHEST RBA A 1997:350 12:47:01 ET QUE BSDS02 A 1           00120001
//*         HIGHEST RBA A 1997:350 12:46:01) C'EST BSDS01 QU'IL         00130001
//*         FAUT CONSERVER                                              00140001
//*      - PASSER CE JOB QUI                                            00141001
//*             . RENAME LE BSDS CORROMPU                               00142001
//*             . FAIT UN DEFINE DU BSDS                                00143001
//*             . FAIT UN REPRO DU BSDS CORRECT SUR LE BSDS CORROMPU    00144001
//*----------------------------------------------------------------     00150001
//*-----------------------------------------------------------          00151001
//*   RENAME DU BSDS CORROMPU                                           00152001
//*-----------------------------------------------------------          00153001
//ALTER   EXEC PGM=IDCAMS,                                              00160001
//             REGION=512K,                                             00170001
//             COND=(0,LT)                                              00180001
//SYSPRINT DD  SYSOUT=*                                                 00190001
//SYSIN    DD  *                                                        00200001
  ALTER DB2S.BSDS02               -                                     00210001
  NEWNAME (DB2S.BSDS02.OLD)                                             00220001
  ALTER DB2S.BSDS02.DATA          -                                     00230001
  NEWNAME (DB2S.BSDS02.OLD.DATA)                                        00240001
  ALTER DB2S.BSDS02.INDEX         -                                     00250001
  NEWNAME (DB2S.BSDS02.OLD.INDEX)                                       00260001
//*-----------------------------------------------------------          00270001
//*   DEFINE DU NOUVEAU BSDS                                            00271001
//*-----------------------------------------------------------          00280001
//DSNTIC  EXEC PGM=IDCAMS,COND=(2,LT)                                   00530000
//SYSPRINT DD SYSOUT=*                                                  00540000
//SYSUDUMP DD SYSOUT=*                                                  00550000
//SYSIN    DD  *                                                        00730000
   DEFINE CLUSTER                             -                         00740000
         ( NAME(DB2S.BSDS02)               -                            00750001
           VOLUMES(SYST13)                    -                         00770002
           REUSE                              -                         00780000
           SHAREOPTIONS(2 3) )                -                         00790000
      DATA                                    -                         00800000
         ( NAME(DB2S.BSDS02.DATA)          -                            00810001
           TRK(15 10)                    -                              00820001
           RECORDSIZE(4089 4089)              -                         00830000
           CONTROLINTERVALSIZE(4096)          -                         00850000
           FREESPACE(0 20)                    -                         00860000
           KEYS(4 0) )                        -                         00870000
      INDEX                                   -                         00880000
         ( NAME(DB2S.BSDS02.INDEX)         -                            00890001
           RECORDS(5 5)                       -                         00900000
           CONTROLINTERVALSIZE(1024) )                                  00910001
//*----------------------------------------------------------           00920001
//* REPRO DU BSDS COURANT SUR LE BSDS CORROMPU                          00921001
//*  ATTENTION AU NO DES BSDS EN ENTREE ET EN SORTIE !!!!!!!            00922001
//*----------------------------------------------------------           00930001
//REPRO    EXEC PGM=IDCAMS,REGION=1024K                                 00940001
//INFILE   DD DSN=DB2S.BSDS01,DISP=SHR                                  00950001
//OUFILE   DD DSN=DB2S.BSDS02,DISP=SHR                                  00960001
//SYSPRINT DD  SYSOUT=*                                                 00970001
//SYSIN    DD  *                                                        00980001
        REPRO   -                                                       00990001
            INFILE(INFILE)           -                                  01000001
            OUTFILE(OUFILE)                                             01010001
/*                                                                      01020001

./ ADD NAME=RECOGEO
//SYSILEA  JOB 1000,'COMPIL     ',                                      00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE                             00002000
//*------------------------------------------------------------*        00390000
//* RECOVER IMAGE COPY                                                  00400000
//*------------------------------------------------------------*        00410000
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2C,RECOVER',REGION=0M,              00420001
//             COND=(2,LT)                                              00430000
//SYSPRINT DD SYSOUT=*                                                  00440000
//SYSUT1   DD DISP=(,PASS),SPACE=(CYL,(25,25),RLSE),UNIT=SYSDA          00441001
//SORTOUT  DD DISP=(,PASS),SPACE=(CYL,(25,25),RLSE),UNIT=SYSDA          00442001
//SORTWK01 DD DISP=(,PASS),SPACE=(CYL,(25,25),RLSE),UNIT=SYSDA          00443001
//SORTWK02 DD DISP=(,PASS),SPACE=(CYL,(25,25),RLSE),UNIT=SYSDA          00444001
//SORTWK03 DD DISP=(,PASS),SPACE=(CYL,(25,25),RLSE),UNIT=SYSDA          00445001
//SYSUDUMP DD SYSOUT=*                                                  00450000
//SYSIN    DD  *                                                        00460000
 RECOVER TABLESPACE BCMR0001.S2B40U01 TOLASTCOPY                        00470000
/*                                                                      00480000
//                                                                      00481000

./ ADD NAME=RECOIDX
//SYSILEA  JOB 1000,'COMPIL     ',MSGLEVEL=(1,1),
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE TYPRUN=SCAN
//*------------------------------------------------------------*
//*  CE JCL PERMET DE FAIRE DES RECOVER INDEX SUR LES TABLES
//*  RESTAUREES
//*------------------------------------------------------------*
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2S,RECOVER',REGION=6M,COND=(2,LT)
//UTPRINT  DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSREC   DD UNIT=WORKDA,SPACE=(CYL,(50,3),RLSE)
//SYSUT1   DD UNIT=WORKDA,SPACE=(CYL,(50,3),RLSE)
//SORTOUT  DD UNIT=WORKDA,SPACE=(CYL,(50,3),RLSE)
//SYSIN    DD  *
 REBUILD INDEX(ALL) TABLESPACE DBSYST02.S2Z19U01
/*
//

./ ADD NAME=RECOSCT
//SYSILEA  JOB 1000,'COMPIL     ',MSGLEVEL=(1,1),                       00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE TYPRUN=SCAN                 00002000
//*------------------------------------------------------------*        00002100
//*  CE JCL PERMET DE REORGANISER LA TABLE SYSIBM.SCT02                 00002200
//*------------------------------------------------------------*        00002900
//* DIRECTORY/CATALOG AMS INVOCATION INSTREAM JCL PROCEDURE             00008700
//*------------------------------------------------------------*        00008800
//DELDEF  EXEC PGM=IDCAMS                                               00008900
//SYSPRINT DD SYSOUT=*                                                  00009000
//SYSUDUMP DD SYSOUT=*                                                  00009100
//SYSIN DD *                                                            00009200
   DELETE DB2I.DSNDBC.DSNDB01.SCT02.I0001.A001                          00010005
   DEFINE CLUSTER                             -                         00020000
         ( NAME(DB2I.DSNDBC.DSNDB01.SCT02.I0001.A001) -                 00030005
           LINEAR                             -                         00040000
           REUSE                              -                         00050000
           SHAREOPTIONS(3 3)                  -                         00060000
                                 )            -                         00070000
      DATA                                    -                         00080000
         ( NAME(DB2I.DSNDBD.DSNDB01.SCT02.I0001.A001) -                 00090005
           TRACKS(3150 50)                     -                        00100004
           VOLUMES(SYS1MC) )                  -                         00110000
      CATALOG(CATALOG.GDBS)                                             00120000
                                                                        00130000
/*                                                                      00225000
//*------------------------------------------------------------*        00226000
//* RECOVER IMAGE COPY                                                  00227000
//*------------------------------------------------------------*        00228000
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2I,RECOVER',REGION=6M,COND=(2,LT)   00229001
//UTPRINT  DD SYSOUT=*                                                  00230001
//SYSPRINT DD SYSOUT=*                                                  00240001
//SYSUDUMP DD SYSOUT=*                                                  00250001
//SYSREC   DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00260001
//SYSUT1   DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00261001
//SORTOUT  DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00262001
//SYSIN    DD  *                                                        00263001
 RECOVER TABLESPACE DSNDB01.SCT02                                       00270000
     TOCOPY PSECJ.SAVEDB2I.SCT02.G0110V00                               00280000
/*                                                                      00290000
//*------------------------------------------------------------*        00300001
//* RECOVER INDEX                                                       00310001
//*------------------------------------------------------------*        00320001
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2I,RECOVER',REGION=6M,COND=(2,LT)   00330001
//UTPRINT  DD SYSOUT=*                                                  00340001
//SYSPRINT DD SYSOUT=*                                                  00350001
//SYSUDUMP DD SYSOUT=*                                                  00360001
//SYSREC   DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00370001
//SYSUT1   DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00380001
//SORTOUT  DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00390001
//SYSIN    DD  *                                                        00400001
 RECOVER INDEX(ALL) TABLESPACE DSNDB01.SCT02                            00410001
/*                                                                      00430001
//*------------------------------------------------------------*        00440001
//* SET NOCOPYPEND                                                      00450001
//*------------------------------------------------------------*        00460001
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2I,REPAIR',REGION=6M,COND=(2,LT)    00470001
//UTPRINT  DD SYSOUT=*                                                  00480001
//SYSPRINT DD SYSOUT=*                                                  00490001
//SYSUDUMP DD SYSOUT=*                                                  00500001
//SYSREC   DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00510001
//SYSUT1   DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00520001
//SORTOUT  DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00530001
//SYSIN    DD  *                                                        00540001
 REPAIR SET TABLESPACE DSNDB01.SCT02 NOCOPYPEND                         00550001
/*                                                                      00570001
//                                                                      00571003
   DELETE DB2I.DSNDBC.DSNDB01.DSNSCT02.I0001.A001                       00580005
   DEFINE CLUSTER                             -                         00590003
         ( NAME(DB2I.DSNDBC.DSNDB01.DSNSCT02.I0001.A001) -              00600005
           LINEAR                             -                         00610003
           REUSE                              -                         00620003
           VOLUMES(SYS1MC)                    -                         00630003
           TRACKS(120 10)                     -                         00640004
           SHAREOPTIONS(3 3) )                -                         00650003
      DATA                                    -                         00660003
         ( NAME(DB2I.DSNDBD.DSNDB01.DSNSCT02.I0001.A001) -              00670005
                              )               -                         00680003
      CATALOG(CATALOG.GDBS)                                             00690003
                                                                        00700003

./ ADD NAME=RECOSYS
//SYSILEA  JOB 1000,'COMPIL     ',                                      00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE                             00002000
//*------------------------------------------------------------*        00002100
//*  CE JCL PERMET D'AGRANDIR LA TABLE SYSIBM.SYSPLAN                   00002200
//*      - SAUVEGARDE DFDSS                                             00002300
//*      - IMAGE COPY DE LA TABLE                                       00002400
//*      - DEL DEF DU CLUSTER                                           00002500
//*      - RECOVER FROM IMAGE COPY                                      00002600
//*      - RECOVER INDEX                                                00002700
//*      - SET NOCOPYPEND                                               00002800
//*------------------------------------------------------------*        00002900
//*------------------------------------------------------------*        00190000
//* DIRECTORY/CATALOG AMS INVOCATION INSTREAM JCL PROCEDURE             00200000
//*------------------------------------------------------------*        00210000
//DSNTIC  EXEC PGM=IDCAMS,COND=(2,LT)                                   00220000
//SYSPRINT DD SYSOUT=*                                                  00230000
//SYSUDUMP DD SYSOUT=*                                                  00240000
//SYSIN DD *                                                            00250000
   DELETE DB2I.DSNDBC.DSNDB06.SYSPLAN.I0001.A001                        00260004
   DEFINE CLUSTER                             -                         00270000
         ( NAME(DB2I.DSNDBC.DSNDB06.SYSPLAN.I0001.A001) -               00280004
           LINEAR                             -                         00290000
           REUSE                              -                         00300000
           VOLUMES(SYS1MC)                    -                         00310000
           CYLINDERS(140 10)                  -                         00320002
           SHAREOPTIONS(3 3) )                -                         00330000
      DATA                                    -                         00340000
         ( NAME(DB2I.DSNDBD.DSNDB06.SYSPLAN.I0001.A001) -               00350004
                              )               -                         00360000
      CATALOG(CATALOG.GDBS)                                             00370000
/*                                                                      00380000
//*------------------------------------------------------------*        00390000
//* RECOVER IMAGE COPY                                                  00400000
//*------------------------------------------------------------*        00410000
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2I,IMAGCOPY',REGION=1024K,          00420000
//             COND=(2,LT)                                              00430000
//SYSPRINT DD SYSOUT=*                                                  00440000
//SYSUDUMP DD SYSOUT=*                                                  00450000
//SYSIN    DD  *                                                        00460000
 RECOVER TABLESPACE DSNDB06.SYSPLAN TOCOPY                              00470000
     PSECJ.SAVEDB2I.SYSPLAN.G0110V00                                    00471000
/*                                                                      00480000
//                                                                      00481000
//*------------------------------------------------------------*        00490000
//* RECOVER INDEX                                                       00500000
//*------------------------------------------------------------*        00510000
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2I,IMAGCOPY',REGION=1024K,          00520000
//             COND=(5,LT)                                              00530001
//SYSPRINT DD SYSOUT=*                                                  00540000
//SYSUDUMP DD SYSOUT=*                                                  00550000
//SYSIN    DD  *                                                        00560000
   RECOVER INDEX(ALL) TABLESPACE DSNDB06.SYSPLAN                        00570000
/*                                                                      00580000
//*------------------------------------------------------------*        00590000
//* SET NOCOPYPEND                                                      00600000
//*------------------------------------------------------------*        00610000
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2I,IMAGCOPY',REGION=1024K,          00620000
//             COND=(5,LT)                                              00630001
//SYSPRINT DD SYSOUT=*                                                  00640000
//SYSUDUMP DD SYSOUT=*                                                  00650000
//SYSIN    DD  *                                                        00660000
   REPAIR SET TABLESPACE DSNDB06.SYSPLAN  NOCOPYPEND                    00670000
/*                                                                      00680000
//                                                                      00690003
   DELETE DB2I.DSNDBC.DSNDB06.DSNATX01.I0001.A001                       00700004
   DEFINE CLUSTER                             -                         05080003
         ( NAME(DB2I.DSNDBC.DSNDB06.DSNATX01.I0001.A001) -              05090004
           LINEAR                             -                         05100003
           REUSE                              -                         05110003
           VOLUMES(SYS1MC)                    -                         05120003
           TRACKS(10 10)                      -                         05150003
           SHAREOPTIONS(3 3) )                -                         05160003
      DATA                                    -                         05170003
         ( NAME(DSNC220.DSNDBD.DSNDB06.DSNATX01.I0001.A001) -           05180003
                              )               -                         05210003
      CATALOG(CATALOG.GDBS)                                             05220003
                                                                        05230003
   DELETE DB2I.DSNDBC.DSNDB06.DSNATX02.I0001.A001                       05231004
   DEFINE CLUSTER                             -                         05240003
         ( NAME(DB2I.DSNDBC.DSNDB06.DSNATX02.I0001.A001) -              05250004
           LINEAR                             -                         05260003
           REUSE                              -                         05270003
           VOLUMES(SYS1MC)                    -                         05280003
           TRACKS(72 5)                       -                         05310003
           SHAREOPTIONS(3 3) )                -                         05320003
      DATA                                    -                         05330003
         ( NAME(DB2I.DSNDBD.DSNDB06.DSNATX02.I0001.A001) -              05340004
                              )               -                         05370003
      CATALOG(CATALOG.GDBS)                                             05371003
                                                                        05390003

./ ADD NAME=RENAME
//SYSILEA  JOB 1000,'SYST-LE PEN',                                      10003
//             CLASS=O,MSGCLASS=T,NOTIFY=SYSILE                         00020004
//ALTER   EXEC PGM=IDCAMS,
//             REGION=512K,
//             COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
  ALTER DB2V.LOGCOPY1.DS01 -
  NEWNAME(DB2V.LOGCOPY1.DS01.SAVE)
  ALTER DB2V.LOGCOPY1.DS01.DATA -
  NEWNAME(DB2V.LOGCOPY1.DS01.SAVE.DATA)
  ALTER DB2V.LOGCOPY2.DS01 -
  NEWNAME(DB2V.LOGCOPY2.DS01.SAVE)
  ALTER DB2V.LOGCOPY2.DS01.DATA -
  NEWNAME(DB2V.LOGCOPY2.DS01.SAVE.DATA)
//
  ALTER DSN220IA.DSNDBC.DSNDB06.SYSPLAN.I0001.A001 -
  NEWNAME(DSN220IA.DSNDBC.SAVE.SYSPLAN.I0001.A001)
  ALTER DSN220IA.DSNDBD.DSNDB06.SYSPLAN.I0001.A001 -
  NEWNAME(DSN220IA.DSNDBD.SAVE.SYSPLAN.I0001.A001)
  ALTER DSN220IA.DSNDBC.DSNDB01.SCT02.I0001.A001 -
  NEWNAME(DSN220IA.DSNDBC.SAVE.SCT02.I0001.A001)
  ALTER DSN220IA.DSNDBD.DSNDB01.SCT02.I0001.A001 -
  NEWNAME(DSN220IA.DSNDBD.SAVE.SCT02.I0001.A001)
  ALTER DSN220IA.DSNDBC.DSNDB06.DSNATX01.I0001.A001 -
  NEWNAME(DSN220IA.DSNDBC.SAVE.DSNATX01.I0001.A001)
  ALTER DSN220IA.DSNDBD.DSNDB06.DSNATX01.I0001.A001 -
  NEWNAME(DSN220IA.DSNDBD.SAVE.DSNATX01.I0001.A001)
  ALTER DSN220IA.DSNDBC.DSNDB06.DSNATX02.I0001.A001 -
  NEWNAME(DSN220IA.DSNDBC.SAVE.DSNATX02.I0001.A001)
  ALTER DSN220IA.DSNDBD.DSNDB06.DSNATX02.I0001.A001 -
  NEWNAME(DSN220IA.DSNDBD.SAVE.DSNATX02.I0001.A001)
  ALTER DSN220IA.DSNDBC.DSNDB01.DSNSCT02.I0001.A001 -
  NEWNAME(DSN220IA.DSNDBC.SAVE.DSNSCT02.I0001.A001)
  ALTER DSN220IA.DSNDBD.DSNDB01.DSNSCT02.I0001.A001 -
  NEWNAME(DSN220IA.DSNDBD.SAVE.DSNSCT02.I0001.A001)
  /*
//

./ ADD NAME=RENAME1
//SYSILEA  JOB 1000,'SYST-LE PEN',                                      10003
//             CLASS=O,MSGCLASS=T,NOTIFY=SYSILE                         00020004
//ALTER   EXEC PGM=IDCAMS,
//             REGION=512K,
//             COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//SYSIN    DD  *
 ALTER    DB2V.BSDS01                                -
 NEWNAME(DB2P.BSDS01                                 )
 ALTER    DB2V.BSDS01.DATA                           -
 NEWNAME(DB2P.BSDS01.DATA                            )
 ALTER    DB2V.BSDS01.INDEX                          -
 NEWNAME(DB2P.BSDS01.INDEX                           )
 ALTER    DB2V.BSDS02                                -
 NEWNAME(DB2P.BSDS02                                 )
 ALTER    DB2V.BSDS02.DATA                           -
 NEWNAME(DB2P.BSDS02.DATA                            )
 ALTER    DB2V.BSDS02.INDEX                          -
 NEWNAME(DB2P.BSDS02.INDEX                           )
 ALTER    DB2V.DSNDBC.DBADMIN.SEXPLAIN.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DBADMIN.SEXPLAIN.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNCV.DSNAUTH.I0001.A001       -
 NEWNAME(DB2P.DSNDBC.DSNCV.DSNAUTH.I0001.A001        )
 ALTER    DB2V.DSNDBC.DSNCV.DSNCNTL.I0001.A001       -
 NEWNAME(DB2P.DSNDBC.DSNCV.DSNCNTL.I0001.A001        )
 ALTER    DB2V.DSNDBC.DSNCV.DSNCVCC.I0001.A001       -
 NEWNAME(DB2P.DSNDBC.DSNCV.DSNCVCC.I0001.A001        )
 ALTER    DB2V.DSNDBC.DSNDB01.DBD01.I0001.A001       -
 NEWNAME(DB2P.DSNDBC.DSNDB01.DBD01.I0001.A001        )
 ALTER    DB2V.DSNDBC.DSNDB01.DSNSCT02.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB01.DSNSCT02.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB01.DSNSPT01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB01.DSNSPT01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB01.DSNSPT02.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB01.DSNSPT02.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB01.SCT02.I0001.A001       -
 NEWNAME(DB2P.DSNDBC.DSNDB01.SCT02.I0001.A001        )
 ALTER    DB2V.DSNDBC.DSNDB01.SPT01.I0001.A001       -
 NEWNAME(DB2P.DSNDBC.DSNDB01.SPT01.I0001.A001        )
 ALTER    DB2V.DSNDBC.DSNDB01.SYSLGRNG.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB01.SYSLGRNG.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB01.SYSUTIL.I0001.A001     -
 NEWNAME(DB2P.DSNDBC.DSNDB01.SYSUTIL.I0001.A001      )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNADH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNADH01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNADX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNADX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNAGH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNAGH01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNAGX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNAGX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNAPH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNAPH01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNAPX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNAPX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNATX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNATX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNATX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNATX02.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNAUH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNAUH01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNAUX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNAUX02.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNDCX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNDCX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNDDH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNDDH01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNDLX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNDLX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNDSX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNDSX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNDTX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNDTX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNDTX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNDTX02.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNDXX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNDXX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNDXX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNDXX02.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNDYX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNDYX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNGGX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNGGX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNGGX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNGGX02.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNKAX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNKAX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNKAX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNKAX02.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNKAX03.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNKAX03.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNKDX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNKDX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNKDX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNKDX02.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNKKX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNKKX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNKKX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNKKX02.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNKLX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNKLX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNKLX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNKLX02.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNKPX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNKPX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNKSX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNKSX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNKYX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNKYX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNPPH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNPPH01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNSSH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNSSH01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNSSX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNSSX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNUCH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNUCH01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNUCX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNUCX01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.DSNVTH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.DSNVTH01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.SYSCOPY.I0001.A001     -
 NEWNAME(DB2P.DSNDBC.DSNDB06.SYSCOPY.I0001.A001      )
 ALTER    DB2V.DSNDBC.DSNDB06.SYSDBASE.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.SYSDBASE.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.SYSDBAUT.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.SYSDBAUT.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.SYSGPAUT.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.SYSGPAUT.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.SYSGROUP.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.SYSGROUP.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.SYSPKAGE.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.SYSPKAGE.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB06.SYSPLAN.I0001.A001     -
 NEWNAME(DB2P.DSNDBC.DSNDB06.SYSPLAN.I0001.A001      )
 ALTER    DB2V.DSNDBC.DSNDB06.SYSSTR.I0001.A001      -
 NEWNAME(DB2P.DSNDBC.DSNDB06.SYSSTR.I0001.A001       )
 ALTER    DB2V.DSNDBC.DSNDB06.SYSUSER.I0001.A001     -
 NEWNAME(DB2P.DSNDBC.DSNDB06.SYSUSER.I0001.A001      )
 ALTER    DB2V.DSNDBC.DSNDB06.SYSVIEWS.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB06.SYSVIEWS.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB07.DSN32K01.I0001.A001    -
 NEWNAME(DB2P.DSNDBC.DSNDB07.DSN32K01.I0001.A001     )
 ALTER    DB2V.DSNDBC.DSNDB07.DSN4K01.I0001.A001     -
 NEWNAME(DB2P.DSNDBC.DSNDB07.DSN4K01.I0001.A001      )
 ALTER    DB2V.DSNDBD.DBADMIN.SEXPLAIN.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DBADMIN.SEXPLAIN.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNCV.DSNAUTH.I0001.A001       -
 NEWNAME(DB2P.DSNDBD.DSNCV.DSNAUTH.I0001.A001        )
 ALTER    DB2V.DSNDBD.DSNCV.DSNCNTL.I0001.A001       -
 NEWNAME(DB2P.DSNDBD.DSNCV.DSNCNTL.I0001.A001        )
 ALTER    DB2V.DSNDBD.DSNCV.DSNCVCC.I0001.A001       -
 NEWNAME(DB2P.DSNDBD.DSNCV.DSNCVCC.I0001.A001        )
 ALTER    DB2V.DSNDBD.DSNDB01.DBD01.I0001.A001       -
 NEWNAME(DB2P.DSNDBD.DSNDB01.DBD01.I0001.A001        )
 ALTER    DB2V.DSNDBD.DSNDB01.DSNSCT02.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB01.DSNSCT02.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB01.DSNSPT01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB01.DSNSPT01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB01.DSNSPT02.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB01.DSNSPT02.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB01.SCT02.I0001.A001       -
 NEWNAME(DB2P.DSNDBD.DSNDB01.SCT02.I0001.A001        )
 ALTER    DB2V.DSNDBD.DSNDB01.SPT01.I0001.A001       -
 NEWNAME(DB2P.DSNDBD.DSNDB01.SPT01.I0001.A001        )
 ALTER    DB2V.DSNDBD.DSNDB01.SYSLGRNG.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB01.SYSLGRNG.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB01.SYSUTIL.I0001.A001     -
 NEWNAME(DB2P.DSNDBD.DSNDB01.SYSUTIL.I0001.A001      )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNADH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNADH01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNADX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNADX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNAGH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNAGH01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNAGX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNAGX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNAPH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNAPH01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNAPX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNAPX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNATX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNATX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNATX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNATX02.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNAUH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNAUH01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNAUX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNAUX02.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNDCX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNDCX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNDDH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNDDH01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNDLX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNDLX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNDSX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNDSX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNDTX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNDTX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNDTX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNDTX02.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNDXX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNDXX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNDXX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNDXX02.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNDYX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNDYX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNGGX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNGGX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNGGX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNGGX02.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNKAX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNKAX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNKAX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNKAX02.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNKAX03.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNKAX03.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNKDX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNKDX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNKDX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNKDX02.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNKKX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNKKX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNKKX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNKKX02.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNKLX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNKLX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNKLX02.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNKLX02.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNKPX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNKPX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNKSX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNKSX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNKYX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNKYX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNPPH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNPPH01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNSSH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNSSH01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNSSX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNSSX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNUCH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNUCH01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNUCX01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNUCX01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.DSNVTH01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.DSNVTH01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.SYSCOPY.I0001.A001     -
 NEWNAME(DB2P.DSNDBD.DSNDB06.SYSCOPY.I0001.A001      )
 ALTER    DB2V.DSNDBD.DSNDB06.SYSDBASE.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.SYSDBASE.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.SYSDBAUT.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.SYSDBAUT.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.SYSGPAUT.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.SYSGPAUT.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.SYSGROUP.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.SYSGROUP.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.SYSPKAGE.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.SYSPKAGE.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB06.SYSPLAN.I0001.A001     -
 NEWNAME(DB2P.DSNDBD.DSNDB06.SYSPLAN.I0001.A001      )
 ALTER    DB2V.DSNDBD.DSNDB06.SYSSTR.I0001.A001      -
 NEWNAME(DB2P.DSNDBD.DSNDB06.SYSSTR.I0001.A001       )
 ALTER    DB2V.DSNDBD.DSNDB06.SYSUSER.I0001.A001     -
 NEWNAME(DB2P.DSNDBD.DSNDB06.SYSUSER.I0001.A001      )
 ALTER    DB2V.DSNDBD.DSNDB06.SYSVIEWS.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB06.SYSVIEWS.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB07.DSN32K01.I0001.A001    -
 NEWNAME(DB2P.DSNDBD.DSNDB07.DSN32K01.I0001.A001     )
 ALTER    DB2V.DSNDBD.DSNDB07.DSN4K01.I0001.A001     -
 NEWNAME(DB2P.DSNDBD.DSNDB07.DSN4K01.I0001.A001      )
 ALTER    DB2V.LOGCOPY1.DS01                         -
 NEWNAME(DB2P.LOGCOPY1.DS01                          )
 ALTER    DB2V.LOGCOPY1.DS01.DATA                    -
 NEWNAME(DB2P.LOGCOPY1.DS01.DATA                     )
 ALTER    DB2V.LOGCOPY1.DS02                         -
 NEWNAME(DB2P.LOGCOPY1.DS02                          )
 ALTER    DB2V.LOGCOPY1.DS02.DATA                    -
 NEWNAME(DB2P.LOGCOPY1.DS02.DATA                     )
 ALTER    DB2V.LOGCOPY1.DS03                         -
 NEWNAME(DB2P.LOGCOPY1.DS03                          )
 ALTER    DB2V.LOGCOPY1.DS03.DATA                    -
 NEWNAME(DB2P.LOGCOPY1.DS03.DATA                     )
 ALTER    DB2V.LOGCOPY2.DS01                         -
 NEWNAME(DB2P.LOGCOPY2.DS01                          )
 ALTER    DB2V.LOGCOPY2.DS01.DATA                    -
 NEWNAME(DB2P.LOGCOPY2.DS01.DATA                     )
 ALTER    DB2V.LOGCOPY2.DS02                         -
 NEWNAME(DB2P.LOGCOPY2.DS02                          )
 ALTER    DB2V.LOGCOPY2.DS02.DATA                    -
 NEWNAME(DB2P.LOGCOPY2.DS02.DATA                     )
 ALTER    DB2V.LOGCOPY2.DS03                         -
 NEWNAME(DB2P.LOGCOPY2.DS03                          )
 ALTER    DB2V.LOGCOPY2.DS03.DATA                    -
 NEWNAME(DB2P.LOGCOPY2.DS03.DATA                     )

./ ADD NAME=REORG
//REORGAMI  JOB ACCT£,                                                  00010000
//             DB2,                                                     00020000
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040000
// SET DATE=D22111
// SET TSNAME=BMCACTN
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050000
//      SYS019.LP2.DB2,                                                 00060000
//      SYS1.PROCLIB.&SYSNAME,                                          00061000
//      SYS1.SACBCNTL)                                                  00070000
//DELETE   EXEC PGM=IEFBR14
//SYSREC DD   DSN=&SYSUID..&TSNAME..SYSREC.&DATE.,
//  DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SYSCOPY DD  DSN=&SYSUID..&TSNAME..SYSCOPY1.&DATE.,
// DISP=(MOD,DELETE,CATLG),UNIT=SYSDA,
// SPACE=(4000,(20,20),,,ROUND)
//SYSUT1  DD  DSN=&SYSUID..&TSNAME..SYSUT1.&DATE.,
//  DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SYSUT2  DD  DSN=&SYSUID..&TSNAME..SYSUT2,
//  DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//STEP1 EXEC DSNUPROC,UID=SYS0192.REORG,TIME=1440,
//*UTPROC=??,
// SYSTEM=DB2S ,DB2LEV=DB2A
//SYSREC DD   DSN=&SYSUID..&TSNAME..SYSREC.&DATE.,
//  DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SYSCOPY DD  DSN=&SYSUID..&TSNAME..SYSCOPY1.&DATE.,
// DISP=(MOD,CATLG,CATLG),UNIT=SYSDA,
// SPACE=(4000,(20,20),,,ROUND)
//SYSUT1  DD  DSN=&SYSUID..&TSNAME..SYSUT1.&DATE.,
//  DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SYSUT2  DD  DSN=&SYSUID..&TSNAME..SYSUT2.&DATE.,
//  DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
REORG TABLESPACE AMIDB2SU.BMCACTN
SHRLEVEL CHANGE
STATISTICS TABLE(ALL)
INDEX(ALL)
WORKDDN(SYSUT1)
//
SHRLEVEL CHANGE MAPPINGTABLE MAP2
REORG TABLESPACE AMIDB2SU.BMCACTN
REORG TABLESPACE AMIDB2SU.BMCACTN
REORG TABLESPACE AMIDB2SU.BMCACTSS
REORG TABLESPACE AMIDB2SU.BMCCACTN
REORG TABLESPACE AMIDB2SU.BMCDOWID
REORG TABLESPACE AMIDB2SU.BMCDSYNC
REORG TABLESPACE AMIDB2SU.BMCEXDEF
REORG TABLESPACE AMIDB2SU.BMCOAJC
REORG TABLESPACE AMIDB2SU.BMCOBJAC
REORG TABLESPACE AMIDB2SU.BMCRSEV
REORG TABLESPACE AMIDB2SU.BMCRSEX
REORG TABLESPACE AMIDB2SU.BMCSERV
REORG TABLESPACE AMIDB2SU.BMCSVDD
REORG TABLESPACE AMIDB2SU.BMCSVDDD
REORG TABLESPACE AMIDB2SU.BMCSVSN
REORG TABLESPACE AMIDB2SU.BMCSVSNT
REORG TABLESPACE AMIDB2SU.BMCTHRES
REORG TABLESPACE AMIDB2SU.BMCVENDR

./ ADD NAME=REORGAMI
//REORGAMI  JOB ACCT£,                                                  00010000
//             DB2,                                                     00020000
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040000
// SET DATE=D22111
// SET TSNAME=BMCACTN
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050000
//      SYS019.LP2.DB2,                                                 00060000
//      SYS1.PROCLIB.&SYSNAME,                                          00061000
//      SYS1.SACBCNTL)                                                  00070000
//DELETE   EXEC PGM=IEFBR14
//SYSREC DD   DSN=&SYSUID..&TSNAME..SYSREC.&DATE.,
//  DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SYSCOPY DD  DSN=&SYSUID..&TSNAME..SYSCOPY1.&DATE.,
// DISP=(MOD,DELETE,CATLG),UNIT=SYSDA,
// SPACE=(4000,(20,20),,,ROUND)
//SYSUT1  DD  DSN=&SYSUID..&TSNAME..SYSUT1.&DATE.,
//  DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SYSUT2  DD  DSN=&SYSUID..&TSNAME..SYSUT2.&DATE.,
//  DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//STEP1 EXEC DSNUPROC,UID=SYS0192.REORG,TIME=1440,
//*UTPROC=??,
// SYSTEM=DB2S ,DB2LEV=DB2A
//SYSREC DD   DSN=&SYSUID..&TSNAME..SYSREC.&DATE.,
//  DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SYSCOPY DD  DSN=&SYSUID..&TSNAME..SYSCOPY1.&DATE.,
// DISP=(MOD,CATLG,CATLG),UNIT=SYSDA,
// SPACE=(4000,(20,20),,,ROUND)
//SYSUT1  DD  DSN=&SYSUID..&TSNAME..SYSUT1.&DATE.,
//  DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SYSUT2  DD  DSN=&SYSUID..&TSNAME..SYSUT2.&DATE.,
//  DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
REORG TABLESPACE AMIDB2SU.BMCACTN
SHRLEVEL CHANGE
STATISTICS TABLE(ALL)
INDEX(ALL)
WORKDDN(SYSUT1)
//
SHRLEVEL CHANGE MAPPINGTABLE MAP2
REORG TABLESPACE AMIDB2SU.BMCACTN
REORG TABLESPACE AMIDB2SU.BMCACTN
REORG TABLESPACE AMIDB2SU.BMCACTSS
REORG TABLESPACE AMIDB2SU.BMCCACTN
REORG TABLESPACE AMIDB2SU.BMCDOWID
REORG TABLESPACE AMIDB2SU.BMCDSYNC
REORG TABLESPACE AMIDB2SU.BMCEXDEF
REORG TABLESPACE AMIDB2SU.BMCOAJC
REORG TABLESPACE AMIDB2SU.BMCOBJAC
REORG TABLESPACE AMIDB2SU.BMCRSEV
REORG TABLESPACE AMIDB2SU.BMCRSEX
REORG TABLESPACE AMIDB2SU.BMCSERV
REORG TABLESPACE AMIDB2SU.BMCSVDD
REORG TABLESPACE AMIDB2SU.BMCSVDDD
REORG TABLESPACE AMIDB2SU.BMCSVSN
REORG TABLESPACE AMIDB2SU.BMCSVSNT
REORG TABLESPACE AMIDB2SU.BMCTHRES
REORG TABLESPACE AMIDB2SU.BMCVENDR

./ ADD NAME=REORGCAT
//SYSILEA  JOB 1000,'COMPIL     ',MSGLEVEL=(1,1),                       00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=&SYSUID,COND=(5,LT)                00002000
//*------------------------------------------------------------*        00040000
//*   IEFBR14                                                           00050000
//*------------------------------------------------------------*        00060000
//STEP1   EXEC PGM=IEFBR14                                              00060100
//DD1      DD DSN=SYSILE.REORG,DISP=(MOD,DELETE),UNIT=3390,             00060200
//             SPACE=(TRK,0)                                            00060300
//*-------------------------------------------------------------------- 00060900
//*                                                                     00061000
//* IMAGCOPY DSNDB06.SYSDBASE                                           00061100
//*-------------------------------------------------------------------- 00061200
//COPY001 EXEC PGM=DSNUTILB,PARM='DB2S,COPYDIR',                        00061300
//         REGION=2M,COND=(12,LE)                                       00061400
//STEPLIB  DD DSN=SYS2.DB2410.SDSNLOAD,DISP=SHR                         00061500
//SYSPRINT DD SYSOUT=*                                                  00061600
//UTPRINT  DD SYSOUT=*                                                  00061700
//FIC001   DD UNIT=3390,DISP=(,CATLG,DELETE),                           00061800
//            VOL=SER=MVS107,SPACE=(TRK,(450,50),RLSE),                 00061900
//            DSN=DB2S.S190297.SYSDBASE,DCB=(DSCB)                      00062000
//SYSIN    DD *                                                         00062100
   COPY TABLESPACE DSNDB06.SYSDBASE                                     00062200
   DEVT 3390                                                            00062300
   COPYDDN FIC001                                                       00062400
   FULL YES                                                             00062500
   SHRLEVEL REFERENCE                                                   00062600
//*------------------------------------------------------------*        00065900
//*   REORG DE LA BASE                                                  00066000
//*------------------------------------------------------------*        00067000
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2S,REORG',REGION=4M                 00070000
//STEPLIB  DD DSN=SYS2.DB2410.SDSNLOAD,DISP=SHR                         00080000
//UTPRINT  DD SYSOUT=*                                                  00090000
//SYSPRINT DD SYSOUT=*                                                  00100000
//SYSUDUMP DD SYSOUT=*                                                  00110000
//SYSREC   DD DSN=SYSILE.REORG,DISP=(,CATLG),UNIT=3390,                 00120000
//             SPACE=(TRK,(450,100),RLSE),VOL=SER=SYS1MC,               00130000
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=0)                        00140000
//SYSUT1   DD UNIT=3390,SPACE=(CYL,(99,48),RLSE)                        00150000
//SORTOUT  DD UNIT=3390,SPACE=(CYL,(99,48),RLSE)                        00151000
//SYSIN    DD  *                                                        00153000
 REORG TABLESPACE DSNDB06.SYSDBASE LOG NO                               00154000
 UNLOAD CONTINUE                                                        00154100
/*                                                                      00155000
//                                                                      00155100
//                                                                      00157000

./ ADD NAME=REORG1
//SYSILEA  JOB 1000,'COMPIL     ',MSGLEVEL=(1,1),                       00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE,COND=(5,LT)                 00002000
//*------------------------------------------------------------*        00040000
//*   IEFBR14                                                           00050000
//*------------------------------------------------------------*        00060000
//STEP1   EXEC PGM=IEFBR14                                              00060100
//DD1      DD DSN=SYSILE.REORG,DISP=(MOD,DELETE),UNIT=3390,             00060200
//             SPACE=(TRK,0)                                            00060300
//**----------------------------------------------------------------    00060401
//STOPDB  EXEC PGM=IKJEFT01,DYNAMNBR=20                                 00060501
//SYSTSPRT DD  SYSOUT=*                                                 00060601
//SYSPRINT DD  SYSOUT=*                                                 00060701
//SYSTSIN  DD  *                                                        00060801
DSN SYSTEM(DB2T)                                                        00060901
-STOP  DATABASE(DBSYST01) SPACENAM(TSISA)                               00061001
-START DATABASE(DBSYST01) SPACENAM(TSISA) ACCESS(UT)                    00061101
END                                                                     00061201
//*------------------------------------------------------------*        00061300
//*   REORG DE LA BASE                                                  00062000
//*------------------------------------------------------------*        00063000
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2T,REORG',REGION=4M                 00070000
//UTPRINT  DD SYSOUT=*                                                  00090000
//SYSPRINT DD SYSOUT=*                                                  00100000
//SYSUDUMP DD SYSOUT=*                                                  00110000
//SYSREC   DD DSN=SYSILE.REORG,DISP=(,CATLG),UNIT=WORKDA,               00120000
//             SPACE=(CYL,(600,3),RLSE),                                00130000
//             DCB=(RECFM=FB,LRECL=80,BLKSIZE=0)                        00140000
//SYSUT1   DD UNIT=3390,SPACE=(CYL,(8,3),RLSE)                          00150000
//SORTOUT  DD UNIT=3390,SPACE=(CYL,(8,3),RLSE)                          00151000
//SYSIN    DD  *                                                        00153000
 REORG TABLESPACE DBSYST01.TSISA                                        00154101
 UNLOAD CONTINUE                                                        00154201
 SORTDEVT WORKDA SORTNUM 4                                              00154301
 RUNSTATS TABLESPACE DBSYST01.TSISA INDEX(ALL)                          00154401
/*                                                                      00155000
//STARTDB EXEC PGM=IKJEFT01,DYNAMNBR=20                                 00155101
//SYSTSPRT DD  SYSOUT=*                                                 00155201
//SYSPRINT DD  SYSOUT=*                                                 00155301
//SYSTSIN  DD  *                                                        00155401
DSN SYSTEM(DB2T)                                                        00155501
-START DATABASE(DBSYST01) SPACENAM(TSISA) ACCESS(RW)                    00155601
END                                                                     00155701
//                                                                      00155800

./ ADD NAME=REORG2
//STEP1 EXEC DSNUPROC,UID=SYS019.REORG2,
//*UTPROC=??,
// SYSTEM=DB2S
//UTPRINT DD SYSOUT=*
//UNLD DD     DSN=&SYSUID..REORG.STEP1.UNLD,DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SORTWK01 DD DSN=&SYSUID..REORG.STEP1.SORTWK01,DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SORTWK02 DD DSN=&SYSUID..REORG.STEP1.SORTWK02,DISP=(MOD,DELETE,CATLG),
// UNIT=SYSDA,SPACE=(4000,(20,20),,,ROUND)
//SYSIN DD *
REORG TABLESPACE (DSN8D12A.DSN8S12D)
UNLDDN (UNLD)

./ ADD NAME=REORIX
//SYSILEA JOB  1,LAPEYRE,MSGLEVEL=(1,1),CLASS=O,                        00028700
//             MSGCLASS=T,NOTIFY=SYSILE,TIME=1439                       00028800
//*------------------------------------------------------------*        00002100
//*  CE JCL PERMET DE REORGANISER LES INDEXS DSNATX02 ET DSNATX01       00002200
//*      (TABLE SYSCOPY)                                                00002300
//*------------------------------------------------------------*        00002700
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2S,REORG',REGION=6M,COND=(2,LT)     00070000
//STEPLIB  DD DSN=SYS2.DB2410.SDSNLOAD,DISP=SHR
//UTPRINT  DD SYSOUT=*                                                  00090000
//SYSPRINT DD SYSOUT=*                                                  00100000
//SYSUDUMP DD SYSOUT=*                                                  00110000
//SYSREC   DD UNIT=3390,SPACE=(CYL,(50,3),RLSE),                        00150000
//            DSN=SYSILE.DSNATX01,DISP=(,CATLG),
//            DCB=(RECFM=FB,BLKSIZE=800,LRECL=80)
//SYSUT1   DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00150100
//SORTOUT  DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00151000
//SYSIN    DD  *                                                        00153000
 REORG INDEX SYSIBM.DSNDCX01                                            00154302
 REORG INDEX SYSIBM.DSNDTX02                                            00154302
 REORG INDEX SYSIBM.DSNDTX01                                            00154302
/*                                                                      00154102
//                                                                      00154202

./ ADD NAME=REPAIR
//SYSLHUY  JOB 1000,'REPAIR DB2 ',MSGLEVEL=(1,1),COND=(4,LT),
//         CLASS=O,MSGCLASS=T,NOTIFY=&SYSUID TYPRUN=SCAN
//*------------------------------------------------------------*
//*   START DATABASE ACCESS(UT)
//*------------------------------------------------------------*
//STARTUT  EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
  DSN SYSTEM(DB2C)
  -START DATABASE(DSNDB01) SP(SYSLGRNX) ACCESS(UT)
/*
//*------------------------------------------------------------*
//* REPAIR REBUILD DE LA DATABASE
//*------------------------------------------------------------*
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2C,REPAIR',REGION=6M,COND=(2,LT)
//UTPRINT  DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSREC   DD UNIT=WORKDA,SPACE=(CYL,(5,3),RLSE)
//SYSUT1   DD UNIT=WORKDA,SPACE=(CYL,(5,3),RLSE)
//SYSERR   DD UNIT=WORKDA,SPACE=(CYL,(5,3),RLSE)
//SORTOUT  DD UNIT=WORKDA,SPACE=(CYL,(5,3),RLSE)
//SYSIN    DD  *
 REPAIR OBJECT
 LOCATE
 TABLESPACE DSNDB01.SYSLGRNX PAGE X'00010660'
 REPLACE RESET
/*
//*------------------------------------------------------------*
//*   START DATABASE ACCESS(RW)
//*------------------------------------------------------------*
//STARTUT  EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//SYSTSPRT DD  SYSOUT=*
//SYSPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//SYSTSIN  DD  *
  DSN SYSTEM(DB2C)
  -START DATABASE(DSNDB01) SP(SYSLGRNX) ACCESS(RW)
/*
//

./ ADD NAME=REPAIRLV
//SYSILEA  JOB 1000,'COMPIL     ',MSGLEVEL=(1,1),COND=(0,LT),           00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=&SYSUID TYPRUN=SCAN                00002000
//*------------------------------------------------------------*        00003000
//* SET NOCOPYPEND NORCVRPEND                                           00004000
//*------------------------------------------------------------*        00005000
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2V,REPAIR',REGION=6M,COND=(2,LT)    00006000
//UTPRINT  DD SYSOUT=*                                                  00007000
//SYSPRINT DD SYSOUT=*                                                  00008000
//SYSUDUMP DD SYSOUT=*                                                  00009000
//SYSREC   DD UNIT=SYSDA,SPACE=(CYL,(5,3),RLSE)                         00010000
//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(5,3),RLSE)                         00020000
//SORTOUT  DD UNIT=SYSDA,SPACE=(CYL,(5,3),RLSE)                         00030000
//SYSIN    DD  *                                                        00040000
 REPAIR LEVELID TABLESPACE RODP001.ROS0009
//

./ ADD NAME=REPORT
//SYSILEA  JOB 1000,'COMPIL     ',MSGLEVEL=(1,1),                       00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=&SYSUID                            00002000
//*------------------------------------------------------------*        00003000
//* SET NOCOPYPEND NORCVRPEND                                           00004000
//*------------------------------------------------------------*        00005000
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2S,REPORT',REGION=6M,COND=(2,LT)    00006001
//UTPRINT  DD SYSOUT=*                                                  00007000
//SYSPRINT DD SYSOUT=*                                                  00008000
//SYSUDUMP DD SYSOUT=*                                                  00009000
//SYSREC   DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00010000
//SYSUT1   DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00020000
//SORTOUT  DD UNIT=3390,SPACE=(CYL,(50,3),RLSE)                         00030000
//SYSIN    DD  *                                                        00040000
 REPORT RECOVERY TABLESPACE DBSYST01.TSSYST01 CURRENT                   00041002
//                                                                      00042002
 QUIESCE TABLESPACE DBSYST01.TSSYST01                                   00043002
//                                                                      00051001
 REPORT RECOVERY TABLESPACE DMRPRDB1.DMRPRTAD CURRENT SUMMARY           00060001

./ ADD NAME=REPRO
//SYSILEA  JOB 1000,'SYST-LE PEN',                                      10003
//             CLASS=O,MSGCLASS=T,NOTIFY=SYSILE                         00020004
//ALTER   EXEC PGM=IDCAMS,
//             REGION=512K,
//             COND=(0,LT)
//SYSPRINT DD  SYSOUT=*
//ENTREE   DD  DSN=DB2V.LOGCOPY2.DS01.SAVE,DISP=SHR
//SORTIE   DD  DSN=DB2V.LOGCOPY2.DS01,DISP=SHR
//SYSIN    DD  *
  REPRO INFILE(ENTREE) OUTFILE(SORTIE)
//

./ ADD NAME=REPTBPP
//SYSILEA   JOB (T002550),'IEBCOPY',
//             NOTIFY=&SYSUID,
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)
//PEV410  EXEC PGM=DB2PM
//STEPLIB  DD  DSN=OMEGAMON.DB2V410.RECT.RKANMODU,DISP=SHR
//         DD  DSN=OMEGAMON.DB2V410.RECT.RKANMOD,DISP=SHR
//INPUTDD  DD  DSN=SAVED.SMF.DB2(0),DISP=SHR
//SORTWK01 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK02 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK03 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK04 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK05 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK06 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK07 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK08 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK09 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK10 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//DDNAME1  DD  DSN=&&TEMP1,DISP=(,PASS),
//             SPACE=(TRK,(20,10),RLSE),UNIT=WORKDA,
//             DCB=DSCB
//DPMLOG   DD  SYSOUT=*
//DPMPARMS DD  DSN=OMEGAMON.DB2V410.REPORT,DISP=SHR
//SYSOUT   DD  SYSOUT=*
//SYSIN    DD  *
STATISTICS
            REPORT
                     DDNAME(DDNAME1)
            TRACE
                     DDNAME(DDNAME1)
EXEC
//*-----------------------------------------------------------
//* STATS BUFFER POOL
//*-----------------------------------------------------------
//STATBP   EXEC PGM=IKJEFT01,PARM='%RSTATBPM'
//SYSPROC  DD  DISP=SHR,DSN=SYST.DB2.JCLLIB
//SYSTSPRT DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//LISTSTAT DD  DISP=(OLD,PASS),DSN=&&TEMP1
//RPTBP    DD  DISP=(,CATLG),VOL=SER=SYS924,
//             DSN=DB2P.SBUFFER.STAT(+1),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//SYSIN    DD  DUMMY
//SYSTSIN  DD  DUMMY

./ ADD NAME=REPTDB15
//REPTDB2P  JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=O,NOTIFY=SYSLHU,COND=(4,LT)
//*-------------------------------------------------------------------
//*   STATS ACCOUNTING
//*   STATS SYSTEME
//*-------------------------------------------------------------------
//*-------------------------------------------------------------------
//*  REPORT ACCOUNTING  AND SYSTEM
//*-------------------------------------------------------------------
//STATDB2P EXEC PGM=NSIGHTRW,REGION=48M
//*
//*TEPLIB  DD  DISP=SHR,                CA-INSIGHT LOAD LIBRARY
//*            DSN=CAI.R120.LOADLIB
//*
//SYSPARMS DD  DISP=SHR,                BATCH REPORT WRITER SYSPARMS
//             DSN=CAI.IDB2.DB2P.PARMLIB(IDB2PRMS)
//*
//DB2DDN   DD  DISP=SHR,                GTF OR SMF SAMPLE DATA INPUT
//             DSN=SAVED.SMF.DB2.JOUR(0)
//*
//*OBIDTBL  DD  DISP=SHR,                OBID TRANSLATIONS
//*             DSN=CAI.R120.DB2S.OBID
//*
//*     THESE TGTREQ CREATE DB2 ACCOUNTING SUMMARIES,
//*     ACCOUNTING TRACES, AND STATISTICS SUMMARIES
//*
//DBGIN    DD  DSN=CAIP.R150.CDBATREQ(BTACTSM1),DISP=SHR
//* REMPLACEMENT BTACTSMB PAR BTACTSMD ET BTACTSMG PAR BTACTSMH
//* POUR NE PLUS AVOIR DE REGROUPEMENT SUR LES BATCHS (LHU 21/05/2012)
//*        DD  DSN=CAIP.R150.CDBATREQ(BTACTSMB),DISP=SHR
//*        DD  DSN=CAIP.R150.CDBATREQ(BTACTSMG),DISP=SHR
//         DD  DSN=CAIP.R150.CDBATREQ(BTACTSMD),DISP=SHR
//         DD  DSN=CAIP.R150.CDBATREQ(BTACTSMH),DISP=SHR
//         DD  DSN=CAIP.R150.CDBATREQ(BTACTSMC),DISP=SHR
//         DD  DSN=CAIP.R150.CDBATREQ(BTACTSGC),DISP=SHR
//         DD  DSN=CAIP.R150.CDBATREQ(BTSTASM1),DISP=SHR
//         DD  DSN=CAIP.R150.CDBATREQ(BTSTASM2),DISP=SHR
//         DD  DSN=CAIP.R150.CDBATREQ(BTSTATR1),DISP=SHR
//         DD  DSN=CAIP.R150.CDBATREQ(BTSTATR2),DISP=SHR
//*
//*     PRINT FILE ALLOCATIONS THAT CORRESPOND TO THE
//*     REPORT TGTREQ IN INPUT TO THE DBGIN DD STMT
//*
//*TACTPRO DD  DSN=METH.STATS.PROTIDE,DISP=MOD
//*BTACTPAG DD  DSN=DB2P.STATS.PAGODE,DISP=MOD
//BTACTSMS DD  DSN=DB2P.BATCH.STAT(+1),DISP=(,CATLG),VOL=SER=SYS924,
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//BTACTSMB DD  DSN=DB2P.BATCH.STAT.CPU(+1),DISP=(,CATLG),
//             VOL=SER=SYS924,
//             SPACE=(CYL,(20,20),RLSE),UNIT=3390,
//             DCB=DSCB
//BTACTSMG DD  DSN=DB2P.BATCH.STAT.GETP(+1),DISP=(,CATLG),
//             VOL=SER=SYS924,
//             SPACE=(CYL,(20,20),RLSE),UNIT=3390,
//             DCB=DSCB
//BTACTSMC DD  DSN=DB2P.TRAN.STAT.CPU(+1),DISP=(,CATLG),
//             VOL=SER=SYS924,
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//BTACTSGC DD  DSN=DB2P.TRAN.STAT.GETP(+1),DISP=(,CATLG),
//             VOL=SER=SYS924,
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//BTSTASM1 DD  DSN=&&TEMP1,DISP=(,PASS),VOL=SER=SYS919,
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//BTSTASM2 DD  DSN=&&TEMP2,DISP=(,PASS),VOL=SER=SYS919,
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//BTSTATR2 DD  DSN=&&TEMP4,DISP=(,PASS),VOL=SER=SYS919,
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//BTSTATR1 DD  DSN=DB2P.SYSTEME.STAT(+1),DISP=(,CATLG),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,VOL=SER=SYS924,
//             DCB=DSCB
//*
//DBGPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*-----------------------------------------------------------
//*   CREATION DES STATS SUM
//*        ICEGENER
//*-----------------------------------------------------------
//S1       EXEC PGM=ICEGENER
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=(OLD,DELETE),DSN=&&TEMP1
//         DD  DISP=(OLD,DELETE),DSN=&&TEMP2
//SYSUT2   DD  DISP=(,CATLG),VOL=SER=SYS924,
//             DSN=DB2P.SYSTEME.STATSUM(+1),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//*-----------------------------------------------------------
//*   RECOPIE DU GDG JOUR DANS LE GDG ARCHIVE
//*-----------------------------------------------------------
//INITGDG  EXEC PGM=IFASMFDP
//SYSPRINT DD SYSOUT=X
//INDD1    DD DISP=SHR,DSN=SAVED.SMF.DB2.JOUR(0)
//OUDD1    DD  DSN=SAVED.SMF.DB2(+1),
//         DISP=(,CATLG,DELETE),
//         UNIT=CTAPE,VOL=(,,,10),
//         DCB=(ODMP.MODEL,RECFM=VBS,LRECL=4096,BLKSIZE=28672)
//SYSIN    DD  *
 INDD(INDD1,OPTIONS(DUMP))
 OUTDD(OUDD1,TYPE(0:255))
/*
//*-------------------------------------------------------
//* OBJET : SUPPRESSION DU GDG JOUR
//*-------------------------------------------------------
//STEP0020 EXEC PGM=IEFBR14,COND=(4,LT)
//DD2      DD DSN=SAVED.SMF.DB2.JOUR(0),DISP=(OLD,DELETE)
//*-----------------------------------------------------------
//*   CREATION DU NOUVEAU GDG
//*-----------------------------------------------------------
//INITGDG  EXEC PGM=IFASMFDP
//SYSPRINT DD SYSOUT=X
//INDD1    DD DISP=SHR,DSN=PSMF.INIT.DB2
//OUDD1    DD  DSN=SAVED.SMF.DB2.JOUR(+1),
//         DISP=(,CATLG,DELETE),UNIT=3390,VOL=SER=SYST02,
//         SPACE=(TRK,(1,1),RLSE),
//         DCB=(ODMP.MODEL,RECFM=VBS,LRECL=4096,BLKSIZE=28672)
//SYSIN    DD  *
 INDD(INDD1,OPTIONS(DUMP))
 OUTDD(OUDD1,TYPE(100))
/*
//*-----------------------------------------------------------
//* STATS BUFFER POOL
//*-----------------------------------------------------------
//STATBP   EXEC PGM=IKJEFT01,PARM='%RSTATBP1'
//SYSPROC  DD  DISP=SHR,DSN=SYST.DB2.JCLLIB
//SYSTSPRT DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//LISTSTAT DD  DISP=(OLD,DELETE),DSN=&&TEMP4
//RPTBP    DD  DISP=(,CATLG),VOL=SER=SYS924,
//             DSN=DB2P.SBUFFER.STAT(+1),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//SYSIN    DD  DUMMY
//SYSTSIN  DD  DUMMY

./ ADD NAME=REPTDB2$
//REPTDB2P  JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=O,NOTIFY=SYSLHU,COND=(4,LT)
//*-------------------------------------------------------------------
//*   STATS ACCOUNTING
//*   STATS SYSTEME
//*-------------------------------------------------------------------
//*-------------------------------------------------------------------
//*  REPORT ACCOUNTING  AND SYSTEM
//*-------------------------------------------------------------------
//STATDB2P EXEC PGM=NSIGHTRW,REGION=48M
//*
//SYSPARMS DD  DISP=SHR,                BATCH REPORT WRITER SYSPARMS
//             DSN=SYS5.CADB2.DB2P.IDB2.PARMLIB(IDRWPRMS)
//*
//DB2DDN   DD  DISP=SHR,                GTF OR SMF SAMPLE DATA INPUT
//             DSN=SYS5.BRN2.SMF.DB2.JOUR(0)
//*
//DBGIN    DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTACTSM1),DISP=SHR
//         DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTACTSMD),DISP=SHR
//         DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTACTSMH),DISP=SHR
//         DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTACTSMC),DISP=SHR
//         DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTACTSGC),DISP=SHR
//         DD  DSN=SYS4.CADB2.CDBATREQ(BTSTASM1),DISP=SHR
//         DD  DSN=SYS4.CADB2.CDBATREQ(BTSTASM2),DISP=SHR
//         DD  DSN=SYS4.CADB2.CDBATREQ(BTSTATR1),DISP=SHR
//         DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTSTATR2),DISP=SHR
//*
//*     PRINT FILE ALLOCATIONS THAT CORRESPOND TO THE
//*     REPORT TGTREQ IN INPUT TO THE DBGIN DD STMT
//*
//BTACTSMS DD  DSN=DB2P.BATCH.STAT(+1),DISP=(,CATLG),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB,DSORG=PS
//BTACTSMB DD  DSN=DB2P.BATCH.STAT.CPU(+1),DISP=(,CATLG),
//             SPACE=(CYL,(20,20),RLSE),UNIT=3390,
//             DCB=DSCB,DSORG=PS
//BTACTSMG DD  DSN=DB2P.BATCH.STAT.GETP(+1),DISP=(,CATLG),
//             SPACE=(CYL,(20,20),RLSE),UNIT=3390,
//             DCB=DSCB,DSORG=PS
//BTACTSMC DD  DSN=DB2P.TRAN.STAT.CPU(+1),DISP=(,CATLG),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB,DSORG=PS
//BTACTSGC DD  DSN=DB2P.TRAN.STAT.GETP(+1),DISP=(,CATLG),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB,DSORG=PS
//BTSTASM1 DD  DSN=&&TEMP1,DISP=(,PASS),
//             SPACE=(TRK,(20,10),RLSE),UNIT=WORKDA,
//             DCB=DSCB,DSORG=PS
//BTSTASM2 DD  DSN=&&TEMP2,DISP=(,PASS),
//             SPACE=(TRK,(20,10),RLSE),UNIT=WORKDA,
//             DCB=DSCB,DSORG=PS
//BTSTATR2 DD  DSN=&&TEMP4,DISP=(,PASS),
//             SPACE=(TRK,(20,10),RLSE),UNIT=WORKDA,
//             DCB=DSCB,DSORG=PS
//BTSTATR1 DD  DSN=DB2P.SYSTEME.STAT(+1),DISP=(,CATLG),
//             SPACE=(CYL,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB,DSORG=PS
//*
//DBGPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*-----------------------------------------------------------
//*   CREATION DES STATS SUM
//*        ICEGENER
//*-----------------------------------------------------------
//S1       EXEC PGM=ICEGENER
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=(OLD,DELETE),DSN=&&TEMP1
//         DD  DISP=(OLD,DELETE),DSN=&&TEMP2
//SYSUT2   DD  DISP=(,CATLG),
//             DSN=DB2P.SYSTEME.STATSUM(+1),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB,DSORG=PS
//*-----------------------------------------------------------
//* STATS BUFFER POOL
//*-----------------------------------------------------------
//STATBP   EXEC PGM=IKJEFT01,PARM='%RSTATBP1'
//SYSPROC  DD  DISP=SHR,DSN=SYST.DB2.JCLLIB
//SYSTSPRT DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//LISTSTAT DD  DISP=(OLD,DELETE),DSN=&&TEMP4
//RPTBP    DD  DISP=(,CATLG),
//             DSN=DB2P.SBUFFER.STAT(+1),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB,DSORG=PS
//SYSIN    DD  DUMMY
//SYSTSIN  DD  DUMMY
//

./ ADD NAME=REPTDB2L
//DB2STATQ  JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=O,NOTIFY=SYSILE
//*-------------------------------------------------------------------
//*  REPORT ACCOUNTING  AND SYSTEM
//*-------------------------------------------------------------------
//STATDB2L EXEC PGM=NSIGHTRW,REGION=4096K
//SYSPARMS DD  DISP=SHR,                BATCH REPORT WRITER SYSPARMS
//             DSN=CAIQ.IDB2.DB2L.PARMLIB(IDB2PRMS)
//*
//DB2DDN   DD  DISP=SHR,                GTF OR SMF SAMPLE DATA INPUT
//             DSN=SAVED.SMF.DB2.BRNQ.JOUR(0)
//DBGIN    DD  DSN=CAIQ.R150.CDBATREQ(BTACTSM1),DISP=SHR
//         DD  DSN=CAIQ.R150.CDBATREQ(BTACTSMB),DISP=SHR
//         DD  DSN=CAIQ.R150.CDBATREQ(BTACTSMG),DISP=SHR
//         DD  DSN=CAIQ.R150.CDBATREQ(BTSTASM1),DISP=SHR
//         DD  DSN=CAIQ.R150.CDBATREQ(BTSTASM2),DISP=SHR
//         DD  DSN=CAIQ.R150.CDBATREQ(BTSTATR2),DISP=SHR
//**       DD  DSN=CAIQ.R150.CDBATREQ(BTACTFK),DISP=SHR
//**       DD  DSN=CAIQ.R150.CDBATREQ(BTACTPRO),DISP=SHR
//*
//*     PRINT FILE ALLOCATIONS THAT CORRESPOND TO THE
//*     REPORT TGTREQ IN INPUT TO THE DBGIN DD STMT
//*
//BTACTSMS DD  DSN=DB2L.BATCH.STAT(+1),DISP=(,CATLG),VOL=SER=SYS919,
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//BTACTSMB DD  DSN=DB2L.BATCH.STAT.CPU(+1),DISP=(,CATLG),
//             VOL=SER=SYS924,
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//BTACTSMG DD  DSN=DB2L.BATCH.STAT.GETP(+1),DISP=(,CATLG),
//             VOL=SER=SYS924,
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//** BTACTPRO DD  DSN=METH.STATS.PROTIDE,DISP=MOD
//** BTACTFK  DD  DSN=DB2L.BATCH.STAT.FK,DISP=MOD
//BTSTASM1 DD  DSN=&&TEMP1,DISP=(,PASS),VOL=SER=SYS919,
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//BTSTASM2 DD  DSN=&&TEMP2,DISP=(,PASS),VOL=SER=SYS919,
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//BTSTATR2 DD  DSN=&&TEMP5,DISP=(,PASS),VOL=SER=SYS919,
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//DBGPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*-----------------------------------------------------------
//*   SORTIE D'UNE SYSOUT
//*        ICEGENER
//*-----------------------------------------------------------
//S1       EXEC PGM=ICEGENER
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=(OLD,DELETE),DSN=&&TEMP1
//         DD  DISP=(OLD,DELETE),DSN=&&TEMP2
//SYSUT2   DD  DISP=(,CATLG),VOL=SER=SYS919,
//             DSN=DB2L.SYSTEME.STATSUM(+1),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//*-----------------------------------------------------------
//*   SORTIE D'UNE SYSOUT
//*        ICEGENER
//*-----------------------------------------------------------
//*   RECOPIE DU GDG JOUR DANS LE GDG ARCHIVE
//*-----------------------------------------------------------
//INITGDG  EXEC PGM=IFASMFDP
//SYSPRINT DD SYSOUT=X
//INDD1    DD DISP=SHR,DSN=SAVED.SMF.DB2.BRNQ.JOUR(0)
//OUDD1    DD  DSN=SAVED.SMF.DB2.BRNQ(+1),
//         DISP=(,CATLG,DELETE),UNIT=CTAPE,
//         DCB=(ODMP.MODEL,RECFM=VBS,LRECL=4096,BLKSIZE=28672)
//SYSIN    DD  *
 INDD(INDD1,OPTIONS(DUMP))
 OUTDD(OUDD1,TYPE(0:255))
/*
//*-------------------------------------------------------
//* OBJET : SUPPRESSION DU GDG JOUR
//*-------------------------------------------------------
//STEP0020 EXEC PGM=IEFBR14,COND=(4,LT)
//DD2      DD DSN=SAVED.SMF.DB2.BRNQ.JOUR(0),DISP=(OLD,DELETE)
//*-----------------------------------------------------------
//*   CREATION DU NOUVEAU GDG
//*-----------------------------------------------------------
//INITGDG  EXEC PGM=IFASMFDP
//SYSPRINT DD SYSOUT=X
//INDD1    DD DISP=SHR,DSN=LSMF.INIT.DB2
//OUDD1    DD  DSN=SAVED.SMF.DB2.BRNQ.JOUR(+1),
//         DISP=(,CATLG,DELETE),UNIT=3390,VOL=SER=SYS901,
//         SPACE=(TRK,(1,1),RLSE),
//         DCB=(ODMP.MODEL,RECFM=VBS,LRECL=4096,BLKSIZE=28672)
//SYSIN    DD  *
 INDD(INDD1,OPTIONS(DUMP))
 OUTDD(OUDD1,TYPE(100))
/*
//*-----------------------------------------------------------
//* STATS BUFFER POOL
//*-----------------------------------------------------------
//STATBP   EXEC PGM=IKJEFT01,PARM='%RSTATBP1'
//SYSPROC  DD  DISP=SHR,DSN=SYST.DB2.JCLLIB
//SYSTSPRT DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//LISTSTAT DD  DISP=(OLD,DELETE),DSN=&&TEMP5
//RPTBP    DD  DISP=(,CATLG),VOL=SER=SYS924,
//             DSN=DB2L.SBUFFER.STAT(+1),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//SYSIN    DD  DUMMY
//SYSTSIN  DD  DUMMY

./ ADD NAME=REPTDB2P
//REPTDB2P  JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=O,NOTIFY=&SYSUID,COND=(4,LT)
//*-------------------------------------------------------------------
//*   STATS ACCOUNTING
//*   STATS SYSTEME
//*-------------------------------------------------------------------
//*-------------------------------------------------------------------
//*  REPORT ACCOUNTING  AND SYSTEM
//*-------------------------------------------------------------------
//STATDB2P EXEC PGM=NSIGHTRW,REGION=48M
//*
//SYSPARMS DD  DISP=SHR,                BATCH REPORT WRITER SYSPARMS
//             DSN=SYS4.CADB2.IDB2.SOURCE(IDRWPRMS)
//*
//DB2DDN   DD  DISP=SHR,                GTF OR SMF SAMPLE DATA INPUT
//             DSN=SYS5.BRN2.SMF.DB2.JOUR(0)
//*
//DBGIN    DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTACTSM1),DISP=SHR
//         DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTACTSMD),DISP=SHR
//         DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTACTSMH),DISP=SHR
//         DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTACTSMC),DISP=SHR
//         DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTACTSGC),DISP=SHR
//         DD  DSN=SYS4.CADB2.CDBATREQ(BTSTASM1),DISP=SHR
//         DD  DSN=SYS4.CADB2.CDBATREQ(BTSTASM2),DISP=SHR
//         DD  DSN=SYS4.CADB2.CDBATREQ(BTSTATR1),DISP=SHR
//         DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTSTATR2),DISP=SHR
//*
//*     PRINT FILE ALLOCATIONS THAT CORRESPOND TO THE
//*     REPORT TGTREQ IN INPUT TO THE DBGIN DD STMT
//*
//BTACTSMS DD  DSN=DB2P.BATCH.STAT(+1),DISP=(,CATLG),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB,DSORG=PS
//BTACTSMB DD  DSN=DB2P.BATCH.STAT.CPU(+1),DISP=(,CATLG),
//             SPACE=(CYL,(20,20),RLSE),UNIT=3390,
//             DCB=DSCB,DSORG=PS
//BTACTSMG DD  DSN=DB2P.BATCH.STAT.GETP(+1),DISP=(,CATLG),
//             SPACE=(CYL,(20,20),RLSE),UNIT=3390,
//             DCB=DSCB,DSORG=PS
//BTACTSMC DD  DSN=DB2P.TRAN.STAT.CPU(+1),DISP=(,CATLG),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB,DSORG=PS
//BTACTSGC DD  DSN=DB2P.TRAN.STAT.GETP(+1),DISP=(,CATLG),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB,DSORG=PS
//BTSTASM1 DD  DSN=&&TEMP1,DISP=(,PASS),
//             SPACE=(TRK,(20,10),RLSE),UNIT=WORKDA,
//             DCB=DSCB,DSORG=PS
//BTSTASM2 DD  DSN=&&TEMP2,DISP=(,PASS),
//             SPACE=(TRK,(20,10),RLSE),UNIT=WORKDA,
//             DCB=DSCB,DSORG=PS
//BTSTATR2 DD  DSN=&&TEMP4,DISP=(,PASS),
//             SPACE=(TRK,(20,10),RLSE),UNIT=WORKDA,
//             DCB=DSCB,DSORG=PS
//BTSTATR1 DD  DSN=DB2P.SYSTEME.STAT(+1),DISP=(,CATLG),
//             SPACE=(CYL,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB,DSORG=PS
//*
//DBGPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*
//*-----------------------------------------------------------
//*   CREATION DES STATS SUM
//*        ICEGENER
//*-----------------------------------------------------------
//S1       EXEC PGM=ICEGENER
//SYSPRINT DD  SYSOUT=*
//SYSUT1   DD  DISP=(OLD,DELETE),DSN=&&TEMP1
//         DD  DISP=(OLD,DELETE),DSN=&&TEMP2
//SYSUT2   DD  DISP=(,CATLG),
//             DSN=DB2P.SYSTEME.STATSUM(+1),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB,DSORG=PS
//*-----------------------------------------------------------
//* STATS BUFFER POOL
//*-----------------------------------------------------------
//STATBP   EXEC PGM=IKJEFT01,PARM='%RSTATBP1'
//SYSPROC  DD  DISP=SHR,DSN=SYST.DB2.JCLLIB
//SYSTSPRT DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//LISTSTAT DD  DISP=(OLD,DELETE),DSN=&&TEMP4
//RPTBP    DD  DISP=(,CATLG),
//             DSN=DB2P.SBUFFER.STAT(+1),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB,DSORG=PS
//SYSIN    DD  DUMMY
//SYSTSIN  DD  DUMMY
//

./ ADD NAME=REPTDB2S
//REPTDB2S  JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),                00020000
//         CLASS=O,NOTIFY=&SYSUID,COND=(4,LT)                           00030000
//*SYST.DB2.JCLLIB(REPTDB2P)                                            00031000
//*-------------------------------------------------------------------  00040000
//*STATS ACCOUNTING                                                     00050001
//*STATS SYSTEME                                                        00060001
//*-------------------------------------------------------------------  00070000
//*-------------------------------------------------------------------  00080000
//*  REPORT ACCOUNTING  AND SYSTEM                                      00090000
//*-------------------------------------------------------------------  00100000
//STATDB2P EXEC PGM=NSIGHTRW,REGION=48M                                 00110000
//*                                                                     00120000
//SYSPARMS DD  DISP=SHR,                BATCH REPORT WRITER SYSPARMS    00130000
//             DSN=SYS4.CADB2.IDB2.SOURCE(IDRWPRMS)                     00140000
//*                                                                     00150000
//DB2DDN   DD  DISP=SHR,                GTF OR SMF SAMPLE DATA INPUT    00160000
//             DSN=SSYS.DUMPSMF(0)                                      00170001
//*            DSN=SYS5.BRN2.SMF.DB2.JOUR(0)                            00171001
//*                                                                     00180000
//DBGIN    DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTACTSM1),DISP=SHR          00190000
//         DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTACTSMD),DISP=SHR          00200000
//         DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTACTSMH),DISP=SHR          00210000
//         DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTACTSMC),DISP=SHR          00220000
//         DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTACTSGC),DISP=SHR          00230000
//         DD  DSN=SYS4.CADB2.CDBATREQ(BTSTASM1),DISP=SHR               00240000
//         DD  DSN=SYS4.CADB2.CDBATREQ(BTSTASM2),DISP=SHR               00250000
//         DD  DSN=SYS4.CADB2.CDBATREQ(BTSTATR1),DISP=SHR               00260000
//*RLR     DD  DSN=SYS4.CADB2.IDB2.REQUESTS(BTSTATR2),DISP=SHR          00270002
//*                                                                     00280000
//*     PRINT FILE ALLOCATIONS THAT CORRESPOND TO THE                   00290000
//*     REPORT TGTREQ IN INPUT TO THE DBGIN DD STMT                     00300000
//*                                                                     00310000
//BTACTSMS DD  DSN=DB2S.SYS019.BATCH.STAT,DISP=(,CATLG),                00320001
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,                      00330000
//             DCB=DSCB,DSORG=PS                                        00340000
//BTACTSMB DD  DSN=DB2S.SYS019.BATCH.STAT.CPU,DISP=(,CATLG),            00350001
//             SPACE=(CYL,(20,20),RLSE),UNIT=3390,                      00360000
//             DCB=DSCB,DSORG=PS                                        00370000
//BTACTSMG DD  DSN=DB2S.SYS019.BATCH.STAT.GETP,DISP=(,CATLG),           00380001
//             SPACE=(CYL,(20,20),RLSE),UNIT=3390,                      00390000
//             DCB=DSCB,DSORG=PS                                        00400000
//BTACTSMC DD  DSN=DB2S.SYS019.TRAN.STAT.CPU,DISP=(,CATLG),             00410001
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,                      00420000
//             DCB=DSCB,DSORG=PS                                        00430000
//BTACTSGC DD  DSN=DB2S.SYS019.TRAN.STAT.GETP,DISP=(,CATLG),            00440001
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,                      00450000
//             DCB=DSCB,DSORG=PS                                        00460000
//BTSTASM1 DD  DSN=&&TEMP1,DISP=(,PASS),                                00470000
//             SPACE=(TRK,(20,10),RLSE),UNIT=WORKDA,                    00480000
//             DCB=DSCB,DSORG=PS                                        00490000
//BTSTASM2 DD  DSN=&&TEMP2,DISP=(,PASS),                                00500000
//             SPACE=(TRK,(20,10),RLSE),UNIT=WORKDA,                    00510000
//             DCB=DSCB,DSORG=PS                                        00520000
//BTSTATR2 DD  DSN=&&TEMP4,DISP=(,PASS),                                00530000
//             SPACE=(TRK,(20,10),RLSE),UNIT=WORKDA,                    00540000
//             DCB=DSCB,DSORG=PS                                        00550000
//BTSTATR1 DD  DSN=DB2S.SYS019.SYSTEME.STAT,DISP=(,CATLG),              00560001
//             SPACE=(CYL,(20,10),RLSE),UNIT=3390,                      00570000
//             DCB=DSCB,DSORG=PS                                        00580000
//*                                                                     00590000
//DBGPRINT DD  SYSOUT=*                                                 00600000
//SYSUDUMP DD  SYSOUT=*                                                 00610000
//*-----------------------------------------------------------          00620000
//*   CREATION DES STATS SUM                                            00630000
//*        ICEGENER                                                     00640000
//*-----------------------------------------------------------          00650000
//S1       EXEC PGM=ICEGENER                                            00660000
//SYSPRINT DD  SYSOUT=*                                                 00670000
//SYSUT1   DD  DISP=(OLD,DELETE),DSN=&&TEMP1                            00680000
//         DD  DISP=(OLD,DELETE),DSN=&&TEMP2                            00690000
//SYSUT2   DD  DISP=(,CATLG),                                           00700000
//             DSN=DB2S.SYS019.SYSTEME.STATSUM,                         00710001
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,                      00720000
//             DCB=DSCB,DSORG=PS                                        00730000
//*-----------------------------------------------------------          00740000
//* STATS BUFFER POOL                                                   00750000
//*-----------------------------------------------------------          00760000
//STATBP   EXEC PGM=IKJEFT01,PARM='%RSTATBP1'                           00770000
//SYSPROC  DD  DISP=SHR,DSN=SYST.DB2.JCLLIB                             00780000
//SYSTSPRT DD  SYSOUT=*                                                 00790000
//SYSOUT   DD  SYSOUT=*                                                 00800000
//LISTSTAT DD  DISP=(OLD,DELETE),DSN=&&TEMP4                            00810000
//RPTBP    DD  DISP=(,CATLG),                                           00820000
//             DSN=DB2S.SYS019.SBUFFER.STAT,                            00830001
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,                      00840000
//             DCB=DSCB,DSORG=PS                                        00850000
//SYSIN    DD  DUMMY                                                    00860000
//SYSTSIN  DD  DUMMY                                                    00870000
//                                                                      00880000

./ ADD NAME=RESTORE
//SYSILEA  JOB  1,EXPRESS,MSGLEVEL=(1,1),CLASS=O,                       00010000
//         MSGCLASS=T,NOTIFY=SYSILE                                     00020000
//*    INIT DISK                                                        00030000
//S2       EXEC PGM=ADRDSSU,REGION=4M                                   00040000
//*STEPLIB  DD DSN=SYST.LOADLIB,DISP=SHR                                00050000
//*------------------------------------------------------------         00060000
//*        RESTORE AVEC DF/DSS UTILITY                                  00070000
//*------------------------------------------------------------         00080000
//SYSPRINT DD SYSOUT=*                                                  00090000
//OUT      DD UNIT=3390,VOL=SER=MVS105,DISP=SHR                         00100008
//IN       DD DISP=OLD,DSN=SYSILE.SAUVE.DB2T.V2R3                       00110008
//SYSIN    DD *                                                         00120000
 RESTORE OUTDDNAME(OUT) INDDNAME(IN) -                                  00130005
 DATASET(INCL(DB2T220.BSDS*.**)) -                                      00140008
 REPLACE                             -                                  00150005
 CATALOG                             -                                  00151005
 TOL(ENQF)                                                              00152005
/*                                                                      00153000
//                                                                      00154000
 RESTORE OUTDDNAME(OUT) INDDNAME(IN) -                                  00155005
 DATASET(INCL(DSN220IA.DSNDBC.DSNDB01.SCT02.**,  -                      00156005
              DSN220IA.DSNDBC.DSNDB01.DSNSCT02.**,  -                   00157005
              DSN220IA.DSNDBC.DSNDB06.DSNATX01.**,  -                   00158005
              DSN220IA.DSNDBC.DSNDB06.DSNATX02.**)) -                   00159005
 REPLACE                             -                                  00160005
 CATALOG                             -                                  00170005
 TOL(ENQF)                                                              00180005
//*                                                                     00290000
 RESTORE OUTDDNAME(OUT) INDDNAME(IN) -                                  00300000
 DATASET(INCL(DSN220IA.DSNDBC.DSNDB06.DSNATX01.**,  -                   00310000
              DSN220IA.DSNDBC.DSNDB06.DSNATX02.**)) -                   00320001
 REPLACE                             -                                  00330000
 CATALOG                             -                                  00340000
 TOL(ENQF)                                                              00350000

./ ADD NAME=REXXFOR
/*REXX*/                                                                00010000
EOF = 'NO'                                                              00120141
"EXECIO 1 DISKR FICIN"                                                  00121021
IF RC = 4 THEN SIGNAL PROBLEM                                           00122021
DO WHILE EOF = 'NO'                                                     00123021
  PULL FICIN_RECORD                                                     00124021
  IS_LINE_DATA = SUBSTR(FICIN_RECORD,21,5)                              00170021
  IF IS_LINE_DATA = "BATCH"                                             00180010
  THEN                                                                  00190000
     DO                                                                 00200000
       JOBNAME = SUBSTR(FICIN_RECORD,39,8)                              00220026
       IF SUBSTR(JOBNAME,1,1) ^= '£' THEN ITERATE                       00220230
       BACKOUT = SUBSTR(FICIN_RECORD,59,1)                              00220331
       IF BACKOUT ^= 0 THEN ITERATE                                     00220430
       IF SUBSTR(FICIN_RECORD,77,1) = ' '                               00220638
       THEN FICIN_RECORD=OVERLAY('0',FICIN_RECORD,77)                   00220739
       IF SUBSTR(FICIN_RECORD,86,1) = ' '                               00220840
       THEN FICIN_RECORD=OVERLAY('0',FICIN_RECORD,86)                   00220940
       IF SUBSTR(FICIN_RECORD,95,1) = ' '                               00221040
       THEN FICIN_RECORD=OVERLAY('0',FICIN_RECORD,95)                   00221140
       IF SUBSTR(FICIN_RECORD,104,1) = ' '                              00221240
       THEN FICIN_RECORD=OVERLAY('0',FICIN_RECORD,104)                  00221340
       IF SUBSTR(FICIN_RECORD,113,1) = ' '                              00221440
       THEN FICIN_RECORD=OVERLAY('0',FICIN_RECORD,113)                  00221540
       IF SUBSTR(FICIN_RECORD,122,1) = ' '                              00221640
       THEN FICIN_RECORD=OVERLAY('0',FICIN_RECORD,122)                  00221740
       IF SUBSTR(FICIN_RECORD,131,1) = ' '                              00221840
       THEN FICIN_RECORD=OVERLAY('0',FICIN_RECORD,131)                  00221940
       IF SUBSTR(FICIN_RECORD,140,1) = ' '                              00222040
       THEN FICIN_RECORD=OVERLAY('0',FICIN_RECORD,140)                  00222140
       JOBNAME = DELSTR(JOBNAME,1,1)                                    00222240
       JOBNAME = INSERT(' ',JOBNAME,LENGTH(JOBNAME))                    00222340
       T1_ELAPS = SUBSTR(FICIN_RECORD,142,13)                           00222440
       T1_ELAPS = TRANSLATE(T1_ELAPS,'0',' ')                           00222540
       T1_ELAPS = DELSTR(T1_ELAPS,3,1)                                  00222640
       T1_ELAPS = DELSTR(T1_ELAPS,5,1)                                  00222740
       T1_ELAPS = INSERT(':',T1_ELAPS,2)                                00222840
       T1_ELAPS = INSERT(':',T1_ELAPS,5)                                00222940
       T1_CPU   = SUBSTR(FICIN_RECORD,156,13)                           00223040
       T1_CPU   = TRANSLATE(T1_CPU,'0',' ')                             00223140
       T1_CPU = DELSTR(T1_CPU,3,1)                                      00223208
       T1_CPU = DELSTR(T1_CPU,5,1)                                      00223308
       T1_CPU = INSERT(':',T1_CPU,2)                                    00223408
       T1_CPU = INSERT(':',T1_CPU,5)                                    00223508
       T2_ELAPS = SUBSTR(FICIN_RECORD,170,13)                           00224021
       T2_ELAPS = TRANSLATE(T2_ELAPS,'0',' ')                           00225001
       T2_ELAPS = DELSTR(T2_ELAPS,3,1)                                  00225208
       T2_ELAPS = DELSTR(T2_ELAPS,5,1)                                  00225308
       T2_ELAPS = INSERT(':',T2_ELAPS,2)                                00225408
       T2_ELAPS = INSERT(':',T2_ELAPS,5)                                00225508
       T2_CPU   = SUBSTR(FICIN_RECORD,184,13)                           00226021
       T2_CPU   = TRANSLATE(T2_CPU,'0',' ')                             00227001
       T2_CPU = DELSTR(T2_CPU,3,1)                                      00227208
       T2_CPU = DELSTR(T2_CPU,5,1)                                      00227308
       T2_CPU = INSERT(':',T2_CPU,2)                                    00227408
       T2_CPU = INSERT(':',T2_CPU,5)                                    00227508
       FICIN_RECORD = DELSTR(FICIN_RECORD,39,8)                         00227626
       FICIN_RECORD = INSERT(JOBNAME,FICIN_RECORD,38)                   00227726
       FICIN_RECORD = DELSTR(FICIN_RECORD,142,13)                       00227826
       FICIN_RECORD = INSERT(T1_ELAPS,FICIN_RECORD,141)                 00227926
       FICIN_RECORD = DELSTR(FICIN_RECORD,156,13)                       00228026
       FICIN_RECORD = INSERT(T2_ELAPS,FICIN_RECORD,155)                 00228126
       FICIN_RECORD = DELSTR(FICIN_RECORD,170,13)                       00228226
       FICIN_RECORD = INSERT(T1_CPU,FICIN_RECORD,169)                   00228326
       FICIN_RECORD = DELSTR(FICIN_RECORD,184,13)                       00228421
       FICIN_RECORD = INSERT(T2_CPU,FICIN_RECORD,183)                   00228521
       FICIN_RECORD = DELSTR(FICIN_RECORD,52,9)                         00228634
       QUEUE FICIN_RECORD                                               00228721
       "EXECIO 1 DISKW FICOUT"                                          00228824
     END                                                                00230000
  "EXECIO 1 DISKR FICIN"                                                00251221
  IF RC = 2 THEN EOF = 'YES'                                            00251321
END                                                                     00251400
"EXECIO 0 DISKR FICIN (FINIS"                                           00252722
"EXECIO 0 DISKW FICOUT (FINIS"                                          00252822
DELSTACK                                                                00253013

./ ADD NAME=REXXFORC
/*REXX*/                                                                00010000
EOF = 'NO'                                                              00120111
"EXECIO 1 DISKR FICIN"                                                  00120200
IF RC = 4 THEN SIGNAL PROBLEM                                           00120300
DO WHILE EOF = 'NO'                                                     00120400
  PULL FICIN_RECORD                                                     00120500
  IS_LINE_DATA = SUBSTR(FICIN_RECORD,39,4)                              00120601
  IF IS_LINE_DATA = "ENTR"                                              00120800
  THEN                                                                  00120900
     DO                                                                 00121000
       TRANNAME = SUBSTR(FICIN_RECORD,39,12)                            00122005
       TRANNAME = DELSTR(TRANNAME,1,4)                                  00124007
       TRANNAME = DELSTR(TRANNAME,5)                                    00124107
       TRANNAME = INSERT('        ',TRANNAME,LENGTH(TRANNAME))          00125008
       T1_ELAPS = SUBSTR(FICIN_RECORD,142,13)                           00126000
       T1_ELAPS = TRANSLATE(T1_ELAPS,'0',' ')                           00127000
       T1_ELAPS = DELSTR(T1_ELAPS,3,1)                                  00128000
       T1_ELAPS = DELSTR(T1_ELAPS,5,1)                                  00129000
       T1_ELAPS = INSERT(':',T1_ELAPS,2)                                00130000
       T1_ELAPS = INSERT(':',T1_ELAPS,5)                                00140000
       T1_CPU   = SUBSTR(FICIN_RECORD,156,13)                           00150000
       T1_CPU   = TRANSLATE(T1_CPU,'0',' ')                             00160000
       T1_CPU = DELSTR(T1_CPU,3,1)                                      00170000
       T1_CPU = DELSTR(T1_CPU,5,1)                                      00180000
       T1_CPU = INSERT(':',T1_CPU,2)                                    00190000
       T1_CPU = INSERT(':',T1_CPU,5)                                    00200000
       T2_ELAPS = SUBSTR(FICIN_RECORD,170,13)                           00210000
       T2_ELAPS = TRANSLATE(T2_ELAPS,'0',' ')                           00220000
       T2_ELAPS = DELSTR(T2_ELAPS,3,1)                                  00221000
       T2_ELAPS = DELSTR(T2_ELAPS,5,1)                                  00222000
       T2_ELAPS = INSERT(':',T2_ELAPS,2)                                00223000
       T2_ELAPS = INSERT(':',T2_ELAPS,5)                                00224000
       T2_CPU   = SUBSTR(FICIN_RECORD,184,13)                           00225000
       T2_CPU   = TRANSLATE(T2_CPU,'0',' ')                             00226000
       T2_CPU = DELSTR(T2_CPU,3,1)                                      00227000
       T2_CPU = DELSTR(T2_CPU,5,1)                                      00227100
       T2_CPU = INSERT(':',T2_CPU,2)                                    00227200
       T2_CPU = INSERT(':',T2_CPU,5)                                    00227300
       FICIN_RECORD = DELSTR(FICIN_RECORD,39,12)                        00227406
       FICIN_RECORD = INSERT(TRANNAME,FICIN_RECORD,38)                  00227505
       FICIN_RECORD = DELSTR(FICIN_RECORD,142,13)                       00227600
       FICIN_RECORD = INSERT(T1_ELAPS,FICIN_RECORD,141)                 00227700
       FICIN_RECORD = DELSTR(FICIN_RECORD,156,13)                       00227800
       FICIN_RECORD = INSERT(T2_ELAPS,FICIN_RECORD,155)                 00227900
       FICIN_RECORD = DELSTR(FICIN_RECORD,170,13)                       00228000
       FICIN_RECORD = INSERT(T1_CPU,FICIN_RECORD,169)                   00228100
       FICIN_RECORD = DELSTR(FICIN_RECORD,184,13)                       00228200
       FICIN_RECORD = INSERT(T2_CPU,FICIN_RECORD,183)                   00228300
       QUEUE FICIN_RECORD                                               00228400
       "EXECIO 1 DISKW FICOUT"                                          00228500
     END                                                                00228600
  "EXECIO 1 DISKR FICIN"                                                00228700
  IF RC = 2 THEN EOF = 'YES'                                            00228800
END                                                                     00228900
"EXECIO 0 DISKR FICIN (FINIS"                                           00252600
"EXECIO 0 DISKW FICOUT (FINIS"                                          00252700
DELSTACK                                                                00252900

./ ADD NAME=RSTATBPM
/* REXX */
EOF='NO'
'EXECIO 1 DISKR LISTSTAT'
 IF RC^= 0 THEN EOF = 'YES'
 BGREC='BEGIN RECORD'
 ENDREC='END RECORD'
 DO I=1 TO 33
     TOTG.I=0
     TOTR.I=0
     TOTRT.I=0
 END
 BP='BP'
 TOT4K='TOT4K'
 BPOOL='BPOOL'
 RATIO='BPOOL HIT RATIO'
 ENT ='!DATE DEB!HEURE DEB!DATE FIN!HEURE FIN!  BP ! GETPAGES ! READ     !'
 ENT =ENT!!' RATIO (%) !'
 ENT1='!--------!---------!--------!---------!-----!----------!----------!'
 ENT1=ENT1!!'-----------!'
 I=0
 FIN='N'
 IT=0
 DO UNTIL EOF = 'YES'
     PULL RECORD
     REC1=SUBSTR(RECORD,1)
     POS1=INDEX(REC1,BGREC)
     IF POS1^=0 THEN
        DO
            JJD=SUBSTR(REC1,22,2)
            MMD=SUBSTR(REC1,16,2)
            AAD=SUBSTR(REC1,19,2)
            HHD=SUBSTR(REC1,25,8)
            HHD=HHD' '
            DATEDEB=JJD'/'MMD'/'AAD
            IF IT=0 THEN
              DO
                DATEDEB1=DATEDEB
                HHD1=HHD
                IT=1
              END
        END
     POS1=INDEX(REC1,ENDREC)
     IF POS1^=0 THEN
        DO
            JJF=SUBSTR(REC1,22,2)
            MMF=SUBSTR(REC1,16,2)
            AAF=SUBSTR(REC1,19,2)
            HHF=SUBSTR(REC1,25,8)
            HHF=HHF' '
            DATEFIN=JJF'/'MMF'/'AAF
        END
     POS1=INDEX(REC1,TOT4K)
     IF POS1^=0 THEN FIN='O'
     POS1=INDEX(REC1,BP)
     POS2=INDEX(REC1,BPOOL)
     IF POS1^=0 & POS2=0 THEN
         DO
           'EXECIO 16 DISKR LISTSTAT'
            DO M=1 TO 16
                PULL RECORD
                REC.M=SUBSTR(RECORD,1)
            END
            DEB=2
            J=1
            DO UNTIL J > 4 ! FIN ='O'
                NBP=SUBSTR(REC1,DEB,2)
                IF NBP='BP' THEN
                    DO
                        I=I+1
                        DEB1=DEB+22
                        NOMBP.I=SUBSTR(REC1,DEB,5)
                        NOMBP.I=SPACE(NOMBP.I,0)
                        NOMBP.I=LEFT(NOMBP.I,5)
                        NOMBPG=SUBSTR(NOMBP.I,3,2)
                        K=INDEX(NOMBPG,'K')
                        IF K^=0 THEN NOMBPG=SUBSTR(NOMBPG,1,1)
                        NOMBPG=NOMBPG+1
                        K=2
                        WRATIO.I=SUBSTR(REC.K,DEB1,8)
                        WRATIO.I=SPACE(WRATIO.I,0)
                        WRATIO.I=RIGHT(WRATIO.I,11)
                        K=4
                        GETPAGE.I=SUBSTR(REC.K,DEB1,8)
                        W=INDEX(GETPAGE.I,'K')
                        IF W ^= 0 THEN DO
                            L=LENGTH(GETPAGE.I) - 1
                            GETPAGE.I=SUBSTR(GETPAGE.I,1,L) * 1000
                        END
                        W=INDEX(GETPAGE.I,'M')
                        IF W ^= 0 THEN DO
                            L=LENGTH(GETPAGE.I) - 1
                            GETPAGE.I=SUBSTR(GETPAGE.I,1,L) * 1000000
                        END
                        GETPAGE.I=SPACE(GETPAGE.I,0)
                        TOTG.NOMBPG=TOTG.NOMBPG+GETPAGE.I
                        GETPAGE.I=RIGHT(GETPAGE.I,10)
                        N.NOMBPG=NOMBP.I
                        K=6
                        SYNCREAD=SUBSTR(REC.K,DEB1,8)
                        W=INDEX(SYNCREAD,'K')
                        IF W ^= 0 THEN DO
                            L=LENGTH(SYNCREAD) - 1
                            SYNCREAD=SUBSTR(SYNCREAD,1,L) * 1000
                        END
                        W=INDEX(SYNCREAD,'M')
                        IF W ^= 0 THEN DO
                            L=LENGTH(SYNCREAD) - 1
                            SYNCREAD=SUBSTR(SYNCREAD,1,L) * 1000000
                        END
                        TOTR.NOMBPG=TOTR.NOMBPG+SYNCREAD
                        TOTRT.I=TOTRT.I+SYNCREAD
                        K=10
                        SEQREAD=SUBSTR(REC.K,DEB1,8)
                        W=INDEX(SEQREAD,'K')
                        IF W ^= 0 THEN DO
                            L=LENGTH(SEQREAD) - 1
                            SEQREAD=SUBSTR(SEQREAD,1,L) * 1000
                        END
                        W=INDEX(SEQREAD,'M')
                        IF W ^= 0 THEN DO
                            L=LENGTH(SEQREAD) - 1
                            SEQREAD=SUBSTR(SEQREAD,1,L) * 1000000
                        END
                        TOTR.NOMBPG=TOTR.NOMBPG+SEQREAD
                        TOTRT.I=TOTRT.I+SEQREAD
                        K=13
                        LSREAD=SUBSTR(REC.K,DEB1,8)
                        W=INDEX(LSREAD,'K')
                        IF W ^= 0 THEN DO
                            L=LENGTH(LSREAD) - 1
                            LSREAD=SUBSTR(LSREAD,1,L) * 1000
                        END
                        W=INDEX(LSREAD,'M')
                        IF W ^= 0 THEN DO
                            L=LENGTH(LSREAD) - 1
                            LSREAD=SUBSTR(LSREAD,1,L) * 1000000
                        END
                        TOTR.NOMBPG=TOTR.NOMBPG+LSREAD
                        TOTRT.I=TOTRT.I+LSREAD
                        K=16
                        DYNREAD=SUBSTR(REC.K,DEB1,8)
                        W=INDEX(DYNREAD,'K')
                        IF W ^= 0 THEN DO
                            L=LENGTH(DYNREAD) - 1
                            DYNREAD=SUBSTR(DYNREAD,1,L) * 1000
                        END
                        W=INDEX(DYNREAD,'M')
                        IF W ^= 0 THEN DO
                            L=LENGTH(DYNREAD) - 1
                            DYNREAD=SUBSTR(DYNREAD,1,L) * 1000000
                        END
                        TOTR.NOMBPG=TOTR.NOMBPG+DYNREAD
                        TOTRT.I=TOTRT.I+DYNREAD
                        TOTRT.I=SPACE(TOTRT.I,0)
                        TOTRT.I=RIGHT(TOTRT.I,10)
                    END
                ELSE FIN='O'
                DEB=DEB+34
                J=J+1
             END
         END
     IF FIN='O' THEN
        DO
           PUSH ENT1
           PUSH ENT
           PUSH ENT1
           'EXECIO 3 DISKW RPTBP'
           DO J=1 TO I
              Z1='!'DATEDEB'!'HHD'!'DATEFIN'!'HHF'!'NOMBP.J'!'GETPAGE.J
              Z2='!'TOTRT.J'!'WRATIO.J'!'
             PUSH Z1!!Z2
            'EXECIO 1 DISKW RPTBP'
           END
           I=0
           FIN='N'
           DO K=1 TO 16
               TOTRT.K=0
           END
        END
    'EXECIO 1 DISKR LISTSTAT'
     IF RC^= 0 THEN EOF = 'YES'
END
PUSH ENT1
PUSH ENT
PUSH ENT1
'EXECIO 3 DISKW RPTBP'
K=1
IF TOTG.K ^= 0 THEN
    TRATIO0=(TOTG.K-TOTR.K)/TOTG.K*100
                ELSE
    TRATIO0=0
TRATIO0=TRUNC(TRATIO0,2)
TRATIO0=RIGHT(TRATIO0,11)
TOTG.K=RIGHT(TOTG.K,10)
TOTR.K=RIGHT(TOTR.K,10)
Z1='!'DATEDEB1'!'HHD1'!'DATEFIN'!'HHF'!'N.K'!'TOTG.K
Z2='!'TOTR.K'!'TRATIO0'!'
QUEUE Z1!!Z2
K=8
IF TOTG.K ^= 0 THEN
    TRATIO7=(TOTG.K-TOTR.K)/TOTG.K*100
                ELSE
    TRATIO7=0
TRATIO7=TRUNC(TRATIO7,2)
TRATIO7=RIGHT(TRATIO7,11)
TOTG.K=RIGHT(TOTG.K,10)
TOTR.K=RIGHT(TOTR.K,10)
Z1='!'DATEDEB1'!'HHD1'!'DATEFIN'!'HHF'!'N.K'!'TOTG.K
Z2='!'TOTR.K'!'TRATIO7'!'
QUEUE Z1!!Z2
K=9
IF TOTG.K ^= 0 THEN
    TRATIO8=(TOTG.K-TOTR.K)/TOTG.K*100
                ELSE
    TRATIO8=0
TRATIO8=TRUNC(TRATIO8,2)
TRATIO8=RIGHT(TRATIO8,11)
TOTG.K=RIGHT(TOTG.K,10)
TOTR.K=RIGHT(TOTR.K,10)
Z1='!'DATEDEB1'!'HHD1'!'DATEFIN'!'HHF'!'N.K'!'TOTG.K
Z2='!'TOTR.K'!'TRATIO8'!'
QUEUE Z1!!Z2
K=17
IF TOTG.K ^= 0 THEN
    TRATIO16=(TOTG.K-TOTR.K)/TOTG.K*100
                ELSE
    TRATIO16=0
TRATIO16=TRUNC(TRATIO16,2)
TRATIO16=RIGHT(TRATIO16,11)
TOTG.K=RIGHT(TOTG.K,10)
TOTR.K=RIGHT(TOTR.K,10)
Z1='!'DATEDEB1'!'HHD1'!'DATEFIN'!'HHF'!'N.K'!'TOTG.K
Z2='!'TOTR.K'!'TRATIO16'!'
QUEUE Z1!!Z2
K=33
IF TOTG.K ^= 0 THEN
    TRATIO32=(TOTG.K-TOTR.K)/TOTG.K*100
                ELSE
    TRATIO32=0
TRATIO32=TRUNC(TRATIO32,2)
TRATIO32=RIGHT(TRATIO32,11)
TOTG.K=RIGHT(TOTG.K,10)
TOTR.K=RIGHT(TOTR.K,10)
Z1='!'DATEDEB1'!'HHD1'!'DATEFIN'!'HHF'!'N.K'!'TOTG.K
Z2='!'TOTR.K'!'TRATIO32'!'
QUEUE Z1!!Z2
'EXECIO 5 DISKW RPTBP'
"EXECIO 0 DISKR LISTSTAT (FINIS"
"EXECIO 0 DISKW RPTBP (FINIS"
'FREE FI(LISTSTAT)'
'FREE FI(RPTBP)'
EXIT

./ ADD NAME=RSTATBP1
/* REXX */
EOF='NO'
'EXECIO 1 DISKR LISTSTAT'
 IF RC^= 0 THEN EOF = 'YES'
 BGREC='EVENT TIME'
 BUFPOOL='BUFFER POOL STATISTICS'
 GETPAGE='GETPAGE REQUESTS'
 SYNCREAD='SYNCHRONOUS READS'
 SECPREF='SEQUENTIAL PREFETCH PAGES  '
 LSTPREF='LIST PREFETCH PAGES  '
 DYNPREF='DYNAMIC PREFETCH PAGES  '
 DYNPREFD='DYNAMIC PREFETCH PAGES/RD'
 BP='BP'
 BPOOL='BPOOL'
 RATIO='BPOOL HIT RATIO'
 ENT ='!DATE DEB!HEURE DEB!  BP !   GETPAGES    !   READ        !'
 ENT =ENT!!' RATIO (%) !'
 ENT1='!--------!---------!-----!---------------!---------------!'
 ENT1=ENT1!!'-----------!'
 I=0
 FIN='N'
 IT=0
 DO UNTIL EOF = 'YES' ! FIN = 'O'
      PULL RECORD
      REC1=SUBSTR(RECORD,1)
      POS1=INDEX(REC1,BGREC)
      IF POS1 ^= 0 THEN
        DO
            JJD=SUBSTR(REC1,57,2)
            MMD=SUBSTR(REC1,54,2)
            AAD=SUBSTR(REC1,60,2)
            HHD=SUBSTR(REC1,63,8)
            HHD=HHD' '
            DATEDEB=JJD'/'MMD'/'AAD
            PUSH ENT1
            PUSH ENT
            PUSH ENT1
                          'EXECIO 3 DISKW RPTBP'
        END
       POS2=INDEX(REC1,BUFPOOL)
       IF POS2 ^= 0 THEN
         DO
            NBGETPAGE = 0
            NBSYNCREAD = 0
            NBSECPREF = 0
            NBLSTPREF = 0
            NBDYNPREF = 0
            NOMBP = WORD(REC1,5)
        END
        POS4 = INDEX(REC1,GETPAGE)
        IF POS4 ^= 0 THEN DO
            NBGETPAGE = WORD(REC1,7)
            NBGETPAGEN = WORD(REC1,7)
            L1=LENGTH(NBGETPAGEN) -1
            D1=INDEX(NBGETPAGEN,'K')
            IF D1^=0 THEN DO
                NBGETPAGEN=SUBSTR(NBGETPAGEN,1,L1)
                NBGETPAGEN=NBGETPAGEN*1000
            END
            D1=INDEX(NBGETPAGEN,'M')
            IF D1^=0 THEN DO
                NBGETPAGEN=SUBSTR(NBGETPAGEN,1,L1)
                NBGETPAGEN=NBGETPAGEN*1000000
            END
        END
        POS4 = INDEX(REC1,SYNCREAD)
        IF POS4 = 43 THEN DO
           NBSYNCREAD = WORD(REC1,8)
           L1=LENGTH(NBSYNCREAD) -1
           D1=INDEX(NBSYNCREAD,'K')
           IF D1^=0 THEN DO
               NBSYNCREAD=SUBSTR(NBSYNCREAD,1,L1)
               NBSYNCREAD=NBSYNCREAD*1000
           END
           D1=INDEX(NBSYNCREAD,'M')
           IF D1^=0 THEN DO
               NBSYNCREAD=SUBSTR(NBSYNCREAD,1,L1)
               NBSYNCREAD=NBSYNCREAD*1000000
           END
        END
        POS4 = INDEX(REC1,SECPREF)
        IF POS4 = 43 THEN DO
           NBSECPREF = WORD(REC1,9)
           L1=LENGTH(NBSECPREF) -1
           D1=INDEX(NBSECPREF,'K')
           IF D1^=0 THEN DO
               NBSECPREF=SUBSTR(NBSECPREF,1,L1)
               NBSECPREF=NBSECPREF*1000
           END
           D1=INDEX(NBSECPREF,'M')
           IF D1^=0 THEN DO
               NBSECPREF=SUBSTR(NBSECPREF,1,L1)
               NBSECPREF=NBSECPREF*1000000
           END
        END
        POS4 = INDEX(REC1,LSTPREF)
        IF POS4 = 43 THEN DO
           NBLSTPREF = WORD(REC1,4)
           L1=LENGTH(NBLSTPREF) -1
           D1=INDEX(NBLSTPREF,'K')
           IF D1^=0 THEN DO
               NBLSTPREF=SUBSTR(NBLSTPREF,1,L1)
               NBLSTPREF=NBLSTPREF*1000
           END
           D1=INDEX(NBLSTPREF,'M')
           IF D1^=0 THEN DO
               NBLSTPREF=SUBSTR(NBLSTPREF,1,L1)
               NBLSTPREF=NBLSTPREF*1000000
           END
        END
        POS4 = INDEX(REC1,DYNPREF)
        IF POS4 = 43 THEN DO
           NBDYNPREF = WORD(REC1,4)
           L1=LENGTH(NBDYNPREF) -1
           D1=INDEX(NBDYNPREF,'K')
           IF D1^=0 THEN DO
               NBDYNPREF=SUBSTR(NBDYNPREF,1,L1)
               NBDYNPREF=NBDYNPREF*1000
           END
           D1=INDEX(NBDYNPREF,'M')
           IF D1^=0 THEN DO
               NBDYNPREF=SUBSTR(NBDYNPREF,1,L1)
               NBDYNPREF=NBDYNPREF*1000000
           END
        END
        POS4 = INDEX(REC1,DYNPREFD)
        IF POS4 = 43 THEN DO
                NOMBP=SPACE(NOMBP,0)
                NOMBP=LEFT(NOMBP,5)
                TOTRT = NBSYNCREAD + NBSECPREF + NBDYNPREF + NBLSTPREF
                IF NBGETPAGEN ^= 0 THEN
                  DO
                    WRATIO = (1-(TOTRT / NBGETPAGEN)) * 100
                    WRATIO=TRUNC(WRATIO,2)
                  END
                                  ELSE
                  DO
                     WRATIO = 0
                  END
                WRATIO=RIGHT(WRATIO,11)
                TOTRT=SPACE(TOTRT,0)
                TOTRT=RIGHT(TOTRT,15)
                NBGETPAGE=RIGHT(NBGETPAGE,15)
                Z1='!'DATEDEB'!'HHD'!'NOMBP'!'NBGETPAGE
                Z2='!'TOTRT'!'WRATIO'!'
                PUSH Z1!!Z2
                'EXECIO 1 DISKW RPTBP'
            END
        'EXECIO 1 DISKR LISTSTAT'
        IF RC^= 0 THEN EOF = 'YES'
  END
"EXECIO 0 DISKR LISTSTAT (FINIS"
"EXECIO 0 DISKW RPTBP (FINIS"
'FREE FI(LISTSTAT)'
'FREE FI(RPTBP)'
EXIT

./ ADD NAME=RSTATEPM
/* REXX */
EOF='NO'
'EXECIO 1 DISKR LISTSTAT'
 IF RC^= 0 THEN EOF = 'YES'
 EDM='EDM POOL'
 ENDREC='END RECORD'
 BP='BP'
 RATIO='BPOOL HIT RATIO'
 ENT ='!DATE DEB!HEURE DEB!DATE FIN!HEURE FIN! TYPE! FREE PAGE! %PAGE INUSE!'
 ENT ='!DATE DEB!HEURE DEB!DATE FIN!HEURE FIN! TYPE! FREE PAGE! %PAGE INUSE!'
 ENT=ENT!!'FAIL FULL'!'
 ENT1='!--------!---------!--------!---------!-----!----------!------------!'
 ENT1=ENT!!'----------!'
 ENT2='!DATE DEB!HEURE DEB!DATE FIN!HEURE FIN!REQUEST!NOT FOUND!HIT RATIO!'
 ENT3='!--------!---------!--------!---------!-------!---------!---------!'
 I=0
 FIN='N'
 DO UNTIL EOF = 'YES'
     PULL RECORD
     REC1=SUBSTR(RECORD,1)
     POS1=INDEX(REC1,BGREC)
     IF POS1^=0 THEN
        DO
            JJD=SUBSTR(REC1,22,2)
            MMD=SUBSTR(REC1,16,2)
            AAD=SUBSTR(REC1,19,2)
            HHD=SUBSTR(REC1,25,8)
            HHD=HHD' '
            DATEDEB=JJD'/'MMD'/'AAD
        END
     POS1=INDEX(REC1,ENDREC)
     IF POS1^=0 THEN
        DO
            JJF=SUBSTR(REC1,22,2)
            MMF=SUBSTR(REC1,16,2)
            AAF=SUBSTR(REC1,19,2)
            HHF=SUBSTR(REC1,25,8)
            HHF=HHF' '
            DATEFIN=JJF'/'MMF'/'AAF
        END
     POS1=INDEX(REC1,BP)
     IF POS1^=0 THEN
         DO
           'EXECIO 4 DISKR LISTSTAT'
            PULL RECORD
            PULL RECORD
            REC2=SUBSTR(RECORD,1)
            PULL RECORD
            REC3=SUBSTR(RECORD,1)
            PULL RECORD
            REC4=SUBSTR(RECORD,1)
            DEB=2
            J=1
            DO UNTIL J > 4 ! FIN ='O'
                NBP=SUBSTR(REC1,DEB,2)
                IF NBP='BP' THEN
                    DO
                        I=I+1
                        DEB1=DEB+22
                        NOMBP.I=SUBSTR(REC1,DEB,5)
                        NOMBP.I=SPACE(NOMBP.I,0)
                        NOMBP.I=LEFT(NOMBP.I,5)
                        WRATIO.I=SUBSTR(REC2,DEB1,8)
                        WRATIO.I=SPACE(WRATIO.I,0)
                        WRATIO.I=RIGHT(WRATIO.I,11)
                        GETPAGE.I=SUBSTR(REC4,DEB1,8)
                        GETPAGE.I=SPACE(GETPAGE.I,0)
                        GETPAGE.I=RIGHT(GETPAGE.I,10)
                    END
                ELSE FIN='O'
                DEB=DEB+34
                J=J+1
             END
         END
     IF FIN='O' THEN
        DO
           PUSH ENT1
           PUSH ENT
           PUSH ENT1
           'EXECIO 3 DISKW RPTBP'
           DO J=1 TO I
              Z1='!'DATEDEB'!'HHD'!'DATEFIN'!'HHF'!'NOMBP.J'!'GETPAGE.J
              Z2='!'WRATIO.J'!'
             PUSH Z1!!Z2
            'EXECIO 1 DISKW RPTBP'
           END
           I=0
           FIN='N'
        END
    'EXECIO 1 DISKR LISTSTAT'
     IF RC^= 0 THEN EOF = 'YES'
END
"EXECIO 0 DISKR LISTSTAT (FINIS"
"EXECIO 0 DISKW RPTBP (FINIS"
'FREE FI(LISTSTAT)'
'FREE FI(RPTBP)'
EXIT

./ ADD NAME=RSTATPM
/* REXX */
EOF='NO'
'EXECIO 1 DISKR LISTSTAT'
 IF RC^= 0 THEN EOF = 'YES'
 BGREC='BEGIN RECORD'
 ENDREC='END RECORD'
 BP='BP'
 RATIO='BPOOL HIT RATIO'
 ENT ='!DATE DEB!HEURE DEB!DATE FIN!HEURE FIN!  BP ! GETPAGES ! RATIO (%) !'
 ENT1='!--------!---------!--------!---------!-----!----------!-----------!'
 I=0
 FIN='N'
 DO UNTIL EOF = 'YES'
     PULL RECORD
     REC1=SUBSTR(RECORD,1)
     POS1=INDEX(REC1,BGREC)
     IF POS1^=0 THEN
        DO
            JJD=SUBSTR(REC1,22,2)
            MMD=SUBSTR(REC1,16,2)
            AAD=SUBSTR(REC1,19,2)
            HHD=SUBSTR(REC1,25,8)
            HHD=HHD' '
            DATEDEB=JJD'/'MMD'/'AAD
        END
     POS1=INDEX(REC1,ENDREC)
     IF POS1^=0 THEN
        DO
            JJF=SUBSTR(REC1,22,2)
            MMF=SUBSTR(REC1,16,2)
            AAF=SUBSTR(REC1,19,2)
            HHF=SUBSTR(REC1,25,8)
            HHF=HHF' '
            DATEFIN=JJF'/'MMF'/'AAF
        END
     POS1=INDEX(REC1,BP)
     IF POS1^=0 THEN
         DO
           'EXECIO 4 DISKR LISTSTAT'
            PULL RECORD
            PULL RECORD
            REC2=SUBSTR(RECORD,1)
            PULL RECORD
            REC3=SUBSTR(RECORD,1)
            PULL RECORD
            REC4=SUBSTR(RECORD,1)
            DEB=2
            J=1
            DO UNTIL J > 4 ! FIN ='O'
                NBP=SUBSTR(REC1,DEB,2)
                IF NBP='BP' THEN
                    DO
                        I=I+1
                        DEB1=DEB+22
                        NOMBP.I=SUBSTR(REC1,DEB,5)
                        NOMBP.I=SPACE(NOMBP.I,0)
                        NOMBP.I=LEFT(NOMBP.I,5)
                        WRATIO.I=SUBSTR(REC2,DEB1,8)
                        WRATIO.I=SPACE(WRATIO.I,0)
                        WRATIO.I=RIGHT(WRATIO.I,11)
                        GETPAGE.I=SUBSTR(REC4,DEB1,8)
                        GETPAGE.I=SPACE(GETPAGE.I,0)
                        GETPAGE.I=RIGHT(GETPAGE.I,10)
                    END
                ELSE FIN='O'
                DEB=DEB+34
                J=J+1
             END
         END
     IF FIN='O' THEN
        DO
           PUSH ENT1
           PUSH ENT
           PUSH ENT1
           'EXECIO 3 DISKW RPTBP'
           DO J=1 TO I
              Z1='!'DATEDEB'!'HHD'!'DATEFIN'!'HHF'!'NOMBP.J'!'GETPAGE.J
              Z2='!'WRATIO.J'!'
             PUSH Z1!!Z2
            'EXECIO 1 DISKW RPTBP'
           END
           I=0
           FIN='N'
        END
    'EXECIO 1 DISKR LISTSTAT'
     IF RC^= 0 THEN EOF = 'YES'
END
"EXECIO 0 DISKR LISTSTAT (FINIS"
"EXECIO 0 DISKW RPTBP (FINIS"
'FREE FI(LISTSTAT)'
'FREE FI(RPTBP)'
EXIT

./ ADD NAME=RUNLIB
NONVSAM  DB2S.RUNLIB.LOAD                                               00010000
NONVSAM  DB2S.RUNLIB.LOAD.V10                                           00020000
NONVSAM  DB2S.RUNLIB.LOAD.V11                                           00030000
NONVSAM  DB2W.RUNLIB.LOAD                                               00040000
NONVSAM  DB2W.RUNLIB.LOAD.V10                                           00050000
NONVSAM  DB2W.RUNLIB.LOAD.V11                                           00060000
NONVSAM  DB2W.RUNLIB.LOAD.V910                                          00070000
NONVSAM  SYS019.RUNLIB.DATASETS                                         00080000

./ ADD NAME=RUNSTAT
//RUNSTAT   JOB ACCT£,                                                  00010000
//             DB2,                                                     00020000
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040000
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050000
//      SYS019.LP2.DB2,                                                 00060000
//      SYS1.PROCLIB.&SYSNAME,                                          00061000
//      SYS1.SACBCNTL)                                                  00070000
//STEP1 EXEC DSNUPROC,UID='SYS019',TIME=1440,
//*STEP1 EXEC DSNUPROC,UID=SYS019.RUNSTAT,TIME=1440,
// UTPROC='',
// SYSTEM=DB2S
//UTPRINT DD SYSOUT=*
//SYSIN DD *
//*RUNSTAT IBM DB1 BASE
RUNSTATS TABLESPACE DSNDB06.SYSTSFAU      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSCOL      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTSP      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTPT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTAB      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSIXS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSIXT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSIXR      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSIPT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSREL      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSFOR      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSYN      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSFLD      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTAU      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSKEY      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDBA      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDBU      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSGPAUT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSTG      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVOL      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPLN      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPLA      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDBR      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPLD      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSTM      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPKL      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPLY      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPKG      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPKS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPKX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPVR      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPKY      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPKD      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPKA      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSUSER       UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSCKS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSCHX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSCKD      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSRG      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVEW      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVWD      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVWT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVTR      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSSTATS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSDDF        UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSAUX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSCON      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDAT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDEP      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSENV      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSKYC      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPRM      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSRAU      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSROU      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSPLUXA      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSPLUXB      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSCM      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTBC      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTRG      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTRT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSSEQ        UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSSEQ2       UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSHIST       UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSGRTNS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSJAUXA      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSJAUXB      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSJAVA       UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSALTER      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSOBX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSASC      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSEBCDC      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSUNI      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSXML        UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSXTM      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSXTS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTARG       UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSROLES      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSCONTX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTSS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSISS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSADT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSCTL      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSCTR      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSCTD      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPEN      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPDT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPDO      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTPF      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPTX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSATW      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPRH      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPHX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSATS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSATX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSQRA      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSPKC      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSQRY      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSQRP      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSQRO      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVAR      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVAT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVAD      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSVAU      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSQRE      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSQRS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSIXC      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSFB      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDQY      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDQT      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDQS      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDQE      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDQH      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDQO      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSDQD      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSICO      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSES      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSNL      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSNX      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSXL      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSSTA      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSLVH      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSISH      UPDATE ALL
RUNSTATS TABLESPACE DSNDB06.SYSTSTSH      UPDATE ALL
//
//*RUNSTAT IBM DB1 BASE
                    AMIDB2CA ACADEF
                    AMIDB2CA ACAFILE
                    AMIDB2CA ACAFLCP
                    AMIDB2CA ACAGRP
                    AMIDB2CA ACAGRPCP
                    AMIDB2CA ACALGRNG
                    AMIDB2CA ACAREPOS
//
//*RUNSTAT IBM DB1 BASE
                    AMIDB2CM BMCAL
                    AMIDB2CM BMCAUX
                    AMIDB2CM BMCBAL
                    AMIDB2CM BMCBAUX
                    AMIDB2CM BMCBCK
                    AMIDB2CM BMCBCK2
                    AMIDB2CM BMCBCKOA
                    AMIDB2CM BMCBCOA
                    AMIDB2CM BMCBCOL
                    AMIDB2CM BMCBCT
                    AMIDB2CM BMCBDB
                    AMIDB2CM BMCBDBA
                    AMIDB2CM BMCBIX
                    AMIDB2CM BMCBKEY
                    AMIDB2CM BMCBKEYT
                    AMIDB2CM BMCBL
                    AMIDB2CM BMCBLPF
                    AMIDB2CM BMCBPG
                    AMIDB2CM BMCBPM
                    AMIDB2CM BMCBREL
                    AMIDB2CM BMCBRESA
                    AMIDB2CM BMCBRLKY
                    AMIDB2CM BMCBRT
                    AMIDB2CM BMCBRTA
                    AMIDB2CM BMCBRTB
                    AMIDB2CM BMCBSEQ
                    AMIDB2CM BMCBSG
                    AMIDB2CM BMCBSQB
                    AMIDB2CM BMCBSY
                    AMIDB2CM BMCBTB
                    AMIDB2CM BMCBTBA
                    AMIDB2CM BMCBTP
                    AMIDB2CM BMCBTR
                    AMIDB2CM BMCBTRCL
                    AMIDB2CM BMCBTRTA
                    AMIDB2CM BMCBTRTX
                    AMIDB2CM BMCBTS
                    AMIDB2CM BMCBUC
                    AMIDB2CM BMCBUCC
                    AMIDB2CM BMCBVOL
                    DBNAME   NAME
                    ---------+---------+---------+--------
                    AMIDB2CM BMCBVW
                    AMIDB2CM BMCBVWTA
                    AMIDB2CM BMCBVWTX
                    AMIDB2CM BMCCK
                    AMIDB2CM BMCCK2
                    AMIDB2CM BMCCOL
                    AMIDB2CM BMCCT
                    AMIDB2CM BMCCT2A
                    AMIDB2CM BMCCT2B
                    AMIDB2CM BMCCTR
                    AMIDB2CM BMCCTRCL
                    AMIDB2CM BMCCTRTA
                    AMIDB2CM BMCCTRTX
                    AMIDB2CM BMCDB
                    AMIDB2CM BMCHIST
                    AMIDB2CM BMCIX
                    AMIDB2CM BMCKEY
                    AMIDB2CM BMCKEYT
                    AMIDB2CM BMCLOC
                    AMIDB2CM BMCMIGPF
                    AMIDB2CM BMCPAPPL
                    AMIDB2CM BMCPDML
                    AMIDB2CM BMCPG
                    AMIDB2CM BMCPM
                    AMIDB2CM BMCPSCRP
                    AMIDB2CM BMCPSTEP
                    AMIDB2CM BMCPSYNC
                    AMIDB2CM BMCPTASK
                    AMIDB2CM BMCREL
                    AMIDB2CM BMCRENM
                    AMIDB2CM BMCRLKY
                    AMIDB2CM BMCRT
                    AMIDB2CM BMCRT2
                    AMIDB2CM BMCRT2A
                    AMIDB2CM BMCRT2B
                    AMIDB2CM BMCRULES
                    AMIDB2CM BMCSC
                    AMIDB2CM BMCSEC
                    AMIDB2CM BMCSEQ
                    AMIDB2CM BMCSG
                    AMIDB2CM BMCSY
                    AMIDB2CM BMCSYNC
                    AMIDB2CM BMCTB
                    AMIDB2CM BMCTP
                    AMIDB2CM BMCTS
                    AMIDB2CM BMCUC
                    AMIDB2CM BMCUCC
                    AMIDB2CM BMCUNLD
                    AMIDB2CM BMCVOL
                    AMIDB2CM BMCVW
                    AMIDB2CM BMCVWTX
                    AMIDB2CM BMCVWTXA
                    AMIDB2CM BMCWK
                    AMIDB2CM BMCXML
                    AMIDB2CM BMCXMLA
//*RUNST
                    AMIDB2DB ACTATTR
                    AMIDB2DB ACTAUDT
                    AMIDB2DB ACTAVAL
                    AMIDB2DB ACTCVAL
                    AMIDB2DB ACTDLG
                    AMIDB2DB ACTDLGA
                    AMIDB2DB ACTFCRS
                    AMIDB2DB ACTGMAP
                    AMIDB2DB ACTMSG
                    AMIDB2DB ACTRECV
                    AMIDB2DB ACTSEA
                    AMIDB2DB ACTSEA2
                    AMIDB2DB ACTSEA2X
                    AMIDB2DB ACTSESS
                    AMIDB2DB ACTSQL
                    AMIDB2DB ACTVIEW
                    AMIDB2DB EDITUSER
//*RUNST
                    AMIDB2PF BMCUPLAN
//*RUNST
RUNSTATS TABLESPACE AMIDB2SU.BMCACTN      UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCACTN      UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCACTSS     UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCCACTN     UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCDOWID     UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCDSYNC     UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCEXDEF     UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCOAJC      UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCOBJAC     UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCRSEV      UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCRSEX      UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCSERV      UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCSVDD      UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCSVDDD     UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCSVSN      UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCSVSNT     UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCTHRES     UPDATE ALL
RUNSTATS TABLESPACE AMIDB2SU.BMCVENDR     UPDATE ALL
//*RUNST
                    AMIDB2TS BMCHIST
                    AMIDB2TS BMCRSCD
                    AMIDB2TS BMCRSCDS
                    AMIDB2TS BMCRSCO
                    AMIDB2TS BMCRSCS
                    AMIDB2TS BMCRSIP
                    AMIDB2TS BMCRSIPD
                    AMIDB2TS BMCRSIX
                    AMIDB2TS BMCRSKD
                    AMIDB2TS BMCRSKDS
                    AMIDB2TS BMCRSKS
                    AMIDB2TS BMCRSKT
                    AMIDB2TS BMCRSLB
                    AMIDB2TS BMCRSSTO
                    AMIDB2TS BMCRSTB
                    AMIDB2TS BMCRSTP
                    AMIDB2TS BMCRSTPD
                    AMIDB2TS BMCRSTS
                    AMIDB2TS BMCRSVOL
//*RUNST
                    AMIDB2UT BMCDICT
                    AMIDB2UT BMCGAUTH
                    AMIDB2UT BMCGROPT
                    AMIDB2UT BMCHIST
                    AMIDB2UT BMCHISTO
                    AMIDB2UT BMCHISTS
                    AMIDB2UT BMCLGRNX
                    AMIDB2UT BMCOBDEF
                    AMIDB2UT BMCOBSET
                    AMIDB2UT BMCOBSQL
                    AMIDB2UT BMCPRDRG
                    AMIDB2UT BMCSSTTS
                    AMIDB2UT BMCSSWTS
                    AMIDB2UT BMCSYNC
                    AMIDB2UT BMCTRANS
                    AMIDB2UT BMCUTIL
                    AMIDB2UT BMCXCOPY
//*RUNST
                    AOCQTDB  AOCOLS02
                    AOCQTDB  AOCOTS09
                    BMCACADB ACADEF
                    BMCACADB ACAFILE
                    BMCACADB ACAFLCP
                    BMCACADB ACAGRP
                    BMCACADB ACAGRPCP
                    BMCACADB ACALGRNG
                    BMCACADB ACAREPOS
                    BMCACMDB BMCAL
                    BMCACMDB BMCAUX
                    BMCACMDB BMCBAL
                    BMCACMDB BMCBAUX
                    BMCACMDB BMCBCK
                    BMCACMDB BMCBCK2
                    BMCACMDB BMCBCKOA
                    BMCACMDB BMCBCOA
                    BMCACMDB BMCBCOL
                    BMCACMDB BMCBCT
                    BMCACMDB BMCBDB
                    BMCACMDB BMCBDBA
                    BMCACMDB BMCBIX
                    BMCACMDB BMCBKEY
                    BMCACMDB BMCBKEYT
                    BMCACMDB BMCBL
                    BMCACMDB BMCBLPF
                    BMCACMDB BMCBPG
                    BMCACMDB BMCBPM
                    BMCACMDB BMCBREL
                    BMCACMDB BMCBRESA
                    BMCACMDB BMCBRLKY
                    BMCACMDB BMCBRT
                    BMCACMDB BMCBRTA
                    BMCACMDB BMCBRTB
                    BMCACMDB BMCBSEQ
                    BMCACMDB BMCBSG
                    BMCACMDB BMCBSQB
                    BMCACMDB BMCBSY
                    BMCACMDB BMCBTB
                    BMCACMDB BMCBTBA
                    BMCACMDB BMCBTP
                    BMCACMDB BMCBTR
                    BMCACMDB BMCBTRCL
                    BMCACMDB BMCBTRTA
                    BMCACMDB BMCBTRTX
                    BMCACMDB BMCBTS
                    BMCACMDB BMCBUC
                    BMCACMDB BMCBUCC
                    DBNAME   NAME
                    ---------+---------+---------+---------+---------+---------+
                    BMCACMDB BMCBVOL
                    BMCACMDB BMCBVW
                    BMCACMDB BMCBVWTA
                    BMCACMDB BMCBVWTX
                    BMCACMDB BMCCK
                    BMCACMDB BMCCK2
                    BMCACMDB BMCCOL
                    BMCACMDB BMCCT
                    BMCACMDB BMCCT2A
                    BMCACMDB BMCCT2B
                    BMCACMDB BMCCTR
                    BMCACMDB BMCCTRCL
                    BMCACMDB BMCCTRTA
                    BMCACMDB BMCCTRTX
                    BMCACMDB BMCDB
                    BMCACMDB BMCHIST
                    BMCACMDB BMCIX
                    BMCACMDB BMCKEY
                    BMCACMDB BMCKEYT
                    BMCACMDB BMCLOC
                    BMCACMDB BMCMIGPF
                    BMCACMDB BMCPAPPL
                    BMCACMDB BMCPDML
                    BMCACMDB BMCPG
                    BMCACMDB BMCPM
                    BMCACMDB BMCPSCRP
                    BMCACMDB BMCPSTEP
                    BMCACMDB BMCPSYNC
                    BMCACMDB BMCPTASK
                    BMCACMDB BMCREL
                    BMCACMDB BMCRENM
                    BMCACMDB BMCRLKY
                    BMCACMDB BMCRT
                    BMCACMDB BMCRT2
                    BMCACMDB BMCRT2A
                    BMCACMDB BMCRT2B
                    BMCACMDB BMCRULES
                    BMCACMDB BMCSC
                    BMCACMDB BMCSEC
                    BMCACMDB BMCSEQ
                    BMCACMDB BMCSG
                    BMCACMDB BMCSY
                    BMCACMDB BMCSYNC
                    BMCACMDB BMCTB
                    BMCACMDB BMCTP
                    BMCACMDB BMCTS
                    BMCACMDB BMCUC
                    BMCACMDB BMCUCC
                    BMCACMDB BMCUNLD
                    BMCACMDB BMCVOL
                    BMCACMDB BMCVW
                    BMCACMDB BMCVWTX
                    BMCACMDB BMCVWTXA
                    BMCACMDB BMCWK
                    BMCACMDB BMCXML
                    BMCACMDB BMCXMLA
                    BMCACTB2 ACTATTR
                    BMCACTB2 ACTAUDT
                    DBNAME   NAME
                    ---------+---------+---------+---------+---------+---------+
                    BMCACTB2 ACTAVAL
                    BMCACTB2 ACTCVAL
                    BMCACTB2 ACTDLG
                    BMCACTB2 ACTDLGA
                    BMCACTB2 ACTFCRS
                    BMCACTB2 ACTGMAP
                    BMCACTB2 ACTMSG
                    BMCACTB2 ACTRECV
                    BMCACTB2 ACTSEA
                    BMCACTB2 ACTSEA2
                    BMCACTB2 ACTSEA2X
                    BMCACTB2 ACTSESS
                    BMCACTB2 ACTSQL
                    BMCACTB2 ACTVIEW
                    BMCACTB2 EDITUSER
                    BMCACTC1 ACTATTR
                    BMCACTC1 ACTAUDT
                    BMCACTC1 ACTAVAL
                    BMCACTC1 ACTCVAL
                    BMCACTC1 ACTDLG
                    BMCACTC1 ACTDLGA
                    BMCACTC1 ACTFCRS
                    BMCACTC1 ACTGMAP
                    BMCACTC1 ACTMSG
                    BMCACTC1 ACTRECV
                    BMCACTC1 ACTSEA
                    BMCACTC1 ACTSEA2
                    BMCACTC1 ACTSEA2X
                    BMCACTC1 ACTSESS
                    BMCACTC1 ACTSQL
                    BMCACTC1 ACTVIEW
                    BMCACTC1 EDITUSER
                    BMCACTDB ACTATTR
                    BMCACTDB ACTAUDT
                    BMCACTDB ACTAVAL
                    BMCACTDB ACTCVAL
                    BMCACTDB ACTDLG
                    BMCACTDB ACTDLGA
                    BMCACTDB ACTFCRS
                    BMCACTDB ACTGMAP
                    BMCACTDB ACTMSG
                    BMCACTDB ACTRECV
                    BMCACTDB ACTSEA
                    BMCACTDB ACTSEA2
                    BMCACTDB ACTSEA2X
                    BMCACTDB ACTSESS
                    BMCACTDB ACTSQL
                    BMCACTDB ACTVIEW
                    BMCACTDB EDITUSER
                    BMCASUDB BMCACTN
                    BMCASUDB BMCACTSS
                    BMCASUDB BMCCACTN
                    BMCASUDB BMCDOWID
                    BMCASUDB BMCDSYNC
                    BMCASUDB BMCEXDEF
                    BMCASUDB BMCOAJC
                    BMCASUDB BMCOBJAC
                    BMCASUDB BMCRSEV
                    DBNAME   NAME
                    ---------+---------+---------+---------+---------+---------+
                    BMCASUDB BMCRSEX
                    BMCASUDB BMCSERV
                    BMCASUDB BMCSVDD
                    BMCASUDB BMCSVDDD
                    BMCASUDB BMCSVSN
                    BMCASUDB BMCSVSNT
                    BMCASUDB BMCTHRES
                    BMCASUDB BMCVENDR
                    BMCATSDB BMCHIST
                    BMCATSDB BMCRSCD
                    BMCATSDB BMCRSCDS
                    BMCATSDB BMCRSCO
                    BMCATSDB BMCRSCS
                    BMCATSDB BMCRSIP
                    BMCATSDB BMCRSIPD
                    BMCATSDB BMCRSIX
                    BMCATSDB BMCRSKD
                    BMCATSDB BMCRSKDS
                    BMCATSDB BMCRSKS
                    BMCATSDB BMCRSKT
                    BMCATSDB BMCRSLB
                    BMCATSDB BMCRSSTO
                    BMCATSDB BMCRSTB
                    BMCATSDB BMCRSTP
                    BMCATSDB BMCRSTPD
                    BMCATSDB BMCRSTS
                    BMCATSDB BMCRSVOL
                    BMCGUD   BMCCNUSD
                    BMCGUD   BMCCONN
                    BMCGUD   BMCFOLDR
                    BMCGUD   BMCTMCNT
                    BMCGUD   BMCTMPL
                    BMCGUD   BMCUSPR
                    BMCGUD   BMCUSPRF
                    BMCGUD   BMCWKSPC
                    BMCGUD   BMCWSCNT
                    BMCPERDB BMCUPLAN
                    BMCPERF  BMCUPLAN
                    BMCUTIDB BMCDICT
                    BMCUTIDB BMCGAUTH
                    BMCUTIDB BMCGROPT
                    BMCUTIDB BMCHIST
                    BMCUTIDB BMCHISTO
                    BMCUTIDB BMCHISTS
                    BMCUTIDB BMCLGRNX
                    BMCUTIDB BMCOBDEF
                    BMCUTIDB BMCOBSET
                    BMCUTIDB BMCOBSQL
                    BMCUTIDB BMCPRDRG
                    BMCUTIDB BMCSSTTS
                    BMCUTIDB BMCSSWTS
                    BMCUTIDB BMCSYNC
                    BMCUTIDB BMCTRANS
                    BMCUTIDB BMCUTIL
                    BMCUTIDB BMCXCOPY
//*RUNSTAT IBM DB1 BASE
//*RUNSTAT IBM DB1 BASE
//*RUNSTAT IBM DB1 BASE
//*RUNSTAT IBM DB1 BASE
//*RUNSTAT IBM DB1 BASE
//*RUNSTAT IBM DB1 BASE
//*RUNSTAT IBM DB1 BASE
RUNSTATS TABLESPACE DSNDB06.SYSTSTAB
TABLE(ALL) SAMPLE 25
INDEX(ALL)
//
RUNSTATS TABLESPACE SYSIBM.SYSTABLES
TABLE(ALL) SAMPLE 25
INDEX(ALL)
//
RUNSTATS TABLESPACE SYSIBM.SYSTABLESPACE
TABLE(ALL) SAMPLE 25
INDEX(ALL)
//
RUNSTATS TABLESPACE BMCACADB.AFR_CADEF
TABLE(ALL) SAMPLE 25
INDEX(ALL)
//
RUNSTATS TABLESPACE DSN8D12A.DSN8S12E
TABLE(ALL) SAMPLE 25
INDEX(ALL)
//
           INCLUDE TABLESPACE  DSNDB01.DBD01
           INCLUDE TABLESPACE  DSNDB01.SCT02
           INCLUDE TABLESPACE  DSNDB01.SPT01
           INCLUDE TABLESPACE  DSNDB01.SYSDBDXA
           INCLUDE TABLESPACE  DSNDB01.SYSSPUXA
           INCLUDE TABLESPACE  DSNDB01.SYSSPUXB
           INCLUDE TABLESPACE  DSNDB06.SYSTSFAU
           INCLUDE TABLESPACE  DSNDB06.SYSTSCOL
           INCLUDE TABLESPACE  DSNDB06.SYSTSTSP
           INCLUDE TABLESPACE  DSNDB06.SYSTSTPT
           INCLUDE TABLESPACE  DSNDB06.SYSTSTAB
           INCLUDE TABLESPACE  DSNDB06.SYSTSIXS
           INCLUDE TABLESPACE  DSNDB06.SYSTSIXT
           INCLUDE TABLESPACE  DSNDB06.SYSTSIXR
           INCLUDE TABLESPACE  DSNDB06.SYSTSIPT
           INCLUDE TABLESPACE  DSNDB06.SYSTSREL
           INCLUDE TABLESPACE  DSNDB06.SYSTSFOR
           INCLUDE TABLESPACE  DSNDB06.SYSTSSYN
           INCLUDE TABLESPACE  DSNDB06.SYSTSFLD
           INCLUDE TABLESPACE  DSNDB06.SYSTSTAU
           INCLUDE TABLESPACE  DSNDB06.SYSTSKEY
           INCLUDE TABLESPACE  DSNDB06.SYSTSDBA
           INCLUDE TABLESPACE  DSNDB06.SYSTSDBU
           INCLUDE TABLESPACE  DSNDB06.SYSGPAUT
           INCLUDE TABLESPACE  DSNDB06.SYSTSSTG
           INCLUDE TABLESPACE  DSNDB06.SYSTSVOL
           INCLUDE TABLESPACE  DSNDB06.SYSTSPLN
           INCLUDE TABLESPACE  DSNDB06.SYSTSPLA
           INCLUDE TABLESPACE  DSNDB06.SYSTSDBR
           INCLUDE TABLESPACE  DSNDB06.SYSTSPLD
           INCLUDE TABLESPACE  DSNDB06.SYSTSSTM
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKL
           INCLUDE TABLESPACE  DSNDB06.SYSTSPLY
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKG
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKS
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKX
           INCLUDE TABLESPACE  DSNDB06.SYSTSPVR
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKY
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKD
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKA
           INCLUDE TABLESPACE  DSNDB06.SYSUSER
           INCLUDE TABLESPACE  DSNDB06.SYSTSCKS
           INCLUDE TABLESPACE  DSNDB06.SYSTSCHX
           INCLUDE TABLESPACE  DSNDB06.SYSTSCKD
           INCLUDE TABLESPACE  DSNDB06.SYSTSSRG
           INCLUDE TABLESPACE  DSNDB06.SYSTSVEW
           INCLUDE TABLESPACE  DSNDB06.SYSTSVWD
           INCLUDE TABLESPACE  DSNDB06.SYSTSVWT
           INCLUDE TABLESPACE  DSNDB06.SYSTSVTR
           INCLUDE TABLESPACE  DSNDB06.SYSSTATS
           INCLUDE TABLESPACE  DSNDB06.SYSDDF
           INCLUDE TABLESPACE  DSNDB06.SYSTSAUX
           INCLUDE TABLESPACE  DSNDB06.SYSTSCON
           INCLUDE TABLESPACE  DSNDB06.SYSTSDAT
           INCLUDE TABLESPACE  DSNDB06.SYSTSDEP
           INCLUDE TABLESPACE  DSNDB06.SYSTSENV
           INCLUDE TABLESPACE  DSNDB06.SYSTSKYC
           INCLUDE TABLESPACE  DSNDB06.SYSTSPRM
           INCLUDE TABLESPACE  DSNDB06.SYSTSRAU
           INCLUDE TABLESPACE  DSNDB06.SYSTSROU
           INCLUDE TABLESPACE  DSNDB06.SYSPLUXA
           INCLUDE TABLESPACE  DSNDB06.SYSPLUXB
           INCLUDE TABLESPACE  DSNDB06.SYSTSSCM
           INCLUDE TABLESPACE  DSNDB06.SYSTSTBC
           INCLUDE TABLESPACE  DSNDB06.SYSTSTRG
           INCLUDE TABLESPACE  DSNDB06.SYSTSTRT
           INCLUDE TABLESPACE  DSNDB06.SYSSEQ
           INCLUDE TABLESPACE  DSNDB06.SYSSEQ2
           INCLUDE TABLESPACE  DSNDB06.SYSHIST
           INCLUDE TABLESPACE  DSNDB06.SYSGRTNS
           INCLUDE TABLESPACE  DSNDB06.SYSJAUXA
           INCLUDE TABLESPACE  DSNDB06.SYSJAUXB
           INCLUDE TABLESPACE  DSNDB06.SYSJAVA
           INCLUDE TABLESPACE  DSNDB06.SYSALTER
           INCLUDE TABLESPACE  DSNDB06.SYSTSOBX
           INCLUDE TABLESPACE  DSNDB06.SYSTSASC
           INCLUDE TABLESPACE  DSNDB06.SYSEBCDC
           INCLUDE TABLESPACE  DSNDB06.SYSTSUNI
           INCLUDE TABLESPACE  DSNDB06.SYSXML
           INCLUDE TABLESPACE  DSNDB06.SYSTSXTM
           INCLUDE TABLESPACE  DSNDB06.SYSTSXTS
           INCLUDE TABLESPACE  DSNDB06.SYSTARG
           INCLUDE TABLESPACE  DSNDB06.SYSROLES
           INCLUDE TABLESPACE  DSNDB06.SYSCONTX
           INCLUDE TABLESPACE  DSNDB06.SYSTSTSS
           INCLUDE TABLESPACE  DSNDB06.SYSTSISS
           INCLUDE TABLESPACE  DSNDB06.SYSTSADT
           INCLUDE TABLESPACE  DSNDB06.SYSTSCTL
           INCLUDE TABLESPACE  DSNDB06.SYSTSCTR
           INCLUDE TABLESPACE  DSNDB06.SYSTSCTD
           INCLUDE TABLESPACE  DSNDB06.SYSTSPEN
           INCLUDE TABLESPACE  DSNDB06.SYSTSPDT
           INCLUDE TABLESPACE  DSNDB06.SYSTSPDO
           INCLUDE TABLESPACE  DSNDB06.SYSTSTPF
           INCLUDE TABLESPACE  DSNDB06.SYSTSPTX
           INCLUDE TABLESPACE  DSNDB06.SYSTSATW
           INCLUDE TABLESPACE  DSNDB06.SYSTSPRH
           INCLUDE TABLESPACE  DSNDB06.SYSTSPHX
           INCLUDE TABLESPACE  DSNDB06.SYSTSATS
           INCLUDE TABLESPACE  DSNDB06.SYSTSATX
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRA
           INCLUDE TABLESPACE  DSNDB06.SYSTSPKC
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRY
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRP
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRO
           INCLUDE TABLESPACE  DSNDB06.SYSTSVAR
           INCLUDE TABLESPACE  DSNDB06.SYSTSVAT
           INCLUDE TABLESPACE  DSNDB06.SYSTSVAD
           INCLUDE TABLESPACE  DSNDB06.SYSTSVAU
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRE
           INCLUDE TABLESPACE  DSNDB06.SYSTSQRS
           INCLUDE TABLESPACE  DSNDB06.SYSTSIXC
           INCLUDE TABLESPACE  DSNDB06.SYSTSSFB
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQY
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQT
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQS
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQE
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQH
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQO
           INCLUDE TABLESPACE  DSNDB06.SYSTSDQD
           INCLUDE TABLESPACE  DSNDB06.SYSTSICO
           INCLUDE TABLESPACE  DSNDB06.SYSTSSES
           INCLUDE TABLESPACE  DSNDB06.SYSTSSNL
           INCLUDE TABLESPACE  DSNDB06.SYSTSSNX
           INCLUDE TABLESPACE  DSNDB06.SYSTSSXL
           INCLUDE TABLESPACE  DSNDB06.SYSTSSTA
           INCLUDE TABLESPACE  DSNDB06.SYSTSLVH
           INCLUDE TABLESPACE  DSNDB06.SYSTSISH DEFINED ALL
           INCLUDE TABLESPACE  DSNDB06.SYSTSTSH DEFINED ALL

./ ADD NAME=RUNSTATS
//SYSILEX  JOB 1000,'RUNSTAT    ',MSGLEVEL=(1,1),                       JOB01102
//         CLASS=O,MSGCLASS=T,NOTIFY=&SYSUID,COND=(5,LT)                00002016
//*------------------------------------------------------------*        00002100
//*  CE JCL PERMET DE FAIRE DES RUNSTATS                                00002200
//*------------------------------------------------------------*        00002900
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2S,RUNSTAT1'                        00006027
//UTPRINT  DD SYSOUT=*                                                  00008000
//SYSPRINT DD SYSOUT=*                                                  00009000
//SYSUDUMP DD SYSOUT=*                                                  00010000
//SYSUT1   DD UNIT=3390,SPACE=(CYL,(8,3),RLSE)                          00050000
//SYSIN    DD  *                                                        00060020
 RUNSTATS TABLESPACE DMRPRDB1.DMRPRTAD
   UPDATE SPACE
   SHRLEVEL REFERENCE                                                   00072927

./ ADD NAME=SAVEBSDS
//SYSILEX  JOB (ACCT,INFO),'DB2X BSDS',
//     CLASS=E,MSGCLASS=X,MSGLEVEL=(1,1),
//     NOTIFY=&SYSUID
//*--------------------------------------------------------------------
//*             SAUVEGARDE DFDSS DES BSDS
//*      REMPLACER DB2X PAR LE NOM DU DB2 (DB2X, DB2P ...)
//*--------------------------------------------------------------------
//*
//ST010   EXEC PGM=ADRDSSU,REGION=4096K,PARM='UTILMSG=YES'
//SYSPRINT DD SYSOUT=*
//SORTIE   DD DSN=SYST.SAVE.DB2X.BSDS,DISP=(,CATLG,DELETE),
//         UNIT=3390,VOL=SER=SYST06,
//         SPACE=(CYL,(5,5),RLSE),
//         DCB=(DSCB,BLKSIZE=27998)
//SYSIN    DD *
  DUMP OUTDD(SORTIE)                      -
  DS(INCL(DB2X.BSDS*.**))  -
  TOL(ENQF) ALLEXCP
/*

./ ADD NAME=SAVE1
//SYSILEA  JOB 1000,'COMPIL     ',MSGLEVEL=(1,1),                       00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE                             00002000
//*------------------------------------------------------------*        00002100
//*  CE JCL PERMET DE SAUVEGARDER PHYSIQUEMENT LES TABLES DU            00002200
//*  CATALOGUE (DSND06 ET DSNDB01)                                      00002300
//*------------------------------------------------------------*        00002700
//SAVEDFD  EXEC PGM=ADRDSSU,PARM='UTILMSG=YES',REGION=4M                00002800
//SYSPRINT DD SYSOUT=*                                                  00002900
//OUT      DD DSN=SYSILE.SAUVE.BSDS,                                    00003000
//         DISP=(NEW,CATLG,DELETE),                                     00004000
//*        UNIT=CTAPE,LABEL=(1,SL),DCB=DSCB                             00005000
//         SPACE=(CYL,(1,1),RLSE),VOL=SER=SYST01,UNIT=3390              00006001
//SYSIN    DD *                                                         00007000
  DUMP  OUTDD(OUT) -                                                    00008000
  DATAS(INCL(DB2S.BSDS*.**)) -                                          00009000
  ALLEXCP SHR TOL(ENQF)                                                 00009400
/*                                                                      00009500

./ ADD NAME=SDSBMACS
DB2910P.SDSNMACS                             SYST01
SYS
SYS2.DB2.SDSNMACS                            DISS1A
SYS3.DB2.V1210.SDSNMACS                      DLIB14
SYS4.DB2.SDSNMACS                            DISS2C

./ ADD NAME=SDSNEXIT
SYS3.DB2.V1210.SDSNEXIT                      DLIB14
SYST

DB2S.SDSNEXIT                                SYS003
DB2W.SDSNEXIT                                SYS003
USERPRO

PROX58.PROX58.PDS.DB2L.SDSNEXIT              QAL600
PROX58.PROX58.PDS.DB2P.SDSNEXIT              EXP604
CA25S

SYS2.DB2.SDSNEXIT                            DISS2C

./ ADD NAME=SDSNLOAD
SYS3.DB2.V1210.SDSNLOAD
CATALOG.SSYST
SYSTME.DB2.SDSNLOAD
CATALOG.PUSERPRO
SYSTME.DB2.SDSNLOAD
CATALOG.MCA25S
SYS2.DB2.SDSNLOAD

./ ADD NAME=SDSNSAMP
NONVSAM  SYS2.DB2.SDSNSAMP
NONVSAM  SYS3.DB2.V1210.SDSNSAMP
NONVSAM  SYS4.DB2.SDSNSAMP
NONVSAM  DB2S.NEW.SDSNSAMP
NONVSAM  DB2W.DB2910.SDSNSAMP
NONVSAM  DB2W.NEW.SDSNSAMP

./ ADD NAME=SELREO
//SYSILEX  JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=O,NOTIFY=&SYSUID
//*--------------------------------------------------------------------
//*   EXECUTION D'ORDRE DB2 EN BATCH
//*--------------------------------------------------------------------
//ST005   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2V.RUNLIB.LOAD,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2V)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
 SELECT DBNAME,TSNAME,PERCACTIVE,PERCDROP
 FROM SYSIBM.SYSTABLEPART
 WHERE  DBNAME LIKE 'DSNDB%' ;
 SELECT DBNAME,TSNAME,CARD,NEARINDREF,FARINDREF,PERCDROP
 FROM SYSIBM.SYSTABLEPART
 WHERE ((CARD > 0 AND (NEARINDREF + FARINDREF) * 100 / CARD > 0)
 OR PERCDROP > 0) AND (DBNAME LIKE 'DSNDB%')  ;
 SELECT IXNAME,IXCREATOR,LEAFDIST
 FROM SYSIBM.SYSINDEXPART
 WHERE LEAFDIST > 200 AND IXCREATOR = 'SYSIBM' ;
//
 SELECT DBNAME,TSNAME,TIMESTAMP,ICTYPE,DSNUM,DSNAME
 FROM SYSIBM.SYSCOPY
 WHERE ICTYPE IN ('F','I')
 ORDER BY DBNAME,TSNAME,TIMESTAMP ;
//

./ ADD NAME=SENDMAI5
//SENDMAI5 JOB 1,DB2,MSGLEVEL=(1,1),CLASS=Z,COND=(4,LT),
//         MSGCLASS=T,NOTIFY=&SYSUID,REGION=0M,RESTART=*
//*ENVOI DU MESSAGE DE FIN DE JOB
//MSG      EXEC PGM=IKJEFT1B,DYNAMNBR=20
//STEPLIB  DD  DSN=SYS4.XMITIP.LOAD,DISP=SHR
//SYSPROC  DD  DSN=SYS5.XMITIP.EXEC.LP2,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//MSG      DD *
 BLABLABLADB2
//FICHIER   DD DSN=SYS019.DB2S.SYSTABL,DISP=SHR
//*FICHIER   DD DSN=SYS019.DB2SS.SYSPACKA,DISP=SHR
//*FICHIER   DD DSN=SYS019.DB2SS.SYSTABS,DISP=SHR
//*FICHIER   DD DSN=SYS019.DB2SS.SYSTABL,DISP=SHR
//SYSTSIN  DD *
 XMITIP (Raymond.LEROUX-externe@euro-securities-partners.com) +
 SUBJECT 'CSV' +
    FILEDD (FICHIER) +
    FILENAME (DB2S_SYStable) +
    FORMAT (TXT) +
    MSGDD MSG
//
    FILENAME (DB2S_SYSTABS) +
    FILENAME (DB2S_SYSTABLE) +
    FILENAME (DB2S_SYSTABLE) +

./ ADD NAME=SMPDB2
//SYSPLA1  JOB 1000,'SYST-GRANIE',REGION=5M,                            00001003
//             CLASS=O,MSGCLASS=X,MSGLEVEL=(1,1),NOTIFY=SYSPLA          00002003
//*                                                                     00050000
//RECAPPL EXEC SMPE,                                                    00061000
//             CSI='DBSSMPE.GLOBAL.CSI',REGION=6M                       00071001
//*MPPTFIN DD DISP=(OLD,KEEP),UNIT=TAPE,VOL=SER=SMPPTF,                 00101000
//*        LABEL=(1,NL),DSN=SMPMCS,                                     00101100
//*        DCB=(RECFM=FB,LRECL=80,BLKSIZE=7200)                         00102000
//SMPTLIB  DD UNIT=3390,DISP=SHR,VOL=SER=ESA2M2                         00103000
//*           SPACE=(CYL,(50,20,500))                                   00104000
//SMPLOG DD DUMMY                                                       00111000
//SMPHOLD  DD  DUMMY                                                    00131000
//SMPEIN   DD  *                                                        00140000
  SET BDY(DBSTZN) .                                                     00140502
  APPLY S(UL65253) GROUPEXTEND BYPASS(HOLDSYS(ACTION)) .                00140804
/*                                                                      00140900

./ ADD NAME=SPUFI
//DSNTEP2   JOB ACCT£,                                                  00010000
//             DB2,                                                     00020000
//             NOTIFY=&SYSUID,                                          00030000
//             MSGCLASS=T                                               00040000
//MYLIB JCLLIB ORDER=(SYS019.LP2.MVS,                                   00050000
//      SYS019.LP2.DB2,                                                 00060000
//      SYS1.PROCLIB.&SYSNAME,                                          00061000
//      SYS1.SACBCNTL)                                                  00070000
//PH01S06 EXEC PGM=IKJEFT01,DYNAMNBR=20,COND=(4,LT)
//STEPLIB  DD DSN=SYS2.DB2.SDSNLOAD,DISP=SHR
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
  DSN SYSTEM(DB2S)
 RUN PROGRAM(DSNTEP2)                -                                  00050000
 LIB ('DB2S.RUNLIB.LOAD')                                               00060000
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSIN    DD  *
SET CURRENT SQLID = USER
 CREATE TABLESPACE BMCACTN
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*SYS3.AMIOPS.V2302.ASUINST(ASUINIT1)
*
 CREATE TABLESPACE BMCACTSS
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*
 CREATE TABLESPACE BMCCACTN
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*
 CREATE TABLESPACE BMCDSYNC
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*
 CREATE TABLESPACE BMCEXDEF
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*
 CREATE TABLESPACE BMCOAJC
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*
 CREATE TABLESPACE BMCOBJAC
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*
 CREATE TABLESPACE BMCRSEV
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*
 CREATE TABLESPACE BMCRSEX
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*
 CREATE TABLESPACE BMCSERV
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*
 CREATE TABLESPACE BMCSVDD
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*
 CREATE TABLESPACE BMCSVDDD
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*
 CREATE TABLESPACE BMCSVSN
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*
  CREATE TABLESPACE BMCSVSNT
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*
  CREATE TABLESPACE BMCTHRES
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*
  CREATE TABLESPACE BMCVENDR
         IN AMIDB2SU
         USING STOGROUP AMIOPSSG
         PRIQTY -1
         SECQTY -1
         DSSIZE 4G
         SEGSIZE 64
         MAXPARTITIONS 5
         BUFFERPOOL BP4
         LOCKSIZE ANY
         CLOSE NO
*
*
*=======================================================================
-SYNC 008900 END OF CREATE DATABASE AND TABLESPACES WORKLIST
*---------------------------------------------------------------------
*-  RETURN SQLID BACK TO PREVIOUS
*---------------------------------------------------------------------
*

./ ADD NAME=SSJCL
SYS3.AMIOPS.V202204.BBSAMP(SSJCL)                                       00010000
//SSJCL    JOB                     <=== CHANGE - JOBCARD                00020000
//SSJCL    PROC PREFIX='XXXXX',    <=== CHANGE - PREFIX                 00030000
//             START='WARM',       <=== REVIEW - WARM/COLD START OPTION 00040000
//             SS='SSA1',          <=== REVIEW - B&B SUBSYSTEM ID       00050000
//             VPOOL='NORESET',    <=== REVIEW - SHARED POOL OPTION     00060000
//             CSMALTDB='NO'       <=== REVIEW - CSM ALTERNATE DB       00070000
//*                                                                     00080000
//*-------------------------------------------------------------------* 00090000
//*          USE OF PARAMETERS IN THIS JCL                            * 00100000
//*                                                                   * 00110000
//*  PREFIX   - HIGH-LEVEL QUALIFIER OF THE SUBSYSTEM DATA SETS       * 00120000
//*                                                                   * 00130000
//*  START    - WARM/COLD.  SHOULD NORMALLY SET TO WARM.  COLD        * 00140000
//*             SHOULD ONLY BE USED WHEN REQUESTED BY CUSTOMER        * 00150000
//*             SUPPORT PERSONNEL                                     * 00160000
//*                                                                   * 00170000
//*  SS       - 1 TO 4 CHARACTER BBI-SS SUBSYSTEM IDENTIFIER          * 00180000
//*                                                                   * 00190000
//*  VPOOL    - RESET/NORESET                                         * 00200000
//*             OPTION TO RESET OR NOT RESET THE SHARED VARIABLE POOL * 00210000
//*             DURING SS COLD START.                                 * 00220000
//*             (IF NOT SPECIFIED, DEFAULT TO NORESET)                * 00230000
//*                                                                   * 00240000
//*                                                                   * 00250000
//************* USED BY BMC AMI Ops Automation ************************ 00260000
//*                                                                   * 00270000
//*                                                                   * 00280000
//*  CSMALTDB - (NO/YES/RESTORE/ALT DB MBR , YES/DEFAULT/RULESET MBR) * 00290000
//*                                                                   * 00300000
//*             OPTION TO SPECIFY AN ALTERNATE CSM DATABASE MEMBER    * 00310000
//*             AND CSM RULESET MEMBER DURING SS COLD START.          * 00320000
//*                                                                   * 00330000
//*             PARENTHESIS REQUIRED IF BOTH THE ALTERNATE DATABASE   * 00340000
//*             AND RULESET MEMBER SUBPARAMETERS ARE SPECIFIED        * 00350000
//*             (I.E. CSMALTDB=(YES,DEFAULT))                         * 00360000
//*                                                                   * 00370000
//*             IF ONLY AN ALTERNATE DB IS NEEDED, DO NOT ENCLOSE     * 00380000
//*             THE PARAMETER IN PARENTHESIS (I.E. CSMALTDB=YES)      * 00390000
//*                                                                   * 00400000
//*             THE ALTERNATE DB PARAMETER MUST BE SPECIFIED WITH THE * 00410000
//*             ALTERNATE RULESET PARAMETER.                          * 00420000
//*                                                                   * 00430000
//*             NO          = DEFAULT SETTING FOR BOTH SUBPARAMETERS. * 00440000
//*                           INDICATES ALTERNATE DATABASE PROCESSING * 00450000
//*                           NOT TO BE USED DURING INITIALIZATION.   * 00460000
//*                                                                   * 00470000
//*             YES         = ISSUE WTOR REQUESTING EITHER ALTERNATE  * 00480000
//*                           DATABASE OR RULESET MEMBER TO BE USED.  * 00490000
//*                                                                   * 00500000
//*             DEFAULT     = RULES PROCESSOR WILL USE THE CURRENT    * 00510000
//*                           CONTENTS OF AAORULCM FOR CSM.           * 00520000
//*                                                                   * 00530000
//*             RESTORE     = CSM WILL INITIALIZE WITH THE DATABASE   * 00540000
//*                           AND RULESET MEMBER IN FORCE BEFORE THE  * 00550000
//*                           ALTERNATE DATABASE WAS EMPLOYED.        * 00560000
//*                                                                   * 00570000
//*             ALT DB MBR  = SEVEN CHARACTER MEMBER IN FIRST DATASET * 00580000
//*                           IN BBPARM CONCATENATION CONTAINING THE  * 00590000
//*                           ALTERNATE DATABASE DEFINITIONS TO BE    * 00600000
//*                           USED.  MUST BE PREFIXED WITH 'CSM'.     * 00610000
//*                                                                   * 00620000
//*             RULESET MBR = EIGHT CHARACTER MEMBER IN FIRST DATASET * 00630000
//*                           IN BBPARM CONCATENATION CONTAINING THE  * 00640000
//*                           ALTERNATE RULESET DEFINITIONS TO BE     * 00650000
//*                           USED.  MUST BE PREFIXED WITH 'AAORUL'.  * 00660000
//*                                                                   * 00670000
//********************************************************************* 00680000
//*                                                                   * 00690000
//* NOTE: THE DISPATCHING PRIORITY SHOULD BE HIGHER THAN THE          * 00700000
//*       SUBSYSTEMS BEING MONITORED BY THE SS                        * 00710000
//*                                                                   * 00720000
//*-------------------------------------------------------------------* 00730000
//SSJCL    EXEC PGM=SSLOAD,REGION=512M,TIME=1440,                       00740000
//         PARM='&SS,&START,&VPOOL,&CSMALTDB'                           00750000
//*                                                                     00760000
//* BMC AMI Ops Monitor for Db2 requires the Db2 DSNLOAD library. When  00770000
//* installing BMC AMI Ops Monitor for Db2, concatenate by uncommenting 00780000
//* the following DSNLOAD statement and specify the HLQ for the         00790000
//* DSNLOAD.                                                            00800000
//* NOTE: NOT REQUIRED IF THE LIBRARY IS IN THE LINKLST.                00810000
//*                                                                     00820000
//STEPLIB  DD  DSN=&PREFIX..BBLINK,DISP=SHR                             00830000
//*        DD  DSN=HLQ.DSNLOAD                                          00840000
//BBIPARM  DD  DSN=&PREFIX..BBPARM,DISP=SHR                             00850000
//*                                                                     00860000
//* Only BMC AMI Ops Automation requires the SYSPROC library            00870000
//*                                                                     00880000
//*SYSPROC DD  DSN=&PREFIX..BBPROC,DISP=SHR                             00890000
//BBIJRNL1 DD  DSN=&PREFIX..&SS..BBIJRNL1,DISP=SHR  SS JOURNAL LOG1     00900000
//BBIJRNL2 DD  DSN=&PREFIX..&SS..BBIJRNL2,DISP=SHR  SS JOURNAL LOG2     00910000
//BBIVARS  DD  DSN=&PREFIX..&SS..BBIVARS,DISP=OLD   SS PROFILE POOL     00920000
//ABNLDUMP DD  DUMMY                                                    00930000
//*SYSUDUMP DD  SYSOUT=*,HOLD=YES                                       00940000
//*                                                                     00950000
//* THE FOLLOWING DD STATEMENTS MAY BE UNCOMMENTED IF                   00960000
//* SUBSYSTEM IMAGE LOGGING IS DESIRED.                                 00970000
//*                                                                     00980000
//*BBIIMAG1 DD  DSN=&PREFIX..&SS..BBIIMAG1,DISP=SHR SS IMAGE LOG1       00990000
//*BBIIMAG2 DD  DSN=&PREFIX..&SS..BBIIMAG2,DISP=SHR SS IMAGE LOG2       01000000
//*                                                                     01010000
//* THE FOLLOWING DD STATEMENT IS FOR DIAGNOSTIC PURPOSES ONLY;         01020000
//* IT SHOULD BE UNCOMMENTED ONLY BY DIRECTION OF CUSTOMER SUPPORT.     01030000
//*                                                                     01040000
//*BBITST DD SYSOUT=*,HOLD=YES                                          01050000
//*                                                                     01060000
//         PEND                                                         01070000
//         EXEC SSJCL                                                   01080000

./ ADD NAME=STAREO
//SYSILEA  JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=I,NOTIFY=SYSILE
//*--------------------------------------------------------------------
//*   EXECUTION D'ORDRE DB2 EN BATCH
//*     - LOADLIB = DB2L220.RUNLIB.LOAD POUR DB2L
//*     - LOADLIB = DB2L220.RUNLIB.LOAD POUR DB2L
//*--------------------------------------------------------------------
//ST005   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2L.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2L)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
 SELECT DBNAME,TSNAME
 FROM SYSIBM.SYSTABLEPART
 WHERE DBNAME='BPPG0001' AND TSNAME='S2G90U01' AND
 ((CARD > 0 AND (NEARINDREF + FARINDREF) * 100 / CARD > 0)
 OR PERCDROP > 0);
 SELECT CARD,NEARINDREF,FARINDREF,PERCDROP
 FROM SYSIBM.SYSTABLEPART
 WHERE DBNAME='BPPG0001' AND TSNAME='S2G90U01';
 SELECT NEAROFFPOS,FAROFFPOS,LEAFDIST
 FROM SYSIBM.SYSINDEXPART
 WHERE IXCREATOR='PROD'
 AND IXNAME IN ('I2G90IX1','I2G90OM1');
/*
//

./ ADD NAME=STATBUFL
//SYSILEA   JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=O,NOTIFY=SYSILE,COND=(4,LT)
//*-----------------------------------------------------------------
//*  STATS SYSTEME AVEC DB2PM
//*-----------------------------------------------------------------
//PEV410  EXEC PGM=DB2PM
//STEPLIB  DD  DSN=OMEGAMON.DB2V410.RECT.RKANMODU,DISP=SHR
//         DD  DSN=OMEGAMON.DB2V410.RECT.RKANMOD,DISP=SHR
//INPUTDD  DD  DSN=SAVED.SMF.DB2.BRNQ(0),DISP=SHR
//SORTWK01 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK02 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK03 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK04 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK05 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK06 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK07 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK08 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK09 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//SORTWK10 DD UNIT=WORKDA,SPACE=(CYL,(30,100))
//DDNAME1  DD  DSN=DB2L.SYSTEME.STAT,DISP=SHR
//DPMLOG   DD  SYSOUT=*
//DPMPARMS DD  DSN=OMEGAMON.DB2V410.REPORT,DISP=SHR
//SYSOUT   DD  SYSOUT=*
//SYSIN    DD  *
STATISTICS
            TRACE
                     DDNAME(DDNAME1)
EXEC
//
//*-----------------------------------------------------------
//* STATS BUFFER POOL
//*-----------------------------------------------------------
//STATBP   EXEC PGM=IKJEFT01,PARM='%RSTATBPM'
//SYSPROC  DD  DISP=SHR,DSN=SYST.DB2.JCLLIB
//SYSTSPRT DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//LISTSTAT DD  DISP=(SHR),DSN=DB2L.SYSTEME.STAT
//RPTBP    DD  DISP=(,CATLG),VOL=SER=SYS924,
//             DSN=DB2L.SBUFFER.STAT(+1),
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//SYSIN    DD  DUMMY
//SYSTSIN  DD  DUMMY

./ ADD NAME=STATBUFP
//SYSILEA   JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=O,NOTIFY=SYSILE,COND=(4,LT)
//*-----------------------------------------------------------
//* STATS BUFFER POOL
//*-----------------------------------------------------------
//STATBP   EXEC PGM=IKJEFT01,PARM='%RSTATBP1'
//SYSPROC  DD  DISP=SHR,DSN=SYST.DB2.JCLLIB
//SYSTSPRT DD  SYSOUT=*
//SYSOUT   DD  SYSOUT=*
//LISTSTAT DD  DISP=(SHR),DSN=SYSILE.DB2P.BUFSTAT
//RPTBP    DD  DISP=SHR,DSN=SYSILE.DB2P.BUFSTAT.RESULT
//SYSIN    DD  DUMMY
//SYSTSIN  DD  DUMMY

./ ADD NAME=STATDB2L
//SYSILEA   JOB (T002550),'IEBCOPY',                                    00001003
//             NOTIFY=&SYSUID,                                          00004203
//             CLASS=Z,MSGCLASS=T,MSGLEVEL=(1,1)                        00005003
//*-------------------------------------------------------------------
//*  REPORT ACCOUNTING  AND SYSTEM
//*-------------------------------------------------------------------
//STATDB2L EXEC PGM=NSIGHTRW,REGION=4096K
//*
//*TEPLIB  DD  DISP=SHR,                CA-INSIGHT LOAD LIBRARY
//*            DSN=CAI.P01H.LOADLIB
//*
//SYSPARMS DD  DISP=SHR,                BATCH REPORT WRITER SYSPARMS
//             DSN=CAIQ.IDB2.DB2L.PARMLIB(IDB2PRMS)
//*
//DB2DDN   DD  DISP=SHR,
//             DSN=SAVED.SMF.DB2.BRNQ(0)
//*BGIN    DD  DSN=CAIQ.R150.CDBATREQ(BTACTDE£),DISP=SHR
//*BGIN    DD  DSN=CAIQ.R150.CDBATREQ(BTACTDET),DISP=SHR
//*BGIN    DD  DSN=CAIQ.R150.CDBATREQ(BTACTDES),DISP=SHR
//*DBGIN    DD  DSN=CAIQ.R150.CDBATREQ(BTACTFK),DISP=SHR
//DBGIN    DD  DSN=CAIQ.R150.CDBATREQ(BTACTSM1),DISP=SHR
//*DBGIN    DD  DSN=CAIQ.R150.CDBATREQ(BTACTSMP),DISP=SHR
//*
//*     PRINT FILE ALLOCATIONS THAT CORRESPOND TO THE
//*     REPORT TGTREQ IN INPUT TO THE DBGIN DD STMT
//*
//*BTACTSMS DD  DSN=DB2L.BATCH.STAT(+1),DISP=(,CATLG),VOL=SER=SYS900,
//*             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//*             DCB=DSCB
//BTACTDET DD  SYSOUT=*
//BTACTDES DD  SYSOUT=*
//BTACTSMP DD  SYSOUT=*
//BTACTSMS DD  SYSOUT=*
//BTACTPAG DD  SYSOUT=*
//BTACTFK  DD  SYSOUT=*
//*BTACTDE2 DD  SYSOUT=*
//DBGPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*

./ ADD NAME=STATDB2O
//SYSILEA   JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=O,NOTIFY=SYSILE
//*-------------------------------------------------------------------
//*  REPORT ACCOUNTING  AND SYSTEM
//*-------------------------------------------------------------------
//STATDB2O EXEC PGM=NSIGHTRW,REGION=4096K
//SYSPARMS DD  DISP=SHR,                BATCH REPORT WRITER SYSPARMS
//             DSN=CAIR.IDB2.DB2O.PARMLIB(IDB2PRMS)
//*
//DB2DDN   DD  DISP=SHR,                GTF OR SMF SAMPLE DATA INPUT
//             DSN=SAVED.SMF.DB2.BRNR(0)
//         DD  DISP=SHR,DSN=SAVED.SMF.DB2.BRNR.JOUR(0)
//DBGIN    DD  DSN=CAIR.R120.TGTREQ(BTACTSM1),DISP=SHR
//*        DD  DSN=CAIR.R120.TGTREQ(BTSTATR1),DISP=SHR
//*        DD  DSN=CAIR.R120.TGTREQ(BTSTASM1),DISP=SHR
//*        DD  DSN=CAIR.R120.TGTREQ(BTSTASM2),DISP=SHR
//*
//*     PRINT FILE ALLOCATIONS THAT CORRESPOND TO THE
//*     REPORT TGTREQ IN INPUT TO THE DBGIN DD STMT
//*
//BTACTSMS DD  SYSOUT=*
//BTSTATR1 DD  SYSOUT=*
//BTSTASM1 DD  SYSOUT=*
//BTSTASM2 DD  SYSOUT=*
//*
//DBGPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*

./ ADD NAME=STATDB2P
//SYSLHUA   JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),                JOB02298
//         CLASS=O,NOTIFY=SYSLHU,COND=(4,LT),REGION=8M
//*-------------------------------------------------------------------
//*   STATS ACCOUNTING
//*   STATS SYSTEME
//*-------------------------------------------------------------------
//*-------------------------------------------------------------------
//*  REPORT ACCOUNTING  AND SYSTEM
//*-------------------------------------------------------------------
//STATDB2P EXEC PGM=NSIGHTRW
//*
//*TEPLIB  DD  DISP=SHR,                CA-INSIGHT LOAD LIBRARY
//*            DSN=CAI.R120.LOADLIB
//*
//SYSPARMS DD  DISP=SHR,                BATCH REPORT WRITER SYSPARMS
//             DSN=CAI.IDB2.DB2P.PARMLIB(IDB2PRMS)
//*
//DB2DDN   DD  DISP=SHR,                GTF OR SMF SAMPLE DATA INPUT
//             DSN=SAVED.SMF.DB2(0)
//*
//*OBIDTBL  DD  DISP=SHR,                OBID TRANSLATIONS
//*             DSN=CAI.R120.DB2S.OBID
//*
//*     THESE TGTREQ CREATE DB2 ACCOUNTING SUMMARIES,
//*     ACCOUNTING TRACES, AND STATISTICS SUMMARIES
//*
//DBGIN    DD  DSN=CAIP.R150.CDBATREQ(BTACTSM1),DISP=SHR
//*BGIN    DD  DSN=CAIP.R150.CDBATREQ(BTACTDET),DISP=SHR
//*BGIN    DD  DSN=CAIP.R150.CDBATREQ(BTACTSMB),DISP=SHR
//*BGIN    DD  DSN=CAIP.R150.CDBATREQ(BTACTSMC),DISP=SHR
//*BGIN    DD  DSN=CAIP.R150.CDBATREQ(BTACTSMC),DISP=SHR
//*BGIN    DD  DSN=CAIP.R150.CDBATREQ(BTSTATR1),DISP=SHR
//*BGIN    DD  DSN=CAIP.R150.CDBATREQ(BTSTASM1),DISP=SHR
//*BGIN    DD  DSN=CAIP.R150.CDBATREQ(BTSTASM2),DISP=SHR
//*BGIN    DD  DSN=CAIP.R150.CDBATREQ(BTACTPAG),DISP=SHR
//*BGIN    DD  DSN=CAIP.R150.CDBATREQ(BTACTSMP),DISP=SHR
//*
//*     PRINT FILE ALLOCATIONS THAT CORRESPOND TO THE
//*     REPORT TGTREQ IN INPUT TO THE DBGIN DD STMT
//*
//*TACTPRO DD  DSN=METH.STATS.PROTIDE,DISP=MOD
//*BTACTPAG DD  DSN=DB2P.STATS.PAGODE,DISP=MOD
//BTACTSMS DD  SYSOUT=*
//BTSTATR1 DD  SYSOUT=*
//BTSTASM1 DD  SYSOUT=*
//BTSTASM2 DD  SYSOUT=*
//BTACTDET DD  SYSOUT=*
//BTACTSMP DD  SYSOUT=*
//BTACTSMC DD  SYSOUT=*
//*
//DBGPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*

./ ADD NAME=STATDB2R
//SYSILEA   JOB (T002550),'IEBCOPY',                                    00001003
//             NOTIFY=&SYSUID,                                          00004203
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00005003
//*-------------------------------------------------------------------
//*  REPORT ACCOUNTING  AND SYSTEM
//*-------------------------------------------------------------------
//STATDB2C EXEC PGM=NSIGHTRW,REGION=4096K
//*
//SYSPARMS DD  DISP=SHR,                BATCH REPORT WRITER SYSPARMS
//             DSN=CAIR.IDB2.DB2C.PARMLIB(IDB2PRMS)
//*
//DB2DDN   DD  DISP=SHR,                GTF OR SMF SAMPLE DATA INPUT
//             DSN=SAVEDR.SMF.DB2.BRNR(0)
//*
//*OBIDTBL  DD  DISP=SHR,                OBID TRANSLATIONS
//*             DSN=CAI.P01E.DB2S.OBID
//*
//*     THESE TGTREQ CREATE DB2 ACCOUNTING SUMMARIES,
//*     ACCOUNTING TRACES, AND STATISTICS SUMMARIES
//*
//DBGIN    DD  DSN=CAIR.R150.CDBATREQ(BTACTSM1),DISP=SHR
//*BGIN    DD  DSN=CAIR.R150.CDBATREQ(BTACTDES),DISP=SHR
//*BGIN    DD  DSN=CAIR.R150.CDBATREQ(BTACTSMB),DISP=SHR
//*BGIN    DD  DSN=CAIR.R150.CDBATREQ(BTACTSMC),DISP=SHR
//*BGIN    DD  DSN=CAIR.R150.CDBATREQ(BTACTSMC),DISP=SHR
//*BGIN    DD  DSN=CAIR.R150.CDBATREQ(BTSTATR1),DISP=SHR
//*BGIN    DD  DSN=CAIR.R150.CDBATREQ(BTSTASM1),DISP=SHR
//*BGIN    DD  DSN=CAIR.R150.CDBATREQ(BTSTASM2),DISP=SHR
//*BGIN    DD  DSN=CAIR.R150.CDBATREQ(BTACTPAG),DISP=SHR
//*BGIN    DD  DSN=CAIR.R150.CDBATREQ(BTACTSMP),DISP=SHR
//*
//*     PRINT FILE ALLOCATIONS THAT CORRESPOND TO THE
//*     REPORT TGTREQ IN INPUT TO THE DBGIN DD STMT
//*
//*BTACTSMS DD  DSN=DB2C.BATCH.STAT(+1),DISP=(,CATLG),VOL=SER=SYS900,
//*             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//*             DCB=DSCB
//BTACTSMS DD  SYSOUT=*
//BTSTATR1 DD  SYSOUT=*
//BTSTASM1 DD  SYSOUT=*
//BTSTASM2 DD  SYSOUT=*
//BTACTDET DD  SYSOUT=*
//BTACTSMP DD  SYSOUT=*
//BTACTSMC DD  SYSOUT=*
//DBGPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*

./ ADD NAME=STATDB2S
//SYSILEA   JOB (T002550),'IEBCOPY',                                    00001003
//             NOTIFY=&SYSUID,                                          00004203
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00005003
//*-------------------------------------------------------------------
//*  REPORT ACCOUNTING  AND SYSTEM
//*-------------------------------------------------------------------
//STATDB2S EXEC PGM=NSIGHTRW,REGION=4096K
//*
//*TEPLIB  DD  DISP=SHR,                CA-INSIGHT LOAD LIBRARY
//*            DSN=CAI.P01H.LOADLIB
//*
//SYSPARMS DD  DISP=SHR,                BATCH REPORT WRITER SYSPARMS
//             DSN=CAI.IDB2.DB2S.PARMLIB(IDB2PRMS)
//*
//DB2DDN   DD  DISP=SHR,                GTF OR SMF SAMPLE DATA INPUT
//             DSN=SYSILE.IOOPCS1.PDA
//*
//*OBIDTBL  DD  DISP=SHR,                OBID TRANSLATIONS
//*             DSN=CAI.P01H.DB2S.OBID
//*
//*     THESE TGTREQ CREATE DB2 ACCOUNTING SUMMARIES,
//*     ACCOUNTING TRACES, AND STATISTICS SUMMARIES
//*
//DBGIN    DD  DSN=CAI.R120.TGTREQ(BTACTSM1),DISP=SHR
//*DBGIN    DD  DSN=CAI.R120.TGTREQ.DB2S(BTACTDE2),DISP=SHR
//*DBGIN    DD  DSN=CAI.R120.TGTREQ(BTACTSMP),DISP=SHR
//*
//*     PRINT FILE ALLOCATIONS THAT CORRESPOND TO THE
//*     REPORT TGTREQ IN INPUT TO THE DBGIN DD STMT
//*
//*BTACTSMS DD  DSN=DB2S.BATCH.STAT(+1),DISP=(,CATLG),VOL=SER=SYS900,
//*             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//*             DCB=DSCB
//BTACTSMS DD  SYSOUT=*
//*BTACTSMP DD  SYSOUT=*
//*BTACTDE2 DD  SYSOUT=*
//DBGPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*

./ ADD NAME=STATDB2T
//SYSILEA   JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=Z,NOTIFY=SYSILE
//*-------------------------------------------------------------------
//*  REPORT ACCOUNTING  AND SYSTEM
//*-------------------------------------------------------------------
//STATDB2T EXEC PGM=NSIGHTRW,REGION=4096K
//SYSPARMS DD  DISP=SHR,                BATCH REPORT WRITER SYSPARMS
//             DSN=CAIR.IDB2.DB2T.PARMLIB(IDB2PRMS)
//*
//DB2DDN   DD  DISP=SHR,                GTF OR SMF SAMPLE DATA INPUT
//             DSN=SAVEDR.SMF.DB2.BRNR(0)
//DBGIN    DD  DSN=CAIR.R150.CDBATREQ(BTACTSM1),DISP=SHR
//*BGIN    DD  DSN=CAI.R115.TGTREQ(BTACTDET),DISP=SHR
//*        DD  DSN=CAIR.R150.CDBATREQ(BTSTATR1),DISP=SHR
//*        DD  DSN=CAIR.R150.CDBATREQ(BTSTASM1),DISP=SHR
//*        DD  DSN=CAIR.R150.CDBATREQ(BTSTASM2),DISP=SHR
//*
//*     PRINT FILE ALLOCATIONS THAT CORRESPOND TO THE
//*     REPORT TGTREQ IN INPUT TO THE DBGIN DD STMT
//*
//BTACTDET DD  SYSOUT=*
//BTACTSMS DD  SYSOUT=*
//BTSTATR1 DD  SYSOUT=*
//BTSTASM1 DD  SYSOUT=*
//BTSTASM2 DD  SYSOUT=*
//*
//DBGPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*

./ ADD NAME=STATL
//DB2STATL  JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=O,NOTIFY=SYSILE,COND=(4,LT)
//*-------------------------------------------------------------------
//*   STATS ACCOUNTING
//*   STATS SYSTEME
//*-------------------------------------------------------------------
//*-------------------------------------------------------------------
//*  REPORT ACCOUNTING  AND SYSTEM
//*-------------------------------------------------------------------
//STATDB2L EXEC PGM=NSIGHTRW,REGION=4096K
//SYSPARMS DD  DISP=SHR,                BATCH REPORT WRITER SYSPARMS
//             DSN=CAI.IDB2.DB2L.PARMLIB(IDB2PRMS)
//*
//DB2DDN   DD  DISP=SHR,                GTF OR SMF SAMPLE DATA INPUT
//             DSN=SAVED.SMF.DB2.BRNQ(0)
//DBGIN    DD  DSN=CAI.P01E.TGTREQ(BTACTSM1),DISP=SHR
//*
//*     PRINT FILE ALLOCATIONS THAT CORRESPOND TO THE
//*     REPORT TGTREQ IN INPUT TO THE DBGIN DD STMT
//*
//BTACTSMS DD  DSN=DB2L.BATCH.STAT(+1),DISP=(,CATLG),VOL=SER=SYS900,
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//DBGPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*

./ ADD NAME=STATPROT
//SYSILEA   JOB (T002550),'IEBCOPY',                                    00001003
//             NOTIFY=&SYSUID,                                          00004203
//             CLASS=O,MSGCLASS=T,MSGLEVEL=(1,1)                        00005003
//*-------------------------------------------------------------------
//*  REPORT ACCOUNTING  AND SYSTEM
//*-------------------------------------------------------------------
//STATDB2P EXEC PGM=NSIGHTRW,REGION=4096K
//*
//*TEPLIB  DD  DISP=SHR,                CA-INSIGHT LOAD LIBRARY
//*            DSN=CAI.P01H.LOADLIB
//*
//SYSPARMS DD  DISP=SHR,                BATCH REPORT WRITER SYSPARMS
//             DSN=CAI.IDB2.DB2P.PARMLIB(IDB2PRMS)
//*
//DB2DDN   DD  DISP=SHR,UNIT=CTAPE,VOL=SER=V44571,
//             DSN=SAVED.SMF.DB2.G1657V00
//*
//*     THESE TGTREQ CREATE DB2 ACCOUNTING SUMMARIES,
//*     ACCOUNTING TRACES, AND STATISTICS SUMMARIES
//*
//DBGIN    DD  DSN=CAI.R115.TGTREQ(BTACTSM1),DISP=SHR
//*
//*     PRINT FILE ALLOCATIONS THAT CORRESPOND TO THE
//*     REPORT TGTREQ IN INPUT TO THE DBGIN DD STMT
//*
//BTACTSMS DD  DSN=DB2P.BATCH.STAT.£ST1,DISP=MOD
//DBGPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*

./ ADD NAME=STATREOP
//SYSILEA  JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=I,NOTIFY=SYSILE
//*--------------------------------------------------------------------
//*   QUERY TIREE DU SAMPLE DSNTESP (15 A 21)
//*--------------------------------------------------------------------
//ST001   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2P.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2P)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT DBNAME, TSNAME,((NEARINDREF + FARINDREF) * 100 / CARD),
       PERCDROP
     FROM SYSIBM.SYSTABLEPART
      WHERE ((CARD > 0 AND (NEARINDREF + FARINDREF) * 100 / CARD > 10)
      OR PERCDROP  > 10);
/*
//ST002   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2P.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2P)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT IXNAME, IXCREATOR , LEAFDIST
     FROM SYSIBM.SYSINDEXPART
       WHERE LEAFDIST > 200
       ORDER BY LEAFDIST DESC ;
/*
//ST003   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2P.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2P)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT DBNAME,TSNAME,CARD, NEARINDREF, FARINDREF
      FROM SYSIBM.SYSTABLEPART
      WHERE DBNAME IN  ('BPBR0001','BPOP0001')
      ORDER BY FARINDREF DESC ;
/*
//ST004   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2P.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2P)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT PERCDROP
      FROM SYSIBM.SYSTABLEPART
      WHERE DBNAME IN  ('BPBR0001','BPOP0001')
      ORDER BY PERCDROP DESC ;
/*
//ST005   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2P.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2P)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT IXNAME,NEAROFFPOS, FAROFFPOS
      FROM SYSIBM.SYSINDEXPART
      WHERE IXCREATOR = 'PROD'
      ORDER BY FAROFFPOS DESC ;
/*
//ST006   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2P.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2P)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT IXNAME,LEAFDIST
      FROM SYSIBM.SYSINDEXPART
      WHERE IXCREATOR = 'PROD'
      ORDER BY LEAFDIST DESC ;
/*
//ST007   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2P.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2P)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT DBNAME, NAME, ORGRATIO
      FROM SYSIBM.SYSLOBSTATS
      WHERE ORGRATIO > 2;
/*
//ST008   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2P.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2P)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT NAME,PARTITION,CLUSTERRATIO
      FROM SYSIBM.SYSINDEXSTATS
      WHERE NAME LIKE 'I2M50%'
      ORDER BY NAME,PARTITION ;
/*

./ ADD NAME=STATREO1
//SYSILEA  JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=I,NOTIFY=SYSILE
//*--------------------------------------------------------------------
//*   QUERY TIREE DU SAMPLE DSNTESP (15 A 21)
//*--------------------------------------------------------------------
//ST001   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2L.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2L)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT DBNAME, TSNAME,((NEARINDREF + FARINDREF) * 100 / CARD),
       PERCDROP
     FROM SYSIBM.SYSTABLEPART
      WHERE ((CARD > 0 AND (NEARINDREF + FARINDREF) * 100 / CARD > 10)
      OR PERCDROP  > 10);
/*
//ST002   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2L.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2L)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT IXNAME, IXCREATOR , LEAFDIST
     FROM SYSIBM.SYSINDEXPART
       WHERE LEAFDIST > 200
       ORDER BY LEAFDIST DESC ;
/*
//ST003   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2L.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2L)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT DBNAME,TSNAME,CARD, NEARINDREF, FARINDREF
      FROM SYSIBM.SYSTABLEPART
      WHERE DBNAME IN  ('BLBR0001','BLOP0001')
      ORDER BY FARINDREF DESC ;
/*
//ST004   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2L.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2L)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT PERCDROP
      FROM SYSIBM.SYSTABLEPART
      WHERE DBNAME IN  ('BLBR0001','BLOP0001')
      ORDER BY PERCDROP DESC ;
/*
//ST005   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2L.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2L)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT IXNAME,NEAROFFPOS, FAROFFPOS
      FROM SYSIBM.SYSINDEXPART
      WHERE IXCREATOR = 'QUAL'
      ORDER BY FAROFFPOS DESC ;
/*
//ST006   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2L.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2L)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT IXNAME,LEAFDIST
      FROM SYSIBM.SYSINDEXPART
      WHERE IXCREATOR = 'QUAL'
      ORDER BY LEAFDIST DESC ;
/*
//ST007   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2L.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2L)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT DBNAME, NAME, ORGRATIO
      FROM SYSIBM.SYSLOBSTATS
      WHERE ORGRATIO > 2;
/*
//ST008   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2L.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS1.PLI151.PLITRANS,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2L)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
    SELECT NAME,PARTITION,CLUSTERRATIO
      FROM SYSIBM.SYSINDEXSTATS
      WHERE NAME LIKE 'I2B50%'
      ORDER BY NAME,PARTITION ;
/*

./ ADD NAME=STATS
//SYSLHU1 JOB 1,SYSTEME,MSGCLASS=T,CLASS=O,NOTIFY=&SYSUID               00010099
//*-------------------------------------------------------------------  00020099
//*  STATS DB2                                                          00030099
//*-------------------------------------------------------------------  00040099
//**************************                                            00041099
//VARIABLE SET  DATE=D140508                                            00050099
//**************************                                            00051099
//STATDB2P EXEC PGM=NSIGHTRW,REGION=4096K                               00060099
//SYSPARMS DD  DISP=SHR,                BATCH REPORT WRITER SYSPARMS    00070099
//             DSN=CAI.IDB2.DB2P.PARMLIB(IDB2PRMS)                      00080099
//*                                                                     00090099
//DB2DDN   DD  DISP=SHR,DSN=SAVED.SMF.DB2.G6059V00                      00101099
//DBGIN    DD  DSN=SYST.DB2.JCLLIB(BTACTSM1),DISP=SHR                   00110099
//         DD  DSN=SYST.DB2.JCLLIB(BTACTSM5),DISP=SHR                   00120099
//BTACTSM1 DD  DSN=&&BTACTSM1,DISP=(,PASS),                             00150099
//             SPACE=(CYL,(50,50),RLSE),UNIT=VIO                        00160099
//BTACTSM5 DD  DSN=&&BTACTSM5,DISP=(,PASS),                             00170099
//             SPACE=(CYL,(50,50),RLSE),UNIT=VIO                        00180099
//DBGPRINT DD  SYSOUT=*                                                 00230099
//*                                                                     00240099
//REXXFOR  EXEC PGM=IRXJCL,PARM='REXXFOR'                               00250099
//SYSEXEC  DD  DISP=SHR,DSN=SYST.DB2.JCLLIB                             00260099
//SYSTSIN  DD  DUMMY                                                    00270099
//SYSTSPRT DD  SYSOUT=*                                                 00280099
//FICIN    DD  DSN=&&BTACTSM1,DISP=(OLD,DELETE)                         00290099
//FICOUT   DD  DSN=SYSLHU.INSIGHT.JOUR.BATCH.&DATE,                     00300099
//             DISP=(,CATLG),VOL=SER=SYST35,                            00310099
//             SPACE=(TRK,(75,75),RLSE),UNIT=3390,                      00320099
//             DCB=(RECFM=FB,LRECL=253,BLKSIZE=27830)                   00330099
//*                                                                     00340099
//REXXFORC EXEC PGM=IRXJCL,PARM='REXXFORC'                              00350099
//SYSEXEC  DD  DISP=SHR,DSN=SYST.DB2.JCLLIB                             00360099
//SYSTSIN  DD  DUMMY                                                    00370099
//SYSTSPRT DD  SYSOUT=*                                                 00380099
//FICIN    DD  DSN=&&BTACTSM5,DISP=(OLD,DELETE)                         00390099
//FICOUT   DD  DSN=SYSLHU.INSIGHT.JOUR.CICS.&DATE,                      00400099
//             DISP=(,CATLG),VOL=SER=SYST35,                            00410099
//             SPACE=(TRK,(150,150),RLSE),UNIT=3390,                    00420099
//             DCB=(RECFM=FB,LRECL=253,BLKSIZE=27830)                   00430099
//*                                                                     00431099

./ ADD NAME=STOSPACE
//SYSILEA  JOB 1000,'STOSPACE   ',MSGLEVEL=(1,1),                       00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE,COND=(5,LT)                 00002000
//*------------------------------------------------------------*        00002100
//*  CE JCL PERMET DE FAIRE DES RUNSTATS                                00002200
//*------------------------------------------------------------*        00002300
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2T,STOSPAC'                         00002400
//UTPRINT  DD SYSOUT=*                                                  00002500
//SYSPRINT DD SYSOUT=*                                                  00002600
//SYSUDUMP DD SYSOUT=*                                                  00002700
//SYSUT1   DD UNIT=3390,SPACE=(CYL,(8,3),RLSE)                          00002800
//SYSIN    DD  *                                                        00002900
 STOSPACE STOGROUP(GUBPROJ1)                                            00003000
/*                                                                      00004000
//                                                                      00005000

./ ADD NAME=SYSPLAN
//SYSILEA  JOB 1000,'COMPIL     ',                                      00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE                             00002000
//*------------------------------------------------------------*        00002100
//*  CE JCL PERMET D'AGRANDIR LA TABLE SYSIBM.SYSPLAN                   00002200
//*      - SAUVEGARDE DFDSS                                             00002300
//*      - IMAGE COPY DE LA TABLE                                       00002400
//*      - DEL DEF DU CLUSTER                                           00002500
//*      - RECOVER FROM IMAGE COPY                                      00002600
//*      - RECOVER INDEX                                                00002700
//*      - SET NOCOPYPEND                                               00002800
//*------------------------------------------------------------*        00002900
//SAVEDFD  EXEC PGM=ADRDSSU,PARM='UTILMSG=YES'                          00003000
//SYSPRINT DD SYSOUT=*                                                  00004000
//OUT      DD DSN=SYSILE.SYSPLAN.DB2I.DFDSS,                            00005000
//         DISP=(NEW,CATLG,DELETE),                                     00006000
//         UNIT=CTAPE,LABEL=(1,SL),DCB=DSCB                             00007000
//*        SPACE=(CYL,(50,5),RLSE)                                      00008000
//SYSIN    DD *                                                         00009000
  DUMP  OUTDD(OUT) -                                                    00010000
  DATAS(INCL(DSN220IA.DSNDBC.DSNDB06.SYSPLAN.**, -                      00020000
             DSN220IA.DSNDBC.DSNDB06.DSNPPH01.**)) -                    00030000
  ALLEXCP TOL(ENQF)                                                     00040000
/*                                                                      00050000
//*------------------------------------------------------------*        00060000
//*   IMAGE COPY DE LA SYSIBM.SYSPLAN                                   00070000
//*------------------------------------------------------------*        00080000
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2I,IMAGCOPY',REGION=1024K,          00090000
//             COND=(2,LT)                                              00100000
//SYSCOPY1 DD UNIT=CTAPE,DISP=(NEW,KEEP),                               00110000
//            DSN=SYSILE.SYSPLAN.DB2I.COPY,                             00120000
//            LABEL=(1,SL),DCB=DSCB                                     00130000
//SYSPRINT DD SYSOUT=*                                                  00140000
//SYSUDUMP DD SYSOUT=*                                                  00150000
//SYSIN    DD  *                                                        00160000
 COPY TABLESPACE DSNDB06.SYSPLAN COPYDDN SYSCOPY1 DEVT CTAPE FULL YES   00170000
/*                                                                      00180000
//*------------------------------------------------------------*        00190000
//* DIRECTORY/CATALOG AMS INVOCATION INSTREAM JCL PROCEDURE             00200000
//*------------------------------------------------------------*        00210000
//DSNTIC  EXEC PGM=IDCAMS,COND=(2,LT)                                   00220000
//SYSPRINT DD SYSOUT=*                                                  00230000
//SYSUDUMP DD SYSOUT=*                                                  00240000
//SYSIN DD *                                                            00250000
   DELETE DSN220IA.DSNDBC.DSNDB06.SYSPLAN.I0001.A001                    00260000
   DEFINE CLUSTER                             -                         00270000
         ( NAME(DSN220IA.DSNDBC.DSNDB06.SYSPLAN.I0001.A001) -           00280000
           LINEAR                             -                         00290000
           REUSE                              -                         00300000
           VOLUMES(SYS1MC)                    -                         00310000
           CYLINDERS(100 3)                   -                         00320000
           SHAREOPTIONS(3 3) )                -                         00330000
      DATA                                    -                         00340000
         ( NAME(DSN220IA.DSNDBD.DSNDB06.SYSPLAN.I0001.A001) -           00350000
                              )               -                         00360000
      CATALOG(CATALOG.GDBS)                                             00370000
/*                                                                      00380000
//*------------------------------------------------------------*        00390000
//* RECOVER IMAGE COPY                                                  00400000
//*------------------------------------------------------------*        00410000
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2I,IMAGCOPY',REGION=1024K,          00420000
//             COND=(2,LT)                                              00430000
//SYSPRINT DD SYSOUT=*                                                  00440000
//SYSUDUMP DD SYSOUT=*                                                  00450000
//SYSIN    DD  *                                                        00460000
 RECOVER TABLESPACE DSNDB06.SYSPLAN TOCOPY SYSILE.SYSPLAN.DB2I.COPY     00470000
/*                                                                      00480000
//*------------------------------------------------------------*        00490000
//* RECOVER INDEX                                                       00500000
//*------------------------------------------------------------*        00510000
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2I,IMAGCOPY',REGION=1024K,          00520000
//             COND=(2,LT)                                              00530000
//SYSPRINT DD SYSOUT=*                                                  00540000
//SYSUDUMP DD SYSOUT=*                                                  00550000
//SYSIN    DD  *                                                        00560000
   RECOVER INDEX(ALL) TABLESPACE DSNDB06.SYSPLAN                        00570000
/*                                                                      00580000
//*------------------------------------------------------------*        00590000
//* SET NOCOPYPEND                                                      00600000
//*------------------------------------------------------------*        00610000
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2I,IMAGCOPY',REGION=1024K,          00620000
//             COND=(2,LT)                                              00630000
//SYSPRINT DD SYSOUT=*                                                  00640000
//SYSUDUMP DD SYSOUT=*                                                  00650000
//SYSIN    DD  *                                                        00660000
   REPAIR SET TABLESPACE DSNDB06.SYSPLAN  NOCOPYPEND                    00670000
/*                                                                      00680000

./ ADD NAME=TEST
//SYSILEA  JOB 1000,'COMPIL     ',                                      00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE                             00002000
//DB2BIND  EXEC PGM=IKJEFT01,DYNAMNBR=20                                00003000
//SYSTSPRT DD SYSOUT=*                                                  00004000
//SYSUDUMP DD DUMMY                                                     00005000
//DBRMLIB  DD DSN=SYST.DB2.DBRMLIB,DISP=SHR                             00006000
//SYSTSIN  DD *                                                         00007000
DSN SYSTEM(DB2T)                                                        00008000
 BIND PACKAGE (PDB2ACCS) VALIDATE(BIND) MEMBER(DB2ACCS) -               00009000
  ACTION(REPLACE) DEGREE(1) EXPLAIN(YES) ;                              00010000

./ ADD NAME=TESTX
//*
//* -----  LISTE DES OBJETS NECESSAIRES A LA RECREATION D'UN TABLESPACE
//*
//SECJH010 EXEC PGM=IKJEFT01,DYNAMNBR=20
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD DSN=PSECJ.SAVEDB2I.TABSPACE(+1),DISP=(,CATLG,DELETE),
//            UNIT=CTAPE,LABEL=(002,SL),
//            VOL=(,RETAIN,REF=*.SECJH005.SYSPRINT),
//            DCB=(DSCB,TRTCH=COMP)
//SYSTSIN  DD *
DSN SYSTEM(DB2I)
RUN PROGRAM(DSNTEP2)
END
//SYSIN    DD  *
 SELECT A.NAME , A.DBNAME    , B.STORNAME , B.PQTY  , B.SQTY ,
        A.ERASERULE , B.FREEPAGE , B.PCTFREE  ,
        A.LOCKRULE , A.CLOSERULE
 FROM SYSIBM.SYSTABLESPACE A,SYSIBM.SYSTABLEPART B
 WHERE A.NAME    = B.TSNAME AND A.DBNAME  = B.DBNAME
 ORDER BY A.DBNAME , A.NAME ;

./ ADD NAME=T1
//SYSILEX  JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=O,NOTIFY=&SYSUID
//*--------------------------------------------------------------------
//*   EXECUTION D'ORDRE DB2 EN BATCH
//*--------------------------------------------------------------------
//ST005   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2L.RUNLIB.LOAD,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2L)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
 SELECT DISTINCT CTOPET,COUNT(*) FROM QUAL.T2Q03TB
  GROUP BY CTOPET;
//

./ ADD NAME=UNLOAD
//SYSILEA  JOB 1000,'UNLOAD     ',MSGLEVEL=(1,1),                       00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE                             00002000
//*------------------------------------------------------------*        00003000
//* DELETE DU FICHIER D'UNLOAD                                          00004000
//*------------------------------------------------------------*        00005000
//STEP1   EXEC PGM=IEFBR14                                              00005100
//DD1      DD DSN=SYSILE.UNLDIL.DATA,DISP=(MOD,DELETE),                 00005200
//            SPACE=(TRK,0),UNIT=WORKDA                                 00005300
//DD1      DD DSN=SYSILE.UNLDIL.CNTL,DISP=(MOD,DELETE),                 00005400
//            SPACE=(TRK,0),UNIT=3390                                   00005500
//*------------------------------------------------------------*        00005600
//* UNLOAD DB2                                                          00005700
//*------------------------------------------------------------*        00005800
//UNLOAD  EXEC PGM=IKJEFT01,DYNAMNBR=100,REGION=2M                      00006000
//STEPLIB  DD DSN=DB2410.RUNLIB.LOAD,DISP=SHR                           00007000
//         DD DSN=SYS2.DB2410.SDSNLOAD,DISP=SHR                         00007100
//SYSPRINT DD SYSOUT=*                                                  00008000
//SYSUDUMP DD SYSOUT=*                                                  00009000
//SYSTERM  DD SYSOUT=*                                                  00009100
//SYSTSPRT DD SYSOUT=*                                                  00009200
//SYSTSIN  DD *                                                         00009300
 DSN SYSTEM(DB2R)                                                       00010000
 RUN PROGRAM(DSNTIAUL) PLAN(DSNTIB41) PARM('SQL')                       00010100
 END                                                                    00010200
/*                                                                      00010300
//SYSREC00 DD DSN=SYSILE.UNLDIL.DATA,DISP=(,CATLG),UNIT=WORKDA,         00010400
//            SPACE=(TRK,(6000,10),RLSE),                               00010500
//            RECFM=FB,LRECL=80                                         00010600
//SYSPUNCH DD DSN=SYSILE.UNLDIL.CNTL,DISP=(,CATLG),UNIT=3390,           00010700
//            VOL=SER=MVS102,SPACE=(CYL,(1,1),RLSE),                    00010800
//            RECFM=FB,LRECL=80,BLKSIZE=800                             00010900
//SYSIN    DD  *                                                        00011000
CONNECT TO BRDO0001 ;                                                   00011100
SELECT                                                                  00011209
   SESSID ,TYPTRA ,CAIDV ,NUADH ,IDCNT ,MCTRA ,                         00011609
   DATSES,                                                              00012809
   HDEBTR,                                                              00013009
   HFINTR,                                                              00013209
   HDEBCN,                                                              00013409
   HFINCN,                                                              00013609
   INDTRA,                                                              00013809
   CDPALT,                                                              00014009
   CAIDB ,                                                              00014209
   CDNSS                                                                00014409
    FROM EXPLOIT.VTRLODO1 ;                                             00014609
CONNECT RESET ;                                                         00014700
/*                                                                      00015000

./ ADD NAME=UNLOADV4
//SYSILEA  JOB 1000,'UNLOAD     ',MSGLEVEL=(1,1),                       00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=&SYSUID                            00002000
//*------------------------------------------------------------*        00003000
//* DELETE DU FICHIER D'UNLOAD                                          00004000
//*------------------------------------------------------------*        00005000
//STEP1   EXEC PGM=IEFBR14                                              00005100
//DD1      DD DSN=SYSILE.UNLDIL.DATA,DISP=(MOD,DELETE),                 00005200
//            SPACE=(TRK,0),UNIT=3390                                   00005300
//DD2      DD DSN=SYSILE.UNLDIL.CNTL,DISP=(MOD,DELETE),                 00005405
//            SPACE=(TRK,0),UNIT=3390                                   00005500
//*------------------------------------------------------------*        00005600
//* UNLOAD DB2                                                          00005700
//*------------------------------------------------------------*        00005800
//UNLOAD  EXEC PGM=IKJEFT01,DYNAMNBR=100,REGION=2M                      00006001
//STEPLIB  DD DSN=DB2610.RUNLIB.LOAD,DISP=SHR                           00007010
//SYSPRINT DD SYSOUT=*                                                  00008000
//SYSUDUMP DD SYSOUT=*                                                  00009000
//SYSTERM  DD SYSOUT=*                                                  00009100
//SYSTSPRT DD SYSOUT=*                                                  00009200
//SYSTSIN  DD *                                                         00009300
 DSN SYSTEM(DB2T)                                                       00010001
 RUN PROGRAM(DSNTIAUL) PARM('SQL')                                      00010101
 END                                                                    00010200
/*                                                                      00010300
//SYSREC00 DD DSN=SYSILE.UNLDIL.DATA,DISP=(,CATLG),UNIT=WORKDA,         00010401
//            SPACE=(TRK,(4500,1000),RLSE),                             00010505
//            RECFM=FB,LRECL=80                                         00010600
//SYSPUNCH DD DSN=SYSILE.UNLDIL.CNTL,DISP=(,CATLG),UNIT=3390,           00010700
//            VOL=SER=MVS102,SPACE=(CYL,(1,1),RLSE),                    00010800
//            RECFM=FB,LRECL=80                                         00010900
//SYSIN    DD  *                                                        00011000
 SELECT *                                                               00011107
          FROM DMRPR.DMRACDTL WHERE DATE>='26.04.1999' ;                02380009
/*                                                                      02390001

./ ADD NAME=UNLOAD1
//SYSILEA  JOB 1000,'UNLOAD     ',MSGLEVEL=(1,1),
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE
//*------------------------------------------------------------*
//*   LE NOM DU PLAN EST :
//*     - DSNTIAUL POUR LE DB2 MVS
//*     - PPBDOUT1 ET PPBDOUT2 POUR LES BASES UNIX DE PRODUCTION
//*     - PIBDOUT1 POUR LA BASE UNIX DE TEST
//*     - PRBDOUT1 POUR LA BASE UNIX DE RECETTE
//*     - PBBDOUT1 POUR LA BASE UNIX DE BACKUP
//*------------------------------------------------------------*
//* DELETE DU FICHIER D'UNLOAD
//*------------------------------------------------------------*
//STEP1   EXEC PGM=IEFBR14
//DD1      DD DSN=SYSILE.UNLDIL.DATA.T2B43MR,DISP=(MOD,DELETE),
//            SPACE=(TRK,0),UNIT=3390
//DD1      DD DSN=SYSILE.UNLDIL.CNTL.T2B43MR,DISP=(MOD,DELETE),
//            SPACE=(TRK,0),UNIT=3390
//*------------------------------------------------------------*
//* UNLOAD DB2
//*------------------------------------------------------------*
//UNLOAD  EXEC PGM=IKJEFT01,DYNAMNBR=100,REGION=2M
//STEPLIB  DD DSN=DB2L.RUNLIB.LOAD,DISP=SHR
//SYSPRINT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSTSIN  DD *
 DSN SYSTEM(DB2L)
 RUN PROGRAM(DSNTIAUL)
 END
/*
//SYSREC00 DD DSN=SYSILE.UNLDIL.DATA.T2B43MR,DISP=(,CATLG),
//            UNIT=3390,VOL=SER=IB9E22,
//            SPACE=(TRK,(7000,100),RLSE),
//            RECFM=FB,LRECL=80
//SYSPUNCH DD DSN=SYSILE.UNLDIL.CNTL.T2B43MR,DISP=(,CATLG),
//            UNIT=3390,VOL=SER=SYST02,
//            SPACE=(CYL,(1,1),RLSE),
//            RECFM=FB,LRECL=80
//SYSIN    DD  *
QUAL.T2B43MR
/*
//

./ ADD NAME=XX
//DB2STATQ  JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=O,NOTIFY=SYSILE
//*-------------------------------------------------------------------
//*  REPORT ACCOUNTING  AND SYSTEM
//*-------------------------------------------------------------------
//STATDB2L EXEC PGM=NSIGHTRW,REGION=4096K
//SYSPARMS DD  DISP=SHR,                BATCH REPORT WRITER SYSPARMS
//             DSN=CAIQ.IDB2.DB2L.PARMLIB(IDB2PRMS)
//*
//DB2DDN   DD  DISP=SHR,                GTF OR SMF SAMPLE DATA INPUT
//             DSN=SAVED.SMF.DB2.BRNQ.JOUR(0)
//DBGIN    DD  DSN=CAIQ.R120.TGTREQ(BTACTSMB),DISP=SHR
//         DD  DSN=CAIQ.R120.TGTREQ(BTACTSMG),DISP=SHR
//BTACTSMS DD  SYSOUT=*
//BTACTSMB DD  DSN=DB2L.BATCH.STAT.CPU(+1),DISP=(,CATLG),VOL=SER=SYS924,
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//BTACTSMG DD  DSN=DB2L.BATCH.STAT.GETP(+1),DISP=(,CATLG),VOL=SER=SYS924,
//             SPACE=(TRK,(20,10),RLSE),UNIT=3390,
//             DCB=DSCB
//DBGPRINT DD  SYSOUT=*
//SYSUDUMP DD  SYSOUT=*

./ ADD NAME=X0
//SYSILEA  JOB 1000,'COMPIL     ',MSGLEVEL=(1,1),                       00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=&SYSUID,COND=(5,LT)                00002000
//*------------------------------------------------------------*        00002100
//*  CE JCL PERMET DE FAIRE DES RUNSTATS                                00002200
//*------------------------------------------------------------*        00002900
//DSNTIUT EXEC PGM=DSNUTILB,PARM='DB2S,RUNSTAT'                         00006000
//STEPLIB  DD DSN=SYS2.DB2410.SDSNLOAD,DISP=SHR                         00007000
//UTPRINT  DD SYSOUT=*                                                  00008000
//SYSPRINT DD SYSOUT=*                                                  00009000
//SYSUDUMP DD SYSOUT=*                                                  00010000
//SYSUT1   DD UNIT=SYSDA,SPACE=(CYL,(8,3),RLSE)                         00050000
//SYSIN    DD  *                                                        00060000
 RUNSTATS TABLESPACE DBSYST02.STEV001                                   00072800
   SHRLEVEL CHANGE                                                      00072900

./ ADD NAME=X1
//SYSILEX  JOB (0),'DSNTEP2',MSGCLASS=T,MSGLEVEL=(1,1),
//         CLASS=O,NOTIFY=SYSILE
//*--------------------------------------------------------------------
//*   EXECUTION D'ORDRE DB2 EN BATCH
//*     - LOADLIB = DB2S220.RUNLIB.LOAD POUR DB2S
//*     - LOADLIB = DB2I220.RUNLIB.LOAD POUR DB2I
//*--------------------------------------------------------------------
//ST005   EXEC PGM=IKJEFT01,DYNAMNBR=20,REGION=4M
//STEPLIB  DD DSN=DB2S.RUNLIB.LOAD,DISP=SHR
//         DD DSN=SYS2.DB2410.SDSNLOAD,DISP=SHR
//SYSTERM  DD SYSOUT=*
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSPRINT DD SYSOUT=*
//SYSTSIN  DD *
DSN SYSTEM(DB2S)
RUN PROGRAM(DSNTEP2)
END
//SYSIN DD *
 SELECT * FROM SYSILE1.TEV001 ;

./ ADD NAME=X2
//SYSILEA  JOB 1000,'UNLOAD     ',MSGLEVEL=(1,1),                       00001000
//         CLASS=O,MSGCLASS=T,NOTIFY=SYSILE                             00002000
//*------------------------------------------------------------*        00003000
//*   LE NOM DU PLAN EST :                                              00003100
//*     - DSNTIAUL POUR LE DB2 MVS                                      00003200
//*     - PPBDOUT1 ET PPBDOUT2 POUR LES BASES UNIX DE PRODUCTION        00003300
//*     - PIBDOUT1 POUR LA BASE UNIX DE TEST                            00003400
//*     - PRBDOUT1 POUR LA BASE UNIX DE RECETTE                         00003500
//*     - PBBDOUT1 POUR LA BASE UNIX DE BACKUP                          00003600
//*------------------------------------------------------------*        00003700
//* DELETE DU FICHIER D'UNLOAD                                          00003800
//*------------------------------------------------------------*        00003900
//STEP1   EXEC PGM=IEFBR14                                              00004000
//DD1      DD DSN=DB2T.UNLDIL.DATA.S2E60,DISP=(MOD,DELETE),             00005001
//            SPACE=(TRK,0),UNIT=WORKDA                                 00005100
//DD2      DD DSN=DB2T.UNLDIL.CNTL.S2E60,DISP=(MOD,DELETE),             00005201
//            SPACE=(TRK,0),UNIT=WORKDA                                 00005300
//*------------------------------------------------------------*        00006200
//* UNLOAD DB2                                                          00006300
//*------------------------------------------------------------*        00006400
//UNLOAD  EXEC PGM=IKJEFT01,DYNAMNBR=100,REGION=2M                      00006500
//STEPLIB  DD DSN=DB2P.RUNLIB.LOAD,DISP=SHR                             00006600
//SYSPRINT DD SYSOUT=*                                                  00006800
//SYSUDUMP DD SYSOUT=*                                                  00007000
//SYSTERM  DD SYSOUT=*                                                  00008000
//SYSTSPRT DD SYSOUT=*                                                  00009000
//SYSTSIN  DD *                                                         00009100
 DSN SYSTEM(DB2T)                                                       00009201
 RUN PROGRAM(DSNTIAUL) PLAN(SYSTISA)                                    00009301
 END                                                                    00009400
/*                                                                      00009500
//SYSREC00 DD DSN=DB2T.UNLDIL.DATA.S2E60,DISP=(,CATLG),UNIT=3390,       00009601
//            SPACE=(TRK,(500,50),RLSE),                                00009700
//            RECFM=FB,LRECL=80                                         00009800
//SYSPUNCH DD DSN=DB2T.UNLDIL.CNTL.S2E60,DISP=(,CATLG),UNIT=3390,       00009901
//            SPACE=(TRK,(1,1),RLSE),                                   00010000
//            RECFM=FB,LRECL=80                                         00010100
//SYSIN    DD  *                                                        00010200
PROD.T2E60GT                                                            00010301
/*                                                                      00010400
//                                                                      00010500
SCTVDX.VTRLODO1                                                         00010600

./ ADD NAME=YY
//STATMQ  EXEC PGM=IEBGENER
//*------------------------------------------------------------
//* OBJET : SORTIR DES STATS SUR LES BUFFERS MQ               -
//*------------------------------------------------------------
//SYSIN    DD   DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD   SYSOUT=(A,INTRDR)
//SYSUT1   DD   DISP=SHR,DSN=SYST.MQ.SAMP(JSMF115Q)
//*

./ ADD NAME=ZAPTEP2
//SYSILEX JOB SYST,'ZAP DSNTEP2',CLASS=O,MSGLEVEL=(1,1),                00010001
//         MSGCLASS=T,REGION=2048K,NOTIFY=SYSILE                        00011001
//*-----------------------------------------------------------          00012001
//*  ZAP APPLIQUE SUR LE DSNTEP2 POUR AVOIR UN FACTEUR DE               00013001
//* BLOCAGE DIFFERENT DE 133                                            00014001
//*-----------------------------------------------------------          00014101
//S01 EXEC PGM=AMASPZAP                                                 00015000
//SYSPRINT DD SYSOUT=*                                                  00016000
//SYSLIB  DD  DISP=SHR,DSN=DB2T.RUNLIB.LOAD                             00017000
//SYSIN DD *                                                            00018000
 NAME DSNTEP2 SYSPINT                                                   00018100
 VER  00002C 0000,0B60                                                  00018200
 REP  00002C 0000,0CB8                                                  00018300
 NAME DSNTEP2 DSNTEP22                                                  00019000
 VER  000BE0 0000,0000                                                  00020000
 REP  000BE0 0000,6D1A                                                  00020100
//                                                                      00020200
 NAME DSNTEP2 DSNTEP22                                                  00020300
 VER  000BE0 0000,0000                                                  00020400
 REP  000BE0 0000,6C95                                                  00020500
 VER  00002C 0000,0B60                                                  00020600
 REP  00002C 0000,0CB8                                                  00020700
 VER  000030 0000,0CB8                                                  00020800
 REP  000030 0000,0B60                                                  00020900
./ ENDUP
!!
//
//* END \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
